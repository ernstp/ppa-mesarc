From f60652ff85cefd81a617d6e54999d4845305ffe7 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Daniel=20Sch=C3=BCrmann?= <daniel@schuermann.dev>
Date: Thu, 19 Sep 2019 13:43:35 +0200
Subject: [PATCH] radv/aco: enable ACO by default

Temporary patch. Not meant for upstream, but only the github repository!
---
 src/amd/vulkan/radv_debug.h  | 1 +
 src/amd/vulkan/radv_device.c | 8 ++++++++
 2 files changed, 9 insertions(+)

Index: mesa/src/amd/vulkan/radv_debug.h
===================================================================
--- mesa.orig/src/amd/vulkan/radv_debug.h
+++ mesa/src/amd/vulkan/radv_debug.h
@@ -70,6 +70,7 @@ enum {
 	RADV_PERFTEST_GE_WAVE_32      =   0x80,
 	RADV_PERFTEST_DFSM            =  0x100,
 	RADV_PERFTEST_ACO             =  0x200,
+	RADV_PERFTEST_LLVM            =  0x400,
 };
 
 bool
Index: mesa/src/amd/vulkan/radv_device.c
===================================================================
--- mesa.orig/src/amd/vulkan/radv_device.c
+++ mesa/src/amd/vulkan/radv_device.c
@@ -550,6 +550,7 @@ static const struct debug_control radv_p
 	{"gewave32", RADV_PERFTEST_GE_WAVE_32},
 	{"dfsm", RADV_PERFTEST_DFSM},
 	{"aco", RADV_PERFTEST_ACO},
+	{"llvm", RADV_PERFTEST_LLVM},
 	{NULL, 0}
 };
 
@@ -690,6 +691,13 @@ VkResult radv_CreateInstance(
 	instance->perftest_flags = parse_debug_string(getenv("RADV_PERFTEST"),
 						   radv_perftest_options);
 
+	if (instance->perftest_flags & RADV_PERFTEST_ACO) {
+		instance->perftest_flags &= ~RADV_PERFTEST_LLVM;
+	} else if (!(instance->perftest_flags & RADV_PERFTEST_LLVM)) {
+		#warning "ACO enabled by default"
+		instance->perftest_flags |= RADV_PERFTEST_ACO;
+	}
+
 	if (instance->perftest_flags & RADV_PERFTEST_ACO)
 		fprintf(stderr, "WARNING: Experimental compiler backend enabled. Here be dragons! Incorrect rendering, GPU hangs and/or resets are likely\n");
 
