mesa (23.3.0~git2309282022.3d993e63bb5~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 3d993e63bb5 anv: Enable barrier handling on video engines
  * 8e97d291a8f ac/llvm: replace removed amdgcn.ldexp for LLVM 18
  * d638c60628c ci/etnaviv: Drop some gc2k flakes that I think are
    resolved.
  * 990dc589950 ci/etnaviv: Skip some tests that hang the GPU and knock
    out other tests.
  * b8ce0dcef5e radeonsi: fix compute-only contexts
  * 286cd186811 nvk: Init pipelineCacheUUID
  * 0e7b1e2fca6 radv/ci: add a manual job for vkd3d-proton on navi31
  * 5e47f4f0084 radv/ci: add a manual job to run vkcts on navi31
  * d7aad24b5ec radv/ci: update the vkcts gfx1100 flake/fail lists
  * 2e7514cfa86 glsl: remove now unused varying linker code
  * 36e49c162ce glsl: switch to nir linkers
    cross_validate_outputs_to_inputs()
  * 7d1948e9b5d glsl: implement cross_validate_outputs_to_inputs() in
    nir linker
  * f2e87c5c286 nir: add used field to nir variables
  * 0bfae246400 glsl: move is_gl_identifier() to linker_util
  * 78b9f1053fa glsl: move interpolation_string() to linker_util
  * 337c32cb3ad nir: copy explicit_invariant flag to nir vars
  * af2a96bb37b radv: stop skip emitting CB states when there is no
    color attachment
  * 441e57048b4 glx: XFree visual info
  * 02150ca017f r300:  Fix out-of-bounds access in
    ntr_emit_store_output()
  * 9bc1fd25a41 ci/zink+radv: document flake
  * 435699de774 isaspec: python does not need ';'
  * 03c1e67b6ca spirv: Track when a shader has a cooperative matrix
  * b98f87612bc spirv: Implement SPV_KHR_cooperative_matrix
  * b17a2c35bce spirv: Let vtn_ssa_value hold references to variables
  * 3d7e5ec758b spirv: Expose some memory related functions in
    vtn_private.h
  * af3eb80afab nir: Handle cooperative matrix in various passes
  * 3105d516d0a nir: Add new intrinsics for Cooperative Matrix
  * 2d0f4f2c17b compiler/types: Add support for Cooperative Matrix types
  * b75da97a1d9 anv: enable sparse resources by default
  * 7e2d8cced38 anv/sparse: add INTEL_DEBUG=sparse

 -- Ernst Persson <ernstp@gmail.com>  Thu, 28 Sep 2023 23:21:52 +0200

mesa (23.3.0~git2309251618.21db2e70174~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 21db2e70174 aco: reset prefetch in the correct block after removing
    the exit
  * 1c21b3a62ad intel/ds: avoid dropping traces when running out of
    shared memory
  * 00b65c75ad5 anv/utrace: trace CPU on timestamp buffer readiness
  * 7d30b1e28f7 intel/ds: track number of tracepoint timestamp copies
  * 64769bc5b2e util/u_trace: count number of tracepoints
  * a5f58e5f854 intel/ds: lock submissions to u_trace_context
  * a851dc5e3c0 intel: don't assume Linux minor dev node
  * 6857497be69 anv: enable utrace timestamp buffer copies on compute
    engine
  * a334fb005bc anv: move utrace flush out of backends
  * 08e0c063cfe anv: move simple shaders code to its own object
  * 7a35113455a anv: add simple shader support without a command buffer
  * 2cc5b3b1e02 anv: add a memcpy compute internal kernel
  * e0f420c3348 anv: fix utrace timestamp buffer copies
  * dd2ef9a0e4c frontends/va: Set default rate control values once when
    creating encoder
  * c970a9b6634 frontends/va: Process VAEncSequenceParameterBufferType
    first in vaRenderPicture
  * 49e471de70c docs: add calendar for 23.3
  * cf3fb0fee7c radv/ci: add more tests to the navi21 vkcts flake list
  * 0a065b5cf50 radv/ci: increase the parallelism of the vkcts-navi21
    job
  * bf321993866 v3d/shim: include new ioctl parameters
  * 219a14d0933 radv: enable cache counters for RGP on GFX11
  * 70a4290e287 radv: add SPM support for GFX11
  * 301c402bd82 ac/spm: add support for GFX11
  * 26c710b7c42 ac/spm: add new segment types for GFX11
  * 97d87a431a6 ac/gpu_info: define AMD_MAX_WGP

 -- Ernst Persson <ernstp@gmail.com>  Mon, 25 Sep 2023 17:39:45 +0200

mesa (23.3.0~git2309250523.129e27a46e5~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 129e27a46e5 llvmpipe/linear: move to nir inputs
  * 90c4468ed0e llvmpipe/linear: convert to using nir for output.
  * 8477b97f1bb llvmpipe/fs: start converting dervied state to nir
    based.
  * b72e77bd97d llvmpipe/fs: start converting interp/input paths to nir.
  * 2b09d2d7159 llvmpipe/nir: call gather info to update inputs read
    properly
  * 5827034dfc0 gallivm: drop tgsi aos paths.
  * e9a41875dac llvmpipe/linear: drop tgsi path.
  * 1f3446499f2 ci/freedreno: disable broke cheza (Adreno 630) runners
  * a57cc0ae0c8 r600/sfn: Fix use of scheduled_shader vs shader
  * 34a068de6ff r600/sfn: sort the uniforms of the right shader
  * c04f313cc53 r600: Use nir_builder helpers for load/store_shared_r600
  * 28137a187bd r600: Use more auto-generated nir_builder helpers
  * feafb8a256b pvr: Fix dynamic desc offset storage
  * bf17e4fe330 pvr: Fix `for` loop itarator usage
  * 47b481cace5 nvk: Set GUARDBAND_Z_SCALE_1 when Z-clipping
  * d7f3fdc262a nvk: Enable dynamic clip/clamp enable
  * 07091f0f94f nvk: Fix depth clipping parameters
  * e317ba373b7 nvk: Clean up viewport math
  * 17dfbc25d23 iris: do not mention specifically clover for OpenCL
    support
  * a4e4bf8ccd0 ci/venus: add fragment.32B_in_memory_with_vec4_s32 flake
  * b9c9fb7259a anv: fix frame count reporting in INTEL_MEASURE
  * 6f85e6b06be nvk: Disable statistics around meta ops
  * 169835da39b nvk: Lower interp_at_sample to interp_at_offset
  * 53ed2ff7420 pvr: remove pvr_pbe_get_src_pos()
  * 66198024465 pvr: treat VK_IMAGE_CREATE_MUTABLE_FORMAT_BIT as not
    supported
  * 865bdc3da2b lavapipe: set default min sample shading to 1
  * a2a848cb19e lavapipe: set default viewport and scissor count for
    cmdbufs
  * 0d975219ad9 lavapipe: more vertex stride fixups
  * 94debd4b4c3 lavapipe: always set independent blend
  * 74ac66c2759 lavapipe: fix variable descriptor count support handling

 -- Ernst Persson <ernstp@gmail.com>  Mon, 25 Sep 2023 08:33:39 +0200

mesa (23.3.0~git2309221823.1cdc4be14b6~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 1cdc4be14b6 intel/compiler: Don't allocate memory for SIMD select
    error handling
  * e55aa87f323 compiler: Only enable mesaclc helper if we have OpenCL
    SPIR-V support
  * 4e065cdaaa2 clover: Only compile/depend libclspirv and libclnir when
    using SPIR-V support
  * 3a210932ada clover: Hide SPIR-V related code behind
    HAVE_CLOVER_SPIRV
  * 0e7337e8301 rusticl: Ensure NIR generated headers will be available
  * 3988d901ac8 meson: Remove unnecessary inc_compiler mentions
  * ec835595f0d compiler: Use a meson dependency for libcompiler
  * 9442571664e ci: separate hiden jobs to -inc.yml files
  * 17dfbb6ce78 zink: fix semaphore signal ordering
  * 12778fc99f7 zink: add a ZINK_DEBUG=validation alias
  * fe43e639744 zink: set workgroup_memory_explicit_layout for shader
    validation
  * 5d90b1db70a lavapipe: set separate_shaders for shader objects
  * cf903ff79b1 zink: delete a non-maintenance5 workaround for shobj use
  * 3c50b93efef zink: require maintenance5 for shobj
  * 792d76feb17 zink: delete injected pointsize during shader creation
  * 51e067d9e59 lavapipe/ci: Fix asan expectations
  * be8a73f40d0 nir/deref: Layer rematerialization helpers
  * 439e8c42cc4 nir/lcssa: Fix rematerializing derefs
  * 29dc1b193a0 nir: Add nir_rematerialize_deref_in_use_blocks
  * ba809dccb8c nir/deref: remove rematerialize_deref_in_block cache
  * ab1310e84d7 nir: Add nir_foreach_block_in_cf_node_reverse
  * 70e497a2ac8 nir: Add nir_cf_node_cf_tree_prev
  * 01f6afb01a0 ci/zink+radv: bump the timeout of zink-radv-navi10-valve
    by 10 minutes
  * e7c977503ca ci/zink+radv: specify that zink-radv-navi10-valve should
    run in the mupuf farm
  * c891c1fdce6 virgl: Cover all the formats defined in the virgl
    definition
  * 24555cdbbd9 aco/spill: Make sure that offset stays in bounds
  * 9510af0f603 freedreno/fence: Hold a strong ref to batch
  * 86f50775388 freedreno: Add reformatting commits to .git-blame-ignore-
    revs
  * dedb2f02089 glsl: remove unused
    validate_first_and_last_interface_explicit_locations()
  * 7b744bb8df5 glsl: switch to nir
    validate_first_and_last_interface_explicit_locations()

 -- Ernst Persson <ernstp@gmail.com>  Fri, 22 Sep 2023 18:56:24 +0200

mesa (23.3.0~git2309211021.2009b9b5e28~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 2009b9b5e28 ci: limit build jobs to 30min so that they can retry
    when they go wrong
  * 33ca3a999c9 rusticl/kernel: skip adding global id offsets if not
    used
  * a9f408bd521 rusticl/mesa: fix `set_constant_buffer` when passing an
    empty buffer
  * f1b9b7f9556 intel/fs: Update SSBO & shared uniform block loads for
    Xe2
  * 9fb2b12c999 intel/compiler: Update RT stack_id access for Xe2
  * d371565d344 intel/compiler: Update ray-tracing intrinsic lowering
    for Xe2
  * 3d744a6890d intel/compiler: Update lower_trace_ray_logical_send()
    for Xe2
  * 9e43fa09a6d intel/compiler: Update emit_rt_lsc_fence() for Xe2
  * 9846dd798b9 intel/compiler: Update opt_split_sends() for Xe2 reg
    size
  * 727ab2c11d6 intel/compiler/fs: Support Xe2 reg size in
    assign_curb_setup
  * cef4d53daf5 intel/xe2+: Round up size to reg_unit() in
    fs_reg_alloc::alloc_spill_reg().
  * fe3d90aedff intel/fs/xe2+: Fix calculation of spill message width
    for Xe2 regs.
  * 791d0401047 intel/fs/xe2+: Fix execution width of
    SHADER_OPCODE_GET_BUFFER_SIZE for SIMD16 EU.
  * ac4f5985773 intel/fs/xe2+: Update regioning lowering offset
    alignment checks for Xe2 regs.
  * 37e280f28ae intel/fs: Lower unsupported regioning with non-trivial
    2D regions on FIXED_GRFs.
  * dd632bf5278 intel/fs/xe2+: Update TASK/MESH payload setup for Xe2
    reg size.
  * 8944ac7d6c3 intel/fs/xe2+: Update BS payload setup for Xe2 reg size.
  * 14e1b9ee69b intel/fs/xe2+: Update TES payload setup for Xe2 reg
    size.
  * 4b3243104cd intel/fs/xe2+: Update TCS payload setup for Xe2 reg
    size.
  * 6195eac210c intel/fs/xe2+: Update GS payload setup for Xe2 reg size.
  * 28744c89543 intel/compiler/xe2: Account for reg_unit() in TES
    intrinsics
  * 9859f5b4d20 intel/compiler/xe2: Account for reg_unit() in TCS
    intrinsics
  * 610daa3166e intel/fs/xe2+: Fix payload layout of sampler messages
    for Xe2 reg size
  * c9f28575461 intel/compiler/xe2: TXD is lowered to SIMD16 in SIMD32
    mode
  * ef817650c94 intel/compiler/xe2: Use SIMD16 for
    nir_intrinsic_image_size
  * 0b23df39519 intel/compiler/xe2: Update fs_visitor::setup_vs_payload
    to account for Xe2 reg size
  * 42b90f05f60 intel/compiler: Adjust barrier emission for Xe2+
  * 8b1dc77521d intel/fs/xe2+: Scale BRW_MAX_MSG_LENGTH by native
    register size.
  * 4de065f6a25 intel/compiler: Adjust fence message lengths for new
    register width on Xe2+
  * e1289d61358 intel/compiler: Adjust CS payload registers for new
    register width on Xe2+

 -- Ernst Persson <ernstp@gmail.com>  Thu, 21 Sep 2023 12:02:37 +0200

mesa (23.3.0~git2309160239.3a307e22483~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 3a307e22483 intel/common: Add sse2_args for 32-bit build when -
    Dsse2=false was set
  * 3c4c263dc73 vulkan/android: improve vkQueueSignalReleaseImageANDROID
  * 6ed2515df1a vulkan: remove a dup entry from
    vk_image_usage_to_ahb_usage
  * 497aecb2100 Android.mk: Only link LLVM for radeonsi, not amd_vk
  * ec32619cb04 Android.mk: Explicitly enable/disable LLVM support
  * 599f47f11c6 Android.mk: Allow building only Vulkan drivers
  * de9bf84501d meson: use a single dependency call for lua
  * 57f83469071 ci/zink: drop redundant `MESA_LOADER_DRIVER_OVERRIDE:
    zink`
  * 3251f321b86 mesa: some cleanups for texparam extension checks
  * ee3981e84d6 Revert "ci: disable lima LAVA lab for maintance"
  * 83d856d4bc8 ci/farm-rules: re-add "run every container and build job
    when a farm gets re-enabled"
  * 67c7f391b3e ci/farm-rules: rename .disable-farm-mr-rules to make it
    clear it's only about MRs
  * fa2fc50f81d freedreno/decode: Fix printing chip-id
  * 9fa75efe69c freedreno/layout: Handle 565/etc MSAA special case
  * 4952db73fb5 freedreno: Fix crash with debug msgs enabled
  * cd2c4927c82 zink: use null attachments for null attachments with
    dynamic render
  * 267b997abf1 zink: propagate rp_tc_info_updated across unordered
    blits
  * 12cdd546be4 zink: use much bigger dummy surfaces
  * 047213fcbaf tu: handle unused color attachments without crashing
  * 42722347362 lavapipe: EXT_load_store_op_none
  * 73a9f9c5cac tu: Actually emit patchpoint for viewports with FDM
  * 64ed3576993 tu: Fix assert in FDM state emission
  * f8bb1b22fbe tu: Fix tu6_emit_*_fdm size call
  * 749e1de9d33 tu: Fix per-view viewport state propagation
  * 21fa6777129 ci: document which image tags need to be bumped when
    updating {alpine,debian,fedora}/x86_64
  * c1990cdb001 ci: document which image tags need to be bumped when
    updating piglit
  * 7521dbae602 ci: Fix pre-merge pipelines with no code changes
  * b1a63d5418f intel/fs: Check if the whole ubo load range is in the
    push const range
  * 2bd86f80482 panvk: Add Android ICD loader entry point

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 16 Sep 2023 12:29:03 +0200

mesa (23.3.0~git2309150548.dd6a7a8e615~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * dd6a7a8e615 lavapipe: clamp cache uuid size
  * b73ebc6bfc3 zink: flag db maps as unsynchronized
  * a5be0385c7c aux/tc: don't use pipe_buffer_create_with_data() for rp-
    optimized subdata
  * 81dd39de019 aux/tc: fix rp info handling around tc_sync calls
  * c9b7639a7dc compiler/types: Fix array name dimension flipping for
    unsized arrays
  * ea998ddd348 glsl: Annotate _mesa_glsl_error() with PRINTFLIKE
  * 2db04de6df1 freedreno: Build drm subdir before perfcntrs, which uses
    it.
  * c5a6cdfeb98 ci: add locked flag to bindgen-cli on x86_64_build.sh
  * 92f5442489e intel/fs: Merge copy prop dataflow loops
  * fa2757aa979 intel/fs: Use rb_tree for copy prop dataflow
  * 35644bb4832 intel/fs: Use rb_tree to store ACP entries by
    destination
  * c28bf1a2495 intel/fs: Use rb_tree to store ACP entries by source
  * 06bdd3eac04 intel/fs: Encapsulate per-block ACP in a structure
  * c262752d741 intel/fs: Make opt_copy_propagation_local file private
  * 09461082985 intel/fs: Simplify check in can_propagate_from
  * 1f15a0f8b2e intel/fs: Don't loop in try_constant_propagate
  * ab23d89adef intel/fs: Move src.file checks out of
    try_constant_propagate and try_copy_propagate
  * b5b2338c5cf intel/fs: Make try_constant_propagate and
    try_copy_propagate file private
  * 8665e37960f intel/fs: Don't try to copy propagate into a source
    again after progress is made
  * e488b46419b intel/fs: Don't continue fixed point iteration just
    because liveout changes
  * 385f01c89b5 util/rb-tree: Inline rb_tree_init
  * 0f917d93bf1 util/rb-tree: Work around C++'s dislike of offsetof
  * f7472f23ba3 glsl/list: Clean up an inappropriate comment
  * 6f1b1d63304 intel/genxml: Auto-import genxml files using
    genxml_import.py
  * cd0c758f328 intel/genxml: Start Xe2 support
  * 57b56312979 intel/decoder: Implement support for importing genxml
  * 0ec95e425cd intel/decoder: ralloc_steal() values from spec context
    for fields and enums
  * 0495f952d48 intel/genxml: Add genxml_import.py script
  * 6ad2f39bab5 intel/genxml: Add GenXml.flatten_xml() method
  * c0f7feb239a intel/genxml: Add GenXml.add_xml_imports method

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 15 Sep 2023 08:43:02 +0200

mesa (23.3.0~git2309122146.85192dcfc6e~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 85192dcfc6e wsi/x11: Don't allow signal_present_id to rewind.
  * 08fee190aa0 wsi/x11: Fix potential deadlock in present ID.
  * da16a76fe7d venus: fix a device memory report leak
  * 9eba1d91875 intel/genxml: update PIPE_CONTROL instruction for dg2
  * 8c8985390d0 Revert "frontends/va: Also map VAImageBufferType for
    reading"
  * 7eabe9bb40d ci_run_n_monitor: add comment to explain "MR > fork"
    logic
  * 717cff829c5 ci: remove duplicate fork pipeline in MRs
  * 941d92408ee bin/ci_run_n_monitor: automatically pick MR pipelines
    when they exist
  * f398f0fb44b bin/ci_run_n_monitor: print in which repo we're looking
    for the pipeline
  * b8a54c50a6a nir: fix invalid sampler search by texture id
  * 5a7044d0bc9 zink: move find_sampler_var from zink to nir core
  * 010147cd642 llvmpipe: make sure to initialize the lp_setup_context
    slots with the default values
  * f9b341cbf40 radv: use shortcut_1d_workgroup_id
  * 2965a9d5102 radv: optimize mesh workgroup ID using
    ts_mesh_dispatch_dimensions
  * 81d17246ec2 nir/lower_system_values change num_workgroups to
    uint32_t
  * b3b58b91f41 zink: ci updates
  * 5f73b8976bb aux/tc: fix address calc for segmented texture subdata
  * b6bc1f85f45 aux/tc: fix staging buffer sizing for texture_subdata
  * 64b49fb501e v3dv: don't assume that bound descriptors have been
    written
  * 9d2bad8b373 zink/ci: document more flakes seen on vangogh
  * 13161f4adb2 zink/ci: automatically reboot when hitting a kernel BUG
    on vangogh
  * 29f730b793d docs/features: cl_khr_3d_image_writes needs driver
    support
  * 2cc981a0cd5 radv: fix capturing RGP on RDNA3 with more than one
    Shader Engine
  * 6caae898dd4 radv: fix emitting SQTT userdata when CAM is needed
  * 23f9e89fce6 anv: enable VK_EXT_mesh_shader where supported
  * 4eddeea7bf2 intel/fs: handle URB setup for fast linked mesh
    pipelines
  * 17d7f7a292f intel/fs: read viewport and layer from the FS payload
  * d36da7c5f82 anv: track what kind of pipeline a fragment shader may
    be used with
  * b200e5765cb anv: use a simpler MUE layout for fast linked libraries
  * bcde58ea86e blorp: fix hangs with mesh enabled

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 12 Sep 2023 23:07:41 +0200

mesa (23.3.0~git2309111804.0c29b7aeaf2~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 0c29b7aeaf2 anv: remove misleading comment about batch_len
  * 9a7c6ae32cd anv/xe: return failure in case waiting for the vm_bind
    syncobj fails
  * 935a1d2c8ff anv/xe: make vm_binds async
  * 7018e64d794 anv: add a new vm_bind vfunc
  * a54451075d4 anv: rename the vm_bind vfuncs
  * 0a1ccd4a9a6 vulkan wsi: add support for PresentOptionAsyncMayTear
  * 39aa4837601 zink: set optimal_keys for turnip jobs
  * cf66ed2dec6 zink: imply ZINK_DEBUG=quiet if ZINK_DEBUG=optimal_keys
    is set on turnip
  * 1e1f58c1aca zink: add ZINK_DEBUG=quiet
  * cb76e90793f ci/zink: Add new zink-lvp flakes
  * f5c80f001bd ci/intel: Add new skqp flake
  * 077e2da21ec ci/d3d12: Add new flake
  * abb612ec1f7 ci/radeonsi: Add new flake
  * 9dbc8a7ee3d ci: Declare stages before jobs
  * e3aab80d4f9 meson: support installation tags
  * 05e80e1a5e2 v3dv: expand sampling from linear image hack to support
    multi-planar images
  * 95f881adbd7 v3dv: add support for sampling simple 2D linear textures
  * 151f78150ba Revert "ci: disable Collabora's LAVA lab for maintance"
  * d74d017f7d7 v3dv: Rely on the internal tiled flag instead of the
    common vk structure
  * a03525d8db7 tu: Split program draw state into per-shader states
  * a80f0260738 ir3: Add helper to determine when variant exceeds safe
    constlen
  * 252aee26346 freedreno, ir3, tu: Constify various uses of
    ir3_shader_variant
  * d1b333a0b57 tu: Split up tu6_emit_vpc()
  * 211aeb2dda1 ir3: Add ir3_find_input_loc() helper
  * 0d82f929427 tu: Pull entangled shader state into program config
  * 56667588203 tu, freedreno/a6xx: Don't use VS for PrimID passthru
    state
  * b312155cc54 tu: Rename PrimID-related registers
  * 979cf7bac04 tu: Merge depth/stencil draw states
  * 3a1f7c61b6a tu: Stop reusing base Vulkan dynamic state enums
  * 1f88c9c5a4c tu: Merge PC_RASTER_CNTL into RAST draw state

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 11 Sep 2023 18:50:42 +0200

mesa (23.3.0~git2309091840.39fca243bb9~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 39fca243bb9 nir/inline_uniforms: fix oob access with
    nir_find_inlinable_uniforms
  * 94941de25b5 zink: delete all psiz=1.0 stores if maintenance5 is
    present
  * 23df2bf41b4 zink: slightly refactor psiz deletion during linking
  * b5c2e91e4a6 Revert "ci: taking igalia farm offline"
  * 6d5174974a4 zink: use HIC for image subdata when possible
  * f24891269d2 zink: check/use suboptimal HIC during ici init
  * e006a3d8bc9 zink: use some return codes for check_ici errors
  * 4feb37d6296 zink: fix some off-by-one indentation
  * 9907573d981 zink: add a fixup method for extra driver props
  * 9ff50261004 zink: disable HIC without resizable BAR
  * f95134468ab zink: move mem type detection up in file
  * 521800cf597 zink: hook up VK_EXT_host_image_copy
  * 5edcab3385e lavapipe: don't advertise UNDEFINED layout for HIC
  * 943909514e4 lavapipe: handle
    VkHostImageCopyDevicePerformanceQueryEXT
  * 87fa46c10d1 zink: use VkFormatProperties3
  * e02441b000b zink: simplify redundant is_buffer check
  * 738eb0d78cf ci: bump VVL to 1.3.263
  * ddc3c18e4aa intel/dev: Update device string for MTL PCI ID 0x7d55
  * bb91e0306c8 nvk: Invalidate the texture cache in PipelineBarrier
  * dff769e2bdd nvk: Set the discard bit for Z/S self-deps
  * 35e09897796 nvk: Don't add a dummy attachment when gl_SampleMask is
    written
  * 8ce4d7a08d8 intel/compiler: Don't evict for workgroup-scope fences
  * 5eddf60e560 intel/compiler: Combine control barriers with identical
    memory semantics
  * 9f98f20c583 anv: Use nir_opt_barrier_modes() to drop unnecessary
    barriers
  * 2b14618daa5 glsl: Use nir_opt_barrier_modes() to drop unnecessary
    barriers
  * 5754461f059 dxil: Set UAV_FENCE_THREAD_GROUP any time global isn't
    required
  * fb3e37a0140 virgl, nir_to_tgsi: Add a hack for promoting partial
    memory barriers
  * dd92fd8fcc9 lavapipe: Don't delete control barriers
  * fc0aaa81eed nir: Reduce the scope of shared memory barriers
  * 7dd897e1cd1 nir: Add an optimization pass to reduce barrier modes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 10 Sep 2023 14:22:47 +0200

mesa (23.3.0~git2309072302.13723e3097e~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 13723e3097e radv/ci: use the default kernel on vkcts-navi10
  * 76ef5f82ab7 radv/ci: drop the auto-reboot-on-hang for vkcts-navi10
  * b16472fc97f ir3/lower_tex_prefetch: Fix crash with lowered
    load_barycentric_at_offset
  * eb7a46ed3d5 v3dv: bump up MAX_UNIFORM_BUFFERS to 16
  * 383842fab81 radv: Fix dumping vertex descriptors with
    RADV_DEBUG=hang.
  * 6d2d74fa1c4 pvr: Add VK_KHR_driver_properties
  * 34813e13db5 pps-producer: add ability to select device with
    DRI_PRIME
  * 0228b294e8b radv: Fix IB size for RADV_DEBUG=hang.
  * 6e4663635f6 mesa: disable snorm readpix clamping with
    EXT_render_snorm
  * 285223d0fd0 radv: fix interactions with primitives generated queries
    and pipeline stats
  * 6f4fe3f81b0 anv: Copy/Clear MSAA images over companion RCS while we
    are on compute
  * 5b8bef86501 anv: Extract batch print code to anv_print_batch helper
  * 9866c4e32b5 anv: Skip layout transition on the compute queue
  * 46d203c0abf anv: Add secondary companion RCS cmd buffer to primary
  * 4d79c2d280f anv: Execute an empty batch to sync main and companion
    RCS batch
  * 0c49d3cf977 anv: Setup companion RCS command buffer submission
  * a63277ec36b anv: Execute RCS init batch on companion RCS
    context/engine
  * 103512ef3b2 anv: Move compute specfic bits under compute queue init
  * b3753025766 anv: Create companion RCS engine
  * a5f2c8c845e anv: create individual logical engines on i915 when
    possible
  * a5e4be45c08 intel: Pass virtual memory address space ID while
    creating context
  * b73960fc408 intel: Add helper to create/destroy i915 VM
  * 13b3d7f7411 anv: Handle companion RCS in end/destory/reset code path
  * 801523f03d7 anv: Split out End/Destroy/Reset cmd buffer code into
    helper
  * edcde0679c0 anv: Add helper to create companion RCS command buffer
  * 31eaeb82746 v3dv: handle pPlaneLayouts in
    VkImageDrmFormatModifierExplicitCreateInfoEXT
  * 717fbda5367 v3dv: be more precise in vkGetImageSubresourceLayout
  * 8019a1b9292 glsl: ir_function_param_visitor::visit_enter always true
    condition
  * 5d203c4ae03 glsl_to_nir: add more unhandled function types
  * 67d1c36bb4a glsl: fix out params in glsl to nir

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 07 Sep 2023 23:56:19 +0200

mesa (23.3.0~git2309052143.959801d9d9e~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 959801d9d9e zink: polaris ci updates
  * 07cb81f0fcf asahi: Skip LOD bias lowering for GLES
  * 2adb0f31fc9 gallium,mesa/st: Add PIPE_CONTEXT_NO_LOD_BIAS flag
  * 6269b60a1ce asahi: Conditionally expose cube arrays
  * dd3dd6e127f asahi: Handle linear 1D Arrays
  * 56267ec14d0 asahi: Forbid linear 1D Array images
  * fb606262608 agx: Run opt_idiv_const after lowering texture
  * 49951ef3cc2 agx: Lower coordinates for cube map array images
  * fb76f6cc6ed agx: Handle cube arrays when clamping arrays
  * 54ebddaa0fe ail: Force page-alignment for layered attachments
  * f9b08cf3a65 asahi: Translate cube array dimension
  * 7895d5b79c8 agx: Add unit test for cmp+sel fusing
  * bdad7992bc0 agx: Add unit test for if_cmp fusing
  * 08e0c5a9cf1 agx: Fuse compares into selects
  * e7ffc799d1a agx: Fuse conditions into if's
  * f17ad0c516e agx: Generate unfused comparison pseudo ops
  * ed6e3913494 agx: Add pseudo-instructions for icmp/fcmp
  * 139e56c0dba agx: Only use nest by 1 for loops w/o continue
  * 8f06252e9b1 agx: Add helper to determine if a NIR loop uses continue
  * 5c9495cf376 agx: Omit while_icmp without continue
  * e71a1469a8a agx: Omit push_exec at top level
  * 6e0ae2c3165 agx: Detect conditional breaks
  * a009f39fca7 agx: Use agx_first_instr
  * aad7d5288ad agx: Add agx_first/last_instr helpers
  * ffb64283eeb agx: Add break_if_*cmp instructions
  * ff816f224b8 agx: Split nest instruction into begin_cf + break
  * b89c048c9bf agx: Lower nest later
  * b25b36a9e39 agx: Expand nest
  * 84054441437 agx: Lower pseudo-ops later
  * f9343fe5ca1 agx: Remove logical_end instructions

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 05 Sep 2023 22:31:56 +0200

mesa (23.3.0~git2309030649.8a32614a183~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 8a32614a183 isl/tilememcpy_test: add multiple tile testing
  * fa6562b239f Revert "iris: Disable tiled memcpy for Tile4"
  * a6c8ddb5965 intel/isl: Linear to Tile-4 conversion unittest
  * 4f0d02902eb intel/isl: Convert Tile4 texture to linear format
  * a648ee7a70f intel/isl: Convert linear texture to Tile4 format
  * d16eac17d84 intel/isl: Unittest for linear to Ytile conversion
  * ca7ae1a53f8 blorp: drop undefined macro
  * 99a88ca4a24 crocus: fix GFX_VERx10 macro
  * 802043018eb crocus: add a __gen_get_batch_address declaration
  * 86e8ba4d327 anv: use the lineage number for WA
  * 50c2fe46fab iris: use the correct WA macros and lineage numbers
  * cbc49166617 anv: drop dead ifdef
  * c38b67f4d1a intel: Limit Intel Vulkan RT to x86_64
  * fd114ab7068 ci: Disable WHL jobs
  * 3e457c6b7e9 ci: Disable known broken Bifrost Vulkan job
  * 2ae94b38943 aco: implement some exclusive scans with inclusive scans
  * f90f68aa1cf rusticl/memory: only specify PIPE_BIND_SHADER_IMAGE
    where supported
  * 3a715cc9d2f nir: add nir_scalar_equal
  * bce9bba90d4 nir: add nir_scalar intrinsic helpers
  * 1ae3c40732e docs: add LAVA farm informations
  * 1a990e21c8a Revert "ci: disable a660 jobs"
  * 4066f05fe43 anv: enable standard Y tiles
  * db4488a2dca anv: Align memory VA to support for Ys, Tile64 tiled
    images
  * e03f3b646c1 isl: enable Tile64 for 3D images
  * e956f6ad305 intel/isl: Allow Ys tiling
  * 4ac46dbb46c isl: reorder tiling selection
  * af559c48d39 intel/aux_map: correctly program tiling mode for Ys
  * 3c6d003d9fb blorp: allow 3D blits/copies on Ys/Yf/Tile64 tiling
  * e182f5770d8 isl: disable CCS on Ys/Yf
  * 4e36aa507e9 isl: disable miptails on gfx12 with yuv formats

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 03 Sep 2023 12:17:19 +0200

mesa (23.3.0~git2308282021.72f104791d1~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 72f104791d1 venus: expose at least one cached memory type
  * 7c98510d173 d3d12: Fix H264 interlaced decode
  * c3cf7f3e35c d3d12: Fix Map/Unmap of YUV resources
  * 71466eb863e vk/wsi/x11: Remove dead code
  * f816578e4e2 nv50: Remove unused value
  * 3e66eba59e6 driconf: add a workaround for Rainbow Six Extraction
  * 577b231458f nv/codegen: Delete copy and assign
  * 932d7fe4cd4 nv/codegen: Change copy-constructor call to assign
  * 5ce6e09ffc7 nir/algebraic: Remove redundant pack / unpack lowering
    patterns
  * 69d086c6c41 nir/builder: Add nir_extract_i8_imm and
    nir_extract_u8_imm helpers
  * 58c7ad6aceb hasvk/tests: Propagate failures to gtest
  * 27a66f70a5b hasvk/tests: Link a single hasvk_tests binary using
    gtest
  * 66d3b4a8b25 hasvk/tests: Refactor state_pool_test_helper to not use
    macros for parametrization
  * 54b0745b5e5 anv/tests: Propagate failures to gtest
  * c374033f5b8 anv/tests: Link a single anv_tests binary using gtest
  * 695e356d4a0 anv/tests: Refactor state_pool_test_helper to not use
    macros for parametrization
  * 2d2a189fef4 ci/panfrost: we have enough device, parallelize Vulkan
    tests
  * cccbd8ae699 ci/panfrost: add G52 flakes
  * 35b2af0f0be lavapipe: further limit accurate_a0 hack
  * bba4880ffcb zink: add a618 flake
  * c9e060bfbe6 r300: there is no limitation on presubtract source file
  * 87ea850d765 r300: move power of two multipliers down
  * 7ae3d3eb8d9 r300: convert x * 2 into x + x for presubtract
  * 0508db91556 r300: implement bias presubtract
  * 3b743603383 r300: exit early in presubtract is not supported
  * 24d35a56d99 r300: reorder for easier presubtract 1-x pattern
    recognition
  * 939845e424d zink: pass KERNEL shaders through successfully
  * 226aefccd3e rusticl: fixes for zink shader images
  * 07272f6c359 rusticl/device: _MAX_CONST_BUFFER0_SIZE is unsigned
  * 54b37078ebf rusticl: add debug option to sync every event

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 29 Aug 2023 00:37:07 +0200

mesa (23.3.0~git2308181336.8849e1e3a65~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 8849e1e3a65 anv: emitting 3DSTATE_PRIMITIVE_REPLICATION is required
    on Gen12+
  * e62f2c48a08 dri: Use RGB internal formats for RGBX formats
  * 61dd0ff97d8 ci/freedreno: another batch of Adreno 530 flakes
  * b78ea2a38f2 radv: stop copying if VS or TES uses the InvocationID
    built-in
  * d547c996ae3 radv: simplify declaring VS specific input SGPRs
  * 525143d01a6 radv: remove unused param from
    radv_pipeline_init_multisample_state()
  * 1cf840fb3eb radv: remove radv_cmd_buffer::cached_vertex_formats
  * c1361690623 radv: fix emitting TCS epilogs for GFX6-9
  * f9a9471cafc radv: add missing comment about
    TCS_OFFCHIP_LAYOUT_LSHS_VERTEX_STRIDE
  * c6a56e6b3d3 radv: reduce TCS_OFFCHIP_LAYOUT_NUM_PATCHES to 6-bits
  * 20381eb5226 nir: Drop nir_push_if_src()
  * 96c0f8c5800 nir: Drop nir_instr_rewrite_src()
  * b5d6b7c402a nir: Drop most uses if nir_instr_rewrite_src()
  * 71ddaca2e23 nir: Drop nir_instr_rewrite_src_ssa()
  * de063a1481a nir: Drop most uses of nir_instr_rewrite_src_ssa()
  * 964c73e13ed nir: Drop nir_if_rewrite_condition()
  * 267b4fb1b9c nir: Add and use a nir_instr_init_src() helper
  * 9c8cb69c158 nir: Add a nir_instr_clear_src() helper and use it
  * 7af0dcbdfc8 nir/opt_undef: Don't rewrite a bcsel to mov
  * 53294de682a nir: Take a nir_def * in nir_phi_instr_add_src()
  * 298a3eebd8a nir: Take a nir_def * in nir_tex_instr_add_src()
  * 6d168b93bce ci/etnaviv: update ci expectation
  * 3e0cd6dfb9b nv50: limit max code uploads to 0x8000
  * 26b2bdcfe01 iris,crocus: drop unnecessary DEBUG_NO_CCS/NO_HIZ checks
  * 20db03d32fb anv,hasvk: drop unnecessary DEBUG_NO_CCS/NO_HIZ checks
  * b3affef2529 intel/isl: Enable INTEL_DEBUG=noccs/nohiz in ISL helpers
  * 4dfd306454a disk_cache: Disable the "List" test for RO disk cache.
  * e595c367d5f zink: Fix one addicional case when running a compositor
  * d7daf78f628 intel/compiler: Respect NIR_DEBUG_PRINT_INTERNAL for
    DEBUG_OPTIMIZER
  * 8a8bde69a58 ci/turnip: Add a660 VK coverage.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 18 Aug 2023 17:47:48 +0200

mesa (23.3.0~git2308160536.8e13736222e~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 8e13736222e radeonsi: remove unused arg of
    get_tcs_tes_buffer_address
  * 0e97fe38b79 radeonsi: part mode standalone tcs support aco compile
  * 59f4504d058 radeonsi: add si_aco_build_shader_part
  * 8631851b8f6 radeonsi: change si_fill_aco_options args
  * 04aadb32ad9 radeonsi: add si_get_tcs_epilog_args
  * 8e0cff56f31 radeonsi: remove separate_prolog arg from prolog/epilog
    build
  * b744405aa25 radeonsi: extract si_llvm_build_shader_part
  * e797bd78c96 radeonsi: fill part mode tcs aco shader info
  * ac867af0997 radeonsi: share si_get_tcs_out_patch_stride with aco
  * 1001478a681 radeonsi: support upload multi part shader binary
  * 85c0f310994 radeonsi: add exec_size to shader binary
  * 51a8479a510 aco: use semantic location as io temp index
  * 4c7fdebf9bc ac/nir/tess: move tess factor output out of control flow
  * 47563880388 aco,radeonsi: save const addr to symbol
  * facbd13df14 aco: skip scratch init when no scratch arg provide
  * d3333609e64 aco: don't emit s_endpgm for tcs with epilog
  * b41d3e42f7c aco: add tcs epilog generation for radeonsi
  * a2484b20f90 aco: add pending_lds_access option for insert waitcnt
  * 5cf6f4f9a74 aco: allow tcs with epilog to keep nir store output
    instruction
  * 5d05ae5df0b aco: add tcs end regs for epilog usage
  * 7c7062f8f92 aco: move jump to epilog out of ic_merged_wave_info
  * 85d9646288d aco: add p_end_with_regs pseudo instruction
  * a3549d7f7ab aux/trace: trace video_buffer method return vals
  * 992ded3a3fe aux/trace: unwrap refrence frames in picture_desc
  * ac9c2689a6d aux/trace: wrap video_codec & video_buffer
  * a5279f1ec51 aux/trace: add context video methods
  * ace894cff87 aux/trace: add screen video methods
  * 9d1da9ec202 aux/trace: fix set_hw_atomic_buffers method name
  * 713437b2fcd aux/trace: move trace_sample_view logic
  * 9ff20e23fed aux/trace: deduplicate enum dump macro work

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Aug 2023 11:10:44 +0200

mesa (23.3.0~git2308151111.a02b5138a71~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * a02b5138a71 radv/rt: Rename traversal_shader to
    traversal_shader_addr
  * c291f612cb3 radv/rt: Rename shader_pc and next_shader
  * 2edf222abdc egl: reenable partial redraw with a warning when using
    gallium hud
  * d0f4333fcad intel/decoder: Fix memory leak on error path
  * 6a2a36d7ddc driconf: add a workaround for Captain Lycop: Invasion of
    the Heters
  * 210fe9f5867 zink: drop CWE requirement for renderpass tracking with
    primgen queries
  * 1bff8ade885 zink: rip out some awkward parts of the old non-cwe path
  * 55360307359 zink: rework rast-discard for primgen queries
  * 4f743df4f00 zink: unset primgen suspended flag when ending a primgen
    query
  * 5ea5318e607 zink: require EDS1 for CWE usage
  * 69cacebd29a zink: track start/stop of a couple query types
  * da5ca7529f7 gallivm: Drop the Vulkan YUV format hacks
  * 4accbb27a22 vulkan/format: Translate G8B8G8R8_422_UNORM and
    B8G8R8G8_422_UNORM properly
  * eb23ce91b53 vulkan/format: Use correct swizzle for 1-plane YCbCr
    formats
  * b9870275b12 anv: Disable CCS_E for ISL_FORMAT_YCRCB_*
  * 0e33bb56a4e blorp: Use R8G8_UINT for YCRCB_* formats with CCS
  * 3fff38f624e gallivm: Support G8B8_G8R8_422_UNORM and
    B8G8_R8G8_422_UNORM
  * 0c03d44093d util/format: Add G8B8_G8R8_422_UNORM and
    B8G8_R8G8_422_UNORM formats
  * 9a6ec6cdd6a util/format: 8-bit interleaved YUV formats are UNORM
  * c1a0bdae1cc intel/genxml: Update xml with gen_sort_tags.py output
  * 549540ca7cd intel/genxml: Add final newline to output when saving
    xml
  * 548a0bc7d2a intel/genxml: Don't rewrite sorted xml if the contents
    didn't change
  * e60a0b16163 intel/genxml: Move sorting & writing into GenXml class
  * 3176abc0f20 panfrost/ci: updated CI expectations
  * 56be9a55be0 pan/decode: handle more than one panfrost_device
  * cea0cc5b163 panfrost: fix invalid memory access in
    get_equation_str()
  * bfa4125308b zink: ci updates
  * f5c1da10f5c lavapipe/ci: Remove descriptor_indexing fails
  * b2f6de8f0d8 gallivm: Run nir_convert_to_lcssa before
    nir_convert_from_ssa
  * 4695bebc795 nir: Drop nir_dest

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 15 Aug 2023 12:43:55 +0200

mesa (23.3.0~git2308110943.b34c027cb0e~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * b34c027cb0e radv: use the number of VS outputs for computing the
    tessellation info
  * 8a97302f57f radv: add support for loading the LSHS vertex stride
    from a SGPR
  * 0cb88ddca29 iris: implement required PSS sync for Wa_18019816803
  * 92941ee84bb anv: implement required PSS sync for Wa_18019816803
  * 419531c5d98 intel/blorp: add a new flag to communicate PSS sync need
  * 973e6f3be09 gallium: remove start_slot parameter from
    pipe_context::set_vertex_buffers
  * e0da62c0e96 nvk: NOUVEAU_WS_BO_LOCAL is a trap.
  * 9f767db1265 nv50/ir: Rework conversions for texture array indices
  * 585f0e8b489 nir: minor fixes for io_to_scalar
  * 0a12cedec91 zink: add a special separate shader i/o mode for legacy
    variables
  * b24911e5dbd zink: pre-convert mode in fixup_io_locations
  * 52c57667eda nvk: Use common physical device properties
  * c06f70ca180 radv: Use common physical device properties
  * eaee792ea5f vulkan: Add a generated vk_properties struct
  * 0ab0e5d803e ci/a530: document piglit flake
  * 5ba5bcf2b60 vulkan/wsi: Allow binding presentation_timing when
    software rendering
  * 54c7099087f panfrost: upcast uint8/uint16 before shifting them
    beyond their range
  * 90a6ebdf80d amd/ci: drop duplicate test expectations
  * 85e74944c69 winsys/amdgpu: fix a race between import and destroy
  * 17c95e070cd r600/sfn: work around injecting extra CF's to handle
    hardware bugs
  * b8edd19358e radv: Handle VK_SUBOPTIMAL_KHR in trace layers
  * de6d298fd08 ci/zink+radv: set a timeout of 2x the normal runtime
  * 9da56a36980 iris: Inline iris_can_sample_mcs_with_clear
  * 1d1dbbd03f1 iris: Drop get_copy_region_aux_settings
  * 60aebe8fa89 iris: Fix iris_copy_region calls involving FCV_CCS_E
  * 3acdb29332e iris: Fix aux usage tracking in prepare_render
  * abc0b3a0dd1 pvr: Add VK_KHR_copy_commands2
  * 3c6356493a3 pvr: Print VkStructureType name on
    pvr_debug_ignored_stype()
  * ffc93ba7a34 pvr: Add VK_KHR_get_surface_capabilities2
  * 40888311243 pvr: Add VK_KHR_get_memory_requirements2

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Aug 2023 10:14:44 +0200

mesa (23.3.0~git2308071606.c5a6e88c4e8~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * c5a6e88c4e8 pvr: do not claim support for ASTC texture compression
  * 6c25dc09099 freedreno: add ci flake
  * d2d0f4a28ad virgl: add ci flake
  * cfa23e66901 panfrost/vk: Use correct sampler dimensions for MSAA
  * f5074adeb52 anv: enable INTEL_DEBUG=nofc
  * 85c5b68823c v3dv: drop cpu path for buffer to image copies
  * 67be2b6e639 radv: initialize result when pipeline cache creation
    fails
  * 77773490cf9 zink: use fprintf instead of printf to align the
    requirements warnings
  * 4f5bfc66910 zink: force image barriers after dmabuf import
  * 652e87bc5d0 zink: better handle separate shader dsl creation when no
    bindings exist
  * 18214bf9ea3 docs: add two nvk exts to features.txt
  * bfe4a0e744d intel/decoder: Make intel_spec_load_filename() have
    separate dir and name strings
  * b4c8d2dc455 intel/decoder: Add intel_spec_load_common()
  * 1d5535613e6 intel/decoder: Fix xml filename when verx10 % 10 is not
    0
  * 807c0d6bb75 r600/sfn: Take source uses into account when switching
    channels
  * bcfa71a6d09 nvk: Call nir_lower_int64
  * 93362f801ac nvk: Use more consistent device variable names
  * 8088d73fd1c ci/freedreno: document another flakes on Adreno 530
  * 286e58b8d8a nv50/ir: convert system values to gl_system_value
  * f5c41c4b78f nv50/ir: use own info struct for sys vals

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 07 Aug 2023 16:48:26 +0200

mesa (23.3.0~git2308042332.8c62b3938a8~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 8c62b3938a8 nvk: Enable the new UAPI
  * b2fe4c77295 nvk: Print an error message if VM_BIND support is
    missing
  * 0b6afbc407f nouveau/winsys: Allow nouveau_ws_device_new() without
    VM_BIND
  * 1a6a198ab54 nvk: add new internal bo allocation flag.
  * 766a6a5a4d4 nvk: Use an empty EXEC for the empty submit case
  * 9cb945015ca nvk: enable sparse residency buffer on maxwell+
  * 0fe8090bc72 nvk: enable a bunch of external fence/semaphore bits
  * 921fc517ce1 nvk: enable sparse features
  * 9a0a5f85619 nvk: Handle pre-turing indirect buffers with sparse
  * 723041a3ed7 nvk/queue: add support for syncobjs and sparse binds
  * 7321d151a94 nvk: Add support for sparse images
  * 03f0f01904c nvk: Add support for sparse buffers
  * 6dbf02ec646 nouveau/mme: Support the new UAPI
  * fa8bbfaa55a nouveau/winsys: add support for the vma bind interfaces
  * c815ff16615 nvk: always sync internal cmd bufs for vma lifetimes.
  * 9d7d76cddcd nouveau/shim: Use the imported nouveau_drm.h headers
  * 5fd1b8e0860 nvk: Use the imported nouveau_drm.h headers
  * 300df8e177f nouveau/winsys: Use the imported nouveau_drm.h headers
  * fc1fb3a5160 drm-uapi: Import nouveau_drm.h
  * ae37fbba123 nouveau: Move shader topology info to nv_device_info
  * d8b7b1d7842 nvk: Decorate CmdBegin/EndRendering entrypoints
  * 40ab58035e2 nvk: Implement GetRenderingAreaGranularityKHR
  * 8636597c4a1 nvk: Implement CmdBindIndexBuffer2KHR
  * c4b7754e7c5 nvk: Use VkBufferUsageFlags2
  * 98a3bc699bb nvk: Implement the maintenance5 image layout queries
  * af72961ff17 nvk: Rework memory requirements to handle aspects
    correctly
  * 733d20277c7 nvk: Misc. style nits
  * 50e5ee586ce nvk: enable EXT_depth_clip_enable
  * 15d12bb6152 nvk: enable EXT_depth_clip_control
  * 57c38a56696 nvk: Implement CopyQueryPoolResults with a compute
    shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 05 Aug 2023 08:54:57 +0200

mesa (23.3.0~git2308032157.6e7718dcea4~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 6e7718dcea4 anv: debug messaging for sparse texture usage
  * df349bc2bef anv: enable fake sparse for Elden Ring
  * 7db20032096 anv: add fake sparse support
  * 17e505cb2d7 asahi: decouple layout from gallium
  * 68c30215a9a etnaviv: decouple drm from gallium
  * 74589123338 docs/ci: expand the description of test suites
  * 774ce3ff88e docs/ci: drop mention of build systems variants in the
    CI
  * a4df4fd0f56 docs/ci: in paragraph about the CI being overwhelmed,
    mention our tool to help with that
  * 845518d5d40 docs/ci: stop trying to enumerate drivers that are
    tested using VK-GL-CTS
  * f5672d048e9 ci: include some timing information in the git cache
    download script
  * f8cc1ab04b1 docs/ci: remove default nginx config, which we don't
    need for proxy
  * f9ebbcd8b67 docs/ci: update to systemd and used version of the trace
    for testing
  * e389234a5e1 docs/ci: default to port 80 for the caching proxy
  * 57b0db63e12 ci/amd: fix timeouting radeonsi-raven-va-full job
  * 95431435930 radeonsi: Enable
    PIPE_VIDEO_CAP_SUPPORTS_CONTIGUOUS_PLANES_MAP
  * 4f047c9583a radeonsi: Copy all planes with multi-plane staging
    textures
  * 2cb3c2cbfb2 zink: Collapse is_ssa check
  * 91f676819cd vc4,broadcom/compiler: Drop write_mask handling
  * 59645f05a7f nouveau/codegen: Drop writemask check
  * 30ff0857bef r600/sfn: Ignore instruction write masks
  * b870988b77f r600/sfn: Stop referencing legacy functionality
  * c545df7426a frontends/va: Init view_resources array in
    vlVaPut/GetImage
  * ca8647e29b7 frontends/va: Don't allow multi-plane derive without
    driver support
  * 9e9d90c6c38 lavapipe: VK_EXT_host_image_copy
  * 6d3009d7585 lavapipe: be slightly more permissive for bad apps (and
    cts) with dynrender
  * cd3ea02da05 ac/radv: decouple radv vulkan driver and compiler from
    gallium
  * b5401a4b0e8 nouveau/drm-shim: Decouple from gallium
  * 9ecfd9feea4 intel/tools: Use 'env bash' to find bash executable
  * 37b56dfd7d0 meson: Remove arm_neon_workaround
  * 4c4d2d35c25 glx: decouple from gallium

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 03 Aug 2023 23:03:19 +0200

mesa (23.3.0~git2307301541.99aeea467ba~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 99aeea467ba r600: Force CF when emitting a NOP on R600 in gs copy
    shader
  * 8d7f682bdba nv50/ir/nir: Fix zero source handling of tex
    instructions.
  * 5df97c27dc8 intel/compiler: Use nir SUBGROUP_INVOCATION for RT
    TOPOLOGY_ID
  * dbf19b76e8f intel/isl: Use intel_needs_workaround() for MTL CCS WA
  * 23b45c5a291 lavapipe/ci: use tighter changes: rules
  * 0831f93e5f9 nir/builder: Add a nir_txs_deref() helper
  * ee0942f7a62 nir/builder: Allow tex helpers on image types
  * e690d88d69d freedreno/afuc: Initial a7xx support
  * 6fd00074475 afuc: Fix writing $00
  * 7d7aa2251e1 afuc: Add setbit/clrbit
  * 1046ebbb899 afuc: Convert to isaspec
  * 7376af0eef2 afuc: Fix xmov lexer typo
  * 038680c2f62 isaspec: Add initial decoding support
  * 2faf344f037 isaspec: Rename isa_decode() to isa_disasm()
  * 26cce0a1333 isaspec: Add callback after decoding an instruction
  * b63782da165 isaspec: Add "custom" field type
  * dc874e46547 isaspec: Add support for function and entrypoint labels
  * 569d3ac5a15 isaspec: Add support for "absolute" branches
  * 86b17d96b3a isaspec: Add "displayname" for altering {NAME} when
    decoding
  * c237539d621 egl: Implement EGL_EXT_explicit_device
  * 41e664f8258 egl: android: Remove legacy name-based shared buffers
    support
  * 2b7599dc495 intel: Rename intel_gem_add_ext() to
    intel_i915_gem_add_ext()
  * c9950786f61 intel/common: Move functions inside of C++ ifdef
  * 4198a301b3f intel: Move i915_drm.h specific code from
    common/intel_gem.h to common/i915/intel_gem.h
  * 0579627f211 iris: Replace I915_EXEC_FENCE_SIGNAL by
    IRIS_BATCH_FENCE_SIGNAL in common code
  * 1174e7412ee intel/dev: Port intel_dev_info tool to Xe KMD
  * 56e0aff5307 anv, drirc: Add workaround to speed up Cyberpunk 2077
    reg allocation
  * 739e21fa9a7 intel/fs: Add a parameter to speed up register spilling
  * be11fee2a72 aco: Refactor select_program to smaller functions.
  * 623d704de85 iris/xe: Call iris_lost_context_state() when batch
    engine is replaced

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 30 Jul 2023 16:18:35 +0200

mesa (23.3.0~git2307261401.7b29ae557ab~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 7b29ae557ab ci/farms: always compare the code against main
    repository
  * 50c29e1ffa1 anv: simplify buffer address+size loads from descriptor
    buffer
  * f1f58c3bea7 isl: add ability to store buffer size in unused
    RENDER_SURFACE_STATE fields
  * d099e47de04 intel/fs: add more UNDEFs around SEND messages
  * 5c727248197 intel/fs: consider UNDEF as non-partial write
  * 08bfcc12d47 radv: rename radv_pipeline_stage to radv_shader_stage
  * 090d88247de radv: cleanup pipeline compute emit helpers
  * fdec88bd7c3 radv: rework determining the NGG stage without a
    graphics pipeline
  * 174816019fc radv: simplify lowering NGG GS intrinsics
  * 70dbe011bb0 radv: rename graphics pipeline linking helpers
  * 697d4d4b030 radv: move removing all varyings when the FS is a noop
  * 5da9f38c539 radv: stop passing radv_graphics_pipeline to
    radv_fill_shader_info()
  * a7fdcc3b221 radv: rework considering force VRS without relying on
    graphics pipeline
  * 9d89b29a80d radv: set next_stage to MESA_SHADER_NONE if there is no
    FS
  * b250efa7140 radv: initialize stage/next_stage earlier
  * d62e494b370 intel/vec4: fix log_data pointer
  * 6e43618b825 ac: Switch to use nir_foreach_function_impl in function
    analyze_shader_before_culling
  * a606074a7a9 radeonsi: Convert to use nir_foreach_function_impl
  * 3f7a3a66982 microsoft/clc/compiler: Convert to use
    nir_foreach_function_impl when possible
  * d5baad2afae microsoft/compiler: convert to use
    nir_foreach_function_with_impl in function emit_module
  * 87109c3e1b1 vulkan/runtime: Add helper functions for
    VK_EXT_host_image_copy
  * 2388f22a5e5 gm107/ir: fix SULDP for loads without a known format
  * 377c2a045fc intel/compiler: call brw_nir_adjust_payload from
    brw_postprocess_nir
  * cb0de0a1d34 intel/fs: Constant fold OR and AND
  * 61c786bad51 intel/fs: Constant fold SHL
  * 56e6186dcf0 intel/fs: Always do opt_algebraic after
    opt_copy_propagation makes progress
  * d089272fc07 ci/a5xx: Add another GPU hanging piglit test to the
    skips.
  * 2f834340a67 Uprev Piglit to ed58dfbd12be34fa3dab97a7a2987b890e0637f1
  * 65ff9f0a556 tu: Fix data race in userspace VMA management.
  * 3efba1e2e96 iris: Request Xe KMD to place BOs to CPU visible VRAM
    when required

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 26 Jul 2023 16:58:44 +0200

mesa (23.3.0~git2307211642.0195e1204b6~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 0195e1204b6 radeonsi/vcn: num bs_bufs must be proportional to num
    jpeg engines
  * 47a9d016414 radeonsi/vcn: support variable number of bs_bufs
  * 53d35c641da radv: bind the pre-compiled PS epilog to the cmdbuf
    state
  * 55f05309cae radv: pass a shaders array for computing
    ia_multi_vgt_param
  * b0f53c3a480 radv: remove unused param in
    radv_pipeline_emit_vgt_gs_out()
  * 3348cd3a80e radv: stop using a pipeline for emitting
    VGT_VERTEX_REUSE_BLOCK_CNTL
  * 03b2c34793b nir: Remove register arrays
  * 14660141840 nir: Rename lower_locals_to_reg_intrinsics back
  * d2c94f9e714 nir: Remove nir_lower_locals_to_regs
  * a8c0b6695fc panfrost: Remove unused helpers
  * a08286f993a intel/fs: Don't read reg.base_offset
  * 01965a2fe95 anv: drop CFE state validation checks
  * e7e7042093c anv,iris: program the maximum number of threads on
    compute queue init
  * 5a952807487 etnaviv: nir: lower nir_texop_txs
  * 88f399b6515 etnaviv: nir: support intrinsic used for txs lowering
  * fb48d3d1da0 nir: add enta specific intrinsic used for txs lowering
  * 65ffa5b0b80 etnaviv: move nir texture lowerings into one pass
  * 06046a02f83 anv: merge cases leading to the same code
  * 0eb2679cdb5 anv: drop unused function
  * 3c83ac80021 intel/compiler: remove redundant code
  * e3ecba32664 anv: use ycbcr_info for P010 format
  * 340df429777 nouveau: Delete the nouveau_compiler tool
  * b5a638454de nouveau: Drop BuildUtil::Location
  * 73239d40290 nouveau: Drop BuildUtil::DataArray
  * 51dfde7b96e nouveau: Drop ConverterCommon::Subroutine
  * c631635f435 nouveau: Drop tgsi support from nv50_ir_prog_info
  * 38a96f79afb nouveau: Delete nv50_ir_from_tgsi.cpp
  * 9178b049cc5 nv50: Keep nir directly in nv50_program
  * d00d9673996 nvc0: Keep nir directly in nvc0_program
  * 88bf4b61af8 zink: emit SpvCapabilitySampleMaskPostDepthCoverage with
    SpvExecutionModePostDepthCoverage

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 21 Jul 2023 17:22:37 +0200

mesa (23.3.0~git2307192357.46958bcb74f~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 46958bcb74f intel/fs: fix missing predicate on SEL instruction
  * 7fe16571403 zink: set feedback attachments on batch init
  * 7cbdb0b7142 zink: set pipeline dynamic state count after all dynamic
    states are set
  * 97c79cdf19d nir: Use instructions_pass() for nir_fixup_deref_modes()
  * a0d426370db ir3: Fix FS quad ops returning wrong values from helper
    invocations
  * 696f37f5c3f freedreno/regs: Rename SP_FS_CTRL_REG0.DIFF_FINE into
    LODPIXMASK
  * 59087003c4b r600/sfn: remove debug output leftovers
  * 7a4e3b27880 radeonsi/vcn: Fix setting color range in AV1 bitstream
  * 2661e975dca intel/aux_map: Add function and macro to return l2 and
    l1 table masks
  * c50008903b2 intel/aux_map: Drop magic sub table size number
  * b9a38a16619 intel/aux_map: Convert l1_entry_addr_out to canonical
  * 4f44c47db8b intel/aux_map: Mask out bits above index 47 in
    intel_aux_get_meta_address_mask()
  * 47792b3642c intel/aux_map: Rename some variables to improve
    readability
  * 14ae2c58b88 intel/aux_map: Replace magic number by
    INTEL_AUX_MAP_ENTRY_VALID_BIT
  * 4fc38aa99b8 intel/aux_map: Use get_aux_entry() in remove_mapping()
  * 872b4247ad8 intel/aux_map: Nuke format_enum
  * db4b365f2b3 etnaviv: initialize VIVS_GL_BUG_FIXES
  * af38b1acd57 zink/ci: update list of expected failures for NAVI10
  * 74451ed3f08 egl/wayland: wait for compositor to release shm buffers
  * 2a6fc690c18 anv: Use workaround framework to Wa_14016118574
  * 58febefa9a3 tgsi: remove unused tgsi_shader_info.max_depth
  * 0335976fb20 tgsi: remove unused
    tgsi_shader_info.const_buffers_indirect
  * 674fbed75df tgsi: remove unused
    tgsi_shader_info.indirect_files_written
  * bfb7f854614 tgsi: remove unused tgsi_shader_info.indirect_files_read
  * 606db8cc400 tgsi: remove unused
    tgsi_shader_info.uses_bindless_image_atomic
  * 67f85d3f459 tgsi: remove unused
    tgsi_shader_info.uses_bindless_image_store
  * 70d84086667 tgsi: remove unused
    tgsi_shader_info.uses_bindless_image_load
  * aa6a3faf755 tgsi: remove unused
    tgsi_shader_info.uses_bindless_buffer_atomic
  * 33e9189aa1b tgsi: remove unused
    tgsi_shader_info.uses_bindless_buffer_store
  * 98b157bd9c3 tgsi: remove unused
    tgsi_shader_info.uses_bindless_buffer_load

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 20 Jul 2023 00:19:56 +0200

mesa (23.3.0~git2307160211.dfd96fac414~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * dfd96fac414 ci/freedreno: add another a530 flakes
  * f952756d1e2 ci/freedreno: fix unexpectedpass flake on a630
  * 5b3cccaf630 ci/lima: EGL testing was disabled when fp16 fail was
    removed
  * 87439a8c718 ci/radeonsi: stoney arb_timer_query got fixed between
    kernel 6.3.1..13
  * d3f26cbbe1a Revert "lima/ci: temporarily disable deqp-egl tests due
    to timeouts"
  * c467d760cba ci/freedreno: add fails introduced by upreving to 6.3.13
  * bd2b31a89cc ci: update kernel to 6.3.13
  * 23158e9a3f7 ci: build kernel in gfx-ci/linux and just use binaries
    in Mesa3D CI
  * 9bcdc45ee7e nir: Devendor load_sample_mask
  * 56d61d9a644 nir: Add fence_{pbe,mem}_to_tex(_pixel)_agx intrinsics
  * 259ba104f79 nv50/ir: Support vector movs
  * 39824457283 glx: Assign unique serial number to GLXBadFBConfig error
  * 9590bce3e24 radeonsi: prefix function with si_ to prevent name
    collision
  * 27d30fe3c0e isl: Disable MCS compression just on ACM platform
  * efa65945360 intel/compiler: Look at 2 register worth of data instead
    of 4
  * 8b93fa149bf iris: migrate WA 14016118574 to use the WA framework
  * 83716b08cf1 iris: migrate WA 14013910100 to use the WA framework
  * e85a18a9afe Update radeon_vcn_enc.c
  * 64eab1f3ae2 radeonsi: enable vcn encoder rgb input support
  * 043dcfad04d Revert "ac/nir/ngg: Follow intrinsic sources when
    analyzing before culling."
  * d408ae88db6 radeonsi: Use DIV_ROUND_UP instead of ALIGN_POT
  * 6d312c61600 etnaviv: optimize transfers when whole resource level is
    discarded
  * f8f0f1c5cb5 etnaviv: optimize render resource update
  * 61e27debf5b etnaviv: keep blit destination tile status valid if
    possible
  * dce4aa83e4f etnaviv: allow sampler TS even if the resource is
    flushed
  * fdedc0b3b37 etnaviv: optimize sampler source update
  * 995e34840f0 etnaviv: add tile status buffer status into TS metadata
  * 49d2f9f918a etnaviv: move TS meta into etna_resource_level
  * 97aec88c793 etnaviv: add helper to set TS validity
  * 0f2df7d3615 etnaviv: add helper to get TS validity

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 17 Jul 2023 00:29:22 +0200

mesa (23.2.0~git2307121045.2c3b6243002~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 2c3b6243002 nvc0: backport fp helper invocation fix to 2nd gen
    Maxwell+
  * 0c778ec3c8e anv: Adds a workaround for HEVC decoding on some old
    platforms.
  * ad980dc699e ci: update fails for fixed tests due to llvmpipe linear
    changes.
  * a07fa6516b0 llvmpipe/linear: add support for rgba color buffers.
  * f96b6027a1a llvmpipe/linear: add support for sampling when cbuf
    order is different.
  * a3f586685db llvmpipe/linear: add sample routines for swapping r/b
    channels
  * 70f49c78cc7 llvmpipe/linear/tgsi: calculate num_texs properly for
    nir.
  * e43804ba65d llvmpipe/linear: refactor linear samplers into templated
    code.
  * 0230179f8b5 freedreno/ci: Update pixmark piano checksums
  * 69f8daca166 pan/mdg: Ingest new-style registers
  * 35030fc79c3 gallivm: Switch to reg intrinsics
  * fded7e7b66e nir: Remove nir_register-based unit tests
  * e96a9a1b71c nir: Remove nir_lower_regs_to_ssa
  * 9eab1e7521b nir/lower_shader_calls: Convert to register intrinsics
  * 002f8b657eb mesa: Convert PTN to register intrinsics
  * b55836a74df mesa: Return SSA defs from PTN ALU helpers
  * 5b835f1a08a mesa: Simplify ptn_log() a bit
  * 2198eedd045 gallium: Convert TTN to register intrinsics
  * a6d9f168ce1 gallium: Return SSA values from TTN ALU helpers
  * 61010e52554 nir: Add lower_vec_to_regs pass
  * aea8a702008 nir: Add intrinsics version of locals_to_regs
  * ae0408be1bd nir/from_ssa: Support register intrinsics
  * 29b2ace1845 nir/from_ssa: Make additional assumptions in coalescing
  * 36b29201faa nir: Produce intrinsics in lower_{phis,ssa_defs}_to_regs
  * 73e191924c0 nir: Add a reg_intrinsics flag to nir_convert_from_ssa
  * bcf3a622d1d nir: Add new version of lower_regs_to_ssa
  * 2eb554af482 nir: Add legacy data structures & helpers
  * d313eba94ef nir: Add pass for trivializing register access
  * 1d6c06e4b97 nir: Add helpers for walking register uses
  * 7229bffcb13 nir: Add intrinsics for register access

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 12 Jul 2023 11:16:18 +0200

mesa (23.2.0~git2307080326.6934f660357~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 6934f660357 ci/freedreno: document number of a630 devices available
  * 15cddb7035a ci/freedreno: re-enable a530 as it's now stable with
    multiple skips
  * 69a14f3f7db ci/freedreno: switch a630_{piglit,skqp} and a618_gl to
    Weston
  * 591ce8f185b add initial .git-blame-ignore-revs
  * 98ed583a6d7 clang-format: enforce formatting of egl
  * e85983d7726 egl: re-format using clang-format
  * f30081e5868 egl: prevent clang-format from reordering some headers
  * f2300eeb67a egl: protect the formatting in a couple of places
  * 659bace01a5 egl: add a few trailing commas
  * 35d8db96ed2 egl: change a couple of clang-format settings
  * f5eec48799b clang-format: add wayland foreach macros
  * d4575d7fcb1 clang-format: add egl foreach macro
  * 66a01b9377b ci/amd: switch all possible jobs from X11 to Wayland
  * a6740ee7a4d d3d12: Fix indexing of local_reference_state
  * 8166c1f8c1a intel/genxml: Drop incorrect compute aux-inv register
    entry
  * cc6c35518fe intel/genxml: Fix typo in CCS cache flush enable
  * a126ba0cbd0 iris: Use correct CCS0 aux-map register offset
  * c328638b3b2 anv: Use correct CCS0 aux-map register offset in pipe
    flush
  * 1fb94609137 anv: Program compute aux-map base address during queue
    init
  * b4ab4e85498 intel/genxml: Add COMPCS0 aux-table registers
  * 0908adf567a ci/windows: Re-enable Windows builds
  * ea3c73b33c6 microsoft/clc: Fix usage of nir_builder_at
  * 511116d6307 radv: Fix label name
  * 158813816e7 virgl/ci: fix skips definition
  * 5b2e672bb0b v3dv/ci: skip more tests that are timing out
  * fb7c9745141 v3dv/ci: fix skipping of vk tests
  * d5e01e67a4f vc4/ci: fix skipping of gles3 piglit tests
  * 975a8ecc881 frontends/va: use resources instead of views
  * 025dcbea661 d3d12: implementation for get_resources()
  * e4389fe0eec nouveau: implementation for get_resources()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 08 Jul 2023 15:23:19 +0200

mesa (23.2.0~git2307061823.6686a1e7ea4~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 6686a1e7ea4 zink: fix anv ci flakes (for real this time)
  * 1c29200a15e vk/wsi: add error logging for syncfile import/export
    failures
  * a69a4f393b0 vk/wsi: unify dmabuf exporting
  * 2b885b233f7 vk/wsi/x11: stop roundtripping on presentation
  * 36d5b583171 vk/wsi/x11: handle geometry updating more asynchronously
  * fb9f697fbb8 vk/wsi/x11: move surface alpha check from get_caps to
    creation
  * 776f258ddba zink: Free the cdt when an error occurs
  * 0a6dd797ea7 nir/opt_shrink_vectors: enable sparse intrinsics
    shrinking
  * c26c0a36d34 intel/fs: disable coarse pixel shader with interpolater
    messages at sample
  * 30163c59f70 rusticl: Drop Program::kernel_count
  * 3dde5c231e1 rusticl: Drop some Kernel data and have a NirKernelBuild
    ref instead
  * 005b41fd391 tgsi: uint -> unsigned
  * a42dc4ef5e5 tgsi: uint -> uint32_t
  * dcbca3e3b3f tgsi: use enum for interpolate-mode
  * 733ed06e940 tgsi: use enum for shader-type
  * e4b86e76cf7 tgsi: use enum for property-name
  * 5ccf63dc9d8 tgsi: use enum for tgsi-file type
  * 32f40b2e813 tgsi: use stdint.h types
  * a65da48b6cc tgsi: use enum instead of defines
  * e8114fe9a74 aux/util: uint -> unsigned
  * 284151262fd aux/util: use stdint.h types
  * 3f79b51dcd6 aux/util: use unsigned instead of uint
  * ae0df2a52fa aux/util: use enum for primitive-type
  * 70e153e8d08 aux/util: match type of
    pipe_draw_start_count_bias::start/count
  * 0f98f750db3 aux/util: use enum for render-condition
  * 647241a770c aux/pp: use unsigned instead of uint
  * 872719d15cf gallivm: use unsigned instead of uint
  * c3ec99bf9a5 pipebuffer: use unsigned instead of uint
  * d29bb6467e2 aux/trace: use stdint.h types
  * d941078129b math: drop MAT_[ST][XYZ] defines

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 Jul 2023 19:05:20 +0200

mesa (23.2.0~git2307032116.5be8f98f5ac~f~mesaaco5) focal; urgency=medium

  * New snapshot:
  * 5be8f98f5ac compiler/clc: Switch to use nir_foreach_function_impl in
    function nir_lower_libclc
  * 0dd0f35205c v3d/ci: add new flake
  * d2719c31777 d3d12: Video Decode - Refactor and style fixes
  * 5a8d8dad9a8 d3d12: Video Process - Implement get_processor_fence and
    async queing
  * c875028b028 d3d12: Video Encode - GPU wait on input surface fence
  * 9510c11c6fe d3d12: Video Decode - Sync 3D context copy with decode
    work for texture array case
  * 4b15eaeba8b d3d12: Apply style format to d3d12_video_dec.cpp
  * af0b4eacab7 d3d12: Video Decode - Implement get_decoder_fence and
    async queing
  * fb1783616e3 frontend/va: Add video processing async fence support
  * c78611c0ab6 frontend/va: Pass surf->fence in
    PIPE_VIDEO_ENTRYPOINT_ENCODE contexts for driver to wait on input
    surface pending work
  * 6b09f8f453e zink/ci: Add ext_transform_feedback@api-errors to fail
    list.
  * 94b92718d9f radv: Enable weak reference cache for device->mem_cache.
  * 3bd72eec1e4 radv: reference pipeline cache object in radv_pipeline
  * 05269047d3c intel: Use nir_builder_at
  * ed083055492 panfrost: Use nir_builder_at
  * 12a268ea813 microsoft: Use nir_builder_at
  * 8b606d53470 lavapipe: Use nir_builder_at
  * 47934ecf07c zink: Use nir_builder_at
  * b8486673a02 vc4: Use nir_builder_at
  * 364edfefe4e radeonsi: Use nir_builder_at
  * 977f385e656 r600: Use nir_builder_at
  * fba5c97bc1a etnaviv: Use nir_builder_at
  * 7f9e790d429 crocus: Use nir_builder_at
  * 2c413ed86f0 gallium,st: Use nir_builder_at
  * 79a37ceda09 freedreno: Use nir_builder_at
  * be45d4fa6ef spirv: Use nir_builder_at
  * 574079e354e nir: Use nir_builder_at
  * c1b472c834f glsl: Use nir_builder_at
  * 5c8c2ec85c6 v3d: Use nir_builder_at
  * 8ce27e7ed28 asahi: Use nir_builder_at

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 03 Jul 2023 22:13:01 +0200

mesa (23.2.0~git2307031645.b774d5f9d5e~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * b774d5f9d5e freedreno/fdperf: Use common device info helpers
  * a9c6f7ffdff vulkan/pipeline_cache: Introduce weak reference mode.
  * 47c9fba3221 vulkan/pipeline_cache: Move cache_object_unref out of
    header.
  * 44bfeb77d9f vulkan/pipeline_cache: Move locking outside of
    remove_object.
  * 64c959e46c7 vulkan/pipeline_cache: Do not consume object passed into
    remove_object.
  * 3774c3232c4 docs/features: update anv entries
  * eb0610c4012 Revert "ci: disable Collabora's LAVA lab for maintance"
  * d3b6635663f ci/microsoft: partly revert rename from container-rules
    to manual-rules
  * 80a140953d9 ci: when touching farms, never run manual jobs
  * ece34ec1276 tu/kgsl: Fix memory overwrite with
    vkFlushMappedMemoryRanges when more than 1 range
  * ae48fae658a aco: remove 64-bit integer conversion opcodes
  * 1194a3baa98 radeonsi: use nir_lower_conv64
  * b3b9b22c953 radv: call nir_lower_int64 later
  * 38cff03e58b radv: use nir_lower_conv64
  * 3d0e997e99e nir: split nir_lower_mov64
  * bd43d9e3d90 radv: Enable required subgroup size on mesh/task.
  * 34ace6688ac radv: Use required subgroup info for graphics shaders.
  * 8982bd60453 radv: Refactor required subgroup size in pipeline key.
  * b8fbce045e6 etnaviv: nir: do a late nir_opt_cse run
  * 8d49f66ee91 ci: disable Collabora's LAVA lab for maintance
  * 1fc98414b6b ci/traces: print version of apps used for replaying
    traces
  * ae69494be00 ci/apitrace: include version with LTO enabled
  * 40c7262c407 ci/traces: guard DXVK and VK behind VK_DRIVER
  * 28667995e4c ci: create manual farm rules
  * c9de0d29774 ci/microsoft: rename manual rules according to rest
    introduced rules
  * 4403797b716 ci/microsoft: uploading artifacts gets stuck currently
    (retried)
  * ea9f8c26bc9 docs(fix): remove last ref to i965 in features.txt
  * ee69c56c8ca sfn: indent fixes after switch to use
    nir_foreach_function_impl
  * 2b64f29f0fb sfn: Convert to use nir_foreach_function_impl
  * 8410468d230 llvmpipe: Convert to use nir_foreach_function_impl

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 03 Jul 2023 17:47:09 +0200

mesa (23.2.0~git2306291858.33ee59af1de~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 33ee59af1de radv: fix incorrect size for primitives generated query
  * 4f3890dd87b anv: move WA 1607854226 to use the WA infrastructure
  * 2bd2c03b0ee lavapipe: handle multiview queries
  * e81b5b972ec nir/validate: Assert txf(_ms) matches dimension
  * 5099137612c aco/optimizer: delete s_bitcmp optimization
  * 130fbda71b9 radv: set has_bit_test for aco
  * 44d0b785ccf nir/opt_algebraic: combine bitz/bitnz
  * 573e98f34ac aco: implement nir_op_bitz/bitnz
  * 6585209cdd9 nir/lower_bit_size: mask bitz/bitnz src1 like shifts
  * 481a34e82e4 nir: add single bit test opcodes
  * 9ca1bb3cf8f util/blitter: revert util_blitter_clear_buffer()
  * 625215dbe17 ci/fdno: Pause a660 testing
  * 68b8aa788dc intel/compiler: Switch to use nir_foreach_function_impl
  * 46df42c4e80 crocus: Switch to use nir_foreach_function_impl
  * e1bf96dd567 glsl: Remove the extra scope in gl_nir_link_uniforms.c
  * dcf9cfd2973 glsl: Switch to use nir_foreach_function_impl from
    nir_foreach_function
  * 4a8ec0db90c d3d12: Switch to use nir_foreach_function_impl
  * 99dce8407e5 asahi: Use nir_foreach_function_impl instead
    nir_foreach_function in function agx_nir_lower_zs_emit
  * a4342177204 gallium/auxiliary: Switch to use
    nir_foreach_function_impl
  * a8d669b5931 nir/split_64bit_vec3_and_vec4: Use the right number of
    components
  * d3003b0a413 Revert "isl: Set Depth to array len for 3D storage
    images"
  * 2e8c0a33e77 anv: implement storage image depth query using
    descriptor buffer read
  * a7ccba2dfd1 v3dv: fix blit path for compressed image to buffer
    copies
  * 599e76617da v3dv: use div_round_up for division by block size
  * a1fda29bd1d anv: look into batch bo reloc list looking for BOs to
    decode
  * 5f7fb0a720c clang-format: Add nir_foreach_function_impl into
    src/.clang-format
  * 62ce223245c treewide: Switch to use nir_foreach_function_with_impl
    when possible
  * b91bff3537f clang-format: Add nir_foreach_function_with_impl into
    src/.clang-format
  * fde6b51749a nir: Split macro nir_foreach_function_with_impl out of
    nir_foreach_function_impl
  * afa79cd9b88 nir: use imm-helpers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 29 Jun 2023 20:10:26 +0200

mesa (23.2.0~git2306251752.c421ecea56e~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * c421ecea56e vulkan: Update XML and headers to 1.3.255
  * 73af0475cbd vulkan: Add NV suffix to VK_NV_cooperative_matrix
    feature names
  * 07597596588 rusticl/program: skip linking compiled binaries
  * 18f1087a21c rusticl: bump bindgen requirement
  * 5b29463746d nir: Add function nir_function_set_impl
  * 9fa38cf1427 vtn: Do not assign main_entry_point->impl twice
  * 0d9f474381b draw: Update the comment and function name to match the
    type
  * e7f0dd27107 draw: Replace usage of ubyte/ushort/uint with
    uint8_t/uint16_t/uint32_t in draw_pt_vsplit.c
  * f35ebd221f5 draw: Replace usage of boolean/TRUE/FALSE with
    bool/true/false in draw_pt_vsplit*
  * fbe9a7ca3e7 rusticl/mesa: create proper build-id hash for the disk
    cache
  * 29b932512a8 rusticl/meson: extract common bindgen rust args
  * c8963738896 rusticl: generate bindings for build-id stuff
  * d14af004321 rusticl: structurize and reorder mesa binding args
  * 337908440ee v3dv: replace boolean and uint with bool and size_t
  * fa8a2326910 docs/coding-style: add pre-commit hook fallback for
    clang-format
  * 270d898e754 docs/coding-style: add example emacs config for clang-
    format
  * 342196f7b05 docs/coding-style: add example vim config for clang-
    format
  * 89873e5e5ce r300: properly count maximum used register index
  * 561cce32f14 anv: Only expose video decode bits with
    KHR_video_decode_queue
  * 727335045dd anv: Pipe anv_physical_device to
    anv_get_image_format_features2
  * 02aaf589083 nv50/ir/nir: set numBarriers if we emit an OP_BAR
  * 69c452781b3 nvc0: fix printing shaders
  * 45d86b419bf rusticl/program: add debugging option to disable SPIR-V
    validation
  * 2b2a5138900 rusticl/program: add debugging for OpenCL C compilation
  * 2362fd502bb docs: document CLC_DEBUG
  * 1b3669a1ed3 intel: Initialize FF_MODE2 on all Gfx12 platforms
  * 427fee35079 intel/gfx12.5: Enable L3 partial write merging for
    compressible surfaces among other cases.
  * d7ec6f17246 ci/fastboot: use gzipped Image to avoid compressing on
    the runner
  * 7d3c29dc600 frontends/va: fix some coverity scan reported issues
  * dc93f205c11 meson: Explicitly add "check : false" to a couple
    instances of run_command

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 25 Jun 2023 21:00:45 +0200

mesa (23.2.0~git2306212059.df6749ed569~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * df6749ed569 radv: inline radv_can_enable_dual_src()
  * 8b73109a938 radv: remove redundant intermediate variable in
    radv_is_mrt0_dual_src()
  * 2a1d97e3fcf dzn: Ignore export access parameters
  * 63f44951ac4 asahi: drop unnecessary DRM_FORMAT_MOD_{LINEAR,INVALID}
    fallbacks
  * cfa7eec06c7 aco: don't set exec_hi for wave32 scan reductions
  * 5d03bbc91d1 pvr: Fix csb control stream extension
  * 5336cbff3bd intel/fs: Constant propagate into SHADER_OPCODE_SHUFFLE
  * b902fb2e14e pvr: Fix dynamic offset patching
  * 4071b8e7f32 pvr: Fix barrier insertion on merged subpasses
  * 822dc384b13 pvr: Fix seg fault on empty descriptor set
  * 9d75795087c radv: Move most of DB_SHADER_CONTROL to PS, more precise
    GFX11 blend WA
  * b687cbe36c1 isl: add surface creation reporting mechanism
  * 75074414302 isl: assert on gfx8 condition that should not be met
  * 31cc7a18876 isl: assert on gfx7 condition that should not be met
  * 4616aa2fac2 isl: assert on gfx6 condition that should not be met
  * 7cf7ea25002 zink: radv vangogh ci updates
  * 1ca87a300dd zink: always clamp NUM_QUERIES to 500
  * 0e32de0aed7 zink: recache present semaphores
  * 6b204c61622 zink: acquire persistently bound swapchain descriptors
    before setting usage
  * 98031749421 zink: fix ubo array sizing in ntv
  * 240b419c03a vulkan/video: consider removed bits when calculating the
    size of comsumed data.
  * a28994f73c7 util/rbsp: keep track of removed bits for the emulation
    prevention three bytes.
  * 6f2e260d2bf vulkan/video: move parsing longterm rps in h265 slice
    parsing.
  * b10631865d8 vulkan/video: adds more conditions for setting
    loop_filter_across_slices_enable in h265 slice parsing.
  * 48b32124c61 radv/rt: Store the prolog outside the shaders array
  * ebe4e337fda radv: Use _mesa_shader_stage_to_string for executable
    name
  * 334a20ae28a radv: Implement executable properties for ray tracing
    stages
  * bf5b74c3bae radv: Use get_shader_from_executable_index for
    executable properties
  * 8a5c4b3ebf8 radv: Adjust the traversal shader description
  * eeae2fb5c4c radv: Move the shader type to radv_shader_info

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 21 Jun 2023 21:57:48 +0200

mesa (23.2.0~git2306202011.414576aad54~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 414576aad54 zink: fix anv ci flake wildcarding
  * c15b2491ec0 zink: ZINK_HEAP_HOST_VISIBLE_CACHED ->
    ZINK_HEAP_HOST_VISIBLE_COHERENT_CACHED
  * 7a169254c51 zink: add COHERENT requirement for CACHED memory
  * 59a72570b66 compiler: Move spirv into a module of its own
  * 2af68d157b3 isl: Add and use size and alignment calculators
  * 68f7c538142 aco/gfx10+: use v_cndmask with literal for reduction
    identity
  * 71d30bcede5 aco: combine scalar mul+pk_add to pk_fma
  * 6db61d0dc07 aco: use uses helpers for pk_fma opt
  * 532407094a0 radv: use wave32 for small workgroups
  * b765a27d73b radv: refactor CS subgroup size determination
  * 41d8837e89c radeonsi/vcn: update luma and chroma size
  * 1359e806f25 radv: advertise VK_EXT_depth_bias_control
  * 266b2cfe5bf radv: implement VK_EXT_depth_bias_control
  * 0432a748ee0 vulkan/runtime: call CmdSetDepthBias2EXT() from
    CmdSetDepthBias()
  * ae7d904a73b r600/sfn: Implement source mod optimization in backend
  * da92733d5a9 r600/sfn: add source and dest mod info to opcode table
  * 2f6ded1098a r600/sfn: allow source mods for per source with multi-
    slot ops
  * 0ff3c4bef21 r600/sfn: drop use of nir source mods
  * 47152b6c09b r600/sfn: Fix typo
  * bd93d6b2fba virgl: don't allow vertex input arrays on GLES hosts
  * a2d40c09b72 zink, drirc: Add Borderlands 2 workaround to fix spir-v
    1.6 translated discard
  * 1dade03b1fa etnaviv: remove not used tgsi includes
  * c784a3db7fe etnaviv: drop usage of tgsi_swizzle_names
  * c9ced5abde1 etnaviv: remove tgsi remains
  * ab6aa14f427 v3d: clear alpha-only as red-only
  * 91c56020264 gallium/util: fix color clamp for alpha-only formats
  * e1d7861dd69 isl: handle DRM_FORMAT_MOD_INVALID in
    isl_drm_modifier_has_aux
  * b8f8146c6e4 gallium: Remove unused os_process.h in gallium/auxiliary
  * 3851a655796 dd: Replace the usage of os_get_process_name with
    util_get_process_name in dd_draw.c
  * e287d39f4dd zink: Replace the usage of os_get_process_name with
    util_get_process_name

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 20 Jun 2023 22:03:13 +0200

mesa (23.2.0~git2306161852.94d827332f3~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 94d827332f3 dri: Replace usage of boolean/TRUE/FALSE with
    bool/true/false
  * 7f3874981dd radv/rt: Enable RT pipelines on GFX10_3+ excluding
    vangogh
  * 49b400423ce Revert "radv: Enable ray tracing pipelines by default"
  * b49afd6ce24 radv: Add the BOs of all shaders in a RT pipeline
  * 99e44cc527d aco/opcodes: delete wrong comment copy pasted from NIR
  * fe3993447d4 aco: remove v_cvt_pkrtz_f16_f32_e64 when it's actually
    VOP2
  * 49bdc3a1c2c aco/opcodes: move v_cndmask_b32 back to the VOP2 list
  * 89c86af39e6 aco/spill: Use arena allocator for spills
  * 73835f4b099 aco/spill: Use arena allocator for next use distances
  * b3aae9c5568 nouveau: eliminate busy waiting on fences
  * 8f2680871da anv: convert most pc in genX_cmd_buffer to use pc helper
  * 9f3b51255a7 anv: change most pipe controls in gfx8_cmd_buffer to use
    pc helper
  * b3589a88992 anv: change pipe control in indirect draw gen to use pc
    helper
  * 6a7dcd3e12f anv: change pipe controls in genX_gpu_memcpy to use pc
    helper
  * e70cf3ea988 anv: change pipe control in genX_pipeline to use pc
    helper
  * c232269db43 anv: change pipe controls in genX_state to use pc helper
  * 6dc95685f3b anv: convert genX_query pipe controls to use pc helper
  * d8c76f88441 anv: implement invalidate part of
    emit_apply_pipe_flushes with helper
  * 9f6f69e0f9b anv: implement flush part of emit_apply_pipe_flushes
    with helper
  * c3658f5a5d3 anv: wrap pipe control emission to a set of helper
    functions
  * 1ad79cb84fc virgl: Fix stack overflow in virgl_bind_sampler_states
  * 0e726c63ff8 radv: add dgc_emit_index_buffer()
  * a842f37dff7 radv: add dgc_emit_draw_indexed() helper
  * 0551c54dff9 radv: add dgc_emit_draw() helper
  * bb24e17d445 radv: add dgc_emit_vertex_buffer() helper
  * be05e0e7a45 radv: add dgc_emit_push_constant() helper
  * cc3a9b90a97 radv: add dgc_emit_state() helper
  * 1d0c18ba3b2 radv: remove unused radv_dgc_token struct
  * 562e890f2c6 ac/radeonsi: add av1 defaults header file from radeonsi
  * b7f37265ac2 lavapipe: correctly update shader object per-stage push
    constant sizes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 16 Jun 2023 20:16:48 +0200

mesa (23.2.0~git2306121840.3aa1aed2370~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 3aa1aed2370 radv/ci: Test ray tracing on vkd3d-proton
  * bbd42840169 Revert "glx: Remove pointless GLX_INTEL_swap_event
    paranoia"
  * 1980934d0d1 nouveau: fix nouveau_heap_destroy() memory leak
  * d0e0ba897fd anv: split ANV_PIPE_RENDER_TARGET_BUFFER_WRITES for
    finer grained flushing
  * 06b436e51e2 anv: add query tracepoints
  * 9de81344107 aco: Fix assert in insert_exec_mask
  * 3ea01b86f0a aco: Fix live_var_analysis assert
  * 7f3cfcc96a1 aco: Reset scratch_rsrc on blocks without predecessors
  * 67a0f2532fd aco: Mark exec write used when it writes other
    registers.
  * da4b27452b3 rusticl/event: ensure even status is updated in order
  * e7d336bb85d rusticl/api: remove some repr(C)
  * 30559a399b9 rusticl/icd: fix ReferenceCountedAPIPointer::from_ptr
    for NULL pointers
  * e358173fbfd iris: Add GET_PARAM for protected context capability
    support
  * 937325137ed drm-uapi: bump headers (except AMD)
  * a4bb6d7c722 anv: remove BDW specific WA for CS stall enable
  * 386c7a5158a radv/ci: use the low-priority runners for vangogh jobs
  * 43d83cd0d89 ci/b2c: select the DUT to run on by name
  * 926e97d5df2 r600/sfn: Remove duplicate assignment
  * 12b816ce79c mesa/st: discard whole resource when mapping drawpixels
    texture
  * 1a975bc278f lp: align memory for long16 CL types
  * 8e7d434b8cd etnaviv: query: optimize context flushes
  * 5ef6da21d91 etnaviv: query: correct max number of occlusion query
    samples
  * 3d98e9c2e0c etnaviv: query: correct max number of perfmon samples
  * f33a4fa6025 etnaviv: query: remove incorrect comment
  * b6a4b988abf etnaviv: query: reset sample count on begin_query
  * 22d5d1bc404 etnaviv: query: move sample counter manipulation into
    query providers
  * 4452216a280 radv: Use RESET_FILTER_CAM for some mesh shading draws.
  * 4181e144eff radv: Always flush before writing acceleration structure
    properties
  * 31fb75a08b0 ac/llvm: set +cumode for radeonsi
  * 19196199a8a ac: Replace the usage of pipe_compare_func with
    compare_func

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 12 Jun 2023 19:47:40 +0200

mesa (23.2.0~git2306101200.51cd2965c71~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 51cd2965c71 aco/rt: Do not initialize the next shader addr
  * 4bf3d7d8cf2 radv/rt: Clear NIR metadata after lowering the ABI
  * b577f8b547f radv/rt: Do not guard the raygen shader
  * ed3f23029be ac/llvm: replace MESA_SHADER_COMPUTE checks with
    gl_shader_stage_is_compute
  * e65f561a75c ac/llvm: support vec2 on b2i16
  * 5ae953b5e97 radv: disable calibrated timestamps on raven/raven2
  * e1d948b6a24 frontends/va: Fix missing unlock
  * bb3cf3ff8ee zink/ci: remove spec@nv_shader_atomic_int64@* from the
    fail lists
  * 0ce595a89a7 intel: use generated helpers for Wa_1508744258
  * 256f64dc456 ci/android: remove the artifact file just as we unpack
    it
  * 32007270b52 ci/lava: rename rest local MINIO_ variables to S3_
  * 78aaec836a9 ci: remove BUILD_PATH, always use S3_ARTIFACT_NAME
  * 2af371b3f31 ci: replace MINIO_RESULTS_UPLOAD with S3_RESULTS_UPLOAD
  * deba02fddff ci: rename MINIO_HOST variable to S3_HOST
  * 7b6629a6943 ci: rename MINIO to S3
  * e1737c46b96 ci: rename S3 artifacts according to scheme mesa-$arch-
    $config-$buildtype
  * d4670eea0f2 ci: explicitely state BUILDTYPE
  * 40042ed25ae nir: Rematerialize derefs after opt_dead_cf
  * fb8c48f4fcc anv: allow intel_clflush_range only on igpu
  * 26f6ea5c304 intel/compiler: Remove unused functions and declarations
  * 8f4b9ed4d8a CODEOWNERS: add r300 driver
  * 62e0f6bf328 etnaviv: Add support for conditional rendering
  * a603413eb8a etnaviv: optimize transfer flushes
  * 64fda091de9 aco: Lower divergent bool phis iteratively
  * ba27071c8bc agx: Fold addressing math into atomics
  * 13535d3f9dd agx: Refactor expressions in agx_nir_lower_address
  * 5a55ef2fd13 nir: Add AGX atomic intrinsics
  * 06f4608c5b4 ir2: Drop lower_locals_to_regs call
  * 10fb9de9f68 lima: Drop lower_locals_to_regs call
  * 03175f61fc2 pan/mdg: Drop lower_locals_to_regs call

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 10 Jun 2023 15:13:26 +0200

mesa (23.2.0~git2306080917.75b63a5d3e4~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 75b63a5d3e4 r600/sfn: Fix warning about overloads hiding virtual
    functions
  * 1eda220f18e compiler: use align instead glsl_align and remove
    glsl_align
  * 4134f9ac095 util: Do not use align as variable name
  * 586391720b3 util: use uint32_t as the parameter of align function
  * 9ce8ff9bb1e util: Remove redundant type cast in function align64
  * 93f047b6ffa gallivm: Zero initialize param structs
  * a2159dfe8aa gallivm: Handle invalid image format/op combinations
  * 1841dd7549c gallivm: Add lp_img_op_from_intrinsic
  * 6a0383e518f gallivm: Add lp_build_nir_sample_key
  * 9d3dbc6400e llvmpipe: Add lp_storage_render_image_format_supported
  * cfb37e73833 llvmpipe: Add lp_storage_image_format_supported
  * fbe7c970f69 llvmpipe: refactor out the pipe->lp_jit structure
    fillers.
  * c3c9e28131e gallivm: Cast read_first_invocation source to an int
  * 3101f900a02 gallivm: Fix anisotropic sampling with num_mips=1
  * d99dca86ceb lavapipe: ignore another yuv format.
  * da54b57888c radv/video: fix hevc scaling lists.
  * 3f12103be96 radv/video: fix hevc st rps programming
  * f0597a1514b radv/video: rework h265 reference frame bindings.
  * b8191cd6030 radv/video: don't supply an 8-bit format for a 10-bit
    dpb.
  * b2e1e17ff66 radv/video: convert session memory requirements to
    outarray.
  * 28f2a6b2813 radv/video: convert video format properties to an
    outarray
  * d0d7dda8293 radv: fix non-square compressed image copy on gfx9
  * 8616c0a52c7 rusticl/event: flush queues from dependencies
  * 86dd5dd8530 rusticl: bump rust req to 1.60
  * e285a05c2a2 doc/rusticl: add Rust Update Policy
  * 19092576ce3 u_format: Use memcpy to avoid unaligned accesses
  * 96cf4531e11 Revert "gallium/u_threaded: buffer sharedness tracking"
  * 965503ae220 anv: allow binding tables allocations on compute only
    queues
  * b1faeae4fe8 draw: repack some members of context.
  * 73f79482986 draw: add a max stage define and use it in a few places

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 08 Jun 2023 10:06:44 +0200

mesa (23.2.0~git2306040242.bfb092b9555~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * bfb092b9555 nv50: Fix memory leak in error path
  * 87ac5d7d0a1 nir: Remove unnecessary assert in nir_before_src
  * ee2764d5e86 nir: Rematerialize derefs in use blocks before repairing
    SSA
  * cf323446e70 amd/ci: run gl(es) cts & piglit on radeonsi on vangogh
  * 070d02b04b4 docs: Update document about pipe_prim_type with
    mesa_prim
  * 12256136e0c compiler: Rename shader_prim to mesa_prim and replace
    all usage of pipe_prim_type with mesa_prim
  * 5393156da4d compiler: Add SHADER_PRIM_COUNT to be SHADER_PRIM_MAX +
    1
  * e4b6a0a8245 compiler: Getting shader_prim to be PACKED that
    consistence with pipe_prim_type
  * fcef3f040be microsoft/compiler: Getting function impl to be
    consistence with decl in dxil_enums.*
  * 9ca0bdba01b intel/tools/error2aub: Fix potential out of bounds read
  * 39e057028cb vulkan/wsi: fix double free on error condition
  * d22a86c77c5 iris: Implement external object implicit syncronization
    for Xe kmd
  * ba373a298da iris: Add iris_implicit_sync struct and functions to do
    implicit synchronization for Xe kmd
  * f26467a3432 iris: Extend iris_bo_wait_syncobj() to wait on external
    implicit syncobj
  * 8971a878c7f iris: Add functions to import and export implicit sync
    state
  * d0a3a055438 iris: Attach a dma-buf to bo flink
  * 127bdefe503 iris: Store prime fd of external bos for Xe KMD
  * c1ac4ea13e2 hasvk: Use intel_ioctl() helper for GEM_SET_TILING
  * 4a2655d084c anv: Use intel_ioctl() helper for GEM_SET_TILING
  * 16cc0c0eda1 intel/dev: Use intel_ioctl() helper for GEM_SET_TILING
  * 2d3c1707fa5 iris/bufmgr: Use intel_ioctl() helper for GEM_SET_TILING
  * 5140ff19484 ci: rename x86 and amd64 to x86_64, armhf to arm32, and
    i386 to x86_32
  * 653a3741261 dzn: Fix incremental binding of VBs
  * fb722ca6fff dzn: Don't create D3D objects for secondary command
    buffers
  * ec9efee9070 anv: Remove alignment to aux ratio on size of main
    surface
  * d2b6f16145d anv: Support 1MB AUX mapping (MTL)
  * a98f2468574 isl: use generated workaround helpers for Wa_1806565034
  * 3a5a7203af4 rusticl/device: set preferred vector size of doubles if
    fp64 is enabled
  * d1b17a5edcd pvr: Implement ZLS subtile alignment
  * 620e7d4cf25 pvr: Rename ds_{image,iview} in
    pvr_gfx_sub_cmd_job_init()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 04 Jun 2023 21:55:37 +0200

mesa (23.2.0~git2305301624.b50c9ba6922~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * b50c9ba6922 zink: do not lower line-smooth for non-lines
  * ffc77d52629 zink: compute correct location for line-smooth gs
  * 955a6ffa6e4 zink: keep gl46_optimal extensions/features sorted
  * c6ef6a39cc4 zink: explicitly avoid ci errors due to unrecognized
    extensions in VVL
  * bf97afa2ab5 zink: update profiles schema
  * 76a82c3ac9d nir/opt_if: use nir_alu_instr_is_comparison directly
  * 94958e637d1 aco: improve printing of s_delay_alu
  * 54c0088629f aco: insert s_delay_alu on the linear CFG
  * d7f48a61ece aco: use pass_flags to recover s_delay_alu cycles
  * d9cdb3524a3 aco: fix update_alu(clear=true) for exports
  * a63a38aeafd d3d12: HEVC Encode - Fix num_subregions_per_scanline
    rounding
  * 3fc24c64e18 pvr: Fix page faults in occlusion query tests
  * 43f0fef92f4 pvr: Handle barrier load and store flags.
  * a04f244c0c0 pvr: Reorder execution in pvr_cmd_buffer_end_sub_cmd()
  * 173df8f15d5 pvr: Fix out of range stream errors for geometry-only
    jobs on pvrsrvkm
  * dae68cf4aa7 pvr: Do not free deferred pvr_transfer_cmd instances
  * 85fa24e0614 pvr: Rename shadowing loop variable in
    pvr_add_deferred_rta_clear()
  * 6e6cd3eb3a4 pvr: Use correct surface for deferred RTA clear
  * 0be6f8b5c17 pvr: Correct error flow in
    pvr_compute_pipeline_compile()
  * a49a2f87658 pvr: Correct error flow in
    pvr_graphics_pipeline_compile()
  * 9bfd3997b4e pvr: Fix memory leaks on realloc failure in
    pvr_pipeline.c
  * 4af6a9507f4 pvr: Fix allocation scopes in vkCreateRenderPass2() code
    path
  * 4c0541abb3e v3d: only warn about bining sync for indirect draw once
  * 5731ebac404 anv: override vendorID for Cyberpunk 2077
  * 96c33fb0270 anv: enable direct descriptors on platforms with
    extended bindless offset
  * 26e2436823d anv: ensure descriptor addresses are used with bindless
    stages
  * 0502a92199b anv: descriptor binding for direct descriptors
  * a8ef34bd31a anv: bring back the max number of sets to 8
  * 06dfd216d35 anv: add direct descriptor support to apply_layout
  * 1d24d0bdcc8 anv: track descriptor data size

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 30 May 2023 16:53:55 +0200

mesa (23.2.0~git2305281526.744e9cb2132~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 744e9cb2132 gitlab: add template for merge requests
  * b3b883ca00b bin/ci: mention requirements.txt
  * 92a7cba4f26 intel: Sync xe_drm.h
  * 264cf37348f radeonsi: re-enable fp16_rtz for compute blits to fix
    PBO tests on gfx11
  * cc199c2baa9 radeonsi: update test results and flakes
  * c5806422a53 radeonsi: reduce the supported compute grid size
  * ebb784f2683 radeonsi/gfx11: use DISABLE_FOR_AUTO_INDEX to disable
    non-indexed prim restart
  * 1f90a2be60a radeonsi: move emitting draws states out of
    si_emit_all_states
  * 9d7eab2ab17 radeonsi: don't enable WGP_MODE because of high cost of
    workgroup mem coherency
  * 038fb6573a8 radeonsi: remove the gl_SampleMask FS output if MSAA is
    disabled
  * 7b95be35752 radeonsi: cosmetic changes in si_shader.h
  * b914c2601c4 radeonsi: reorder code in si_texture_create_object as
    preparation for the future
  * dcbe4b89eaa radeonsi/gfx11: fix alpha-to-coverage with blending
  * 2f6665efc54 ac/llvm: use LLVM 0/1 constants from ac_llvm_context
    instead of LLVMConstInt
  * 39da12b7c7c ac/llvm: clean up visit_load_local_invocation_index and
    visit_load_subgroup_id
  * 1dd2fa01c72 ac/llvm: clean up translation of
    nir_intrinsic_load_invocation_id
  * ea7c89d1f57 ac/surface: move determing ADDR_FMT_* into a helper
    function
  * 78d5626d177 ac/surface: move CB format translation helpers here
  * 8642740aef5 ac/gpu_info: give has_msaa_sample_loc_bug a more
    accurate name
  * 587ad3430dd ci/windows: Update WARP to 1.0.7
  * 0373b02cf6b dxil: Don't run opt_remove_phis before lower_returns
  * cc136cacfa4 radv: Don't run opt_remove_phis before lower_returns
  * 505b81b8c10 nir: Add undef phi srcs when adding successors
  * 5d238c0c2cd nir_lower_returns: Optimize phis before beginning the
    pass
  * a1b27c364ff panfrost: rename *.cc files to *.cpp
  * 63c3768cf38 panfrost: fix formatting of a couple of files that were
    missed
  * 480204aeed3 ci: show diff when clang-format check fails
  * 648b5f30706 ci: split clang-format list of folders for easier
    maintenance
  * 564562eb050 mesa: Implement GL_CLEAR_TEXTURE flag
  * d240a630e79 wsi/display: drop unused parameters from local functions

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 28 May 2023 16:23:52 +0200

mesa (23.2.0~git2305241128.3ba839bf734~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 3ba839bf734 v3dv: align compressed image regions to block size
  * 74e797e6ba6 v3dv: allow TFU transfers for mip levels other than 0
  * 1cb2d2a5eed v3dv: store slice dimensions in pixels
  * b439bd5a584 radv: do not enable VRS flat shading if the VRS builtin
    is read
  * 1a8dd84ec61 nir: Propagate the type sampler type change to the used
    variable.
  * f4aa99f0da8 radv/video: add missing space checks for video.
  * 3a9e8a4d730 mesa: validate shader binary format in
    _mesa_spirv_shader_binary
  * 688f03e3699 iris: use COMPUTE_WALKER post sync field to track
    compute work
  * 521c216efcc anv: use COMPUTE_WALKER post sync field to track compute
    work
  * ddc37cf430b anv: move timestamp vfunc initialization to genX code
  * 7f5613903c2 docs/features: fix empty line error
  * 613eb64011a iris: add required invalidate/flush for Wa_14014427904
  * 60b0d2c2cbe anv: add required invalidate/flush for Wa_14014427904
  * abcef5a4769 intel/dev: provide helper to check if devinfo is ATS-M
  * b43e5aec0d2 freedreno/batch: Move submit bo tracking to batch
  * 5d26070f086 freedreno/a6xx: Optimize max_indices calculation
  * f4fc45d63df freedreno/a6xx: Template specialization for pipeline
    type
  * 778cdb156e7 freedreno/a6xx: Template specialization for draw type
  * 15c66adc8a6 mesa: Skip update_gl_clamp() if samplers need clamp
  * 3e44b14af84 broadcom: Fix slice memory allocation logic for
    compressed textures
  * fe973222a9a broadcom: Add support for
    VK_FORMAT_A2R10G10B10_UNORM_PACK32
  * cb60ca3b1d6 docs: update calendar for 23.1.0
  * 7fe482d4ce4 docs: add release notes for 23.1.0
  * 622779e5cbc dxil: Rely on scoped_barrier
  * e3676176680 ac/nir: fix slots in clamping legacy colors
  * dd0469e4014 lavapipe: VK_EXT_pageable_device_local_memory
  * 54c981e4a02 lavapipe: store memory allocation size onto
    lvp_device_memory
  * 0c79c04f49a lavapipe: EXT_memory_priority
  * 1c42056ee12 lavapipe: EXT_memory_budget
  * 2111a3fcdb6 lavapipe: report full memory in heap for 64bit processes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 24 May 2023 14:44:37 +0200

mesa (23.2.0~git2305191551.1fc40c081eb~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 1fc40c081eb mesa/program_cache: remove unused shader-cache functions
  * a0683e243a1 mesa/main: compile ff_fragment_shader as c-code
  * e607a89f22f mesa/main: ff-fragshader to nir
  * a37051304a4 compiler/nir: move find_state_var to common code
  * 5e997beeb75 mesa/st: allow using nir for ff-fragment shaders
  * 793840937fc mesa/st: refactor st_translate_fragment_program
  * 30d9be1f9f6 mesa/main: clean up white-space in
    ff_fragment_shader.cpp
  * 185001a86fb meson: remove needless c++17-overrides
  * 886ad3b4ec1 pvr: fix array overflow in
    pvr_device_tile_buffer_ensure_cap()
  * b83ce03a7d1 radv: reserve cmdbuf space in
    radv_flush_gfx2ace_semaphore()
  * a1b88c06647 ci: rework vkd3d-proton runner and fix detecting
    failures
  * 5a2a042ec72 ci: stop using the hang-detection tool for vkd3d-proton
  * bec100f9b5b ci,radv: use drm-shim instead of the null winsys for
    radv-fossils
  * 66a33888f06 ci: build drm-shim in debian-testing
  * 9f9feda85f1 amd/drm-shim: update README about which file to modify
  * 400434e5ea2 amd/drm-shim: add bonaire
  * 9234558a60a amd/drm-shim: add pitcairn
  * 714ae976692 amd/drm-shim: add navi21
  * e5536173dc0 anv/ci: Add tests for video formats to the failing
    tests.
  * 60f871dc9ef anv: enable the video h265 decode extension.
  * a64ae20d0f0 anv: support HEVC 10-bit decoding
  * ad02e21ad20 anv/image: get width/height for each plane of a surface
    for video decoding.
  * 50374b1f9a2 anv: support P010 format for video 10-bit hevc decoding
  * 8d519eb5f59 anv: add initial video decode support for h265
  * 91235092ab3 anv/image: allow VK_IMAGE_CREATE_ALIAS_BIT with a
    private binding.
  * 23c338af5d8 anv/image: allocate mv storage buffers for h265
  * b4b31828e02 anv/image: Add a surface usage bit for video decoding
  * b08614b96ba vulkan/video: add h265 reference structures and relevant
    util functions.
  * efdcacb230c vulkan/video: add to parse h265 slice.
  * c78c5466e42 util/vl: initialize data/end pointers.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 19 May 2023 17:22:48 +0200

mesa (23.2.0~git2305162009.c0a39545386~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * c0a39545386 pvr: Transfer add s8_uint support
  * b5aff655607 pvr: Transfer add depth merge support for X8_D24
  * 71ca4412298 pvr: Add PBE packmode for depth stencil formats
  * b106752782d pvr: Add back S8_UINT support
  * d8bd30d9b24 pvr: Transfer multiple emits clip rectangle
  * 9bce479efc7 pvr: Transfer fix blit with multiple emits
  * 48bf9c736f9 pvr: Use original binding numbers instead of reassigning
  * bac048e1dfe pvr: Add missing NULL checks in some vkDestroy...()
    functions
  * 7cb77cb089c pvr: Transfer PBE gamma is unset
  * 9fccc25bdf1 pvr: Transfer PBE source snorm format should be signed
  * a495cdb09ee pvr: Allow block compressed source blit
  * b59eb30e886 pvr: Fix cs corruption in pvr_pack_clear_vdm_state()
  * 27d55436173 tu: Use common GetPhysicalDeviceFeatures2
  * 4aea3fb3dd2 lvp: Use common GetPhysicalDeviceFeatures2
  * 1ec09769014 radv/ci: document more flakes for navi21
  * 47f08019495 zink: Move the workaround before the EDS setting.
  * 6ee0bba3ae6 crocus: fix scratch_bos memory leak
  * e2e6adbe378 pvr: switch pvr_spm to use pvr_bo_suballoc
  * 983f98d8581 pvr: switch pvr_clear to use pvr_bo_suballoc
  * 073bdbdea75 pvr: switch pvr_descriptor_set_create to use
    pvr_bo_suballoc
  * 547a10f8702 pvr: switch pvr_cmd_buffer_alloc_mem to use
    pvr_bo_suballoc
  * 42d10112169 pvr: switch pvr_gpu_upload_* to use pvr_bo_suballoc
  * 06c6cfc55b0 pvr: introduce suballocator for internal allocations
  * 882fd3c522a radv: small fix for
    VkDescriptorSetVariableDescriptorCountLayoutSupport
  * cd406eae7db mesa: set a type for depth fallback texture
  * e0c3324695c drm-shim: Use anonymous file for file override
  * 730834aa6b3 drm-shim: Set file type in readdir()
  * c1cb168888e ac/llvm: remove redundant nir_lower_legacy_atomics
  * 4fb3133cdf2 radeonsi: fix aco compile for atomic ops
  * 8cc7ad48d5c ac/llvm: remove the double frcp special handling

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 16 May 2023 20:42:04 +0200

mesa (23.2.0~git2305111523.5a80bf2eb04~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 5a80bf2eb04 agx: Optimize multiplies
  * c2793a304d4 agx: Fix packing of imsub instructions
  * 8289fa253bc agx: Handle imadshl_agx, imsubshl_agx
  * 18e19882fa6 nir: Model AGX-specific multiply-shift-add
  * 3df4ae33343 agx: Use nir_alu_src_as_uint
  * 445e2f16200 pan/bi: Use nir_alu_src_as_uint
  * 0eb5f8e7654 nir: Add nir_alu_src_as_uint helper
  * 73814050959 anv: fixup workaround 16011411144
  * 5a7520d2529 egl/loader: move crtc resource infrastructure as common
    helper
  * 2a1e6a140da aco: also reassign p_extract_vector post ra
  * c1cf40da8a5 aco: Assert that operands have the same byte offset when
    reassigning split vectors
  * d3f06cf5ce0 vulkan/pipeline_cache: don't log warnings for internal
    caches
  * b4b17f8aaac Revert "intel/compiler: make uses_pos_offset a tri-
    state"
  * 728e3168647 v3d/ci: annotate failures
  * df387306d6b amd/drm-shim: add amdgpu drm-shim
  * 0b6283e2e6b drm-shim: apply file overrides for open
  * e169a402a8c microsoft/compiler: Do basic I/O analysis for dependency
    tables
  * 8ff95b766d3 microsoft/compiler: Allocate space for I/O and viewID
    dependency tables before instruction processing
  * 63904240f21 tu: Re-enable bufferDeviceAddressCaptureReplay
  * d2f9346d9d5 tu: Move queue deletion to last
  * 0df8532777f tu: Move VMA heap to the logical device
  * 3a8fac0ccd9 tu: Create drm fd per logical device
  * 0d9ceeee3f6 ci/zink+anv: Skip a couple more long tests pre-merge.
  * 5546e57b90b ci: Re-enable some piglit tests that should be fast
    enough post-uprev.
  * 9ab31d56b27 Uprev Piglit to 536975d94a40cf76a69fcfa786c2513eccd0c989
    https://gitlab.freedesktop.org/mesa/piglit/-
    /compare/79a084c56b6dd79f7c3a97b57a72963121ebb1e6...536975d94a40cf76
    a69fcfa786c2513eccd0c989
  * deb064d98dd zink: Don't flag legacy_shadow_mask for RED-only reads
    in the shader.
  * dd426964124 zink: Fix silly void * type in rewrite_tex_dest.
  * e9ad9ab3d2d zink: Explain some of the current pathway for shadow
    sampling.
  * 0b22b311900 mesa: Fix precompile of GLSL programs with shadow
    samplers.
  * 63f8964d5a7 mesa: Fix debug logging of fp compile compare func.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 11 May 2023 17:23:06 +0200

mesa (23.2.0~git2305060935.1ae09f3effd~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 1ae09f3effd r600/sfn: fix cube to array lowering for LOD
  * 05a3eba0946 r600/sfn: Ass support for image_samples
  * 19961f81950 docs/tgsi: use ll and gg for left and right shift
  * abcd3423e9b docs/tgsi: fixup latex for TEX and TEX2
  * b7327296d52 docs/tgsi: do not use math-block for non-latex
  * f94c95ab5a1 docs/tgsi: use math-notations for conditionals
  * 02908b26bbb docs/tgsi: wrap overly long lines
  * d22ee93f97e docs/tgsi: fixup bad latex
  * d8871ac2edf docs/tgsi: fix bad latex
  * f84d1033c16 docs/tgsi: fix up indent
  * cb4e4fc5de4 dzn: fix pointer type mismatch
  * 191fa52d0cd ci/turnip: Drop the IUB bug fallout flakes.
  * 12c10f2fe99 ci/turnip: Drop an xfail from the full run for a recent
    fix.
  * 80b541513dd ci/radv: Disable flaky heaven d3d9 trace.
  * a8af5040419 ci/radeonsi: Mark glx-make-current as flaky.
  * d6ece34418d intel/tools: decode ACTHD printed by newer kernels
  * 499f332a3a5 radeonsi/vcn: fix decoding bs buffer alignement issue.
  * 6d84b34359d zink: add ZINK_DEBUG=optimal_keys
  * dcf3adbde7e zink: disable EXT_shader_object if !optimal_keys
  * 4cb900609fc zink: break out optimal key handling into separate
    function
  * 13f98c8101b zink: move EXT_shader_object check to another place
  * e64f5f261e2 anv: increase instruction heap to 2Gb
  * c60e94d61ff anv: make internal address space allocation more dynamic
  * 843afd4c639 anv: link anv_bo to its VMA heap
  * bb8e31b7ed5 anv: avoid hardcoding instruction VA constant in shaders
  * 53b77a8102c anv: remove 48bit address space checks
  * c35d430460d isl: fix layout for comparing surf and view properties
  * 9471ffa70a0 intel/fs: fix scheduling of HALT instructions
  * 9b6945bb652 amd: Cleanup old GS intrinsics code.
  * 5bb04dc5286 ac/nir/ngg: Use sendmsg in NGG lowering.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 06 May 2023 12:23:08 +0200

mesa (23.2.0~git2305032028.300327ba19d~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 300327ba19d ci/zink: Disable Freedoom trace on ANV
  * 36bb5f1f704 radv/ci: document a series of recent regressions
  * 11a853e912c wsi/wayland: Do not assert that all present IDs have
    been waited on.
  * 577b3c7bb2d wsi/wayland: Simplify wait logic for present wait.
  * 43f868d1757 wsi/wayland: Support VK_KHR_present_wait
  * 47cd010931a wayland: generalize wayland-protocols code generation
  * 0b251d43622 radv: Add driconf to always drain waves before writing
    timestamps
  * 284e6048722 radv: Always call si_emit_cache_flush before writing
    timestamps
  * b59935e2e77 radv/meta: rename dest to dst
  * 63b5b93dd31 radv: replace radv_get_levelCount() by
    vk_image_subresource_level_count()
  * 963f51158d4 radv: replace radv_get_layerCount by
    vk_image_subresource_layer_count()
  * a77c88f1e89 radv: fix fast-clearing images with
    VK_REMAINING_{ARRAY_LAYERS,MIP_LEVELS}
  * de61eddc02e radv: fix invalid type for usage in
    radv_get_buffer_memory_requirements()
  * c950098abb5 broadcom/compiler: move buffer loads to lower register
    pressure
  * efc94390f71 docs: fix edit-links
  * 2cbc24b9da0 turnip: fix buffer markers using wrong addresses
  * df08ed7d1c8 radv: Move all the dirty flags from TES binding to TCS
    binding.
  * f572344901e radv: use lower_ballot_bit_count_to_mbcnt_amd
  * b93c92eba33 nir: lower ballot_bit_count_exclusive/inclusive to
    mbcnt_amd
  * 5489033fa85 intel/compiler: make uses_pos_offset a tri-state
  * ef01a9cf3b4 mesa/main: drop unused variable
  * 9f522ac0c65 broadcom/compiler: don't allocate undef to rf0
  * 4ca8be82d57 r600: fix refcnt imbalance related to
    atomic_buffer_state
  * 0937a02d96b vulkan: rename vk_physical_device_features.py to
    vk_physical_device_features_gen.py
  * 9cf1cdfaa89 vulkan: put TEMPLATE_H before TEMPLATE_C
  * 005cfc63fc7 vulkan: put interesting code before boring code
  * 64f4b277ea6 vulkan: inline vk_get_physical_device_features into
    vk_common_GetPhysicalDeviceFeatures2
  * 528d430ca11 v3dv: use common vkGetPhysicalDeviceFeatures2
  * 99bc68f042f panvk: use common vkGetPhysicalDeviceFeatures2
  * a252a9dc24d anv: move get_features after get_device_extensions (ugly
    diff)

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 03 May 2023 21:05:22 +0200

mesa (23.2.0~git2305011615.98bb47ee455~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 98bb47ee455 ci: Enable rusticl in the fedora-release job
  * 96dd3947875 ci: Upgrade fedora-release job to Fedora 38
  * 5c6b07246d8 ci: Drop -Wno-error=array-bounds from fedora-release job
  * dce97f090a7 clover/llvm: Use std::nullopt already with LLVM 16
  * 4ee15720087 clover/llvm: Use llvm::DataLayout::getABITypeAlign with
    LLVM >= 16
  * 6bab67f5a66 svga: Make declaration of emit_input_declaration match
    definition
  * ee8b572b403 svga: Make vmw_svga_winsys_buffer_map definition match
    declaration
  * 6c7400f4e80 vulkan: Fix GetPhysicalDeviceSparseImageFormatProperties
    definitions
  * dbab98d9d63 radv: enable RADV_THREAD_TRACE_CACHE_COUNTERS by default
  * f092f548cb8 r600/sfn: assign window_space_position in shader state
  * bbd265b8e8b r600+sfn: Assign ps_conservative_z and switch to NIR
    defines
  * c8151891124 v3d: apply 1D texture miplevel alignment in arrays
  * 040aeb5a23e radv: Add asserts in radeon_emit{,_array}.
  * 7893040f807 radv: Add stricter space checks.
  * 4c204db0a79 radv: Reserve space in the ACE pre/postambles.
  * 17a7c55ea7e radv: Reserve space for indirect descriptor set address
    writes.
  * 775e42e6b84 r300: remove simple duplicate ARL instructions
  * c5b3d488f9b mesa/main: make ffvertex output nir
  * 7610747e944 mesa/main: allow passing nir-shaders to
    st_program_string_notify
  * fdd20b9469d mesa/main: drop disasm-code from ffvertex_prog.c
  * 972c9235928 mesa/main: clean up white-space in ffvertex_prog.c
  * 02493aeffc2 ci/skqp: update to the Android CTS 12.1_r5 version
  * a3ae424e0c0 ci/skqp: replace license with SPDX and extract the used
    branch
  * 5c1a8d3b774 meson: Don't use masm with VS backend
  * b7f815117ef Revert "zink: add `single_sample` to fs key"
  * e7b03fa3dcb Revert "zink: add to multisample field to
    `zink_gfx_pipeline_state`"
  * 8cbd6acf12b Revert "zink: don't render with multisampling when it is
    disabled"
  * 6b9f1a540d9 Revert "zink/ci: remove xt_framebuffer_multisample-
    interpolation fail"
  * 9a8a397294c Revert "zink: set when pipeline dirty flag when
    multisample changes"
  * 0b64c737796 zink: add extendedDynamicState3DepthClipNegativeOneToOne
    to profile

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 01 May 2023 17:30:37 +0200

mesa (23.2.0~git2304271824.5969541123d~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 5969541123d zink: set when pipeline dirty flag when multisample
    changes
  * 9c4e3c90206 tgsi: use locale independent float and double parsing
  * 27eafdcbd55 util: check and initialize locale before using it
  * 7373f25c093 mesa/main: rework locale setup/teardown
  * 306c6e12a59 frontends/va: define va av1 encoding caps
  * 03c9a81959c radeonsi/vcn: use PIPE_ENC_FEATURE enum
  * 5edbecb8569 frontends/va: adding va av1 encoding functions
  * 35c21509888 radeonsi/vcn: add av1 encoding ib packages and get_info
  * 4697b71c4e3 radeonsi/vcn: add some av1 encoding function
  * 8b3295b9ed7 radeonsi/vcn: add av1 enc data structure
  * 0b31c5a00c9 gallium/pipe: add av1 encoding data structure in pipe
  * f33f26e9ffb radeonsi/vcn: add av1 dpb variables and cdf table
  * b13f87031fd radeonsi/vcn: remove extra zero bytes from bitstream
  * bb08f061d96 radeonsi/vcn: merge get_output_format_param function
  * a4f96446fb9 radeonsi/vcn: enable swizzle mode in encoding ref
    frames.
  * 0a11d5f598e radeonsi/vcn: enable 2 pass search center map
  * 869c34c1ca3 radeonsi/vcn: add macros used in av1 encoding
  * d0caa50dcda aco: don't move exec writes around exec writes
  * 65265d3e32d anv: Take into consideration physical device max heap
    size to set maxStorageBufferRange
  * 7508f4b4b6d pvr: drop unused variable
  * 49cc6edf840 mesa: remove unused bools
  * 71c5db5e112 mesa: don't share reset status across contexts
  * b4a2cb1e166 winsys/amdgpu: use the no-op helper to detect if reset
    completion
  * 45cd75cdad3 winsys/amdgpu: add a helper function to submit a no-op
    job
  * e528823400e radeonsi: stop reporting reset to app once gpu recovery
    is done
  * 50225311200 amd: update amdgpu_drm.h
  * e996599ed07 ac/rgp: update SQTT_FILE_CHUNK_TYPE_ASIC_INFO to minor
    version 5
  * dd91faaddc2 ac/rgp: update SQTT_FILE_CHUNK_TYPE_API_INFO to minor
    version 2
  * 4cbb0f7ec38 ac/sqtt: add missing EventUnknown to
    rgp_sqtt_marker_event_type
  * 637a6813db2 ac/sqtt: add new bits to rgp_sqtt_marker_barrier_end

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 27 Apr 2023 20:53:14 +0200

mesa (23.2.0~git2304262345.ad1e64551d1~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * ad1e64551d1 frontend/nine: Fix num_textures count
  * 13eaa7cdd0c zink: reapply VkImageViewUsageCreateInfo when rebinding
    a surface
  * 792c2956ac3 zink: break out VkImageViewUsageCreateInfo applying for
    reuse
  * c39a2d67eac crocus: fix refcnt imbalance related to framebuffer
  * 3af2ab02f3c rusticl/program: use if let to get rid of an unwrap in
    build
  * f745a07b36c rusticl/program: rework dynamic Program state
  * 2b01934bc87 rusticl: Move nir compilation to Program
  * feb41032724 zink: prune some validation errors from ci
  * 1ede7c053b7 pan/bi: Don't set has_fsub
  * 5e6c7161734 docs: add missing ACO_DEBUG=force-waitdeps
  * b0b55dc602b docs: rename ACO_DEBUG=noscheduling to ACO_DEBUG=nosched
  * 218aa779413 egl: Clear EGL_WINDOW_BIT for non-double-buffered
    EGLConfigs
  * 3f14fd85785 radv: reserve command buffer index for SQTT
  * 9c33c4dcbe8 ac/sqtt: add a helper to get cmdbuf IDs per queue
  * a7b4573c119 ac/sqtt: add rgp_sqtt_marker_cb_id definition
  * 5e20fbd4245 aco: don't move exec reads around exec writes
  * 2c773440484 bump VVL to 1.3.248
  * 5c214117ad1 intel/tools: add ability to dump out raw kernels data
  * ca634459c72 r300: add CI list of known rv370 dEQP failures
  * db6c3cd13de r300: fix unconditional KIL on R300/R400
  * 7d4eb78e1b2 radv/ci: document another vkcts flake on vega10
  * c5ad3d3bc92 docs: correct spelling of "frame"
  * 2234a7f86fa docs: correct spelling of "tagged"
  * 870871c6a72 docs: correct spelling of "source"
  * c3400a787b5 docs: toplevel -> top-level
  * 690a05579bf docs: vlan -> VLAN
  * 1a42e8ac442 docs: use correct tick for "doesn't"
  * 9f410bcb96b docs: perfetto -> Perfetto
  * c1ebded76e5 docs: Anv -> ANV
  * 1c35ad0d63d docs: cma -> CMA

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 27 Apr 2023 00:29:25 +0200

mesa (23.2.0~git2304251736.bc8f7c53af7~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * bc8f7c53af7 ci/dzn: Run almost the full CTS
  * d34ac0a70b7 dzn: Re-design custom buffer descriptors
  * a12a15a9ea3 dzn: Handle depth bias for point fill mode emulation
  * 542febcf59a dzn: Handle opaque BC1
  * 11cad58125b dzn: Use unrestricted copy alignments when available
  * 71f36568cb1 ci/windows: Update Agility SDK to 1.610.2
  * 39770c6503a zink: fix store subsitution in `lower_pv_mode_gs_store`
  * a0645e3383e nir/zink: use sysvals in `nir_create_passthrough_gs`
  * cfd525d0973 pvr: Add PVR_DW_TO_BYTES()
  * e501b31e159 anv: implement state cache invalidate for Wa_16013063087
  * 72fc56aa37a anv: cleanup bitmask construction for PIPELINE_SELECT
  * 5e5ca30785a iris: implement state cache invalidate for
    Wa_16013063087
  * c2003535b99 broadcom/compiler: return early for SFU op latency
    calculation
  * 148473eae4c broadcom/compiler: fix incorrect ALU checks
  * 65b40d0b7e9 radeonsi: implement fw based mcbp
  * 8fe39e99976 amd: determine info->has_fw_based_shadowing
  * dc5a9e176c2 amd: update amdgpu_drm.h
  * 171d3164026 venus: fix the RHEL8 build by using syscall for gettid
  * 2c5a2f1a054 ci/valve: Add a workaround for finding libdrm on
    navi21s.
  * 6986cf1d897 ci/zink: Drop anv/lvp validation exceptions that should
    be fixed in the CTS.
  * 71fda36e7d8 ci/deqp: Update to 1.3.5.1 and pull in additional
    bugfixes from main.
  * 8dc0015448c ci: Move some timeout xfails to skips.
  * cc0de56a0e4 rusticl/device: allow enablement of fp64 via
    RUSTICL_FEATURES
  * b90d1cfbfea rusticl/platform: add RUSTICL_FEATURES boilerplate
  * 389a199993e rusticl/platform: extract env variable parsing from
    Platform::init
  * 2283e9d155c rusticl/platform: make the initialization more explicit
  * 400847a9900 rusticl/device: improve advertisement of fp64 support
  * b82004d9609 gallium: Add pipe_shader_state_from_nir
  * 5889c13fcd4 nv50,nvc0: Use ttn for tgsi shaders by default
  * 44db89b9375 nv50,nvc0: Stop advertising TGSI by default

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 25 Apr 2023 18:18:06 +0200

mesa (23.2.0~git2304220328.068738eea9e~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 068738eea9e util: Add mesa_blake3 wrappers.
  * 0e30076d834 util/blake3: Patch with hidden visibility for asm
    symbols.
  * 77826e83524 util: Add a copy of BLAKE3 hash library.
  * a01d9ac330e docs: update calendar for 23.0.3
  * 404e8991caa docs: update calendar for 23.0.2
  * 328e832750e docs: update calendar for 23.0.1
  * d6821080cda docs: Add sha256 sum for 23.0.3
  * 48e753d4c89 docs: add release notes for 23.0.3
  * 63ad833dd0a docs: Add sha256 sum for 23.0.2
  * 10a5ca13b56 docs: add release notes for 23.0.2
  * 6a5a7e791fd docs: Add sha256 sum for 23.0.1
  * ef3e17bfb01 docs: add release notes for 23.0.1
  * 37622b33c4b freedreno: Inline single-caller helpers
  * d4e42d31c05 freedreno: Remove unused fd_batch_reset()
  * e3e077c9d48 r600/sfn: Lower tess levels to vectors in TCS
  * 32f7ff2c204 wsi/x11: Fix present ID signal when IDLE comes before
    COMPLETE.
  * 0b1cd7eb079 Revert "ci/radv: Demote navi21 to manual until recent
    flakiness resolves."
  * 84d8ea6e2b4 radv/amdgpu: fix adding continue preambles and
    postambles BOs to the list

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 22 Apr 2023 15:29:32 +0200

mesa (23.2.0~git2304211919.c3c63cb1d89~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * c3c63cb1d89 broadcom: fix typos
  * 177c92fe7ca zink/ci: remove xt_framebuffer_multisample-interpolation
    fail
  * a004825266f zink: don't render with multisampling when it is
    disabled
  * 14d58926099 zink: add to multisample field to
    `zink_gfx_pipeline_state`
  * 420f2c0878f zink: add `single_sample` to fs key
  * d2ccdc3e8da mesa: fix ms fallback texture creation
  * c29359a008d mesa/st: try to block multisampled texsubimage from
    doing cpu writes
  * 56840e4c895 anv: rework Wa_14017076903 to only apply with occlusion
    queries
  * 8f23a5dd965 radv/ci: remove one expected test failure on PITCAIRN
  * e45fa939b09 r600/sfn: fix memory leak related to sh_info->arrays
  * bfabd2dec73 zink/ci: document that some tests no longer fail
  * 7af6616030d radv/ci: only reboot on hangs for vkcts-navi10-valve
  * a65fe883f44 ci/b2c: allow not specifying a reboot condition
  * 64822bc35fe radv/ci: document all the flakes we hit while I was away
  * ad508e50bfe radv/ci: disable the vkcts-navi21-llvm-valve job
  * a4d99aee917 v3d/ci: annotate failure
  * a86d18a8c49 v3d: use primitive type to get stream output offset
  * 0e88c04ed0a ci: Move Vulkan CTS patches to their own directory
  * 9a6b70da0bb zink: Add some printfs when initialization fails
  * a1098a1e45f mesa/draw: fix -Wformat warning
  * b83af7e5b81 freedreno/a6xx: Fix valid_format_cast logic for newer
    a6xx
  * 31ced4c5ad2 dzn: Support aniso-with-point-mip samplers
  * 4e2c5ba1007 dzn: Use narrow quadrilateral lines when supported
  * 0b3f2a3c7db dzn: Support dynamic depth bias via command list instead
    of PSO
  * c6bc4459e5f dzn: Add physical device arg to format lookup
  * 1e11645a309 dzn: Remove driconf for quad ops in vertex stages
  * fe128dca28c spirv2dxil: Lower quad ops in non-fragment/compute
    stages
  * 3c64f3dcbca ci: rework vulkan validation layer build script
  * fcb72ffd0c6 intel/compiler/gfx12.5+: Lower 64-bit cluster_broadcast
    with 32-bit ops
  * 74ab9401561 radv: update binning settings to work around GPU hangs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 21 Apr 2023 19:57:00 +0200

mesa (23.2.0~git2304191926.957009978ef~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 957009978ef pvr: Handle special built-in variable loading in vertex
    shader
  * d6b30d42b05 ci/lava: Skip regression test if LAVA log file is not
    present
  * a893b06691f ci/lava: Use f-strings in job definition
  * 11a97b644cb ci/lava: Refactor LAVAJobSubmitter and add tests
  * 710b568dcda ci/lava: Force use of UTC timezones
  * 5c5aec15b15 ci/lava: Integrate StructuralLogger with AutoSaveDict
  * eb1945c3d9c bin/ci: Add StructuredLogger to improve log handling
  * 0ac38249222 ci/lava: Add a simple Structural Logger into submitter
  * 41f29c53333 ci/lava: Update LogFollower for better section handling
    and history
  * cfe644a9e59 ci/lava: Use python-fire in job submitter
  * c03f7233ca9 ci/lava: Extract LAVA proxy and LAVAJob abstractions
  * 6f6b892dcad ci/lava: Move job definition stuff to another file
  * 3fbe699a43d egl: inline driver.GetProcAddress() as it's always
    _glapi_get_proc_address()
  * 8b366b6bc09 zink: Use malloc to allocate libs
  * f89c85e5d01 zink: Use malloc instead of ralloc
  * c91fa697e9e pvr: Add handling for missing entries in
    pvr_setup_vertex_buffers()
  * f0659728e4f pvr: Fix typo in PDS function name
  * b288ec803ca radv/rt: fix total stack size computation
  * efc629389ad pvr: Use driver vertex input data in the compiler
  * 361f58f0eed pvr: Fix a comment in the PDS code
  * ddda8b88c60 pvr: Collect vertex input data and fill info struct.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Apr 2023 21:15:21 +0200

mesa (23.2.0~git2304191301.da0739b4e4e~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * da0739b4e4e pvr: Finish
    pvr_perform_start_of_render_attachment_clear().
  * 95820584d06 pvr: Add deferred RTA clears for cores without
    gs_rta_support.
  * 060c3db4efd pvr: Complete pvr_generate_custom_mapping()
  * 9930cafbf28 pvr: Support multiple sources per pass in TQ job
    submission
  * f7ff71aec98 pvr: Complete pvr_3d_validate_addr()
  * 71fe789d354 pvr: Support ipf_creq_pf in pvr_isp_ctrl_stream()
  * 86ad8681428 pvr: Implement pvr_reroute_to_clip()
  * 35d2b51c11b pvr: Implement pvr_isp_scan_direction()
  * 8bcc40ed22c pvr: Complete pvr_double_stride()
  * 9cfe3b52835 pvr: Complete pvr_unwind_rects()
  * 8a0a357b652 pvr: Complete pvr_modify_command()
  * 240bac1e85f pvr: Implement pvr_pbe_setup_modify_defaults()
  * 0a8334e0545 pvr: Complete pvr_isp_ctrl_stream()
  * 5ac3c8d0df3 pvr: Support single core transfer queue commands on
    multicore GPUs
  * c3e7060ba19 pvr: Implement simple internal format v2 transfer paths.
  * 838132c0a95 pvr: Implement vkCmdClearDepthStencilImage API.
  * c468cf29a89 pvr: Implement vkCmdResolveImage2KHR API.
  * de9c53e3bb6 pvr: Implement vkCmdFillBuffer API.
  * ed243eca907 pvr: Implement vkCmdCopyImageToBuffer2 API.
  * 29e120c0924 pvr: Implement vkCmdClearColorImage API.
  * 5827f0098c9 pvr: Implement vkCmdBlitImage API.
  * 4c311213294 pvr: Implement vkCmdCopyImage2KHR API.
  * dc260f6fc33 pvr: Implement vkCmdCopyBufferToImage API.
  * 96b6b69d8a5 pvr: Implement vkCmdUpdateBuffer().
  * 480bdff4b52 pvr: Add support to process transfer and blit cmds
  * 1cdd0ccb373 pvr: replace transfer EOT binary shaders with run-time
    compiled shaders
  * 11dea16dee4 pvr: Add support for generating transfer EOT programs
  * f0b47cfd658 pvr: Add support for generating transfer fragment
    programs
  * eeac8336ef7 pvr: Use movc for reading special registers
  * e8cd78b3196 pvr: Amend validation when checking multiple supported
    types

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Apr 2023 13:16:04 +0200

mesa (23.2.0~git2304181649.135039f5264~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 135039f5264 ci: do not retry on forks to get the upstream kernel and
    rootfs
  * 2dcd6bed6a9 util: enforce unreachable()'s argument being a literal
    string
  * 5863bafbdc9 vk/util: fix buggy usage of unreachable()
  * 2f9520a5d0e pvr: fix buggy usage of unreachable()
  * f5ed1c79ae5 compiler: fix buggy usage of unreachable()
  * 0a0e4854211 amd: fix buggy usage of unreachable()
  * d291f368a00 ac/llvm: support implicit LOD for nir_texop_tg4
  * 25b1974e1b7 aco: support implicit LOD for nir_texop_tg4
  * dbb9f3a8a9e vtn: set is_gather_implicit_lod
  * 48158636bf1 nir: add is_gather_implicit_lod
  * 73e9cf60626 anv/format: Fix
    GetPhysicalDeviceSparseImageFormatProperties definition
  * 4ec052187a2 vulkan: Fix GetPhysicalDeviceSparseImageFormatProperties
    definition
  * 0f7d01cdbe0 mesa/st: Make st_convert_image(_from_unit) declaration
    match definition
  * 92a47ba1ae4 llvmpipe: Make lp_build_interp_soa declaration match its
    definition
  * 2420b190b8b tgsi: Make ureg_DECL_output_masked definition match its
    declaration
  * 3beaaa9ae8c anv: drop lowered storage images code
  * d04d701cc61 intel/nir: add options to storage image lowering
  * d4f498a5835 isl: fix a number of errors on storage format support on
    Gfx9/12.5
  * c221bfbd85d radv/amdgpu: remove legacy code for querying context
    status
  * 767a9324b9c radv/amdgpu: remove legacy code path for creating the BO
    list
  * c920d676c01 radv: require DRM 3.27
  * d561bac6bb1 isl: disable mcs (and mcs+ccs) for color msaa on gfxver
    125
  * f6fb189cbd0 rusticl/mem: more region and origin validation
  * 1c1fb288fdb rusticl: add create_pipe_box to better deal with
    pipe_box restrictions
  * 74c43834e7c winsys/gdi: GDI B5G6R5 display target support
  * d75e631e761 d3d12: Support blit texture uploads
  * 81595cc8234 d3d12: Respect buffer offsets for sampler views
  * 2d4fbb3025e anv: Work around the spec question about pipeline
    feedback vs GPL.
  * e433925789e anv: Refactor repeated pipeline creation feedback output
    code.
  * 647ca816540 anv: Only enable GPL if ANV_GPL=true, or if zink or DXVK
    are the engine.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 18 Apr 2023 20:04:05 +0200

mesa (23.2.0~git2304161928.74525f8576d~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 74525f8576d ci: uninstall libdrm from the GL and VK containers
  * 74e42359162 ci: polish deqp-runner a bit
  * 2933976e78b ci/freedreno: fix the a530_piglit job and switch to
    Weston
  * f84aee451d0 ci/freedreno: update a530 flakes, fails and skips
  * 2092f959751 ci/freedreno: a530 behaves stable in 6.3
  * 1fcfcaf008e ci: drop overriding new a530 firmware due to preemption
    issues with older kernel
  * cad794594b9 ci/freedreno: do not restrict to 2 cpus on a530
  * a925c59f83d ci: bump kernel to the 6.3, support HDK 888 based on
    sm8350
  * f3e8aeb2e9e tu/perfetto: s/MRTs/attachment_count/ in traces.
  * 947f5d4d7ad tu/perfetto: Drop unused arg to send_descriptors().
  * 020baed66e4 tu/perfetto: Use tu_CmdBeginDebugUtilsLabelEXT as a
    stage event in perfetto.
  * 69bff073ca1 tu/perfetto: Clean up an extra token paste to just use
    the arg being passed.
  * b4b18e41652 tu/perfetto: Refactor code out of the macro, to
    stage_end.
  * 60cfe15d799 rusticl/event: drop work item before updating status
  * 00b9685d966 symbol_table: Prehash the key on insert, and reuse the
    entry on shadowing.
  * 46498abbacb symbol_table: Don't bother resetting the key on popping
    scope.
  * 0a400f933fa symbol_table: Don't maintain the HT as we're destroying
    the table.
  * 6db7d72b4bf symbol_table: Store the symbol name in the same
    allocation as the symbol entry.
  * c6906448425 ci/amd: update checksums after DXVK 2.1 update
  * 5cf3b92661c ci/dxvk: uprev to 2.1
  * 0dcb3994a5a ci/amd: 4/5 runners TPad-C13 runners are online, restore
    most of the tests
  * a7877289062 anv: enable blorp query reset for performance queries
  * 20c330e95d4 ci: Drop executable permissions from backend compiler
    wrapper script
  * 1ec3c16c54a ci: Remove shebang from backend compiler wrapper script
  * 21b190bf44e ci: Use set -e in frontend compiler wrapper scripts.
  * 1915185648e ci: Explicitly test for meson feature checks in compiler
    wrapper
  * 2fbedd442a3 util: Delete Offset() macro from u_memory.h
  * 7706d1cc33e spirv/tests: Add test for single-block loop
  * 5672b6cb021 dzn: Remove #if D3D12_SDK_VERSION blocks now that 610 is
    required
  * 290bb7a7067 microsoft/clc: Remove #if D3D12_SDK_VERSION blocks now
    that 610 is required

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 16 Apr 2023 20:14:16 +0200

mesa (23.2.0~git2304150030.8f0da0851f2~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 8f0da0851f2 radeonsi/vcn: engage all jpeg engines on gfx940 for
    mjpeg decode
  * 87a44c44b45 radeonsi/vcn: enable RGBP format on gfx940 jpeg
  * bdb7f36aa8e frontends/va: add support for RGBP rt_format
  * 23580b09a34 util/format: add planar3 r8_g8_b8_unorm pipe format
  * 33886e5ef2c docs: add INTEL_MEASURE=cpu
  * b661149921a iris: Enable INTEL_MEASURE=cpu
  * 0417cfd7a0a anv: Enable INTEL_MEASURE=cpu
  * 55ba4575be4 intel: INTEL_MEASURE cpu mode
  * c45dee34aab anv: split INTEL_MEASURE multi events
  * 50bda45d15b anv: Add flush reason to NEEDS_END_OF_PIPE_SYNC
  * bdeb849e25b anv: Add flush reasons to raytracing flushes
  * 9a30493ccb2 anv: Add END_OF_PIPE_SYNC reporting to INTEL_DEBUG=pc
  * bfce57c7a5b radeonsi/vcn: add an exception of field case for h264
    decoding
  * f23d54cfaaf llvmpipe: fix some corner cases with line rendering
  * 9b6abe4206b llvmpipe: minor cleanups in line rendering code
  * 82c22580192 v3d: set depth compare function correctly
  * c84989c4cf3 zink: use correct primitives for passthrough gs with
    tess
  * 7e6191f6055 zink: don't emulate edgeflags for patches
  * 3ad751f043f radv: tidy up dirtying RBPLUS state in
    radv_bind_dynamic_state()
  * ba71b142f8a radv: re-emit the guardband state when related PSO are
    bound
  * 28cb33fadaf r600: fix refcnt imbalance related to
    r600_set_vertex_buffers()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 15 Apr 2023 01:55:39 +0200

mesa (23.2.0~git2304141813.cd861b7f38e~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * cd861b7f38e meson: ensure i915 Gallium driver includes Intel sources
  * cf90be90ade intel: split URB space between task and mesh
    proportionally to entry sizes
  * f11a4a09b02 radv: try to keep HTILE compressed for READ_ONLY_OPTIMAL
    layout
  * 3e22c3a8bcf broadcom/ci: deduplicate script definition
  * bdb03ecdd9e vulkan: ignore rasterizationSamples when the state is
    dynamic
  * 6af78baa237 ci: update shebang to make it more portable
  * 9120f17b278 ci: bump tags
  * 8eb5de31262 ci: start documenting which image tags need to be bumped
  * 9a45d3ee139 ci: move deqp-egl instead of copying it
  * efd2067a8f9 ci: add -android suffix for android build of deqp-egl
  * e876a018e91 ci: stop removing -x11 suffix for x11 build of deqp-egl
  * 08cf224c4a1 intel/vec4: force exec_all on float control instruction
  * df784c03fb5 glthread: disable by default with fewer than 4 (big)
    CPUs
  * 8c42c353b6e driconf: rework glthread enablement
  * 0cc93a46031 util/cpu: add big.LITTLE cpu detection
  * 54d01db8a84 docs/asahi: Add hardware glossary
  * 44fb5ceb364 nouveau: nouveau_copy_buffer can deal with user_ptrs
    just fine
  * 47e0c6764b0 nouveau: allow to enable SVM without having to enable CL
  * 7cfb8cb1a58 nv50/ir: ignore CL system values
  * bfee3a8563d rusticl: add support for fine-grained system SVM
  * bfcd9148255 rusticl/mem: add get_parent helper
  * 816bab4c234 rusticl/memory: Rework mapping of memory located in
    system RAM
  * 2ee082ef8a8 rusticl/context: add helper to get the max mem alloc
    size for all devices
  * 50097ffae04 gallium: correctly name the flags of svm_migrate
  * e5654cb3ee6 zink: remove screen param from zink_prune_query()
  * 7119a344f3d zink: always defer query pool deletion
  * 50e3974e258 zink: pass ctx through query destroy paths
  * cb83606279d zink: remove atomics from zink_query
  * c987eed9cd7 frontends/va: report min width and min height values if
    available
  * 413235d164b radeonsi: return min width and min height video cap
    values

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 14 Apr 2023 18:48:52 +0200

mesa (23.1.0~git2304111539.4b182dbcf28~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 4b182dbcf28 v3dv/ci: mark known dEQP-
    VK.wsi.xlib.surface.query_formats failure
  * a8cb837703d radv: Align atomic values.
  * 02c46fa1e84 util/disk_cache: Align atomic size.
  * 1c2d90f17ac util: Add aligned int64_t types for x86(non 64).
  * 9ccaf5583f6 radv: fix re-emitting vertex user SGPRs when binding a
    graphics pipeline
  * 35805d172ad radv/ci: add 2 more Flakes for Navi21
  * dcfca69e67e radv: clean up pipeline-cache interface
  * c2b9279227e radv: use vk_pipeline_cache
  * 9b3679aff2a radv: implement radv_shader_create_cached()
  * 55cc2fb0885 radv: add struct radv_pipeline_cache_object
  * 577d76f60f7 radv: add radv_shader_serialize() and
    radv_shader_deserialize() functions
  * efbf0e70eba radv: unconditionally store the binary code in
    radv_shader
  * 5303a57964f radv: derive struct radv_shader from
    vk_pipeline_cache_object
  * daa8003e45c intel/fs: use nomask for setting cr0 for float controls
  * 45a682650ca mesa: Add EXT_instanced_arrays support
  * 8aa4d37b833 glapi: Make EXT_draw_instanced functions available for
    GLES 2.0
  * b3793dc4425 mesa: OpenGL ES 3.0 requires EXT_instanced_arrays
  * cff71ae8ff6 anv: fixup streamout write barriers
  * 2bf9ae78c52 radv: Remove radv_bvh_aabb_node::aabb
  * 1ce50f0774b radv/bvh: Remove calculate_node_bounds
  * f791cd9e435 radv: Pack and encode geometry id and flags on the CPU
  * 8391639b5f3 radv: Remove has_previous_stage
  * b4bae8a2c06 aco: Remove is_gs_copy_shader
  * 58ab7831537 radv: Remove some dead radv_shader_args setup
  * 6f9bb453ef8 radv: Add radv_shader_type to fix gs_copy and trap
    handler handling
  * c66be7521fb nir/lower_blend: Enable per-sample shading
  * a74c2ac4033 nir/lower_blend: Set uses_fbfetch_output conservatively
  * d998217e179 mesa/st: Set uses_sample_shading when forcing per-sample
  * 52ba7e967b7 d3d12: Support creating PSOs with no attachments with
    MSAA without TIR
  * 1fda55ba094 venus: forward ARM driverVersion for ANGLE workarounds

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 11 Apr 2023 16:38:51 +0200

mesa (23.1.0~git2304101202.6476abd821a~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 6476abd821a radv: enable VK_EXT_graphics_pipeline_library by default
  * 719a0e269e2 vulkan/pipeline_cache: move vk_log on failed
    deserialization to vk_pipeline_cache_load()
  * 53eb3ad375b vulkan/pipeline_cache: add cache parameter to
    deserialize() function
  * a6360a32031 vulkan/pipeline_cache: use
    vk_pipeline_cache_create_and_insert_object() during
    vk_pipeline_cache_load()
  * f524f91d6fa vulkan/pipeline_cache: implement
    vk_pipeline_cache_create_and_insert_object()
  * 84fa7b17454 vulkan/pipeline_cache: Don't re-insert disk-cache hits
    into disk-cache
  * 5daff41e275 vulkan/pipeline_cache: remove vk_device from
    vk_pipeline_cache_object

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 10 Apr 2023 12:57:07 +0200

mesa (23.1.0~git2304082224.4ac56e3e5a4~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 4ac56e3e5a4 ci/v3d: add flaking spec@ext_framebuffer_blit@fbo-sys-
    blit
  * ba537ac25ad ac/llvm: Cover runtime 0 in GFX10 gs_alloc_req
    workaround.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 10 Apr 2023 01:25:43 +0200

mesa (23.1.0~git2304080810.c7da969f8fe~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * c7da969f8fe mesa: Enable NV_texture_barrier in GLES2+
  * 98bcf650f15 intel/compiler: Use nir_dest_bit_size() for ballot bit
    size check
  * f5471ca9657 nir/validate: Only walk uses once
  * 9a350790741 nir/repair_ssa: Refactor some use handling
  * dcb59a7672d nir: Remove nir_if_rewrite_condition_ssa
  * ed85a497271 dxil: Use nir_src_rewrite_ssa
  * e25c182993c nir: Use nir_src_rewrite_ssa
  * e9e0956d623 nir: Factor out nir_src_rewrite_ssa helper
  * 2285b5daae4 nir: Reduce indirection
  * 373bd37b85e dxil: Avoid list_length
  * c4a91c12dc2 nir/validate: Don't treat if-uses specially
  * f3b420692b5 nir: Remove 2nd argument from nir_before_src
  * 8505f0bd84d nir/opt_loop_unroll: Avoid list_length
  * 7356f3eee7b nir/opt_ray_queries: Don't use list_length
  * 7f6491b76d5 nir: Combine if_uses with instruction uses
  * fd9c69218ae tu: Use vk_features2_to_features
  * 4fa2924610c anv,hasvk: Use vk_features2_to_features
  * 672a06a1b63 pvr: Use vk_features2_to_features
  * c517d45341a lavapipe: Use vk_features2_to_features
  * b222b02d3d1 v3dv: Use vk_features2_to_features
  * a7389f68948 radv: Use vk_features2_to_features
  * 657e82a72f7 vulkan: Add common features2_to_features
  * 6894548d6c4 Revert "zink: don't trigger shader variants on pcp
    change if driver supports dynamic pcp"
  * 79655e2ea83 radv: copy stages instead of serializing NIR for GPL
    with the RETAIN flag
  * edb198e0b12 radv: create a helper for copying
    VkPipelineShaderStageCreateInfo
  * 6181ba11d56 radv/rt: stop storing unused hashes/identifiers
  * a782393b1aa zink: fix sampler array collision in `nir_to_spirv`
  * 4579fe5fade zink: add `descriptor_bindless_id` to `zink_shader_info`
  * c0c16d1ae24 dzn: Remove xfail for test that passes (if run)
  * e4da9c2dfc7 dzn: Support >2K samplers with bindless

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 08 Apr 2023 13:55:24 +0200

mesa (23.1.0~git2304071751.4dc7256bf96~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 4dc7256bf96 anv: reset query pools using blorp
  * bb49610973a anv: replace query flush before gpu copy by semaphore
    wait
  * abc4111d197 anv: pass steam output as argument for
    anv_dump_pipe_bits
  * 2415d57a99f anv/blorp: add flush reasons to RT flushes
  * 43f93f50431 anv/blorp: implement anv_cmd_buffer_fill_area
  * 0130a4f6676 anv/blorp: support surf generation for addresses
  * 9d38c9ca2f3 dzn: Enable VK_KHR_get_memory_requirements2
  * a9a0dc3cca3 dzn: Enable VK_KHR_bind_memory2
  * bcd33d2937a radv: import retained NIR shaders later in the
    compilation process
  * e9097649305 radv: do not retain noop FS for libs when a cache hit
    happened
  * 34fa60e138d radv: simplify a check when retaining NIR shaders
  * 3b5ea90f1d4 radv: move the serialized NIR to
    radv_graphics_lib_pipeline
  * 4672c6c43b9 radv: add a helper for retaining NIR shaders
  * dc18570c0aa zink: don't access non_fs part of zink_shader from fs
  * 215beee16d9 zink: more explicitly track/check rp optimizing per-
    context
  * 2c78cbbfe15 ac/llvm: remove some unused code replaced by nir
  * a2cecbbc44b ac/nir/ngg: fix store shared alignment
  * c082cdacae8 ac/nir/ngg: fix gs culling vertex liveness check for odd
    vertices
  * fc3d8e11255 radeonsi: fix max scrach lds size calculation when ngg
  * 9fcadd0c8d5 asahi: Allow explicit non-LINEAR modifiers for scanout
  * 534a04d557f asahi: Flip kmsro around to allocate on the GPU
  * 9db36376a68 asahi: Fix compressed ZS support
  * 2296f696293 asahi: Print reasons why compression is disabled
  * 888d443f298 asahi: Add resource debugging
  * 0a132b06406 asahi: Add a helper macro for debug/error messages
  * 883ba4b1616 asahi: Make BO import path failures more robust
  * fcf594d00b1 asahi: Implement valid buffer range tracking
  * 00064ba4e30 asahi: Fix style nits
  * a88b9c5540d asahi: Locate low VA BOs correctly
  * 030b2306a44 asahi: Enable glthread

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 07 Apr 2023 19:53:18 +0200

mesa (23.1.0~git2304040337.e84cf80fe15~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * e84cf80fe15 zink: always store nir serialized
  * 4e1668384d5 zink: store num_inlinable_uniforms separately for cs
    programs
  * 517146f5400 zink: move nir cloning out to callers of
    zink_shader_compile
  * dfa8c15164c zink: break out nir blob deserializing
  * 0563499db0a zink: simplify assign_io() further
  * fd2714b5a98 zink: store nir as serialized on zink_shader structs
  * e40134aea85 zink: streamline nir cloning for assign_io
  * 2e1ad9f8178 zink: directly return nir from zink_shader_tcs_create
  * d3c91124046 zink: swap nir pointers when compiling compute shaders
  * fdb9c919228 zink: pass nir directly to zink_shader_tcs_create()
  * 6524b9285fd zink: simplify fbfetch output detection from fs
  * edc804e50f2 zink: use zink_shader::info instead of
    zink_shader::nir::info
  * b33d5d1a982 zink: generate flat_flags during shader creation
  * f26526ff33d zink: pass nir_shader to update_so_info()
  * f7b76d681be zink: add and populate a shader_info struct to
    zink_shader
  * eb307445623 zink: delete shader reordering in assign_io()
  * bbd124fd005 v3dv/pipeline: use pipeline depth bias enabled to fill
    up CFG packet
  * a88aedbfa5b intel/perf: fix OA format selection on MTL
  * c61101f1511 intel/dev: set a default valid kmd_type
  * 2016d9f46c6 intel/fs: Rework the loop of opt_combine_constants that
    collects constants
  * 9e4bb4bfcfe intel/fs: Refactor part of opt_combine_constants to a
    separate function
  * 593cde04322 intel/fs: Output opt_combine_constants debug to stderr
  * eadc64ab248 vulkan/wsi/display: do not dereference a NULL pointer
  * 6ad5f885afe vulkan: Drop VkRenderingSelfDependencyInfoMESA
  * b4c18b9b769 vulkan: Drop vk_render_pass_state::*self_dependenc*
  * 6d4e605378c hasvk/pipeline: Use feedback loop flags for self-
    dependencies
  * 8df8a3c19bc anv/pipeline: Use feedback loop flags for self-
    dependencies
  * f3876db1ee5 vulkan: Plumb rendering flags through
    vk_graphics_pipeline_state
  * f4b534d50f2 vk/render_pass: Support VK_EXT_fragment_density_map
  * df9694e98e8 tu: Use vk_pipeline_get_renderpass_flags()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 04 Apr 2023 07:50:15 +0200

mesa (23.1.0~git2303292236.43dc19f44d9~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 43dc19f44d9 radeonsi: simplify binning settings to work around GPU
    hangs
  * 281126f1d65 radeonsi/gfx11: reduce MSAA samples to 8 for no-
    attachment framebuffer
  * e0d449dd401 amd: set the correct LLVM processor name for gfx1036
  * 0b6a7cba0b4 amd: rename GFX1036 -> RAPHAEL_MENDOCINO
  * 52b68869922 amd: update addrlib
  * 5fb8ba0eb8b zink/ci: remove `primitive-id-no-gs-quads` from radv-
    vangogh-fails
  * 1c3a4ab8962 zink: unbind generated gs in `bind_last_vertex_stage`
  * 303e06b19df zink: improve generated gs unbinding
  * 431795b9b91 zink: zink: add `parent` to `zink_shader::non_fs`
  * d80a35a7f76 zink: unified `zink_set_primitive_emulation_keys` and
    `zink_create_primitive_emulation_gs`
  * d786f52f1ff zink: prevent crash when freeing
  * 2748301a09d zink: advertise support for the quad primitive
  * 49329b89045 zink: keep xfb properties in quad emulation gs
  * 2bd72a4101d nir: keep xfb properties in nir_create_passthrough_gs
  * 1c7d846bccb zink: handle provoking vertex mode for filled quads
  * 0b655147759 nir/zink: handle provoking vertex mode in
    `nir_create_passthrough_gs`
  * 1a5bdca2dda zink: implement flat shading using inlined uniforms
  * 009ba806c9b zink: add `needs_inlining` to `zink_shader`
  * a6de15eff56 zink: add flags to `zink_gfx_program` and `zink_context`
  * 027ba4ccefb zink: fix flat shading on filled quads
  * 7eab64f1c66 zink: handle quads
  * f48b699654f zink: add `zink_rast_prim` enum
  * e2220ee55e4 zink: filled quad emulation gs generation function
  * 0cb81ac38c2 zink: force line strip out when emulating stipple
  * 3b5fb8b0607 nir: allow to force line strip out in
    nir_create_passthrough_gs
  * 90a8525d703 zink: handle edgeflags
  * a93685ef557 zink: add `has_edgeflags` flag to zink_shader and
    zink_gfx_program
  * 24535ffb3d5 nir: handle edge flags in nir_create_passthrough_gs
  * a0751e8088d nir: calculate number of vertices in
    nir_create_passthrough_gs
  * edecb66b018 nir: avoid generating conflicting output variables

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 29 Mar 2023 23:53:00 +0200

mesa (23.1.0~git2303282157.aa314c746f8~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * aa314c746f8 radeonsi: monolithic PS emit epilog in nir directly
  * c1821544562 ac/nir: add ac_nir_lower_ps
  * bf9c1699cd7 nir: add nir_fisnan helper function
  * c9d60547ef3 nir,radeonsi: add and implement
    nir_load_alpha_reference_amd
  * 67f295f1e21 aco: implement float16 nir_op_pack_(s|u)norm_2x16
  * 3df1c4455e8 ac/llvm: implement float16 nir_op_pack_(s|u)norm_2x16
  * 6848e05f9c2 nir: pack_(s|u)norm_2x16 support float16 as input
  * c30194e9ec5 intel: Allocate mesh shader URB space before task shader
  * b69ec8bde33 radv/rt: Refactor rq_load lowering
  * 83929f99557 aux/trace: fix GALLIUM_TRACE_NIR handling
  * 62789086e46 aux/trace: dump blend states with enums
  * c1050b53303 radv: add RADV_DEBUG=extra_md
  * f315774727a radeonsi: don't use si_decompress_dcc if the blitter is
    running
  * 46d2655a18d radeonsi: add AMD_DEBUG=extra_md
  * 7f94b800015 ac/surface: introduce umd metadata v2
  * 4abb911bd20 amd/surface: rename metadata functions
  * e272e59e405 mesa: fix CopyImageSubDataOES with
    GL_TEXTURE_EXTERNAL_OES
  * 0c76e088f2a anv: call nir_shader_gather_info early
  * 6a16ed8d794 CI: Disable freedreno
  * 16c03fd756a aco/util: override default assignment operator for
    bitfield helpers
  * ed03696ed9d aco/ir: fix copy paste bug in convert_to_SDWA
  * 1979e551a8b aco: Swap operands for v_and_b32 in RT prolog
  * fd1e27a8f88 radv: Fix swizzled VS input loads when some components
    are unused.
  * 5bf6f6fed12 radv/rt: bind the pipeline stack when it's not dynamic
  * 0f974d1f907 asahi: Convert to SPDX headers
  * ede5fed450b mailmap: Add Lina's new google.com address
  * ecf7a7da1bf docs/svga3d: Fix typo
  * 1ffd5915625 docs/panfrost: Fix typo
  * eff5d950ea8 docs/freedreno: Fix typos
  * c9378106ed9 docs/gallium: Fix typos

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 28 Mar 2023 23:23:57 +0200

mesa (23.1.0~git2303271929.cb9f94f84c4~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * cb9f94f84c4 radv: stop checking dynamic states when emitting the
    guardband state
  * 66fec16238a radv: add DI_PT_RECTLIST to si_conv_prim_to_gs_out()
  * 5e9ea154849 aco: fix p_interp_gfx11 comment
  * b1668aedaf2 aco: don't check usesModifiers for pseudo instructions
  * 9df5a2bd627 etnaviv: fix texture barrier implementation
  * 77ab87e5a71 etnaviv: flush VS texture cache when texture data is
    changed
  * e7ee11f89a7 docs/freedreno: fix turnip-heading level
  * 8f6998ad8a9 radv: separate the sample shading state between FS and
    graphics pipeline
  * 774e0558233 radv: move uses_user_sample_locations to
    radv_multisample_state
  * 609edd6e96f radv: copy the multisample state to radv_cmd_state
  * f5e8944dd6e amd: Add radv_foreach_stage to ForEachMacros.
  * 698135fd3e2 anv,hasvk: remove stale comments
  * 4dc40c3b644 radv: move radv_meta_* to a new folder
  * 5e0c8a6555b ci/broadcom: test occasionally fails, but typically
    passes
  * 04bfb71fa1c docs: prefer http-links over ftp

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 27 Mar 2023 20:30:27 +0200

mesa (23.1.0~git2303260116.5b5fd8d4376~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 5b5fd8d4376 CODEOWNERS: s/jekstrand/gfxstrand
  * 877473b4a0e util: Update some copyright tags
  * 9d1c1379e74 vulkan: vk_android.c should be copyright Intel
  * e001995dc59 util,mesa,panfrost: Drop some author tags
  * 789992b7c91 intel: Drop some author comments and update Faith's name
  * cf1da3ef402 spirv: Drop a bunch of Authors tags
  * 01275a1a95c nir: Drop a bunch of Authors tags
  * 329398b99a7 docs: Fix Faith's name in relnotes
  * a02ed15067e intel/blorp: Drop the TODO file
  * 0f045d43d61 ac/surface,radv: Opt out of stencil adjust.
  * 3bfa0d44fb1 ac/surface: Only allow stencil pitch adjustment for
    mipmaps.
  * 71a50bdaade ac/surface,radv: Avoid pitch weirdness if image not used
    for rendertarget.
  * 102445d2c35 freedreno/registers: Add control reg for zap fw base
  * c3ed8d0e7b5 freedreno/afuc: Add raw mode for disasm
  * e5dae7d9459 driconf: make glthread=true default for source games
  * cece2aa2c14 intel/compiler: Add Wa_14014063774 for slm_fence
  * 4a4b05869a6 venus: check and configure new ringMonitoring feature
  * c4c09464ce8 venus: update to latest protocol for ringMonitoring
  * 476c771e34f venus: init exp features before ring init again
  * 3812a946d22 venus: set/check ring status bits independently
  * bb4c10f85e5 venus: add vn_relax_init/_fini()
  * 0f147240398 iris: Implement Wa_14015297576
  * 86d931724db anv: Implement Wa_14015297576
  * 7f04fa7364b ci/zink: Add zink-tu-a618-traces-performance job
  * 38074e8d6dd ci/zink: Add zink-turnip-manual-rules
  * 2bb917282ae ci/zink: Add zink-a618 trace jobs
  * bbfc9b517d9 ci/freedreno: create a618-traces and perf jobs
  * 93e3d37b47c ci: Add piglit traces hidden jobs
  * cadceac2a73 ci/freedreno: Make traces work on LAVA caching proxy
  * a114bf1cd28 ci/freedreno: define Google farm specific includes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 26 Mar 2023 12:04:15 +0200

mesa (23.1.0~git2303232013.33d03e57ad2~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 33d03e57ad2 intel/fs: use generated helpers for Wa_14013363432 /
    Wa_14012688258
  * c029b1499fa freedreno/decode: fix possible overflow
  * 6c5888b890c ci/freedreno: do not build tools executables without
    explicitly enabling them
  * 79725115c60 d3d12: Remove now-unused UAV format from shader info
  * 4f56f2188cb d3d12: Fix buffer SRV/UAV creation
  * efe3f246b1e d3d12: Report correct texel buffer max size
  * 78fc1197eba microsoft/compiler: Handle writable buffer UAV size
    queries
  * 0016b8c9ea7 d3d12: Encode - Only upload headers when written headers
    size is > 0
  * cd575ff72b8 d3d12: Encode H264/HEVC - Do not write PPS unless
    different from active
  * 4cb76bd2802 d3d12: H264/HEVC Encode - Set both VBV
    InitialCapacity/Size in CBR Rate Control to same value when
    requested
  * 75d029b7170 freedreno/rnn: Fix reg names for regs with variants
  * 8da3494d533 freedreno, nir, ir3: implement
    GL_EXT_shader_framebuffer_fetch
  * ca92183845e nir: Add memory coherency information to shaders.
  * 1462da2a70f nir: allow nir_lower_fb_read to support multiple render
    targets
  * c54b8dfe672 tu: Fix tile_align_h on a650
  * f5d325a8d02 v3d: add link to issue investigating failure
  * 2c1da7fbde0 frontends/va: check decoder in va surface call
  * 3f544150bb3 anv: Implement Xe version of execute_simple_batch()
  * 41cba37c4a1 anv: Handle Xe queue/engine priority
  * 45cb2819f6a anv: Implement Xe version of check_status()
  * 13874840bf6 anv: Create Xe engines
  * 0818d18d489 anv: Replace I915_ENGINE_CLASS_VIDEO by
    INTEL_ENGINE_CLASS_VIDEO
  * e743ddbbb47 radv: Enable mesh shading on GFX11.
  * 59a4fb6af71 ac/nir/ngg: Store special MS outputs in attribute ring
    for PS to read.
  * b2a71c56d95 ac/nir/ngg: Fix mesh shader layer on GFX11.
  * 9d2f5a4adae ac/nir/ngg: Split legacy workgroup index function.
  * 240e16fc8e2 ac/nir/ngg: Use attribute ring for mesh shader params.
  * 0af22af5487 ac/nir/ngg: Clarify mesh shader scratch ring.
  * 36edbebe8be radv: Adjust mesh draw packets for GFX11.
  * 9c1571bc56a radv: Include per-prim params in NUM_INTERP on GFX11.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Mar 2023 21:20:35 +0100

mesa (23.1.0~git2303191621.dc34413f43a~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * dc34413f43a meson: implement quirk for the compilation under armv7
    GCC with LTO
  * afb82e553be ci: disable weston session timeout for llvmpipe
  * fb3632d24f4 ci: distribute XDG_RUNTIME_DIR with setup-test-env
    script
  * 210c6c11cc6 freedreno+tu: Add a690 support
  * b012a4a9cd7 freedreno+tu: Big GMEM support
  * 60bc7c0e221 freedreno: Specify GMEM tile alignment per GPU
  * ad4271439c0 Update my mailmap aliases
  * 0f18bb40763 radv: Fix inserting stack_size into the cache
  * 3887f64dc3c radv: Fix loading stack_size from the cache
  * 3823d4696a2 ci/intel: add dEQP-
    EGL.functional.wide_color.window_fp16_default_colorspace flake
  * 161799d2c7d ci/traces: add two skips due to flakes
  * 9e6c88c96b7 ci/freedreno: add recent occasional flakes
  * 9ed6487ba02 zink: expand ZINK_DEBUG=sync to cover copy ops
  * e1bfae1d4db zink: add tracing for copy ops
  * 4dd81b4e2f4 intel/fs: handle interpolation modes for at_sample and
    at_offset too
  * 22d6556a4b3 radv: Fix missing wait of GS copy shader upload for
    dmashaders.
  * 3ce2b711935 dzn: Claim the arithmetic subgroup bit
  * b4de74165dc spirv2dxil: Handle arithmetic subgroup ops
  * ccc9540dae9 microsoft/compiler: Add a lowering pass for scan ops
    that aren't supported
  * 981fe2bf42d microsoft/compiler: Implement wave reduce/exclusive scan
    ops that are supported

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 19 Mar 2023 17:49:13 +0100

mesa (23.1.0~git2303180058.082368cd842~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 082368cd842 radeonsi: remove unused vs_output_param_mask
  * 6eddc6dd5af ac/nir: use plural correctly in the
    ac_nir_export_parameters name
  * 3626bc2daa7 ac/nir: don't emit duplicated parameter exports
  * c86d6c8af8b iris: Move to iris_i915_batch.c code to destroy i915
    context
  * cb40ff3ecb3 iris: Move to i915/iris_batch.c code to create and
    replace i915 context
  * 7a1d0b31a67 iris: Store iris_context's priority
  * 75b9d0b3d84 llvmpipe: remove debug printf spam in
    lp_setup_wait_empty_scene()
  * a882cf09c35 ci/b2c: increase the console timeout to 4 minutes
  * d3c1cc92610 radv/ci: update VanGogh's expectations
  * 8e6ac356588 asahi: fix a few typos
  * b6878d456f0 st/mesa, iris: Add optional CPU-based ASTC void extent
    denorm flushing
  * f534c36ca5e ci: Enforce clang-format for asahi
  * 5c1b360eaad ci: Add clang-format to the amd64 container
  * d2621ef81d9 iris: Implement gem_mmap() in Xe kmd backend
  * 16dbf50ad9b iris: Implement gem_create() in Xe kmd backend
  * c9fdfae334a iris: Implement the function to destroy VM in Xe
  * 60f4bd61b6f iris: Implement the Xe version of
    iris_bufmgr_init_global_vm()
  * 7f65b94451d iris: Only mark buffer as exported if
    drmPrimeHandleToFD() succeed
  * 596f2ef3619 aco: set needs_flat_scr=true for RT
  * 184cf1cb794 aco/gfx11: fix RT prolog scratch initialization
  * 2ead574abe4 ci: Enable LTO for fedora-release job
  * eb9cd45ef68 ci: Install procps-ng in Fedora image
  * 2b739ca31de ci: Drop ccache from Fedora image
  * bca2bcfec92 ci: Make ccache optional
  * fe53fa5117e ci: Allow passing c{,pp}_link_args to meson
  * b6e0bf8b76b ci: Pass -Werror to compiler linking stage for LTO
  * 86c6634897d intel/vk/grl: Do not use no_override_init_args for C++
  * 66e34fe914e ci: Split up -Werror workarounds for debian-mingw32-
    x86_64 job
  * 86496167ea8 ci: Remove some -Werror workarounds for debian-android
    job
  * 2f3dc689487 iris: Use ralloc_free for memory allocated with rzalloc

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 18 Mar 2023 02:34:59 +0100

mesa (23.1.0~git2303161528.cb7e9a6cfb4~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * cb7e9a6cfb4 asahi: replace copies of .clang-format with symlinks
  * 9faaff45613 radv/rt: Don't upload the prolog twice.
  * 8f6126e21a7 v3dv/ci: fix test name (`,Fail` is not part of the test
    name)
  * 77c3df53ae2 zink/ci: update the radv expectations
  * c69e2849a67 zink/ci: increase the parallelism of zink-radv-vangogh-
    valve
  * 928aab57a36 radv/ci: reduce the parallelism for vkcts-vangogh
  * 5c5c114fa29 meson: correct typo in comment
  * 3ddbf64e417 virgl: Lower binding start into buffer indices
  * 99416624e52 ntt: add option to lower SSBO bindings to buffer index
  * 1247b23f287 virgl: Don't try to do re-alloc or readback by transfer
    for blob resources
  * 831e7818aad virgl: Enable AMD_vertex_shader_(layer|viewport_index)
    when host supports it
  * d53aba56dbc anv: use vk_get_physical_device_features
  * ded810ded50 panvk: Use vk_get_physical_device_features
  * 723825f5c7a vulkan: use vk_features for vk_device::enabled_features
  * c7300a6a3b6 vulkan: add hepler for vkGetPhysicalDeviceFeatures2
  * efaf3fd5fc2 vulkan: delete trailing namespace
  * cd35ab95706 vulkan: tidy up vk_physical_device_features
  * b0b3b9e8b11 vulkan: relocate rmv to its correct home
  * 51e725df297 radeonsi: monolithic TCS emit tessfactor in nir directly
  * 3f5d42a28a8 radeonsi: lower nir_load_ring_tess_factors_offset_amd
  * 719366c2b24 ac/llvm,radeonsi: lower nir_load_ring_tess_factors_amd
  * 99828e0390d ac/nir: handle tess factor output missing case
  * 700e24941c5 ac/nir: init tess factor location with IO remap
  * c06329eb3f8 ac/nir: tcs write tess factor support pass by reg
  * e070a9e8d00 ac/nir: move store_var_components to common place
  * f2617944bfd panfrost: Don't round up Midgard polygon list BOs
  * 174d6e6a545 glsl: allow 64-bit integer on RHS of shift
  * 39c828cb9fd aco: remove aco::rt_stack variable
  * f123d65e9f5 radv/rt: use prolog for raytracing shaders
  * bea022d1f6a radv/rt: Add shader config combination/postprocessing
    utils

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 16 Mar 2023 15:55:41 +0100

mesa (23.1.0~git2303142225.2409ddb5dbb~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 2409ddb5dbb zink: fix copy box iteration
  * 7d41b8fe4ee tu: don't set startup debug on debug builds
  * 1115a290259 pvr: Fix segfaults when pDepthStencilAttachment is NULL
  * 7176e0c1602 ci: group RESULT logic in a single place
  * 755282accc6 ci/rustfmt: print which files are checked
  * 6c2d1778962 ci/rustfmt: simplify getting all the rust files
  * 488d5c6fa6e ci: drop redundant .no_scheduled_pipelines-rules + .core-
    rules since the latter already includes it
  * a0bf0adade0 ci/broadcom: move rare failure to the flakes
  * 179fadb3327 venus: make external fence and semaphore export async
  * a37771b42a1 venus: refactor to add vn_sync_payload_external
  * 891af34bca2 venus: make common wsi bo submission async
  * 0a3f612ab3e venus: let vn_instance_submit_command track ring seqno
  * 1cb42a629fa venus: make vn_instance_wait_roundtrip asynchronous
  * 9b7a78cac67 venus: switch to use 64bit roundtrip seqno
  * 932073d3e6c venus: sync to latest protocol for asyncRoundtrip
  * 82f0a012917 ci/valve-farm-rules: allow running jobs from outside the
    mesa namespace
  * 9dd4c03dd6c ci: bring back the valve farm online
  * 10e0c5fd466 ci/b2c: move away from the hand-rolled initscript
  * a0d8ed757ec ci/init-stage2: always set XDG_RUNTIME_DIR
  * 226c2479458 ci/init-stage2: allow sourcing the job env vars from the
    CWD
  * 4affc3b3611 zink: rename shadow key to zs swizzle
  * 24a2530ed8c zink: workaround undefined swizzle 1 for z/s textures
  * 2cf117ee39f zink: add depth/stencil needs shader swizzle workaround
    field
  * cc15dbc4f89 zink: extend shadow swizzle pass to all zs textures
  * 79557c2747c zink: add needs_zs_shader_swizzle shader key
  * b707cdccf5c zink: minor formatting change
  * f7257b1c755 zink: track shadow swizzle for all shader stages
  * a83e63437f9 zink: fix shadow mask change logic when binding sampler
    views
  * 5903868f991 zink: fix stale point sprite mode state
  * 4b4306fe10e zink: super reorder buffer copies

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 14 Mar 2023 23:34:09 +0100

mesa (23.1.0~git2303110730.b190d08a8aa~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * b190d08a8aa pan/mdg: Remove reference to removed macro
  * cc16e7322ff panfrost: Remove MALI_POSITIVE macro
  * 131845eb84c panfrost: Inline the last MALI_POSITIVE use
  * 14eb964e59c panfrost: Remove FBD tag enum from XML
  * 67cbbf94175 panfrost: Use framebuffer pointer XML
  * 1a5546293cf panfrost: Add XML for framebuffer pointers
  * 35985be275f panfrost: Handle fixed-point packing in GenXML
  * 17c55e0d12e panfrost: Don't use DECODE_FIXED16 for sample position
  * e0752673bec docs/panfrost: Move description of instancing
  * 07b43d6231f panfrost: Remove some unused definitions
  * 341f1011a67 intel/perf: Hide extended metrics by default
  * 6b22a02f908 asahi,agx: Implement buffer textures with gnarly NIR
  * 826649ba195 asahi, agx: Implement dummy samplers
  * bc178c044ec ci/baremetal: Wrap artifact download curl with xtrace
  * 256e7888fd0 ci: Fix release build use for performance jobs
  * 91a129b44a4 iris: Move i915 submit_batch() to i915 backend
  * 21d5034edb6 iris: Add batch_check_for_reset() to kmd backend
  * e0ce31d7cf9 iris: Add gem_mmap() to kmd backend
  * c5888bf6103 build: Block build of HASVK, Crocus and i915 in non-x86
    architectures
  * 757e2dd692b intel/perf: Disable it for Xe KMD
  * 266d961fdc9 iris: Don't mark protected bo as reusable
  * e61d6540e63 asahi: Don't allow linear depth/stencil buffers
  * e61d022313a ci/android: Use a more aggressive timeout for the job
  * 0cadc3830fa nir/lower_int64: Optionally lower ufind_msb using
    uadd_sat
  * 831f9d3f615 nir/algebraic: Optimize some ifind_msb to ufind_msb
  * db6d1edc1b6 nir: Restrict ufind_msb and ufind_msb_rev to 32- or 64-
    bit sources
  * 2d6f48f6efd nir/algebraic: Do not generate 8- or 16-bit find_msb
  * 2119ab7319c nir/builder: Do not generate 8- or 16-bit find_msb
  * 28311f9d029 nir: intel/compiler: Move ufind_msb lowering to NIR
  * a4052e70ea7 nir/algebraic: Only lower ufind_msb with 32-bit sources

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 11 Mar 2023 10:50:22 +0100

mesa (23.1.0~git2303091515.13ff4a5f64a~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 13ff4a5f64a aco: use bitfield_array for temporary neg/abs/opsel
  * d0eebb0e8b0 aco: access neg/abs as int in usesModifiers
  * 828aff2a2de aco: use array indexing for opsel/opsel_lo/opsel_hi
  * a47c3f84fb2 aco: use integer access for neg_lo/neg_hi
  * 60cd3ba39f1 aco: copy abs/neg with assignment
  * 5fdbc4a23e1 intel/isl: disable TILE64 for YCRCB formats
  * fad9c69e42d ci/radv: Drop raven quick_shader load
  * a19739f1b05 v3dv/ci: add a test to the known failures
  * ec513270e3d zink: Pass the cmdbuf to the end of the marker, too.
  * 11a4e10fe24 ci/zink: fixup the zink-lvp job
  * 27c8d6ca7b3 drirc: set `zink_emulate_point_smooth` for Quake II
  * ffe36abf7c4 zink: handle point_smooth emulation
  * 3a59b2a6702 nir: handle output beeing written to deref in
    `nir_lower_point_smooth`
  * 4b07182c8cc zink/nir_to_spirv: add support for
    `nir_intrinsic_load_point_coord`
  * e121b6d9eb6 zink: add `lower_point_smooth` to `zink_fs_key`
  * c32a5b8d048 zink: add `zink_emulate_point_smooth` driconf
  * e280d6a7c95 zink: fix line smooth lowering
  * 5f5e30b5bbd docs: update calendar for 22.3.7
  * 1f61bca5fe0 docs/relnotes: add sha256sum for 22.3.7
  * 2488afec117 docs: add release notes for 22.3.7
  * b8b0a0d1351 docs/relnotes: add 23.0.0 to relnotes.rst
  * b687a62566d docs: Add sha256 sum for 23.0.0
  * 882c4ef59be docs: add release notes for 23.0.0
  * 0ad320af128 docs: Add calendar entries for 23.0 release.
  * c28f144c814 osmesa: add exported symbols check
  * 8b75b726135 anv+hasvk: Use driconf to disable 16-bit for zink.
  * daa1468b543 intel/isl: Don't scream FINISHME into logs for 3D vs.
    CCS
  * df7b40d0024 ci/anv: Temporarily halve TGL testing load
  * b8017243523 util: allow align64() to do alignments >= 4Gb
  * 9a058f6b4c9 radv: use 1ull for alignment computations

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 09 Mar 2023 17:36:50 +0100

mesa (23.1.0~git2303071800.26f430d6ce3~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 26f430d6ce3 radv/rt: move radv_pipeline_key from rt_variables to
    traversal_data
  * d87bbee0be8 radv: remove unused parameters from
    radv_compute_pipeline_compile()
  * d06aa7b71d1 radv/rt: introduce and use radv_rt_pipeline_compile()
  * f1565de4cc9 radv: expose radv_pipeline_capture_shaders()
  * 2fbd495ce7c radv: expose radv_postprocess_nir()
  * c87c34bbba3 radv: fix defining RADV_USE_WSI_PLATFORM
  * a6dcd62f448 iris: Move iris_bo_wait_gem() to i915/iris_bufmgr.c
  * 97becc1b6f0 iris: Move iris_bo_busy_gem() to i915/iris_bufmgr.c
  * 7553d921f66 iris: Move bo_set_caching to kmd backend
  * bdfcc980016 iris: Move bo_madvise to kmd backend
  * d636e772c0c intel/common: Implement the Xe functions for intel_gem
  * 19aa1fb851f intel/common: Implement the Xe functions for
    intel_engine
  * 7b2086d7419 radv: fix border color swizzle for stencil-only format
    on GFX9+
  * 889c3ee6b84 anv: fix sends_count_expectation assert on simd32
  * 347a5b79f97 ac/surface: only adjust pitch if surf_pitch was modified
  * f72774f13f4 ci/lavapipe: fixes typo
  * de4805f25f9 aco: use bitfield array helpers for valu modifiers
  * e7559da7570 aco: add bitfield array helper classes
  * 097a97cc426 aco: remove VOP[123C]P? structs
  * 08542318e76 aco/optimizer: simplify using VALU instruction
  * 4591703e791 aco/print_ir: simplify using VALU instruction
  * 17ff2e8c52b aco: validate VALU modifiers
  * fc193ab4dbb aco/ra: set opsel_hi to zero when converting to VOP2
  * 366cf4efaa3 aco/ir: rework IR to have one common valu instruction
    struct
  * 77afe7d9604 aco: treat VINTERP_INREG as VALU
  * c119b19f98d radv: fix incorrect stride for primitives generated
    query with GDS
  * a278eeb7197 nir: fix nir_ishl_imm
  * 5ec80ab37c6 radv: do not add descriptor BOs on update when the
    global BO list is used
  * 1aca36815ee gallivm: fix lp_vec_add_offset_ptr for 32 bit builds
  * 4c24ff0a341 rusticl/kernel: Images arg sizes also have to match the
    host pointer size

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 07 Mar 2023 18:39:15 +0100

mesa (23.1.0~git2303062027.399012a911b~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 399012a911b freedreno/common: Replace or_mask() with BitsetEnum<T>
  * 30d469215be v3d/ci: add dEQP-
    GLES3.functional.texture.specification.teximage2d_pbo.*_cube flakes
  * 62f1a8a3a62 zink: unbind fb on context destroy
  * 7600e2cca2a ci: Handle carriage return characters in LAVA logs
  * 3174cfcaf27 hud: add GALLIUM_HUD_OPACITY envvar
  * 7ace1bab731 hud: use defines for default scale/rotation/visibility
    values
  * 0f3370eede2 raseonsi/vcn: fix a h264 decoding issue
  * 340f2d1a256 zink: add frame trace markers on the queue
  * bb796f70a14 radeonsi: Add NV12 support for AV1
  * 0ed28d2715c wsi: move an assertion in
    wsi_xxx_surface_get_capabilities2()
  * c3cc8455d4a zink: when skipping a TRANSFER_DST image barrier, set
    access tracking
  * e650ff4ea08 zink: remove debug markers for u_blitter ops
  * 271ebdd735e zink: pass cmdbuf to debug marker begin
  * 60496f63762 zink: reorder some blit debug markers
  * d677c00f6dd zink: be more descriptive with perfetto buffer barriers
  * 8c037193fb5 zink: determine whether debug markers are used on screen
    create
  * 8c226ba2426 zink: skip buffer barriers if the buffer can be easily
    proved idle
  * 0a7092b2853 zink: use split image barriers if the image can be
    easily proved idle
  * 5be506c16ec zink: fix zink_resource_access_is_write()
  * 772d92bfa62 zink: add functions for faster batch-usage completion
    checks
  * 5b64d7267b3 zink: skip attachment barrier for redundant layout-
    setting if !valid
  * 16946782944 zink: avoid unnecessary read-only layout changes for zs
    attachments
  * 73df715c110 zink: add perfetto tracing for barriers
  * 7fadee9b70c radv/rt: only reserve stack_sizes after rt_case
    insertion
  * 3e03fe44e7d radv/rt: move stack_sizes into radv_ray_tracing_module
  * 48edcd03c53 radv/rt: introduce struct radv_ray_tracing_module
  * 4dafb69d618 radv/rt: defer library_pipeline allocation
  * a62d699664e radv/rt: rename library_pipeline->groups to
    library_pipeline->group_infos
  * d79d62c6380 ci: do not exit when an error happens inside the section
  * 944a3af5315 glx: Fix glXGetFBConfigFromVisualSGIX

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 06 Mar 2023 21:17:43 +0100

mesa (23.1.0~git2303051534.b73b7015796~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * b73b7015796 ci/freedreno: rare flake KHR-
    GL45.sample_variables.mask.rgba8i.samples_4.mask_3
  * 5ee724e180b ci/lavapipe: add recent occasional flake
  * 9b09f244f07 r600/sfn: Fix atomic lowering
  * 3c3ecdab36c r600/sfn/tests: Add a test for the copy prop into a
    group
  * 244cc152d1b r600/sfn: redirect copy propagation to alu parent group
  * 2028465bd86 r600/sfn: Add print method to AluReadportValidation
  * ee0010213f5 r600/sfn: Add method to AluGroup to replace sources
  * 61807210059 r600/sfn: Split AluInstr replace_source into test and
    actual replace
  * afa545b9265 r600/sfn: Add AluGroup method to update readport
    validation from scratch
  * ed587ae6ac2 asahi/meta: Use lowered I/O
  * 485eddcc851 asahi: Bump shader buffers
  * c7b5f014615 agx: Only lower int64 late
  * 811f8b899da agx: Don't print pre-optimization shader
  * ea37d7f81fe agx: Use agx_emit_collect for st_tile
  * 7bb8112fd1e agx: Refactor vector creation
  * 037609f1dc3 agx: Constify agx_print
  * a9c5956f2fb agx: Inline 16-bit load/store offsets
  * c9728b41d51 agx: Factor out allows_16bit_immediate check
  * 445ca949cd8 agx: Clean up after lowering address arithmetic
  * 4b1f4b86ea3 agx: Add AGX_MESA_DEBUG=nopreamble option
  * c22a18c9afa agx: Don't write sample mask from preambles
  * e9f7d14de67 asahi: Mark PIPE_FORMAT_NONE "supported"
  * 8bb40ce4ad2 agx: Fix 2D MSAA array texture register allocation
  * 3032e3ad23d agx: Mask shifts in the backend
  * f4e2b226466 asahi: Advertise dual-source blending
  * af953616a10 wsi/display: check alloc failure in
    wsi_display_alloc_connector()
  * 82cc236458c freedreno/a6xx: Fix mirror x/y blits
  * ec9e03fb396 freedreno/a6xx: Convert blitter to OUT_REG()
  * 149f2a2e81d freedreno/a6xx: Namespace reg/pkt packer vars
  * 1d2c1b8bd65 pan/mdg: Use nir_lower_helper_writes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 05 Mar 2023 16:54:27 +0100

mesa (23.1.0~git2303021733.9905322df96~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 9905322df96 pvr: Advertise STORAGE_IMAGE_BIT for
    B10G11R11_UFLOAT_PACK32
  * 225ae963571 pvr: Don't advertise currently unsupported features
  * 4ec6850210d radv: fix DCC decompress on GFX11
  * 57ab623f0bb radv: Use common helpers to translate format in SDMA
    copy.
  * 4f681d5e2c9 radv: Remove SDMA padding from copy helpers.
  * e9a55b332a3 radv: SDMA v4 size field is size - 1
  * 4f50497a968 radeonsi: SDMA v4 size field is size - 1
  * c914e70bceb anv/hasvk: speed up null image/view descriptor writes
  * 646cff13bca Revert "iris: Avoid abort() if kernel can't allocate
    memory"
  * 5aae8a05264 iris: Retry DRM_IOCTL_I915_GEM_EXECBUFFER2 on ENOMEM
  * 207eb944450 intel/compiler: add comment about workaround on simd
    width
  * 427fd83d27f radv: use new EVENT_WRITE_ZPASS packet3 on GFX11
  * 87444bb7ab4 radv: ignore alpha_is_on_msb on GFX11 because the hw
    ignores it
  * 0a3387a190e nir/lower_mediump: don't use fp16 for constants if the
    result is denormal
  * ede0630f9e1 aco: use v_fma_mix_f32 for v_fma_f32 with 2 fp16
    representable, different literals
  * ed349951cb7 aco: mark mad definition as precise if the mul/add were
    precise
  * f19fccd9f8c amd,ac/rgp: fix SQTT memory types
  * bb122202b6d gallivm: Add some notes about other
    invocation_0_must_be_active usages.
  * 66dff3d39c5 gallivm: Use first_active_invocation for scalar SSBO
    loads.
  * a2b054c8f0a gallivm: Use first_active_invocation for ubo/kernel
    memory loads.
  * 1be626b618b gallivm: Return 0 for first active invocation when no
    invocations are active.
  * e2c67ed63ec ci/radv: remove dEQP-VK.image.sample_texture.*
    fails/flakes
  * 3c9a8f7a6d2 intel/dev: generate helpers to identify platform
    workarounds
  * f11aab743b6 util: add macro to support gcc/clang poison
  * a0fa31bcdd8 intel/dev: create a helper dependency for libintel_dev
  * 98198a77820 glthread: fix a perf regression due to draw_always_async
    flag, fix DrawIndirect
  * 1eab7e69e2b glx: fix indirect initialization crash
  * cc3c8c241e7 d3d12: Use memcmp for full tcs/gs variant keys
  * f53188b7fa4 d3d12: Cache varying info to reduce compare/copy cost
  * e4ba343ac91 d3d12: Compare shader key common parts with memcmp,
    instead of if's

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 02 Mar 2023 17:50:29 +0100

mesa (23.1.0~git2303010437.1f0fdcb6194~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 1f0fdcb6194 anv: always pick graphics queue to execute prime blits
    on.
  * 494cb2e5cac asahi: Flush USC caches on the first draw
  * 70169c7488a asahi: Identify USC cache invalidate
  * 860ac5c1498 asahi: Add readonly BO flag
  * 0498ad3e26d asahi: Add BO_SHAREABLE flag
  * 672b2f9ad18 anv: remove more Gfx7 code
  * fc7680b7df7 iris: fix Wa_16011107343 for Gfx12
  * 3cd72a28402 anv: fixup Wa_16011107343 for Gfx12 only
  * 6cb0c8b6d74 ci: Reuse MESA_CI_PERFORMANCE_ENABLED in performance-
    rules
  * 5b9a6106041 ci: Use workflow to make CI aware of performance jobs
  * c91f4b2efbf ci: Use release builds in perf jobs
  * 2fcd6df1075 ci: Create debian-arm64-release job
  * c65eb88f0b4 ci: Upload debian-release artifact to S3
  * 53dda476a9e llvmpipe: fix compute address bits to return native
    pointer size.
  * 67904a36a6d pvr: Don't update fragment signal sync when fragment
    stage is disabled
  * 4af1cf89abc pvr: Clear wait syncs after job submission
  * 18fb8d3b55a pvr: Enable threaded submit when supported
  * 5be2e44095f pvr: Add support for VK_KHR_timeline_semaphore
  * 80f864cd23b pvr: Use common queue submit implementation
  * 5ce99bc5688 radv: Only init geometry infos if RRA is enabled
  * 7bd265bc863 radv: Move header and geometry info init into separate
    functions
  * e74a3284f53 anv: halve the push constants space in mesh pipelines
  * 814eb9e2cea iris: consider bufmgr creation to have failed if
    `dup`ing of the fd fails
  * 0912b14b3ae ci/freedreno: add flaking KHR-
    GL45.buffer_storage.map_persistent_flush
  * baea3b328b7 intel/vulkan: add missing dependency on generated
    headers
  * c356f1b4edc radv: fix draw calls with 0-sized index buffers and
    robustness on NAVI10
  * b1c19498c64 pvr: replace nop binary shader with run-time compiled
    shader
  * fa1cf83217e meson: allow checking for null pointers even if they're
    supposed to be non-null
  * bf5cfb64868 v3dv: Enable (leased) direct display extensions.
  * 12f0daddfc8 pvr: initialise size for placeholder "zeroed" shaders

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 01 Mar 2023 06:46:49 +0100

mesa (23.1.0~git2302252358.964323fe97b~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 964323fe97b pvr: remove duplicate define
  * cbfa4d52ed2 pvr: stop restricting the compiler to the Sascha Willems
    triangle demo
  * cb7403b9095 d3d12: Track up to 16 active context resource states
    locally in d3d12_bo
  * 2c00c069fee d3d12: Assign up to 16 simultaneously active contexts
    unique IDs
  * bd0e1b3d02c d3d12: Move d3d12_context_state_table_entry to
    d3d12_resource_state.h
  * 4c711460d4e tu/kgsl: Propagate tu_physical_device_init() errors
  * 6a28986eb4d tu+meson: Re-work KMD selection
  * 407e4929de9 turnip: Refactor device loading
  * 3b3882d4c5f turnip: Handle kgsl vs drm specifics at runtime
  * fc06e35a58f turnip: Move QueueWaitIdle entrypoint to kgsl
  * 1170efcf014 turnip: Allow knl backend specific entrypoints
  * fd2b014a12a turnip: Split out vfuncs for kernel interface
  * f84fce767d3 turnip: drm code-motion
  * 1cb702def49 turnip: Move things to prep for multi-kernel support
  * 73dfcbf7e85 vk/runtime: Allow enumerate and try_create_for_drm to
    coexist
  * 08ba87481bc ci/freedreno: add flaking KHR-
    GL45.buffer_storage.map_persistent_dispatch
  * 54f2074ebef docs: update link to intel optimization reference manual
  * 8203618d455 ci: correct typo in name of linkcheck job
  * b52917f9fcc intel: use c_see2_arg instead of explicit -msse2
  * 1851ca714b7 intel: enable -mfpmath=sse on x86
  * 182066538f3 r600/sfn: Fix minimum required registers
  * 13a9ce7f2fe radv/rt: Merge cull_mask and flags
  * 8ae5a429903 nir: Add cull_mask_and_flags_amd intrinsic
  * 8441d565ec9 anv: remove assert typed write support when using NULL
    surface
  * 65b62db0fb9 ci: uprev virglrenderer
  * 297fda6cf13 zink: fix build with -Dvulkan-beta=true
  * f1acdeba6b8 zink: fix slab allocator sizing
  * fe4271c42d1 vbo/save: fix possible crash related to fixup_vertex()
  * b71957635f1 anv: stop tracking color blend state in the pipeline
  * dd5c6446b4f anv: fix testing for dynamic color blend bits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 26 Feb 2023 14:29:15 +0100

mesa (23.1.0~git2302240249.94906337232~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * 94906337232 d3d12: Fix VP9 Decode - Checking 0xFF instead of 0x7F
    for invalid frame_ref[i].Index7Bits
  * fb2a6248d2e hasvk: Update driver name in debug information
  * ed768337050 radv: Implement & expose
    VK_EXT_pipeline_library_group_handles.
  * d0f7587109d radv: Use group handles based on shader hashes.
  * 913de78731a radv: Use provided handles for switch cases in RT
    shaders.
  * 430170702e5 radv: Hash group handles as part of RT pipeline key.
  * 9eb76ab6386 radv: Add helper to hash stages.
  * 211ed8745f7 zink: add debug marker tracing for qbo updates
  * 26aedae568b zink: add ZINK_DEBUG=map
  * 03610a5aab5 zink: actually hook up ZINK_DEBUG=norp
  * 9e8450b65cc freedreno/crashdec: Disable GALLIUM_DUMP_CPU
  * 3f227957d64 freedreno/crashdec: Handle multi-IB prefetching
  * ddc4e87438e freedreno/crashdec: Add another prefetch test
  * 643ee851030 freedreno/crashdec: Refactor crashdec tests
  * 7417432a285 freedreno/crashdec: Add prefetch test
  * 9ececfc6e63 freedreno/cffdec: Fix hang location detection
  * 924f2640812 freedreno/cffdec: Add helper to parse CP_INDIRECT_BUFFER
  * c01ac4b5836 freedreno/cffdec: Add helper to find next pkt
  * cb13e24758c freedreno/cffdec: Fix unitialized count for pkt2
  * 4060cf5772c freedreno/crashdec: Fix apparent off-by-one with ROQ
    size
  * ce7225c0f90 freedreno/a6xx: Fill in ROQ status registers
  * 44054b1f3b3 freedreno/a6xx: Fix CP_ROQ_THRESHOLDS_1
  * aba8aea2be7 freedreno/a6xx: Add CP_ROQ_*_STAT
  * 8c6d741e263 freedreno/a6xx: Rename CP_CSQ_IB*_STAT
  * 880a3efe6c2 anv: implement emission of 3DSTATE_HS for Wa_1306463417
  * f8a1100ca1b anv: limit generated draws to pipelines without HS stage
  * 2028f1caa38 anv: emit 3DSTATE_HS in cmd_buffer_flush_gfx_state
  * a043ae8e249 iris: implement emission of 3DSTATE_HS for Wa_1306463417

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 24 Feb 2023 05:10:34 +0100

mesa (23.1.0~git2302232000.e4ebb541c5a~f~mesaaco4) focal; urgency=medium

  * New snapshot:
  * e4ebb541c5a meson: update flex/bison requirement to cover all usages

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 20:45:52 +0100

mesa (23.1.0~git2302231931.61f45a6f44e~f~mesaaco3) focal; urgency=medium

  * New snapshot:
  * 61f45a6f44e gbm: drop unnecessary vulkan dependency
  * 2bf24c84f3e glx: include directly the useful vulkan header, instead
    of including everything
  * c8d7e0c0235 egl: include directly the useful vulkan header, instead
    of including everything
  * e97ed4fc89d anv: process utrace payloads on queue submission
  * aa791961a82 pvr: Add support for dynamic buffers descriptors
  * 2bef26ed043 ci/intel: Update hasvk HSW xfails
  * d6d8edf9ae6 hasvk: Handle subpass self-dependencies for stencil
    shadow copies
  * d3162f97b5a hasvk: Mark VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL as
    stencil write optimal
  * 79a58cb79bc hasvk: Enable PixelShaderKillsPixel when omask is used
  * 15b302179a7 aux/tc: add a 'has_resolve' member to tc_renderpass_info
  * ce68824bdfb anv: fix invalid masking of 48bit address
  * af994570f02 intel/blorp: Allocate only necessary amount of
    VERTEX_BUFFER_STATE
  * a364f23a6cf intel: Make gen12 URB space reservation dependent on
    compute engine presence

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 20:22:05 +0100

mesa (23.1.0~git2302231114.63278778c64~f~mesaaco3) focal; urgency=medium

  * New snapshot:
  * 63278778c64 pvr: Add push consts support to descriptor program.
  * fbd644c59d9 meson: replace vk_wsi_args with dependencies to let
    meson take care of transitivity
  * f059213f5dd meson: reuse vulkan_wsi_list for defining vk_wsi_args
  * 22c1f4be8c1 docs: mention `meson configure` and drop broken
    workaround script
  * e5cf2831216 docs: mention the meson summary
  * 512126b26d5 intel/compiler: remove unused field from
    fs_thread_payload
  * 9b4eb739079 r600: fix shader blob memory leak
  * cc3c97d8c94 venus: Add VkBuffer cache statistics for debug
  * 7d53d4d078e venus: add VN_DEBUG_CACHE flag
  * ef255444c19 venus: switch to lazy VkBuffer cache

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 12:45:27 +0100

mesa (23.1.0~git2302230244.56a9aad4010~f~mesaaco3) focal; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 03:49:22 +0100

mesa (23.1.0~git2302230244.56a9aad4010~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 56a9aad4010 nir/deref: don't replace casts with deref_struct if we'd
    lose the stride
  * fa9a8c85e20 radeonsi/vcn: disable fence for JPEG decoding
  * c392cdf7502 v3d: update supertuxkart reference after
    1c028a4d5b623e73bdf5

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 03:40:17 +0100

mesa (23.1.0~git2302222333.4229d9324f4~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 4229d9324f4 iris: Avoid creating uncompressed view with unaligned
    tile offsets on BDW
  * 7ebdddf319f docs: update calendar for 22.3.6
  * 2ad59278164 docs/relnotes: add sha256sum for 22.3.6
  * e581901132a docs: add release notes for 22.3.6
  * ecabc824c2e glsl: Drop the (v.x + v.y + v.z + v.w) -> dot(v, 1.0)
    optimization.
  * 3c668513b9e freedreno/a6xx: Fix view_seqno in tex cache key
  * 818b49932a3 freedreno/a6xx: Static-ify sampler_view_update()
  * e9fa92d6fa9 freedreno/a6xx: Small cleanup
  * 936f2ebb468 freedreno/a6xx: Remove needs_invalidate flag
  * b6778995d7c freedreno/a6xx: Add a way to assert valid format
  * ea9d1cfb20c freedreno/a6xx: Fix sampler view rsc_seqno for X32_S8X24
  * b40e3c9e6c9 freedreno/a6xx: Drop unneed fd6_texture_state() arg
  * 29445505f6f freedreno/a6xx: Fix set_sampler_views(start != 0)
  * a3c73987ab9 freedreno/a6xx: Move rsc seqno out of tex cache key
  * 94abccf3ce5 aco: fix pathological case in LdsDirectVALUHazard
  * ee47cc8256d amd,nir: remove byte_permute_amd intrinsic
  * e316416dd0d docs: include explicit `setup` in instructions
  * a502f4fc133 radeonsi/video: use specific PIPE_BIND_ value for video
    buffers
  * 635d62ba992 mesa: use mesa_log from output_if_debug
  * f18f43338eb mesa: add missing newlines for _mesa_debug/_mesa_log
    callers
  * 40e45eaef02 util/log: add logger_windbg
  * 8f0a7e848f4 util/log: add support for MESA_LOG_FILE
  * 7d8d64426b1 util/log: add logger_syslog
  * bbd19527c1f util/log: improve logger_android
  * 7a18a1712a0 util/log: improve logger_file newline handling
  * 63864d4dfcd util/log: allow multiple loggers
  * 337d58f6fca util/log: refactor mesa_log
  * dd3b67b9746 v3dv: handle ASPECT_MEMORY_PLANE aspect flags when
    getting plane number
  * f4ce19063c2 loader: do not check the mesa DRI_Mesa version if it was
    not found
  * 6e666c6303b nir: Skip samplers and textures in lower_explicit_io

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Feb 2023 00:01:39 +0100

mesa (23.1.0~git2302202226.8bc78e8eb9f~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 8bc78e8eb9f util/u_process: implement util_get_command_line for BSDs
  * 923758a5c22 winsys/amdgpu: use amdgpu_device_get_fd
  * 919c5568bf8 freedreno: check for conditional rendering in
    launch_grid
  * e93a221024d agx: Handle group_memory_barrier
  * e9cec966334 agx: Implement b2b32
  * 955797bb00d agx: Pack local atomics
  * 14f546726e3 agx: Lower shared memory offsets to 16-bit
  * a21f6f8cb04 agx: Translate load/store_shared
  * f8b9dfbbada agx: Translate NIR atomics
  * 2a021b1818e agx: Pack local load/store instructions
  * 96904f83b44 agx: Pack global atomics
  * eea3674f36a agx: Disallow immediate bases to device_load
  * 6b0ef2b4629 agx: Model local loads/stores
  * 0d07d271739 agx: Model atomic instructions
  * ec7584130f5 iris: Export num_fences()
  * 780dd291c5f iris: Export update_batch_syncobjs()
  * 102e180d0f5 iris: Export batch debug functions
  * 9e67d3f2378 asahi: Advertise ARB_texture_barrier
  * 5f8a59ac89e asahi: Advertise ARB_derivative_control
  * c6c61d052e3 docs/features: Sync Asahi with reality
  * cf96edff1cf agx: Implement gathers (nir_texop_tg4)
  * 978d3fefa88 agx: Model and pack gathers
  * 8dc861dbb59 agx: Lower offsets in NIR
  * a5dfee1c22b ci: revert download of git cache to the wget
  * 44f40ff9417 pvr: Use descriptor/set/table offsets from driver
  * e64288a0ba5 pvr: Split pvr_private.h
  * 5694755fa02 pvr: Load descriptors from memory
  * 3355749105e pvr: Support loading immediate values
  * e0e58e96595 pvr: Additional register subarray support
  * 888e06b8cc6 pvr: Add bitwise instruction support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 21 Feb 2023 00:15:41 +0100

mesa (23.1.0~git2302182116.2c40215ab9d~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 2c40215ab9d aco/optimizer: Change v_cmp with subgroup invocation to
    constant.
  * 616d595d18d glthread: don't restore non-VBO vertex arrays after all
    draws
  * 201038a80d3 glthread: don't free glthread for
    GL_DEBUG_OUTPUT_SYNCHRONOUS, only disable it
  * 068670a79ab glthread: remove unnecessary debug code
  * cabc08a184a glthread: convert (Multi)DrawIndirect into direct if
    user buffers are present
  * 72b336dbdcb glthread: add API to allow passing DrawID from glthread
    to mesa
  * aabca21c7e0 glthread: handle non-VBO uploads for
    glMultiModeDraw{Arrays,Elements}IBM
  * 85108145280 glthread: don't execute Draw and BufferSubData calls if
    the context is lost
  * faf476ea4ff glthread: inline draw functions that have only one use
  * 21ab24acd0d glthread: remove goto statements and add unlikely() into
    draw functions
  * 3b897719e63 glthread: add ctx->GLThread.draw_always_async to
    simplify draw checking
  * 15aaef4d365 glthread: reorder draw code a little
  * 50d791ca73e glthread: add a vertex upload path that unrolls indices
    for glDrawElements
  * 28724de0d7f glthread: track vertex formats for all attributes
  * e97d0b318b2 glthread: don't bind/unbind uploaded indexbuf, pass it
    to glMultiDraw directly
  * a078374b101 glthread: don't bind/unbind uploaded indexbuf, pass it
    to glDraw directly
  * 5c0c0dc5cd0 glthread: move some draw call parameters closer to their
    use
  * c2806a836b2 glthread: don't pass index bounds to the driver for
    async calls
  * 38efb766d3a glthread: don't execute glDraw code if we're inside
    glBegin/End
  * 07ef2652fec glthread: change glMultiDrawElements to execute
    draw_count < 0 asynchronously
  * 7aff69bcddf glthread: rewrite glMultiDrawArrays to never fail to
    upload vertices
  * e6231a1320c Revert "ci/zink: Disable Amnesia trace until the linked
    issue gets fixed."
  * efb531fcb5a glthread: ignore non-VBO vertex arrays with NULL data
    pointers
  * 3ed141e9d80 glthread: add a heuristic to stop locking global mutexes
    with multiple contexts
  * 78c61140f16 glthread: upload non-BO indices in the core profile to
    fix GStreamer
  * 2e0cb30bd5b glthread: initialize indices[i] for no-op
    MultiDrawElements
  * e2ad086f485 mesa: ignore indices[i] if count[i] == 0 for
    MultiDrawElements
  * 55682e958bf glthread: track the current element array buffer in the
    Core profile too
  * 37b544e410a hasvk: Fix gfx8/9 VB range > 32bits workaround
    detection.
  * 4cd7976208b anv: Fix gfx8/9 VB range > 32bits workaround detection.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 19 Feb 2023 01:14:40 +0100

mesa (23.1.0~git2302170245.e787ddf2981~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * e787ddf2981 panfrost: fix tiny sample_positions BO memory leak
  * f8aa83f0c86 intel/nir: Use nir_lower_mem_access_bit_sizes()
  * 2e2d7803c7f nir: Add a load/store bit size lowering pass
  * 34e11963faa ci: enable dEQP-VK.ubo.random.all_shared_buffer.48
  * cb58d75224c nir/nir_opt_copy_prop_vars: don't call memset when
    cloning
  * d1a41d9c647 nir/nir_opt_copy_prop_vars: reorder clone calls
  * 2a2d85e254e nir/nir_opt_copy_prop_vars: reuse dynamic arrays
  * ffe0f3fda18 nir/nir_opt_copy_prop_vars: reuse hash tables
  * 731e9fd535a nir/nir_opt_copy_prop_vars: avoid comparison explosion
  * 8f6f5730f62 nir/nir_opt_copy_prop_vars: remove extra loop
  * 4e09d37f3bd nir/from_ssa: Move the loop bounds check in
    resolve_parallel_copy
  * 5afba073c6b nir/from_ssa: Only re-locate values that are
    destinations
  * 9673502b3b7 freedreno/drm: Optimize stateobj re-emit
  * 6747d301557 freedreno: Add seqno helper
  * 8f2b22ba667 freedreno: Drop batch lock
  * 9a6de00e98b freedreno/batch: Stop tracking cross-context deps
  * a4b949fe61b freedreno: Avoid taking screen lock
  * 35fc1595b37 freedreno/a6xx: Pre-compute PROG related LRZ state
  * c938101bb55 freedreno: Move FD_MESA_DEBUG cases out of draw_vbo
  * 8942f4b7340 freedreno: Move blend out of dirty-rsc tracking
  * 67d4bc7be44 freedreno/a6xx: Remove tex-state refcnting
  * cfd4721ee03 freedreno/drm: Make rb refcnt non-atomic
  * f91bcd24559 freedreno/a6xx: Do tex-state invalidates in same ctx
  * e7993d68e27 freedreno/a6xx: Multi-draw support
  * cc31997f1b5 freedreno/a6xx: Split out flush_streamout() helper
  * 911d67bdadc freedreno/a6xx: Drop unused return
  * c4e2e821a20 freedreno: Push num_draws down to backend
  * 6bfee9e6697 freedreno: Account for multi-draw in num_draws
  * f6251b21f94 radv/rt: don't hash maxPipelineRayRecursionDepth
  * 8e718c5b639 radv/rt: use dynamic_callable_stack_base also for static
    stack_sizes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 17 Feb 2023 04:08:08 +0100

mesa (23.1.0~git2302152121.c7f18e4183e~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * c7f18e4183e tu: Don't expose KHR_present_id,KHR_present_wait without
    KHR_swapchain
  * 09501fe5a7d anv,hasvk: flush what UNIFORM_READ flushes on
    SHADER_READ
  * 6de8b9a65b9 egl/kopper: Pass ancillary invalidate flush flags down
    to gallium.
  * 53780b7a3ac egl/kopper: Use the kopper private interface for
    swapBuffers.
  * 3e1b40be54f egl: Add a note explaining the swapBuffers badness in
    dri2_x11_copy_buffers().
  * a6b850e3358 egl/kopper: Add assert for no kopper in
    dri2_copy_region.
  * 24a32b2cab9 Revert "meson: Fix Asahi build on macOS"
  * 29ffc794104 meson: don't pass vk wsi args where they don't belong
  * 7ea85871fe7 vulkan: prefer vulkan_core.h over vulkan.h
  * f5bde99cbdd gallium: plumb resolve attachments through from
    frontends -> pipe_framebuffer_state
  * 073cced8681 radv/ci: add missing expected failures with
    RADV_PERFTEST=gpl on GFX1100
  * bd848ac92d9 hasvk: use Vulkan runtime's robust buffer access
  * 5053527806f anv: use Vulkan runtime's robust buffer access
  * 9873ccb0714 frontends/va: Map VAEncCodedBufferType buffer as
    PIPE_MAP_READ
  * e832d6a1bbe fix: clover/llvm: replace llvm::None with std::nullopt
    for LLVM 17+
  * b7ab83d59fd ir3: Consider dst type in ubo_vec4 to ldc lowering
  * e089166776d pvr: Add support for VK_ATTACHMENT_LOAD_OP_LOAD.
  * c75c58e54c5 pvr: Upload spm load programs to device.
  * d6408e08df0 pvr: Add SPM load usc empty programs
  * 5d24682aaeb iris: Drop iris_cache_flush_for_render
  * 7c367bef0d5 iris: Flush caches for aux-mode changes more often
  * ad9c0b7a84c iris: Update comment in iris_cache_flush_for_render
  * 9e934ee0681 meson: Combine duplicated c_args and cpp_args
  * 26269464904 meson: Split c_cpp_args from pre_args
  * 4ff295e1d8b meson: drop `TODO: opengl`, it's done
  * 1fa68d91c68 meson: only build glsl when needed
  * e0adef2652b meson: only build libglsl_util when needed
  * 0404918f614 meson: only build the loader when needed
  * ef564f9391f meson: only build mapi when needed
  * de90690aba9 meson: move float64_glsl_file one meson.build up

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 15 Feb 2023 21:55:21 +0100

mesa (23.1.0~git2302121811.1e73fd4aa89~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 1e73fd4aa89 u_pipe_screen_lookup_or_create: avoid re-querying the fd
    to have a consistent hash key
  * cd152ec9305 asahi: use u_pipe_screen_lookup_or_create() to keep
    track of and reuse screens
  * 8193efec836 panfrost: use u_pipe_screen_lookup_or_create() to keep
    track of and reuse screens
  * 7b3ee9335f1 vc4: use u_pipe_screen_lookup_or_create() to keep track
    of and reuse screens
  * 769b5110543 v3d: use u_pipe_screen_lookup_or_create() to keep track
    of and reuse screens
  * 759496cc455 lima: replace custom code with
    u_pipe_screen_lookup_or_create()
  * e17c3af5933 freedreno: replace custom code with
    u_pipe_screen_lookup_or_create()
  * 013f05872c8 gallium: move etnaviv screen_lookup_or_create function
    to common code
  * 1dea6aea204 etnaviv: use simple_mtx to avoid breaking windows in the
    next commit
  * a72035f9c55 util: avoid calling kcmp on Android
  * 0d6c240fcc8 gallium/u_screen.h: add missing stdint.h include
  * e40ed0f88b5 radv: Implement
    VK_ACCESS_2_DESCRIPTOR_BUFFER_READ_BIT_EXT.
  * 7efabfbbe4f radv: Fix missing VK_ACCESS_2_SHADER_SAMPLED_READ_BIT.
  * 97aa8d9547e radv: Fix invalid 64-bit shift.
  * 49a6bdde8ef glsl/standalone: Do not pass memory allocated with
    ralloc_size to free
  * bf67f32d4b4 glsl/standalone: Fix up
    _mesa_reference_shader_program_data signature
  * c0bc0ecf9ea freedreno: Avoid screen lock when no rsc tracking needed
  * b70ea03302f freedreno: Add FD_DIRTY_QUERY
  * 3a98822cc7d freedreno: Remove impossible NULL check
  * 918caaad598 freedreno: Move num_vertices calc to backend
  * b15aaea1d58 freedreno/a6xx: Move num_driver_params to program state
  * 0a17c3afc5e nir: Apply a maximum stack depth to avoid stack
    overflows.
  * 7ead7173937 dzn: Enable 16bit types when supported
  * d7f9e2db598 dzn: Get options4
  * 08fc7315c52 dzn: Delete unused extensions table
  * cc906c0eed0 dzn: Enable get_surface_capabilities2
  * a7d4309234f spirv2dxil: Support 16bit types
  * 536ab16bc1e spirv2dxil: Move shader model into runtime conf struct
  * 4c527f4fc07 spirv2dxil: Lower unaligned loads and stores
  * 9e2683c6f02 spirv2dxil: Set min UBO/SSBO alignments

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 12 Feb 2023 20:05:13 +0100

mesa (23.1.0~git2302061735.89cf0a3bdc9~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 89cf0a3bdc9 zink: fix max acquired image count
  * 22e91af1a77 zink: clear null image surfaces to 0
  * 2fe3cef3675 radv: do not insert fast-linked libraries to the shaders
    cache
  * 104040b5c71 zink: fix leak when rebinding same image surface
  * 4c647c9e259 zink: only save frag const buffers when used by blit
  * c68f9ed0208 radv/llvm: use the ring_offsets shader arg
  * be6f30a0db2 ac/llvm: let ring_offsets be accessed like a normal arg
  * 24618721d39 ac: move ring_offsets to ac_shader_args
  * 10a5035c836 radv: set state.vbo_misaligned_mask_invalid in
    radv_bind_vs_input_state
  * 21f0fc65b22 pvr: add padding bytes when allocating buffer memory
  * 4e75e1bfec3 pvr: Set SPMSCRATCHBUFFER flag.
  * ad8c0878b4a pvr: Update comment about ZS and MSAA buffers for
    pvrsrvkm submission.
  * 3457f8083a6 pvr: Acquire scratch buffer on framebuffer creation.
  * ad9c61c2925 pvr: Add SPM scratch buffer infrastructure.
  * e37f4582078 intel/ds: track end of pipe bits
  * a242500eb47 anv: rename a few internal functions to highlight gfx
    use
  * 6a23b187306 anv: rename RT pipeline function helper
  * fd7debc8bbb intel/fs: make alpha_to_coverage a tristate
  * f3969e2413d intel/fs: Rework dynamic coarse handling
  * 964b8789869 intel/fs: Break out yet another FB write helper
  * 9c658b1fc86 intel/fs/validate: Assert SEND [extended] descriptors
    are uniform
  * 949b42c4dc6 intel/compiler: Convert wm_prog_key::multisample_fbo to
    a tri-state
  * 5644011f063 intel/compiler: Convert wm_prog_key::persample_interp to
    a tri-state
  * d8dfd153c50 intel/fs: Make per-sample and coarse dispatch tri-state
  * 43ca7f4178a intel/compiler: Convert brw_wm_aa_enable to
    brw_sometimes
  * 5d1c5384490 intel/fs: Return early in a couple builtin setup helpers
  * 714a2916731 intel/compiler: Use SHADER_OPCODE_SEND for PI messages
  * 9c62e0c77dc nir: Remove nir_lower_io_force_sample_interpolation
  * d25e5310bc1 intel/nir: Lower barycentrics to per-sample in a
    dedicated pass
  * 991d5461021 intel/compiler: Document wm_prog_key::persample_interp

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 06 Feb 2023 17:53:08 +0100

mesa (23.1.0~git2302031821.7f98a9ba2bd~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 7f98a9ba2bd panfrost: Implement GL_EXT_render_snorm on Bifrost+
  * b6bd9040193 ci/lvp: Drop the subgroupbroadcast skips.
  * 70be21e7c60 gallivm: Use first active invocation in some image/ssbo
    accesses.
  * 8c2493d041c gallivm: Use cttz instead of a loop for
    first_active_invocation().
  * c11fa55f6db gallivm: Return 0 first_active_invocation when we know
    that up front.
  * dc7c518abea gallivm: Refactor out a shared "get the first active
    invocation" loop.
  * 0b0246706ed gallivm: Optimize emit_read_invocation's first-
    invocation loop.
  * d73f72120ae asahi: Lower texcoords late
  * 6908a0decea asahi: Run nir_lower_fragcolor during preprocessing
  * 071ac599604 nir: Add a late texcoord replacement pass
  * 4397c166c01 radv: Work around shader_call_data variables in raygen
    shaders
  * 002707ff094 ci/lavapipe: use dxvk for the traces
  * 3bc1bf7eea1 ci: uprev piglit (etag md5 checksumming support)
  * ed419f46aae aco: remove early_rast wait insert
  * f6b194b6483 nir,ac/llvm,aco,radv,radeonsi: remove
    nir_export_vertex_amd
  * f44872c7b6d nir,ac/llvm,aco: remove nir_export_primitive_amd
  * aea109e25d3 ac/nir/ngg,radv: ms use
    ac_nir_export_(primitive|position|parameter)
  * 80d928c20e8 ac/nir/ngg: gs use ac_nir_export_(position|parameter)
  * bae5a3157f9 ac/nir/ngg: prepare gather_vs_outputs to be used by gs
  * 80506be31bf ac/nir/ngg,radv,radeonsi: nogs use
    ac_nir_export_(position|parameter)
  * f084e9bbe81 ac/nir/ngg: change clipdist_neg_mask_var type to uint32
  * d798214c7b2 ac/nir/ngg: fix clip dist culling mask uninitialized
  * 7c41cdb81f5 ac/nir,radv,radeonsi: gs copy shader use
    ac_nir_export_(position|parameter)
  * 7308637bb46 ac/nir,radv,radeonsi: legacy vs use
    ac_nir_export_(position|parameter)
  * df8c93a9f38 radeonsi: set nr_pos_exports outside of llvm translation
  * 048d4de5e59 radeonsi: remove the extra handling for VS/TES primitive
    id
  * 59135678cf6 radeonsi: update outputs written nir info
  * dcccd94faf8 radeonsi: clamp vertex color in legacy gs instead of gs
    copy shader
  * 601ad9e0a9c amd,radeonsi: implement nir_load_force_vrs_rates_amd in
    driver abi
  * 58988c32393 ac/nir: add force_vrs to ac_nir_export_position

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 03 Feb 2023 18:45:13 +0100

mesa (23.1.0~git2302011828.e29001d0e75~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * e29001d0e75 freedreno/a6xx: Remove excess CS flushing
  * 9b22bdc956b freedreno/a6xx: Also FLUSH_CACHE on image barrier
  * 23e65c60845 freedreno/a6xx: Make shader state independent of grid
    info
  * 1faf7133d44 freedreno: Don't open-code setting dirty CS state
  * 5a37cd8569d freedreno/a6xx: Don't double-write SP_CS_OBJ_START
  * a063caa46a1 freedreno: Skip flush_resource with explicit sync
  * 2503e227178 freedreno: nondraw-batch
  * 0e3f2646ddf freedreno/a6xx: Add CS instrlen workaround
  * bfd7d9e22e9 freedreno/a6xx: Add missing CS_BINDLESS mapping
  * 13fe9c3e635 freedreno/ir3: Scalarize load_ssbo
  * 951d963565f freedreno/a6xx: LRZ for MSAA
  * 5eb85ef756e freedreno/decode: Increase size of offsets table
  * 2b264455b51 aco: use s_pack_ll_b32_b16 for constant copies
  * 9ee9b0859be aco: use s_bfm_64 for constant copies
  * bbc5247bf71 aco/spill: always end spill vgpr after control flow
  * 850d945baf5 aco/tests: add setup_reduce_temp.divergent_if_phi
  * 44fdd2ebcb2 aco: end reduce tmp after control flow, when used within
    control flow
  * e2d63c9a62a ac/gpu_info: add PCIe info
  * e267b86d808 amd: update amdgpu_drm.h
  * cd6712e3a82 radv: pass pCreateInfo to
    radv_graphics_pipeline_compile()
  * 6f17ce08fc2 radv: pass radv_compute_pipeline to
    radv_compute_pipeline_compile()
  * b4deb3aa32d radv: move retained shaders info to
    radv_graphics_pipeline
  * b982f8bbe46 radv: pass radv_graphics_pipeline to
    radv_graphics_pipeline_compile()
  * d1b36b01a20 radv: add helpers for capturing shaders and statistics
  * e1bc8b0b214 radv: simplify pipeline_has_ngg during graphics shaders
    compilation
  * 08e496c29d5 radv: remove useless check about CS in radv_lower_io()
  * 6eb75dc74cc anv: expose EXT_load_store_op_none
  * 9b0c688f515 mailmap: Remap name and email for Val Packett
  * 6bdc29e2e6d intel: enable existing workaround for ICL platform
  * 7e072cfba2c radv: Improve the BVH size estimation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 01 Feb 2023 19:10:57 +0100

mesa (23.1.0~git2301300341.4b841cfec8b~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 4b841cfec8b rusticl: fix build error with valgrind being enabled
  * 4a675f93b9f asahi: Omit extra call to clock_gettime
  * 2f467fb1547 gallium/draw: Enable polygon stipple NIR helpers to
    generate bool1 or bool32 Booleans
  * d3a95f0f713 gallium/draw: Enable aapoint NIR helpers to generate
    bool1, bool32, or float32 Booleans
  * 17b610771dd ir3: support texture and sampler index with offsets
  * 196882a1477 etnaviv: drm: fix check if BO is on a deferred destroy
    list
  * c59369005bf etnaviv: free pm queries dynarray on screen destroy
  * 3156b15f70c etnaviv: drm: fix BO array leaks
  * 0d7f8aa2499 anv: fix null descriptors
  * d7ef1331b5e turnip: make debug_flags a global variable
  * 511c42ef4ed turnip: replace TU_DEBUG_DONT_CARE_AS_LOAD by a bool
  * c0122b81a4e dzn: Consider linked shaders when computing DXIL hash
  * 134c49072a1 pvr: Process wait event sub command.
  * 6d7a076daa0 pvr: Process set and reset event sub commands.
  * ac339d97978 zink: set VK_PIPELINE_CREATE_DESCRIPTOR_BUFFER_BIT_EXT
    when using DB
  * 6f7b752fdd2 zink: disable bindless texture ext with descriptor
    buffer
  * cc9fa060ee1 zink: always set RESOURCE usage for descriptor buffers
  * 59989d04623 zink: assert that buffer descriptor usage is populated
    before bind
  * 3c562cfc064 zink: set vkusage/vkflags for buffer resource objects
  * c545300f30b zink: add VK_BUFFER_USAGE_SHADER_DEVICE_ADDRESS_BIT for
    buffers if ext is enabled
  * ccde3e02bad zink: fix heap/memory type selection
  * 07809c45271 Revert "zink: allow direct memory mapping for any
    COHERENT+CACHED buffer"
  * 38a087c4ce2 anv: there's no need to set exec_obj offsets twice
  * 5de60fbc3eb radv: Loop over shader stages in
    flush_indirect_descriptor_sets.
  * 0b2fad04267 radv: Fix emitting tess indirect descriptors twice.
  * 9c5e47e66d7 pvr: Split render job submission for multi-layer
    framebuffers
  * 8cc474cd87b pvr: Rename global_queue_job_count to
    global_cmd_buffer_submit_count
  * 187a95e617d pvr: Add pvr_csb_bake()
  * 695cf75266f aco: set has_color_exports with GPL
  * 1a93cd15563 radv: add a layer for fixing rendering issues with RAGE2

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 30 Jan 2023 07:13:51 +0100

mesa (23.1.0~git2301260148.f6c06ef2f66~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * f6c06ef2f66 ci: Add manual rules variations to disable irrelevant
    driver jobs.
  * 67547a04b60 ci: Move the performance jobs' allow_failure:true to the
    gl rules.
  * e27d217fb16 vulkan/wsi/wayland: improve same gpu detection
  * 56e758d9e9b mesa: fix out of bounds stack access on big endian
  * 6c80f7c5552 zink: Fix non debug builds failing to compile on
  * 7b5e9336298 intel/fs: Fix src and dst types of LOAD_PAYLOAD ACP
    entries during copy propagation.
  * 51b8abe0ba5 docs: Lower Python requirement to 3.6
  * bca22a65781 util/glsl2spirv: Fix build with Python 3.6
  * e5e64e5c51d zink: validation ci updates
  * 23d3783f587 zink: force GENERAL layout for all fb attachments with
    image binds
  * 1b52e85ead1 zink: update sampler layout when detecting feedback loop
    for first time
  * d791e9a77db zink: return false for implicit feedback loop check with
    image binds
  * bdaded5a188 zink: don't skip repeated handling feedback loops
  * fda5f83ced1 zink: move barrier jit to zink_context.c
  * 06a125942be zink: fix VK_DYNAMIC_STATE_LINE_WIDTH usage
  * a5bff81f473 radv/winsys: prefix all error messages with RADV
  * d5846bd1e5a radv: Move constant flushing check out to callers.
  * 5ccc2049fae intel/ds: Nuke intel_ds_queue::queue_id
  * f2fdd14907a hasvk: Nuke anv_queue:index_in_family
  * 013e849a2c6 anv: Nuke anv_queue:index_in_family
  * 80dd6ed074b intel: Add kmd_type parameter to necessary intel_gem.h
    functions
  * 162695f0b87 intel: Add intel_kmd_type parameter to
    intel_engine_get_info()
  * 2c42641994c intel/dev: Detect what is the kernel mode driver loaded
  * 0504a3b0792 radeonsi: correctly declare YUV420_10 RT Format support
    for AV1
  * 3eb646efd0d radv: Merge the leaf and internal converter
  * 883f18f761b radv: skip creation of null TLAS for null winsys
  * 345d41155fe ci/b2c: uprev to b2c v0.9.9
  * 7b51a583edb ci/android: add android to the ci
  * 068dc91317d ci: export artifacts from debian-android
  * 3cb7a8537be ci: debian-android compile virgl

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 26 Jan 2023 02:18:36 +0100

mesa (23.1.0~git2301212126.d59683ab898~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * d59683ab898 radv: Enable extended SAH for shallow BVHs
  * da87c2883df radv: Wrap internal build type inside a build_config
    struct
  * c53eb2f3d4b radv: Add a shader variant for PLOC with extended SAH
  * b1755c0b21f radv/bvh: Add a define for extended SAH
  * 13a8a4071a4 radv/bvh/meson: Add the option to set defines
  * e4ccd74cbc8 ci: be explicit about the `meson setup` subcommand
  * 4f50eba5a57 r600/sfn: Fix splitting of multislot alu ops
  * ac30c402112 r600/sfn: Fix opcode and result dest slot mask for
    variable size dot
  * 797b8391110 glthread: disallow glthread if buffer uploads are
    unsupported
  * aca09e4f719 glthread: do vertex uploads if an index buffer is
    present for MultiDrawElements
  * 7921396c7bf glthread: remove the vbo_upload_ratio_too_large fallback
    for glMultiDrawElements
  * 98a0e8c9080 glthread: make marshal functions for glBegin/End attribs
    non-static
  * e9abed5315d glthread: pack and name the type of glthread_vao::Attrib
  * 02f1968696f mesa: move gl_vertex_format_user definition into
    glthread.h
  * c00db0dbc86 glthread: do vertex uploads if an index buffer is
    present for glDrawElements
  * ed7d3b33b0f glthread: change multi_draw_elements_async() to never
    fail due to large size
  * fc93c69701f glthread: execute glMultiDrawArrays(draw_count < 0)
    asynchronously
  * 68a926a15b7 glthread: set GL_OUT_OF_MEMORY if we fail to upload
    vertices
  * e39b90311ca glthread: set GL_OUT_OF_MEMORY if we fail to upload
    indices
  * 777166cc66c glthread: handle GL_*_ARRAY in glEnable/Disable
  * a4d813ba547 glapi: autogenerate function parameters with no space
    between * and variable
  * 721526227cd mesa: allow GL_UNSIGNED_INT64_ARB as vertex format for
    ARB_bindless_texture
  * 4f6e7858762 util: fix util_is_vbo_upload_ratio_too_large
  * 4d4995b32bd glthread: fix an upload buffer leak
  * 6f02f9d1084 anv: fix preemption enable emission in gpu_memcpy
  * b3fd72fd091 radv: remove redundant type sizing
  * 46e2cc5d4ce radv: add some graphics pipeline hints to optimize
    pipeline bind
  * 8fc5d93060c radv: simplify depth aspect check in
    radv_handle_image_transition()
  * f9ff2d9d078 radv: reorder dynamic state checks during bind
  * 83c290ff842 radv: repack radv_graphics_pipeline struct

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 22 Jan 2023 04:43:58 +0100

mesa (23.1.0~git2301182332.b82d9b1a3d0~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * b82d9b1a3d0 nir/divergence: add missing RT intrinsinc handling
  * 7e68cf91d74 mesa: Set info.separate_shader for ARB programs
  * 696069bc0d1 ci: Add some new folks to the restricted-traces access
    list.
  * 9db7c1a509f r300: remove backend negative addressing emulation
  * 7bec63c0249 r300: set ubo_vec4_max ntt option properly
  * cd18d541de6 ntt: pass ubo_vec4_max nir_opt_offsets flag through ntt
    options
  * 4c0a54fc364 tool/pps: Fix 32-bit build issue with format string
  * a32d6071e15 d3d12: Lower minimum supported Shader Model to 6.0
  * 5e3ca1f97fa lima: fix memory leak related to
    u_transfer_helper_create()
  * 926ba335fdf pvr: add support for tile buffer output clear
  * 96784f6cc18 pvr: fix uses_tile_buffers in clear color attachment
  * 027dd2c246c radeonsi/sqtt: implement offset workaround for gfx11
  * 215babd3ca9 radeonsi/sqtt: update registers for gfx11
  * a3dc8b870d6 radeonsi/sqtt: disable SE1+ on GFX11
  * 2e3dc3838ec radeonsi/sqtt: don't read results for disabled SEs
  * f10f2c9bbb7 ac: add TC_OP_ATOMIC_SUB_32
  * 50bb7745ca8 v3dv: enable shaderStorageImageReadWithoutFormat
  * b56be4c37ec broadcom/compiler: treat PIPE_FORMAT_NONE as 32-bit
    formats for output type
  * 41a081380a8 broadcom/compiler: v3d_nir_lower_txf_ms doesn't need
    v3d_compile
  * a6c6a4ad04d intel/blorp: Lower base_workgroup_id to zero
  * a6ac4cbae88 freedreno: add support for markers.
  * ab9dd18b68d util/u_trace: pass utrace context to marker functions.
  * c7fc30421cb radv: Advertise rt pipelines for Control (DX12)
  * 0429f11dfb9 zink: remove depth_clip_control_missing workaround
  * c12fed18049 zink: fix depth-clip disable cap
  * 09a87d21711 zink: whitespace fixup
  * 84241b1f75a ac/nir: clear unused components before storing XFB
    outputs to LDS
  * e39bf3e6aa8 zink: skip implicit feedback loop layout changes if
    feedback loop not present
  * 9ba06579035 zink: make implicit feedback loop application stricter
  * 230a5547190 zink: outdent code in add_implicit_color_feedback_loop()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 19 Jan 2023 00:41:01 +0100

mesa (23.1.0~git2301151119.4fb2463a37f~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 4fb2463a37f etnaviv: nir: use lower_fround_even
  * 5fdfd8044d7 panfrost: Don't use AFBC of sRGB luminance-alpha
  * 48a0478126f zink: add renderdoc handling
  * 7e52bd7b182 venus: vn_queue: align vulkan object variable naming
  * 32660a41ea8 venus: refactor QueueSubmit/QueueSubmit2
  * 6863092d956 venus: append fence feedback batch
  * 2889a0478b7 venus: drop VkQueueBindSparse
  * 3b107962a29 venus: remove filtering external semaphores for
    QueueSubmit
  * f6ffb5ac365 venus: require exportable/importable bit for ext
    semaphores sync fd
  * 31e7471be2e venus: require exportable bit for ext fence sync fd
  * 75e369335f9 venus: require importable external semaphores for WSI
  * f09cc33dfb7 venus: refactor VK_KHR_synchronization2 ext sync fd
    requirements
  * 72371af332c venus: refactor out vn_feedback_event_cmd_record2
  * 842ca284650 gbm/backend: fix gbm compile without dri
  * f1faf30a5f0 dzn: Fix clear bind flag logic
  * 59495215086 dzn/ci: Add image test group, which is all passing now
  * 889f03fc243 dzn/ci: Remove flakes/fails that don't hit anymore
  * 9f9a58eb952 ci/windows: Download updated WARP 1.0.4 package
  * a5a19903ab6 mesa: Trivially advertise NV_generate_mipmap_sRGB
  * 2aad8dbfa52 mesa: Fix extension table formatting
  * d3feccfa6f5 radv: Use the new NIR builder tex helpers for meta
  * 433fe592ace nir/builder: Add some texture helpers
  * 30f3fec3801 nir: Add more opcodes to nir_tex_instr_is_query()
  * 7d8b90a4705 glx: Harmonize glXCreateGLXPixmap with glXCreatePixmap
  * 2cc3763d045 glx: Fix drawable type inference in visual/fbconfig
    setup
  * 86c9a31d99d glx: Inline a few single-use constant strings into their
    user
  * 07292d6e76b glx: Move 1.2 GLXPixmap code into glx_pbuffer.c
  * cf90a2b28f0 glx: Check for initial "glX" first in glXGetProcAddress
  * f8d3c222db2 glx: Reflow MakeContextCurrent a little
  * cf9debb6397 glx: Clean up some funny business from context
    bind/unbind

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 15 Jan 2023 12:39:05 +0100

mesa (23.0.0~git2301111655.e11e68b56b1~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * e11e68b56b1 radv,aco: fix enable_mrt_output_nan_fixup for RAGE2
    again
  * 38d6185432d ci: debian-build-testing, build only the LTO variant
  * f44bd88c9dd docs: fixup envvar-directive syntax
  * 0c58ad3e321 docs: use envvar directive more
  * c2200a410bf v3dv: expose VK_KHR_shader_integer_dot_product
  * 22ef66bcc96 v3d/compiler: remove unused sample_coverage field from
    fs key.
  * 09782e5e6d5 v3dv: fix alpha-to-one for single sample setup
  * f40afe98836 v3d: add a debug option to optimize shader compile times
  * dee97e7b998 dzn: Allow multiple graphics queues
  * 5f1b8b3e6c9 dzn: Use DXGI swapchains
  * 2f462105fac vulkan/wsi: Hook-up DXGI swapchains and DComp
  * e4d81c05ea4 vulkan/wsi: Port Win32 WSI to C++
  * a40913b3e00 vulkan/wsi: Allow platform code to define extra
    dependencies
  * 2975a7f453a vulkan/wsi: Add support for image -> image blits
  * 65e4873d829 vulkan/wsi: Dissociate the blit context and image
    configuration steps
  * fa4e7291658 vulkan/wsi: Prepare things for image to image blits
  * bbcbf2cd91b vulkan/wsi: Don't set use_buffer_blit manually in the
    win32 WSI logic
  * 5fb2adb8fdb vulkan/wsi: Simplify
    wsi_win32_surface_create_swapchain() error path
  * 52c87d0b839 vulkan/wsi: Indent fixes in ws_common_win32.c
  * a67f5f32a8d meson: Define VK_USE_PLATFORM_WIN32_KHR for C++
  * 9ff54a52ec7 docs: update new_features.txt for additional work with
    RADV
  * bed18ab3e2f intel/compiler: fine-grained control of dispatch widths
  * bf3112805ce ci/venus: re-enable venus-lavapipe
  * 3c91168c71c ci/venus: specify render server path to enable server
    config
  * e86c99bb28f ci: uprev virglrenderer
  * f13a42e5a15 Fix incorrect stage reference
  * 63345d59b02 d3d12: Unionize shader variables in d3d12_shader_key to
    reduce size
  * e1cbff228a7 docs: Add short documentation about RMV tracing
    variables
  * e624494c0f1 radv: Enable RMV tracing
  * abf3bcd6ea6 radv: Add RMV resource tracking

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 11 Jan 2023 19:53:06 +0100

mesa (23.0.0~git2301101701.b1e59646de7~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * b1e59646de7 aco/gfx11: increase vgpr_limit to 256
  * 6872f8d861b aco/gfx11: allow true 16-bit instructions to access
    v128+
  * 254b178d5bb aco: disallow SGPRS/constants with interpolation
    instructions
  * 5af891a747d aco: add more opcodes to can_use_DPP()
  * c3dd1931d99 aco: allow Builder::Result to be dereferenced
  * e386523380d aco/gfx11: fix discard early exit removal optimization
  * 9d814c405bb microsoft/spirv_to_dxil: Let linking report the need of
    runtime data
  * 6481805e000 etnaviv: properly check for new clear value in sampler
    TS setup
  * 03fdcbba19b etnaviv: blt: properly use upper half of clear value
  * a358890667a ir3/print: Consider the size of input when matching it
    to a reg
  * d474cc935e7 ir3: Force flat.b sources to be equal
  * a45d32b10b3 tu: Fix varyings interpolation reading stale values
  * 25a151533cd loader/dri3: Overhaul draw->cur_num_back handling
  * 27366cb5107 loader/dri3: Add dri3_set_render_buffer helper
  * 5d25a4cab40 loader/dri3: Move NULL handling into
    dri3_free_render_buffer
  * 6e888f61593 radv: enable PS epilogs on-demand for some dynamic
    states
  * eb07a11b8f4 radv: add support for compiling PS epilogs on-demand
  * 11469f7553d radv: copy the non-compacted color format at pipeline
    bind time
  * bbd7f700739 radv: rework PS epilog emission
  * 7de50e4c6c0 radv: keep track of SPI_SHADER_COL_FORMAT for PS epilogs
  * c9f30c4aa0e radv: enable the PS epilogs cache when some ds3 states
    are enabled
  * 75b0d6de040 radv: add support for a PS epilogs cache in the device
  * c0f95913a09 ci/rpi4: add a couple of tests as flaky
  * 7931b4026f3 ci/rpi3: add another test variant (draw-copypixels-sync)
    as flaky
  * 28d6caad605 gallium/draw: assert shader-stage
  * 7c1b9ee6b76 gallium/draw: use nir_shader_instructions_pass for
    nir_lower_aaline_fs
  * 3897a233fb1 radv: add a new dirty flag for the RB+ state
  * f1e06b46a9d lvp: avoid redundant sampler views and image views
  * f18827e0153 zink: stop using
    VK_PIPELINE_CACHE_CREATE_EXTERNALLY_SYNCHRONIZED_BIT
  * 2e9ac9278c2 agx: Remove obsolete comment

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 10 Jan 2023 18:20:31 +0100

mesa (23.0.0~git2301041730.0b72ff00b15~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 0b72ff00b15 pvr: Remove PVR_STATIC_CLEAR_.*_BIT and use
    VkImageAspectFlags.
  * 7509e259f85 pvr: Implement color/depth/depth+stencil attachment
    clear.
  * 6e2ec310431 pvr: Add clear attachment programs in device.
  * 72151aa4260 pvr: Add comments documenting large/normal clear words.
  * a308d38fae0 pvr: Add empty clear attachment usc programs.
  * 821c6b93423 pvr: Implement depth/stencil/depth+stencil attachment
    clear.
  * 5611dedd787 pvr: Fix typo in 'err_free_verices_buffer'.
  * 603570535d1 pvr: Add pvr_clear_vertices_upload().
  * 13fc4b1780f pvr: Move static clear state into pvr_clear.c .
  * aa37415f1c8 pvr: Add layer count support to pvr_clear_vdm_state().
  * 4a9f23c564a pvr: Move clear VDM state into pvr_clear.h .
  * a70b7245193 pvr: Add clear rta vert shader pds program.
  * 22bad762f47 pvr: Add pvr_clear.{h,c} .
  * 821da19046b pvr: Add multi layer passthough vert shader upload in
    device.
  * 37e8e0a4942 pvr: Change "ID" to "id" in instance_ID_modifier.
  * 305f0de7a32 ci: Remove MESA_ARM_BUILD_TAG environment variable
  * 37d56a05764 ci: Bump crosvm and virglrenderer versions
  * 234e8fd157f r600/sfn: make sure we return a non-negative number of
    registers
  * c3e2e71b501 radv: rework generating the PS epilog key
  * 4f6f53a18ae radv: simplify removing unused color exports
  * 476a1552c1b docs/freedreno: Extract debug tooling docs and improve
    gpu dbg docs
  * f5de21336b7 radv/winsys: set has_3d_cube_border_color_mipmap for
    null winsys
  * e176eb6c390 docs/freedreno: Extract LRZ docs from tu_lrz
  * 22543653d5b radv: fix multiple resolves in the same subpass
  * 043508d8f84 glsl: Remove bit_count lowering
  * abe5acf7fda glsl: Remove bitfield_reverse lowering
  * f5722c49734 glsl: Remove bitfield_extract and bitfield_insert
    lowering
  * db241fbd70c nir: Don't allow conflicting bitfield lowering passes
  * 8ab7ec01290 intel/compiler: Enable lower_bitfield_extract_to_shifts
    and lower_bitfield_insert_to_shifts for pre-Gfx7
  * 13f7ef5e0c0 util: Drop the ENUM_PACKED macro

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 04 Jan 2023 18:05:58 +0100

mesa (23.0.0~git2212300139.05ca7d114ea~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 05ca7d114ea bin/gen_release_notes.py: read Closes/Fixes tags case-
    insensitively
  * e67578a264b bin/gen_release_notes.py: parse "Fixes" tags as well as
    "Closes"
  * 52cd87ea16f bin/gen_release_notes.py: don't fail if "Closes" refers
    to an MR
  * 334123a908c bin/gen_release_notes.py: do not fail on confidential
    features
  * bd807eecd16 bin/gen_release_notes.py: do not end "features" with
    "None"
  * cf24b70dc6c docs: update calendar for 22.3.2
  * b22dd4d2d33 docs: add release notes for 22.3.2
  * 980d6a91eec gen_release_notes: strip second newline in new features
  * 75eb0d2891c freedreno/ir3: Allow isam for non-bindless ssbo loads
  * 7cf7bf8b9ee ci/broadcom: add rpi3 flake
    color_clears.multi_context.gles2.rgba8888_pbuffer
  * def474e916b intel/genxml/gen12.5: Pipe_Control::Remove Global
    Snapshot Count Reset
  * c6d1f76da28 anv: Add and use emit_pipeline_select()
  * 57f73d097ec ci/iris: add iris-kbl flake
  * 4bd1829a5a4 ci: Enable gl-renderer in weston for wayland testing
  * dcae3018281 pan/va: Fix MUX.i32 and MUX.v2i16 description. Should
    be:
  * d14d7c49db2 pan/va: Fix d0 description in enum "Load lane (8-bit)"
  * f102b574235 pan/va: Fix description for constant 0xFAFCFDFE: -2, -3,
    -4, -6
  * db9cd8b5daa ci/amd: decrease number of stoney runners
  * 2b2824b9eaa util/xmlconfig: fix memory leak triggered by duplicates
  * f603d8ce9e8 asahi: Clang-format the subtree
  * bf93fd46e21 asahi: Clang-format the twiddled tests
  * c4c4f0502be asahi: Add missing #include's
  * d9dc77f068e asahi: Add some clang-format commas
  * c1f175c9fa7 asahi: Manually format some parts of the code
  * de0fcd08d3f asahi: Add .clang-format file
  * 680c873b353 agx: Undo sed fail
  * b9aa66d5d0a anv: disable preemption for 3DPRIMITIVE during streamout
  * 910f5a18cf8 intel/genxml: add disable preemption field for gen125
  * afdbed9e9c3 anv: fix potential integer overflow
  * eb2576902d9 radv: Use common vkEnumerateDeviceLayerProperties

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 30 Dec 2022 11:52:10 +0100

mesa (23.0.0~git2212261357.e584447aed4~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * e584447aed4 panvk: Fix null pointer dereference on cmd_buffer->ops
  * 2024115b798 intel/ds: add missing generate draws perfetto glue
  * bb4aa8a3eab panfrost: Fix race condition in BO imports
  * f401599f79a vc4: Fix race condition in BO imports
  * 7dbb1a091aa v3d: Fix race condition in BO imports
  * 8c3c11ad33d Revert "ci: Windows runner is experiencing DNS issues;
    disable Microsoft farm"
  * ad4d7ca8332 kmsro: Fix renderonly_scanout BO aliasing
  * 3e568cc6fe4 freedreno/perfetto: Add grid information for compute
    jobs
  * b53fa255873 panfrost: Clang-format pan_layout.c
  * 0afd691f296 panfrost: clang-format the tree
  * a4705afe634 panfrost: Fix up some formatting for clang-format
  * e35719be6fb panfrost: Add missing #includes
  * 90e128ae03b panfrost: Remove perfetto-specific .clang-format
  * ee2dcdc3df7 panfrost: Add clang-format file
  * c950fe97a05 anv: implement generated (indexed) indirect draws
  * 3596a8ea7a3 anv: factor out some indirect draw count entry points
  * 61b730f1f48 anv: decouple util function from anv_cmd_buffer
  * bd83e5ddaf5 pan/bi: Use write masks on Valhall texture instrs
  * 7d9c771b9b8 pan/va: Pack texture write masks
  * 182087245da panfrost: Don't flush readers for reads
  * 3c56b9c7a3f panfrost: Remove rsrc->track
  * 955417aa3ec panfrost: Upload sysvals to a staging buffer
  * b481507c03e panfrost,asahi: Set vendor to Mesa
  * 3e28c5b9f96 anv: Pass anv_bo as parameter to anv_gem_mmap()
  * 95ce9664d5d intel/common: Move i915 gem specific code to its own
    file
  * f51bafc3683 intel/common: Move i915 engine specific code to its own
    file
  * c14060e0d8e iris: Make iris_bo_export_gem_handle() static
  * f6d73ea7b40 pan/lower_framebuffer: Remove unused pack
  * 8dd35e0ac79 pan/mdg: Remove unused disassembler functions
  * 8e1a4668829 panfrost: Remove unused so_mask calculation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 26 Dec 2022 17:20:59 +0100

mesa (23.0.0~git2212221532.fa07dcb5885~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * fa07dcb5885 radeon: drmGetVersion can return NULL
  * 739a08ad235 anv: handle null push descriptors in deferred
    optimization
  * c52b7aa732e ci: Windows runner is experiencing DNS issues; disable
    Microsoft farm
  * 0d36f7f76d5 radv: Only apply taskmesh indirect 0 bug workaround when
    necessary.
  * 50330aaccbb ac: Add has_taskmesh_indirect0_bug field to ac_gpu_info
    struct.
  * d368914a388 radv: Include view index SET_SH_REG in
    ace_predication_size.
  * 590f74084d5 ci/lava: Show LAVA job info during fails
  * 2e723cdc10a ci/lava: Anticipate overlayfs download
  * 584762c2168 ci/lava: Fix Gitlab section rendering
  * f040122bedb ci/lava: Feed yaml.load with raw bytes data
  * ce0ca7ed21d Revert "ci: Lima farm maintenance"
  * d004b4929d5 radv: Don't assume there is always at least 1 preamble.
  * 376a947c09e venus: fallback to passthrough pci bus info when not
    natively supported
  * 55df7ad5714 r600/sfn: Fix possible dest channels for variable size
    dot
  * 281c07d89f1 radv: Fix uninitalized struct for trap handler
  * 05fab97b2ce r600/sfn: Don't try to re-use the iterator when uses is
    updated
  * aace38c2d83 radv: Enable EXT_mesh_shader by default on GFX10.3.
  * b8e4cc73bfa radv/amdgpu: Remove cs_add_buffers because it's no
    longer necessary.
  * 97d3377b56a radv/amdgpu: Remove command submission with scheduled
    dependencies.
  * 7cb128ffb1e radv: Add gang wait preambles and postambles to ensure
    correct behaviour.
  * c47c4d5f802 radv: Remove ACE->GFX wait at the end of each command
    buffer.
  * 0b0c941d755 radv: Rename radv_update_ace_preambles to
    radv_update_gang_preambles.
  * bcadea6af69 radv: Implement gang submit in radv_queue_submit_normal.
  * d065abef758 radv: Update ACE preambles in radv_queue_submit_normal.
  * 76deaa1b1a9 radv: Refactor command buffer handling in
    radv_queue_submit_normal.
  * 5ec9a96b91d radv: Remove radv_queue_submit_with_ace and disable
    task/mesh shaders.
  * ce62ec3bbb4 radv: Enable gang submit on the null winsys.
  * 24404d83305 ac: Add has_gang_submit field to ac_gpu_info.
  * 294604bc56c radv/amdgpu: Allow using more than 1 preamble with
    cs_submit.
  * e9d5b5c9b34 radv/amdgpu: Add IP type to IB info and use it when
    submitting.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 22 Dec 2022 16:13:30 +0100

mesa (23.0.0~git2212180634.47feb2b0134~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 47feb2b0134 docs: update to latest venus driver support
  * 553c0a30672 venus: fix VK_EXT_pci_bus_info support
  * 63cb570ef3d venus: sync protocol fixes and support for
    VK_EXT_pci_bus_info
  * 18f4dc6b75b etnaviv: Do expose 2D texture support on pre-halti GPUs
  * 486c3417691 panfrost: Add architecture description XML for v10
  * a9cdbed5a28 freedreno/drm: Short-circuit kernel for timeout=0 waits
  * 90b9b1330d0 freedreno/drm/virtio: Guest side fence waits
  * 995c64ddcbb freedreno/drm/virtio: More tracepoints
  * be6d21ed56a freedreno: Limit cached staging BOs to PIPE_MAP_READ
  * 4be235af7ca freedreno/drm/virtio: Remove prealloc_list
  * 48610676897 freedreno/drm: Add sub-allocator
  * 7d0d82f25ff util/vma: Add "nospan"
  * 793741c9369 freedreno/drm: Merge in_fence_fd's
  * 137cd3b0fa9 freedreno/drm: Move no_implicit_sync accounting
  * 7b02bc6139f freedreno/drm: Drop fd_bo_fence
  * 434a8412e83 freedreno/drm: Re-enable submit fence merging
  * 932ce591ac7 freedreno/drm: Simplify deferred submit flushing
  * 48b5164356c freedreno/drm: Return fence from submit flush
  * 7469574814e freedreno: Rename fd_fence -> fd_pipe_fence
  * c1a621813b3 freedreno/drm: Combine fd_fence and fd_submit_fence
  * 803df07d9ed freedreno/drm: Replace shared/nosync fields
  * e6b364f9248 freedreno/drm: Reorg BO alloc flags
  * fd20df8f094 freedreno/drm: Invert BO destruction
  * 84f44137ff7 freedreno/drm: Shuffle around BO init
  * db0f273cfb4 freedreno/drm: Drop pipe ref to device
  * c196e13e1f0 freedreno/drm: Get rid of fd_bo_del_locked()
  * 5136f25667a freedreno/drm: Rework batch BO delete
  * 75a4d902806 freedreno/drm: Start prying apart table_lock
  * 2ee7012c2c6 freedreno/drm: Simplify cleanup_fences()
  * 73ab83d2287 freedreno/drm: Add bo list iterator macros

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 18 Dec 2022 18:29:36 +0100

mesa (23.0.0~git2212151700.ffc8d490b7d~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * ffc8d490b7d radv/rra: Fix leaf node id order
  * 3a8c3b813e9 radv/rra: Validate geometry_id
  * 446c49cdf76 radv/rra: Refactor resource management during dumping
  * ab8777b384e radv/rra: Emit leaf node ids for leaf nodes instead of
    internal nodes
  * 5a5f3fe561b ac/sqtt: bump the maximum number of traces to 6 for
    GFX11
  * 5f7955ff74a ac/rgp: add missing GFX11 bits for RGP
  * 54ae38042ab ac/nir: remove num_es_threads_var
  * 69e55d9c1b4 ac/nir: fix ngg culling on gfx11
  * ba31ec0d6fe vc4: replace open-coded F_DUPFD_CLOEXEC with
    os_dupfd_cloexec()
  * 78a75e0d257 intel/common/intel_genX_state.h: Add
    intel_set_ps_dispatch_state()
  * f16e76d9409 intel/common: Add intel_genX_state.h
  * ed28705994f radv/ci: add lists for GFX1100
  * 3440e89437e st/mesa: Enable Alpha writes when writing RGB faked as
    RGBA
  * c1144c82647 docs: update calendar and link releases notes for 22.3.1
  * 42de551b836 docs: add release notes for 22.3.1
  * a8615016322 panfrost: Add tool to print supported texture formats
  * dafbdd8a35f ci/nouveau: Add a bunch of the top hits of gk20a flakes.
  * 3890df33829 ci/nouveau: Sort some uncategorized gk20a flakes.
  * 0521027182c nir: Allow more than just ALU instructions in 'weak' GVN
  * d5d03a7273d nir: Perform 'weak' global value numbering in all GCM
    passes
  * e930bff19e7 anv: remove anv_reloc_list->array_length
  * 1358622878b anv: remove anv_reloc_list->reloc_bos
  * f1c4c646b8a anv: remove anv_reloc_list_grow()
  * 4168d3ef30b anv: remove anv_reloc_list->num_relocs
  * 4b1c4925e74 anv: remove anv_execbuf->surface_states_relocs
  * c14857e915d intel/common: clean up AUX macros
  * 9ff471fdc65 intel/vulkan: replace AUX macros with interfaces
  * 78a4b6deed3 intel/isl: Support 1MB alignment for AUX mapping
  * 9698eee50d9 intel/common: Support 1MB granularity AUX mapping format
    (Bspec 44930)
  * 49c6e306115 ci/bare-metal: Avoid a bug in armhf stripping causing
    tempfiles in artifacts.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 15 Dec 2022 17:24:02 +0100

mesa (23.0.0~git2212141652.f94bd1d7233~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * f94bd1d7233 freedreno: Document various preemption-related
    registers/packets
  * 34010a50d42 wsi/x11: Rename the present progress objects.
  * 9e55766f630 wsi/x11: Fix possible deadlock with wait_ready.
  * 657d1be1539 radv: Don't lower subgroup shuffle on GFX11.
  * db5c3f170f1 aco: Emulate Wave64 bpermute on GFX11.
  * 853e76f0076 aco: Stylistic changes to emit_gfx10_wave64_bpermute.
  * 640e8016510 aco: Split opcodes for GFX6 and GFX10 emulated bpermute.
  * 614348f28be aco: Don't accept constants on p_bpermute.
  * 27b70f28d97 ci/venus: add a VKCTS mapping test to the flakes list
  * 16a7e15d4fc iris: Enable compression for image load/store in more
    cases
  * bf3d6ca94fa iris: Allow fast clears on compressed image load/store
    access
  * 7b2a690a354 iris: Update aux state tracking for image views after
    draws/dispatches
  * a9652fe5885 iris: Drop disable_rb_aux_buffer handling for image
    views
  * 806082e96fa iris: Drop 'isl_' prefix from
    'formats_are_fast_clear_compatible'
  * 880fab60a79 iris: Pin the clear color BO in use_image()
  * 699e60681a3 iris: Drop batch parameter from
    iris_update_postdraw_resolve_tracking
  * 9dedbf66f62 zink: Fix reversed cap declarations for ImageBuffer
  * bedb9b73db9 radv/ci: bump most jobs to the kernel to 6.1 + latest
    firmwares
  * 264a0cabd1d anv: assert when number of primitives is higher than max
  * d7a1916798b anv: handle mesh shaders with max primitives == 0
  * c26a053f2b6 radv: disable more NIR opts in radv_postprocess_nir()
    with DISABLE_OPTIMIZATIONS
  * 05d2ed7350c radv: move a conditional check to
    radv_remove_color_exports()
  * a43482e8d67 radv: advertise
    VK_AMD_shader_early_and_late_fragment_tests
  * 3ff58049b5a radv: implement AMD_shader_early_and_late_fragment_tests
  * 877c10efd16 spirv: add support for
    AMD_shader_early_and_late_fragment_tests
  * ac8131b564e radeonsi/vcn: add support for 10bit input and enc 8bit
    output
  * eb76cee9f88 nir: Eliminate nir_op_i2b
  * 8b37046765c nir/builder: Handle i2b conversions specially in
    nir_type_convert
  * edae161d989 intel/fs: Use nir_type_convert instead of
    nir_type_conversion_op
  * e34b8866b41 microsoft/compiler: Use nir_type_convert instead of
    nir_type_conversion_op

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 14 Dec 2022 17:29:48 +0100

mesa (23.0.0~git2212112306.c9c44d63da4~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * c9c44d63da4 docs/release-calendar: add 22.3.x dates
  * 110d550941f zink: Don't set dynamic color attachment state for 0
    attachments.
  * efa4e9568b2 radv: Use correct watermark for early loop exit.
  * f0d6a1a6854 radv: Rename stack_base to stack_low_watermark.
  * b0a6e0e1741 Revert "r600/sfn: Make use of variable length DOT"
  * c9b13a93385 cso: remove cso_draw_vbo from all draws, call the driver
    or u_vbuf directly
  * 85f01982a08 cso: add a base class cso_context_base holding
    pipe_context*
  * 37e89b41f1f cso: unify cso_draw_vbo and cso_multi_draw
  * 8b4201d6bd7 gallium/u_vbuf: change u_vbuf_draw_vbo to accept
    pipe_context as first param
  * 4a92492a8a0 gallium: add the u_vbuf pointer into pipe_context
  * a9934a9f649 asahi: Implement occlusion queries
  * 4dabbb761b4 asahi: Move query functions to agx_query.c
  * 7a5f88cb38c asahi: Don't upload samplers for clears/stores
  * d2f27d282f2 asahi: Avoid reloads with staging blits
  * dc4cf64a768 asahi: Don't reload uninitialized surfaces
  * 949a760c9f5 asahi: Fix Z32S8 harder
  * 0c2500168d0 asahi: Don't shadow idle resources
  * c9144eff488 asahi: Model alignment of occlusion query indices
  * 3a318e4265a asahi: Identify some more fields used with layered
  * c3eb81fd169 asahi: Identify XML for anisotropic filtering
  * 7f247743a3c asahi: Check-box implement rasterizer discard
  * d2a2d1997ec asahi: Wire in 1D (array) textures
  * 5612d2cbeb9 asahi: Dirty track VS/FS key updates
  * 37feaf9c0c5 asahi: Separate VS/FS shader keys
  * 720ff76de42 asahi: Implement invalidate_resource
  * 28b652af801 asahi: Track batch masks on ZS/blend CSO
  * 33b18768575 asahi: Dirty track blend state
  * 29e6c00e3c7 asahi: Enable dirty tracking
  * b28fe26d7c6 ail: Save level_offsets_compressed_B
  * 3895545b834 panfrost: implement clear_depth_stencil

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 11 Dec 2022 23:23:48 +0100

mesa (23.0.0~git2212091658.20e670d0603~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 20e670d0603 aco/ra: don't swap create_vector operand with definition
    blocker for SGPRs
  * a05dd58309c aco/ra: don't swap p_create_vector operand with
    definition blocker for scc
  * 4dff3ff005b nir/opt_algebraic: Optimize open coded bfm.
  * a73e86e0a5e frontends/va: fix gst videotestsrc h264 enc fail issue.
  * ee10a5f7a69 frontend/osmesa: inherit pipe_frontend_drawable instead
    of allocating separately
  * 5be128f67da frontend/hgl: inherit pipe_frontend_drawable instead of
    allocating separately
  * 3ba24ad153e gallium: rename st_framebuffer_iface ->
    pipe_frontend_drawable, etc.
  * 279dfeff1d2 gallium: remove pipe_frontend_screen::destroy callback,
    call it directly
  * ab7a86a0ee8 gallium: clean up comments in api.h, cosmetic changes
  * e7a1cce4eec gallium: remove st_framebuffer_iface::st_manager_private
  * 4f376f32396 frontend/glx: inherit st_framebuffer_iface instead of
    allocating separately
  * e51cb3ae20b gallium: remove unused ST_CONTEXT_ERROR_*
  * ab281457aa4 gallium: rename st_manager_private -> st_screen
  * 8543dcb275e gallium: remove st_profile_type in favor of gl_api, move
    out st_context_attribs
  * 81020faf20e gallium: remove unnecessary ST_PROFILE_*_MASK
    definitions
  * 9fdb0ce755d gallium: use PIPE_CONTEXT_* flags instead of
    ST_CONTEXT_FLAG_*
  * 0122a67c814 gallium: move st function declarations from api.h into
    st_context.h
  * be8f1d685e7 gallium: remove enum st_texture_type
  * 59c9e62f482 st/mesa: remove st_context callbacks for dri/glx/wgl
    frontends
  * 263dc7b6056 gallium: remove st_context_iface, use st_context
    directly
  * c61aa8fa816 gallium/pp: don't use st_context_iface, use an explicit
    callback
  * fdec3529030 gallium/hud: don't use st_context_iface, use an explicit
    callback
  * 64ee8d2430a gallium: rename st_context_iface::st_manager_private to
    frontend_context
  * ec564cf0435 gallium: remove duplicated
    st_context_iface::st_context_private
  * cf2d71ec068 gallium: rename st_manager to pipe_frontend_screen
    (think dri_screen)
  * 597b2648d2d zink: do not leave needless shader temps around
  * 8c2448d4e67 intel/compiler: Delete sampler key handling for planar
    format stuff
  * 88918baf5ca intel/compiler: Delete key->msaa_16
  * 5d2a290cc7b intel/blorp: Set key->msaa_16 unconditionally on Gfx9+
  * 584e18863e6 intel: Drop compressed_multisample_layout_mask from the
    compiler keys

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 09 Dec 2022 18:37:21 +0100

mesa (23.0.0~git2212071643.bdb7fd69d65~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * bdb7fd69d65 radv: mark extendedDynamicState3SampleLocationsEnable as
    not required by Zink
  * 06a65be3d44 radv: advertise
    extendedDynamicState3LineRasterizationMode
  * 10092763123 radv: add support for dynamic line rasterization mode
  * f992e663c77 radv: advertise
    extendedDynamicState3RasterizationSamples
  * a2fe4e9b048 radv: add support for dynamic rasterization samples
  * c88d4037aac radv: store the number of color/ds samples to the
    rendering state
  * 613e9b8e7a8 nir: fix digit order in print_bitset()
  * 0320dbaff55 nir: print shader_info bools with the value
  * da2d36a9d59 nir: print shader_info inputs/outputs as bit ranges
  * 89eca6a2fa9 radeonsi: add AMD_DEBUG=elements for printing vertex
    elements
  * 6dd170e5a42 util: minor refactor _mesa_sha1_print()
  * e9f3f80b1d5 nir: print_shader_info(): brief output
  * 814ba7d13d6 nir: print_shader_info: print stage-specific shader info
  * 37b7233c15e nir: print_shader_info() print bitsets
  * 4ed85c16f90 nir: print more in print_shader_info()
  * 185e65f0f5d nir: extract print_shader_info() from
    nir_print_shader_annotated()
  * 2e775b8bdbc anv/hasvk: Clamping Scissor Rect values in a valid range
  * 029919f3c83 tu: allow using resolve engine for SRGB MSAA resolves
  * 1cfc413c9a4 meson: Do not enable drm for KGSL Turnip build
  * 3c3e5cc40d1 st/mesa: stop using redundant
    st_context::vp,tcp,tep,gp,fp,cp
  * 33ca53ac79a st/mesa: fix the glBitmap cache wrt FS, scissor, and
    clamp color changes
  * 525c70c61aa st/mesa: don't flag ST_NEW_RASTERIZER for _NEW_PROGRAM
  * 2a25b47c87e mesa: flag ST_NEW_RASTERIZER for
    !needs_texcoord_semantic if changing FS
  * 7950661aa01 mesa: remove unused composite _NEW_* flags
  * 0a8d741b6d9 mesa: don't flag _NEW_PROGRAM for "texture_unit ->
    sampler" mapping changes
  * dbc9cb69954 mesa: set fewer flags for VertexProgram.TwoSideEnabled
    changes
  * 5acc0fa1d22 mesa: set fewer dirty flags for PointSizeEnabled state
    changes
  * 5b97b452afd mesa: flag ST_NEW_FS_CONSTANTS instead of _NEW_PROGRAM
    for ATI_fs constants
  * 4bc0edd1cf9 st/mesa: update st_context::active_states in
    _mesa_update_state
  * aaa4b0e6186 st/mesa: move check_program_state code into
    _mesa_update_state

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 07 Dec 2022 19:18:00 +0100

mesa (23.0.0~git2212062331.57b7102ef96~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 57b7102ef96 glx: fix xshm check to init xshm_opcode.
  * 2ccf481c17c zink: don't use defunct custom-flag
  * 91ed8fb13a5 nir: Add missing includes
  * 0033ec1f693 venus: check against the Vulkan type rather than type
    index.
  * fbf4c6e43ff venus: fix deqp tests failed on iub descriptor type
  * 12f26b5e6d5 radv: fix guardband if the polygon mode is points or
    lines
  * 12b0f7ac19a tu: Destroy disk_cache during tu_physical_device_finish
  * f7d414b3e3c mesa: Add missing dep on generated marshal header in the
    tests build.
  * 1c3671d2ba3 ir3: Disallow `noperspective` texture preloads
  * 5b8917bb911 ir3: Propagate `coord_offset` result from `alu` src
    insts
  * 83b8687264d turnip: Initialize *memory on 0-sized alloc early exit.
  * 7809f76fe8a intel/compiler/mesh: align payload size to the size of
    vec4
  * ffefa386fda nir/lower_task_shader: fix task payload corruption when
    shared memory workaround is enabled
  * bd30adf89d3 aco: apply NUW to additions for scratch access
  * 381de3c809f aco: more carefully apply constant offsets into scratch
    accesses
  * fae8c75ad0b radv/rt: set additions for scratch access as NUW
  * 9b7217d12e9 nir/range_analysis: unsigned upper bound analysis for
    b2i
  * ccbb4648cba ci/freedreno: temporarily disable godot-trive on
    zink+freedreno
  * b75b9d6324e ac/llvm: set invariant.load on image loads with
    ACCESS_CAN_REORDER
  * de3fcc77c78 ac/llvm: inline ac_get_load_intr_attribs
  * ce860953a62 ac/llvm: rename attribute enums
  * ce0a83efb86 ac/llvm: use invariant.load metadata on load intrinsics
    instead of readnone
  * d3a03d24fce ac/llvm: don't set "readnone" on non-memory intrinsics
  * 50bece9322c ac/llvm: don't set "convergent" on intrinsics where it's
    automatic
  * 2b5edf96ff3 ac/llvm: simplify how function attributes are set
  * 9b4142ae9f2 ac/llvm: simplify how call attributes are set
  * e94b040add0 ac/llvm: remove illegal function attributes READONLY and
    WRITEONLY
  * 89cd402c9b7 gallivm: remove illegal and unused function attributes
  * 6ab5f570394 gallivm: remove unused LP_FUNC_ATTR_LEGACY
  * e54f2286bea gallivm: remove unused
    LP_FUNC_ATTR_INACCESSIBLE_MEM_ONLY

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 07 Dec 2022 01:17:39 +0100

mesa (23.0.0~git2212051651.712fcaba1f4~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 712fcaba1f4 frontends/va: return proper error for unsupported
    profile
  * da32cbb5c69 aco: fix missing uses of MRT output flags
  * 40f09f4e1c3 pvr: Add empty PDS program
  * 46c2492a5d1 pvr: Add pvr_pds_compute_shader_program_init()
  * 8c506c4b03a pvr: Use util_dynarray_append_dynarray()
  * b051719b058 radv: do not set ZPASS_INCREMENT_DISABLE on GFX11
  * 3ab9218820a radv: fix SPI_SHADER_Z_FORMAT for alpha-to-coverage via
    MRTZ on GFX11
  * a297ac10a4e radv,aco: stop lowering FS outputs in NIR
  * 3be728f1d0f aco: fix indexing MRT0 alpha channel for alpha-to-
    coverage via MRTZ on GFX11
  * 20856bfe0f0 aco: always use 32-bit for exporting alpha-to-coverage
    via MRTZ on GFX11
  * 664aa7a37b5 radv: fix emitting invalid color attachments
  * 64d584b8e4f r600/sfn: Silence warning for unused parameters in
    override
  * d7393c6b9cd r600/sfn: Allow more copy-propagation into TEX src
  * 1975d5eaf4e r600/sfn: use only as many components as needed for tex
    backend coord
  * bcd9da1b38a r600/sfn: drop useless const specifier in return value
  * 0a0dc7c04b3 r600/sfn: simplify if clauses with empty then branch
  * d4dfae313e6 r600/sfn: legalize image acccess on Cayman
  * fc75c1e07f2 r600/sfn: use three channels only for unary trans opts
    if possible
  * 71df6ba92d7 r600/sfn: lower-to-scalar in optimization loop
  * b47928043dc r600/sfn: Fix scheduling with limited channel
    availability
  * 1f7d34b4a2d r600/sfn: Don't copy propagate using non-allocated dest
    channel
  * ca0164f4876 r300: improve conversion to native swizzles
  * 384fc52dd33 r300: doublecheck for free alpha source when coventing
    to alpha
  * eb9f17b309c radeonsi: fix a regression causing GPU hang with GLCTS
    using streamout
  * b5133894005 dzn: Don't crash when libd3d12.so can't be found
  * b3d1ae19f2f d3d12: Don't crash when libd3d12.so can't be found
  * 55ffbf867b7 radeonsi: fix ngg lds base load intrinsic llvm
    implementation
  * 77ecf9149c7 anv: Defer flushing PIPE_CONTROL bits forbidden in CCS
    while in GPGPU mode
  * cd5c66e1653 dxil: Use nir_const_value_for_uint in
    dxil_nir_lower_int_samplers
  * f3f1c28f8e6 r600/nir: Fix u64vec2 immediate lowering

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 05 Dec 2022 17:39:50 +0100

mesa (23.0.0~git2212021729.b2c43388629~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * b2c43388629 microsoft/spirv_to_dxil: Properly handle load- and
    is_helper_invocation
  * e22491c8326 clc: fetch clang resource dir at runtime
  * cd2609b12ca clc: generate sources only with with_microsoft_clc
  * 5d025f4003b nir/nir_opt_offsets: Prevent offsets going above max
  * f7e76eee28a ci/amd: re-enable previously OOM tests
  * 3e80c5f1ece ci/kernel: enable ZRAM on all archs
  * 89663828ea6 aco: Don't use v_lshrrev_b64 for moves on GFX11.
  * 91fe2a23617 aco: Use more detailed wave64 timing for GFX10+.
  * 09caa570b18 docs: update calendar and link releases notes for 22.3.0
  * 9d665ae4397 docs: add release notes for 22.3.0
  * 5797af2d8d3 Revert "ci: disable Collabora's LAVA lab for maintance"
  * 2fb1097bac6 ac/nir/ngg: merge multi stream gs shader queries
  * b7b91ae51e2 anv: enable VK_KHR_ray_tracing_maintenance1
  * d844fa4defa anv: implement new queries for
    VK_KHR_ray_tracing_maintenance1
  * 4d05be49c25 anv: implement vkCmdTraceRaysIndirect2KHR
  * 675c5bd4ccc anv: refactor ray tracing dispatch
  * df384260721 intel/rt/nir: add support for RayCullMaskKHR
  * 6202a2c6b47 intel/rt/nir: enable the trampoline shader to load the
    indirect ray shader bsr
  * af3f7948d14 anv: correctly predicate ray tracing
  * 7d7c32de4c1 anv/genxml: make gen_rt more like other genxml files
  * 8baacba4d66 hasvk: remove coarse pixel checks
  * 2d150f3ecd7 hasvk: Drop more DG2 code
  * d0fea83d7bc hasvk: Rip out local memory support
  * 4256d2cbc20 hasvk: Rip out scratch surfaces
  * eea49c7d32c hasvk: Drop SKL+ features
  * b71ac720a8d hasvk: Drop support for atomic_int64 and atomic_float2
  * 49201fe8c10 hasvk: Drop bindless image support
  * 7b700369b1b hasvk: Drop A64 descriptor set support
  * 85cfa21e04c hasvk: Drop remnants of ray queries
  * e490434479a hasvk: Drop CCS_E support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 02 Dec 2022 18:12:02 +0100

mesa (23.0.0~git2212010707.ccef6d1f5fd~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * ccef6d1f5fd freedreno/fdl: Set sRGB bit for storage images
  * 1555ac6f0ba agx: Clamp point sizes
  * 7108619c0d6 agx: Handle 32-bit gl_FragCoord.zw
  * eb4187b02db agx: Handle large varying indices
  * 21f9a72c77c asahi: Support one-sided polygon modes
  * 5e15b3c3236 asahi: Handle NULL sampler views
  * 63d4f30aa71 asahi: Unset GL_CLAMP
  * 47cb8278be4 asahi: Set frag coord caps correctly
  * 0bd71f74216 asahi: Set
    PIPE_CAP_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
  * 1bf7d7139fa asahi: Set PIPE_CAP_SUPPORTED_PRIM_MODES
  * 216e5d6e10e hasvk: Drop anv_nir_add_base_work_group_id()
  * 2806968af84 anv: Drop anv_nir_add_base_work_group_id()
  * b4dd3df2279 intel/nir: Set has_base_workgroup_id for
    lower_compute_system_values
  * 19ad2629d06 hasvk: Implement lower_base_workgroup_id
  * 3c09571f67c anv: Implement lower_base_workgroup_id
  * f2aee04d280 crocus: Lower load_base_workgroup_id to zero
  * 4abdecce226 iris: Lower load_base_workgroup_id to zero
  * 7d2e3f660c7 intel/fs: Support load_workgroup_id_zero_base
  * 4fb33124c32 nir/divergence: Handle base_workgroup_id and
    workgrpu_id_zero_base
  * 9a311a1891d radv: Remove the old LBVH shader.
  * 5ba950eb146 radv: Switch to new LBVH implementation.
  * ea159e47a59 radv: Add new LBVH shaders.
  * f531f671ef6 radv: Handle nodes with 2 invalid children in internal
    node converter.
  * 8e125b6c15b panfrost: Enable AFBC of more formats
  * c7eb6a9fbb9 panfrost: Enable AFBC of sRGB formats
  * 8b7038ab3e3 panfrost: Enable AFBC of cube maps
  * cd21cf5ab62 panfrost: Handle all RGB AFBC modes on v9
  * a3beb82cf6b aco: Use wave size specific opcode for s_or in cube map
    coord code.
  * 0531630658e nir/builder: Also short-circuit for auto-generated
    nir_t2t<N>()
  * e67e2293fa7 nir/builder: Rework the boolean conversion helpers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 01 Dec 2022 08:33:30 +0100

mesa (23.0.0~git2211271945.c5d91ab254e~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * c5d91ab254e radv/rt: Check space before emitting descriptors
  * 0966fb2c100 radv/ray_queries: Fix AABB handling
  * 409556f0480 radv/ray_queries: Move some initialization outside a
    likely branch
  * 8fdaa25c54e frontend/dri: rewrite and comment dri_make_current to
    make it make sense
  * 51fcabfb044 frontend/dri: unduplicate flush_drawable callback
  * eaf99194eac frontend/dri: remove the drawable ctx hack, we should
    always use current context
  * f2c4aba9e11 frontend/dri: clean up updating dri_drawable::refcount
  * 7d5b1cd02c4 frontend/dri: move callbacks from the VTable into
    dri_screen, dri_drawable
  * f34d607d2f4 frontend/dri: clean up the hacky implementation of
    kopper_drawable
  * 165b8a9fef2 frontend/dri: inline __DRIscreen in dri_screen, make
    __DRIscreen opaque
  * 0a622f61ea0 frontend/dri: inline __DRIcontext in dri_context, make
    __DRIcontext opaque
  * c65bde7b1e0 frontend/dri: inline __DRIdrawable in dri_drawable, make
    __DRIdrawable opaque
  * 449a35a3971 frontend/dri: replace the CopySubBuffer callback with a
    direct call
  * 2941eacb22a frontend/dri: replace the DestroyBuffer callback with a
    direct call
  * f408bb647c5 frontend/dri: replace the DestroyScreen callback with a
    direct call
  * d57284d673a frontend/dri: inline __DriverAPIRec
  * e061affa7fb frontend/dri: remove __DRIdrawableRec::dri2::stamp
  * f890714b701 frontend/dri: add comments describing drawable
    invalidation logic
  * 426f1cbea3c dri: move private __DRIDriverVtableExtension out of
    dri_interface.h
  * 8cb8a3c03dc glx,dri: simplify indirect function call syntax
  * fbf93ef8214 ci/amd: add raven flakes which was previously failing

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 27 Nov 2022 23:30:48 +0100

mesa (23.0.0~git2211261535.a97a6d0f0e7~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * a97a6d0f0e7 radv: reserve space for the scissor in
    vkCmdBeginRendering.
  * 2a3ed9521d2 radv: Enable
    rayTracingPipelineShaderGroupHandleCaptureReplay[Mixed].
  * dba75d345df nir: fix a leak of ralloc ctx in
    nir_opt_ray_query_ranges
  * 2de7d6d1d81 etnaviv: remove copy of resource level in etna_surface
  * b6fa3cdb0e6 etnaviv: fix wrong surface TS clear size
  * d9e2a7d6ada etnaviv: blt: use correct TS offset in clear operations
  * 58259e14377 etnaviv: fix ZS clear value computation
  * 4449b5a2714 etnaviv: fix stencil operation without Z write
  * ea3f73ba85b Revert "glx/dri: Fix DRI drawable release at MakeCurrent
    time"
  * 0cee008fee1 Revert "glx: Fix drawable refcounting for naked Windows"
  * 797454edfcc etnaviv: rs: fix blits with insufficient alignment for
    dual pipe operation
  * fd06b313b01 etnaviv: always use RS align when GPU has TEXTURE_HALIGN
    feature
  * 20cdc35fdbb asahi: Add missing #include
  * 5e379acd314 asahi: Enable framebuffer compression
  * 59824c1ecb2 asahi: Fix incorrect debug string
  * 9b80ebd86c0 asahi: Print debug info about unsupported blits
  * efa240b74b7 asahi: Don't hardcode is_dmabuf_modifier_supported
  * a6079e5aa8d asahi: Hook up compressed Z/S support on macOS
  * 6f15873d44c asahi: Introduce compressed resource support
  * 78948c03f03 asahi: Identify compression-related XML
  * bea975b2988 ail: Add unit tests for compression
  * 0ba63d5c26e ail: Introduce support for compression
  * 478ffe71276 driconf/intel: Use fake vendor to WA bad detection in
    Source engine games
  * f9e11c71c7f asahi: Fix undefined behaviour with samplers
  * b102f045ab0 asahi: Set GPR count accurately for background/EOT
  * bcba473eac5 asahi: Fix UB in union with logic ops
  * 8d83ffe531d radv/ci: Add coverage for ETC2 emulation.
  * 13d755441c7 vulkan: Remove asserts that weren't valid for RADV ETC2
    emulation.
  * eab61863c0b radv: Fix sampler types in ETC2 decode.
  * c6ec4925c06 radv: Use correct init order for ETC2 image views

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 26 Nov 2022 20:16:30 +0100

mesa (23.0.0~git2211242236.4a8134975e7~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 4a8134975e7 ci/alpine: bump to 3.17, new GCC 12 and LLVM 15
  * 629e940b2ce ci/alpine: enable Mold linker
  * c85d09bcddf radv/ci: do not create jobs that will fail outside of
    mesa's namespace
  * 4b63667f313 hud: add GALLIUM_HUD_ROTATION option
  * 8ec6cb06e3b ac/nir: Avoid data race with task shader payloads.
  * a2a0ac21e4f docs/zink: add missing required device-feature
  * 13bccac5a7d zink: update textureCompressionBC requirement
  * 754353c4170 zink: fix incorrect requirements
  * b60bc529925 zink: remove needless requirements
  * b707cf24a3b zink: fix json-errors in profile-file
  * f71944ae0e2 v3dv: specialize query copy pipelines
  * ae4351e9391 v3dv: allocate one BO for both occlusion results and
    availability
  * 7a65b3f006a v3dv: reimplement occlusion queries
  * 40500864396 v3dv: add a helper to create compute pipelines from nir
  * cc9db4eac24 v3dv: reset pending cpu job state once processed
  * 79063617877 Apply 1 suggestion(s) to 1 file(s)
  * 61bdc2a2e03 docs/perfetto: update section about vulkan app tracing
  * a126ed19f93 r300: fix r300_max_vertex_count
  * 00bc06bc27c zink/ci: mark the two remaining GLES3 failures as CTS
    test bug
  * e3506dd06fc radv/ci: don't download back the vkd3d-proton.cache
    files
  * 909fa621c45 radv/ci: set B2C_JOB_VOLUME_EXCLUSIONS in all jobs
  * bd743d7db56 radv/ci: do not sync back the install folder
  * 128a19caf11 radv/ci: run test automatically only for the mesa
    namespace
  * 3bf7791e93b util: Remove unused WIN32 and MSVC related staff in
    p_compiler.h
  * f70f20433bd util: Rename PIPE_CDECL to UTIL_CDECL and moved into
    util/macros.h
  * b0203b5d47b util: Move EXCLUSIVE_CACHELINE and CACHE_LINE_SIZE
    macros into u_memory.h
  * 50ab93afdea util: Remove the latest PIPE_ALIGN_VAR in p_compiler.h
  * 5670636598c clover: Fixes -Wundef in memory.cpp
  * 172e8a0e6a8 gallium: Fixes -Wundef in draw_gs.c
  * 84d6a615ea6 util: Fixes -Wundef in u_debug_stack_test.cpp

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 25 Nov 2022 00:21:07 +0100

mesa (23.0.0~git2211240356.970c8dfd98e~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 970c8dfd98e r600: Fixes -Werror,-Wunused-but-set-variable for clang-
    15
  * cdbe1ad570b aco: Fixes -Werror,-Wbitwise-instead-of-logical for
    clang-15 in aco_optimizer.cpp
  * 55b35e6193a mesa: fixes -Werror,-Wunused-but-set-variable for clang-
    15 in program_parse.y
  * 77c29bfffd7 mesa: indent fixes after replace tab with 3 space by
    find and replace in program/program_parse.y
  * 59fb86ea6f1 mesa: replace tab with 3 space in
    mesa/program/program_parse.y by tools
  * 20c936bee1f rusticl: print missing context features
  * bdc240e13eb meson: Don't depend on expat for !use_xmlconfig
  * 6cd392cbe20 util: Gate installing drirc on use_xmlconfig
  * 662bb5977b6 util: Add xmlconfig build option
  * fb0a4a5d6c5 util: Define WITH_XMLCONFIG from Meson
  * fc6bb139456 zink: Don't check WITH_XMLCONFIG
  * 218ddd032ef docs/features: Get Asahi on the board
  * 4f5e59d1146 etnaviv: Hide MSAA support behind debug flag
  * 4002640f8de docs: update calendar for 22.3.0-rc4
  * 3a406688f26 st/mesa: only call st_manager_validate_framebuffers at
    FBO change or SwapBuffers
  * 044428211c9 pan/mdg: Fix out-of-order execution
  * af79e631eec freedreno/replay: Add option to replay specific range of
    cmdstreams
  * a7773c3c4c7 freedreno/rddecompiler: Add shader disasm/asm support
  * 03d80e0a6d3 freedreno/decode: Add 'rddecompiler' tool
  * 86d27ac4ffd freedreno/cffdec: Add type0/type4 vs type3/type7 pkt
    helpers
  * 13ab0088e05 freedreno/cffdec: Remove packet types
  * 00e2f9eff6d freedreno/cffdec: Remove dead code
  * 86e8b9339f5 freedreno/replay: Add option to override selected
    cmdstream
  * 6d72407d395 freedreno/decode: Print cmdstream idx
  * 060e1686232 freedreno/decode: Move rd section parsing to a common
    header
  * 4701508ec0b i915g: fix typo in #if
  * 52a34309f6c iris: s/#if/#ifdef/ to fix -Wundef
  * 8261f9ce4f9 freedredno: s/#if/#ifdef/ to fix -Wundef
  * cf520806b11 freedreno/ir3: fix -Wundef warning
  * 0f0dac0f659 freedreno: fix HAVE_FREEDRENO_KGSL check

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 24 Nov 2022 04:54:25 +0100

mesa (23.0.0~git2211211834.368be872555~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * 368be872555 nir/algebraic: shrink 64-bit bitwise operations with 0/-
    1 constant half
  * 8133d5551de radv/rt: Return the correct result for requested
    deferral
  * 8d8caa44bd5 frontends/va: remove unused slice_param_idx variable
  * 3061bc792d3 aco: ensure MRT0 is written with dual source blending
  * ea0ae17fc45 radv: disable MRT compaction with dual-source blending
  * 68652dca0c2 iris: Fix iris_bo_alloc() flags call argument
  * f1305d49d91 tu: Implement VK_EXT_post_depth_coverage
  * 1ec172646cd r300: more informative too many ALU instructions error
  * b70543a9558 r300: delete backend branch emulation
  * 2fe73e3bcb0 r300: abort shader compilation early on loops and
    branches
  * 8d37ab6bfa0 radv: Fix custom build id with C90 compilation.
  * d34f3a1db59 v3dv: fix multiple typos
  * 67ffe25fd9d r600: Fix lower-to-scalar on TTN path
  * a69eafc4226 r600: reference glsl type system during translation
  * 089ae08ab1f intel_batch_decoder: disasm shaders when decoding states
    besides VS
  * c82775e3c72 v3d: Minor fixes on sand8 blit based on sand30
    modifications
  * e97b20f3ca5 v3d: Also expose DRM_FORMAT_MOD_BROADCOM_SAND128 with
    PIPE_FORMAT_P030
  * 653cf8c8d23 v3d: Blit for P030 format with BROADCOM_SAND128 modifier
    to P010 UIF
  * 4ea41479359 gallium/dri: Add P030 format
  * e253729e037 zink: require extendedDynamicState3ColorBlendEquation
    for full ds3
  * 390c4b337aa radv: Support accelerationStructureCaptureReplay.
  * 165ef452fd7 radv/ci: add one more pipeline barrier test as flake
  * 5c5735fd681 radv: advertise VK_EXT_descriptor_buffer
  * 46e0c77582d radv: implement VK_EXT_descriptor_buffer
  * e3fae40e966 radv: always restore NULL descriptor sets for meta
    operations
  * a59be04ea55 radv: rework writing image/buffer/accel_struct
    descriptors slightly
  * e8cff91bd5f radv: avoid RMW operations in
    radv_make_texel_buffer_descriptor()
  * fcd53eda0e1 radv: force 32-bit address-space for descriptor buffers
    usage
  * 94bea63936b radv: add 32-bit memory types for visible VRAM and
    cached GTT
  * d6d772d3d16 asahi: Fix memory leak on error path.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 21 Nov 2022 20:14:50 +0100

mesa (23.0.0~git2211192125.cee2c4624d0~f~mesaaco2) focal; urgency=medium

  * New snapshot:
  * cee2c4624d0 asahi: Advertise all supported renderable formats
  * 74e92274af3 asahi,agx: Use new tilebuffer infrastructure
  * c5c0ea39f6a asahi: Add new clear/reload/store infrastructure
  * 4f96651f1e4 asahi: Use correct tib settings for USC
  * 555447769d3 asahi: Extend texture descriptor packing for MSAA
  * cc555e0c04f asahi: Remove some bogus asserts
  * bbe7d8e4f5d asahi: Implement texture_barrier trivially
  * 03dc4bc3e80 asahi: Calculate tilebuffer layout per batch
  * b1f5004ee79 asahi: Add agx_usc_shared_none helper
  * c713197c25c asahi: Add R16 SNORM formats
  * d637189d366 asahi: Add more XML via PowerVR
  * a3907e92da4 asahi: Add note to XML about 16-bit varyings
  * 94a8fe51d5a asahi: Identify more depth-related fields in XML
  * 6ce615d852f asahi: Add XML for layered rendering
  * 74de571402a asahi: Add NIR pass to lower tilebuffer access
  * 66a680a0435 asahi: Add tilebuffer layout helpers
  * 5d3243ea2db asahi: Add some notes about unknowns to the XML
  * 363ffa779da asahi: Identify multisampling fields of shared layout
  * 5a20c90508c asahi: Add _with_bo pool uploads
  * 4a166acc930 agx: Add block_image_store instruction
  * 0e106681e0d agx: Add helper to map pipe formats to agx_formats
  * db0461a8d0a agx: Implement nir_texop_txf_ms
  * 53d013a6050 ail: Handle multisampling
  * 8781aef6b43 asahi: Make libasahi_lib depend on libasahi_decode
  * 6ee6cfec412 asahi: Use PIPE_FORMATs for driver-compiler ABI
  * 940b871dbab nir: Define AGX intrinsics for local pixel access
  * 7befecf5004 turnip: Apply the RB_DBG_ECO_CNTL_blit workaround.
  * 9076b38610d freedreno: Don't WFI and set RB_DBG_ECO_CNTL if it's not
    changing.
  * 4ab489a0b7b freedreno: Update RB_DBG_ECO_CNTL/RB_DBG_ECO_CNTL_blit.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 19 Nov 2022 22:09:15 +0100

mesa (23.0.0~git2211191759.be570cd3225~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * be570cd3225 r600/sfn: sort FS color outputs before all other outputs
  * 85e140aa5ce r600: Print RAT instruction names in disassembly
  * 684e90b15c7 r600: Update scratch buffer late
  * 394d8e4122e freedreno/drm/virtio: Defer flush on BO free
  * b4a54824e5c freedreno/drm: Support for batched frees
  * e5a60e1df27 freedreno/drm: Add optimized path for freeing many BOs
  * d7511ad784c asahi: Add batch tracking logic
  * de1eb9400f1 asahi: Use the batch for submission
  * 0d3b4ff2aa2 asahi: Use batch_reads for sysvals
  * 84f623ae7b4 asahi: Use a pipe_framebuffer_state batch key
  * d36c911b7b1 asahi: Use batch instead of ctx for pipelines
  * fb7257af4e6 asahi: Hide ctx->batch
  * 3104b1aaaf9 asahi: Factor out prepare_for_map
  * 9c1c1888d98 intel/fs: put scratch surface in the surface state heap
  * daab1615357 iris: move bindless surface state heap inside the
    surface state heap
  * 64f1ae4bc51 iris: prevent crash in decoder
  * 1b5dc33caac radv: Convert instance bvh address to node in bvh build.
  * d09ed23b9a3 radv: Fiddle with opaque flag positions to reduce
    instructions.
  * 38842109020 radv: Skip and for node_to_addr with bvh_base.
  * 0a269758407 radv: Move ray flag compares out of the loop.
  * e2dadda35f8 Revert "nir/lower_shader_calls: put inserted
    instructions into a dummy block"
  * 3686d5a3129 nir/lower_shader_calls: wrap only jumps rather than
    entire code blocks
  * 96d84e2a775 nir/lower_shader_calls: update metadata before
    validation
  * 6f45c98b580 radv/bvh: Adjust sah cost based on depth
  * 2ba55ec504f nir/range_analysis: Set higher default maximum for
    max_workgroup_count
  * d989746e55b iris: Pass devinfo directly in iris_setup_uniforms
  * a9602134a32 intel/compiler: Require C++17
  * 11a607dbc8d asahi: Don't support 16-bit vertex attributes
  * 9dddbfeaef2 asahi: Fix logic ops
  * a22ed999068 asahi: Restrict rendering to what we support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 19 Nov 2022 18:37:06 +0100

mesa (23.0.0~git2211160345.cf6b2699ca4~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * cf6b2699ca4 panfrost: Don't set job_barrier on vertex jobs
  * 51457b19cea r300: tweak nir loop unrolling hint for r500 vertex
    shaders
  * 6ac678df43b freedreno: Add one flake
  * f3ee9be836b glsl: Drop borrow/carry lowerings in favor of nir
  * 339d80d5f22 pps: make pps-producer RT only on freedreno
  * 557120b593c util: Include the needed util/detect*.h headers in
    multiple files
  * 4ff21b4a47f util: Remove the unused PIPE_(ARCH|OS|CC) macro defines
    from src/util/detect_arch.h and src/util/detect_cc.h
  * 1accc0df640 tree-wide: Convert all usage of PIPE_(OS|ARCH|CC)_* to
    DETECT_(OS|ARCH|CC)_* by use grep
  * 27fe4bd29fd tree-wide: Convert all usage of #ifndef
    PIPE_(OS|ARCH|CC)_* to #if DETECT_(OS|ARCH|CC)_* by use grep
  * 1817659bb65 tree-wide: Convert all usage of #ifdef
    PIPE_(OS|ARCH|CC)_* to #if DETECT_(OS|ARCH|CC)_* by use grep
  * eab0da3c641 tree-wide: Convert all usage of defined
    PIPE_(OS|ARCH|CC)_* to DETECT_(OS|ARCH|CC)_* by use grep
  * 80fac8637b9 tree-wide: Convert all usage of
    defined(PIPE_(OS|ARCH|CC)_*) to DETECT_(OS|ARCH|CC)_* by use grep
  * 4304177675a util: Add DETECT_ARCH_* and DETECT_CC_* macros for
    latter usage
  * db01b983ede util: Move compiler configuration defines from
    detect_arch.h into detect_cc.h
  * 845222dbae5 util: Rename src/gallium/include/pipe/p_config.h to
    src/util/detect_arch.h
  * 7710cc8506b util: Test __PPC64__ for getting PIPE_ARCH_PPC_64
    respond to __PPC64__ take effect
  * d81e40b20c3 frontend/va: Fix WIN32 VA_DRIVER_INIT_FUNC declaration.
    Remove declspec as it uses .def file
  * 59f11b76124 util: Add test for util_get_process_name_may_override
  * 3325c5b80e1 util: Add tests for os_mman.h and
    util_get_process_name_may_override
  * 660b1104949 util: Move src/gallium/auxiliary/os/os_mman.h to
    src/util/os_mman.h
  * f5050d0fcd2 util: Replace the usage of os_get_command_line with
    util_get_command_line
  * d600a0ed342 util: Merge the code from os_process.c into u_process.c
  * fdad0477f0f util: Remove usage of boolean and duplicated code in
    os_process.*
  * 3f4586575e1 util: Merge the __getProgramName code under HAIKU os
  * ed4fd1d90e3 util: cleanup cpuinfo.* and it's related files
  * 7436669d55d mesa/vbo: Replace the usage of cpu_has_sse4_1 with
    util_get_cpu_caps()->has_sse4_1 in vbo/vbo_minmax_index.c
  * b84678ea28e util: Use util_get_cpu_caps instead cpu_has_sse4_1 macro
  * 6dab1896d11 util: Drop include "pipe/p_config.h" in
    src/util/u_cpu_detect.h
  * 3549439068d ci/nouveau: Add some recent flakes
  * 72d66aa9878 microsoft/compiler: Delete now-unused memcpy lowering
    pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Nov 2022 04:18:39 +0100

mesa (23.0.0~git2211150405.cb32f9515e2~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * cb32f9515e2 nir_scale_fdiv: Respect vector swizzles
  * 57863e21f6f radeonsi: print the number of shader outputs for shader-
    db
  * e2b044fe3fc lavapipe: Prevent integer overflow adding index buffer
    offset and start index.
  * f47253c5c70 draw,util: Refactor draw_overflow_uadd into util.
  * cb904ceb805 util/disk_cache: Prevent ‘sha1’ may be used
    uninitialized warnings.
  * b2835674568 radeonsi/vcn: adding av1 decoding film grain block
  * 0b02db30070 frontends/va: fixed av1 decoding 10bit ffmpeg output YUV
    issue
  * 35606096de6 ci/llvmpipe: Switch rusticl and clover testing over to
    deqp-runner.
  * b0acae5f03c ci: Update to deqp-runner v0.16.0 for SKQP and CL
    support.
  * 57b2211cf0c radv/rt: Clone specialization infos
  * 39628c89999 radv/rt: Clone entrypoint names
  * a4d6c57e654 radv: Use ralloc for allocating pipeline library
    resources
  * 08b194fb465 vulkan,radv: Remove vk_shader_module_clone
  * 902ec1fe0e8 replace sys/poll.h with poll.h
  * 48c1e0e1667 intel/crocus: do not redefine PAGE_SIZE
  * 9d81729c02c kopper: guard unused variable behind ifdef
  * 92854b96bc9 docs/releasing: add convenient command to rebase
    everything since last release
  * 68f942f2178 docs/releasing: checkout the staging branch at the end
    of its creation process
  * 739ecdf367a docs/releasing: update branchpoint instructions to be
    friendlier to our Marge-bot-based workflow
  * fa10735da36 docs/releasing: fix instructions to create a branch from
    a tag
  * 6833138b5dd docs/releasing: add VERSION variable to avoid typos when
    copy/pasting
  * 494e2edb90d intel/compiler: Fix missing tie-breaker in
    brw_nir_analyze_ubo_ranges() ordering code
  * 9fd1d47aa0f intel/compiler: Fix dynarray usage in intel_clc
  * 71c4543af1a radv/rt: Get rid of null index AABB intersection
    handling
  * ff896d5d098 r600/sfn: Call lower_flrp from driver code
  * e5646382ba9 r600/sfn: use only one undef in tex lowering
  * df54aa7e339 r600/sfn: Use a bitfield for some register properties
  * dba46bb8bc3 r600/sfn: handle possible inline const as array base for
    scratch loads
  * 307b81747e2 r600/sfn: Simlify check for zero and one
  * a81c50a2144 r600/sfn: implement finalize_nir

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 15 Nov 2022 05:06:39 +0100

mesa (23.0.0~git2211132134.11b2a063bf1~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 11b2a063bf1 vulkan: Unconditionally add barriers for missing
    external subpass deps
  * 4ff5051944e vulkan: Handle VK_SUBPASS_EXTERNAL at the end of a
    subpass
  * fee00421575 r600/sfn: Fix f2u32 and remove backend lowring of f2u64
    and f2i64
  * fd27b18631b r600/sfn: Fix source modifiers for ffract64
  * e63d6ed85e0 spirv: Make vtn_fail and friends trap in debug mode
  * ae76bba34a8 anv: bump pool bucket max allocation size
  * 145cb3e349d vulkan/wsi/wayland: fix unaligned load of dev_t

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 13 Nov 2022 22:35:43 +0100

mesa (23.0.0~git2211120404.ad5c9c3fa46~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * ad5c9c3fa46 llvmpipe: drop cache stats code
  * 4a14ba6fce8 disk_cache: add env var to show stats
  * f7d7e558c95 venus: handle VK_QUERY_TYPE_PRIMITIVES_GENERATED_EXT
  * 8a5de0b6cf1 freedreno/pm4: Use unsigned instead of uint to fix musl
    build
  * bc286e85869 ci: avoid triggering vc4 & v3d tests on v3dv-only MRs
  * 2f85d9095e3 etnaviv: fix late Z with MSAA active
  * 804bf2eba2a etnaviv: update headers from rnndb
  * 4035b0fa42f radv: Use a lds stack for ray queries when possible
  * 3a50dcb3f47 radv: Always create ray query vars as shader temp
  * 2dc93e284eb radv: Add a field for the max shared memory size
  * 19c5739b744 spirv: Add MESA_SPIRV_DEBUG environment variable
    processing
  * 6addb8566db ci: remove duplicate entries from Fedora build
  * 88f1fad3f76 pvr: Use common pipeline & dynamic state frameworks
  * a89ff8d4bc8 pvr: Use PVRX(TA_PASSTYPE) for
    pvr_fragment_shader_state.pass_type
  * 9056817a6c9 pvr: Store format aspects on render pass attachments
  * 0e708609cbe pvr: Remove scissor_accum dynamic state
  * 082ad18cea0 pvr: VDMCTRL_INDEX_LIST[5-9] are not needed
  * e21448d0d31 aco: Don't create useless exec movs while creating
    v_cmpx.
  * a653a390e11 aco: Make vcmpx definition handling clearer.
  * bdf680cd3fe intel/fs: use nir_opt_ray_query_ranges
  * bd9396c357b radv: Use nir_opt_ray_query_ranges
  * f5b65765858 nir: Add a pass for combining ray queries
  * d22037b96c8 nir: Add and use nir_intrinsic_is_ray_query helper
  * 04abfbca57f nir: Remove gather_info after removing dead vars
  * 34c52d8cb98 nir: fix typo in lower_double options handling
  * d558309d67b freedreno/cffdec: Add NOP debug messages
  * d151ba5c300 tu: Implement utrace CS marker support
  * ac5a55ef115 common/utrace: Add CS logging support
  * 8370a0d6bfc common/utrace: Prefix all environment variables with
    `MESA_`
  * 086b50078d1 common/utrace: Rename `u_trace_context_actively_tracing`
    to `u_trace_should_process`

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 12 Nov 2022 08:27:26 +0100

mesa (23.0.0~git2211110227.5a6f95db135~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 5a6f95db135 freedreno/drm/virtio: Pre-allocate cmdstream buffers
  * 1bb0cd66828 freedreno/drm: Use same-sized "chunks" for growable
    rings
  * cb02cf464c1 ci/broadcom: v3dv-rpi4-vk:arm64 flakes too often
  * 41a929d94ca util/glsl2spirv: pass path to glslangValidator into the
    script
  * ae30c6c375a meson: prog_glslang should always be for the build
    machine
  * 9a85d2ed984 util/glsl2spirv: cleanup list extension
  * 9a165945a9d util/glsl2spirv: use f-strings
  * 7c88c3a05bb util/glsl2spirv: use if `x in str` instead of `str.find`
  * 5488fa80dde util/glsl2spirv: simplify subprocess handling
  * 87c83c041a9 util/glsl2spirv: close resources as soon as possible
  * 949c3b55dbd util/glsl2spirv: add type annotations
  * c01cd8cad1f util/glsl2spirv: add some error handling for unexpected
    code paths
  * 6a5863df828 util/glsl2spriv: make --vn required
  * 4ffa8a9ac01 util/glsl2spirv: fix appending extra flags
  * 041d9ac3dc9 util/glsl2spirv: let argparse actually enforce the
    restrictions we've set
  * f9df046436b util/glsl2spirv: drop inconsistent use of `io.open`
  * 76e3b482be1 util/glsl2spirv: fix type error in argument handling
  * f562e37c932 ci/freedreno: disable antichambers trace
  * c9db71c8ba1 turnip: Don't disable LRZ for color write mask channels
    beyond the format's
  * 062d4d83e15 ir3: Re-fuse ffmas after nir_lower_imul cleanup breaks
    them.
  * a39113b6160 ir3/ra: Make sure we don't pick a preferred reg
    overflowing the file.
  * ecc2dfc503d intel/compiler: Use std::unique_ptr for tracking the
    fs_visitors
  * b79d9ee5a8a docs: add linkcheck job
  * 4f26b5fa0fa docs: do not linkcheck relnotes
  * 80b5a7d48fe docs: configure linkcheck
  * 72718daeac3 docs/ci: allow overriding sphinx builder
  * 1efc92fe8c0 docs/panfrost: drop anchor before channel-name
  * 67b77d8adeb docs: apply some redirects
  * e9826708f99 docs: update lavasoftware.org link
  * 0d96b8ea2f6 docs/perfetto: update documentation links

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Nov 2022 03:27:34 +0100

mesa (23.0.0~git2211061803.c37357f4e01~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * c37357f4e01 radv/rra: Remove some node type validation
  * 868107e16c4 radv/rra: Improve validation message formatting
  * 07bf85c2eca radv/rra: Rename rra_accel_struct_validation_fail
  * e5b3efe5825 radv/rt: Restore prev barycentrics when rejecting hits
  * 7753e80219c util: Add multi-threaded test for util/u_debug.h and
    util/perf/u_trace.h
  * 2c1c87f76f8 util: Fixes memory leak in __getProgramName
  * 171c3c551a5 util: Fixes debug_get_option_* thread safety by set
    initialized=true after the value get
  * e2c3739a3f5 util: It's not thread safe to set initialized=true
    before get the real GALLIUM_PRINT_OPTIONS
  * 9a8453d07e7 radv: Use compares for node type in traversal.
  * 4770d3f0bad r600: enable memory objects
  * 39b9067b712 nine: enable on freedreno
  * cc485cfd7c4 ci/broadcom: juint is already defined in .piglit-traces-
    test
  * c987a727a76 nir: Fix qsort comparator function
  * d31375b521f math: remove unused matrix_print & print_matrix_floats
  * c49aca943c0 math: remove vector class
  * 2d4d4df57ac math: remove unused debug classes
  * 94e10ced83c math: remove unused matrix_is_general_scale
  * 18702a28bd4 math: remove unused matrix_has_rotation
  * 55373642db0 util: remove unused enter debug exit loggers
  * c7b70ca61ad util: remove fifo class
  * 0c0812cf6ee util: remove unused debug_dump_enum_noprefix
  * dc0de85fed5 util: remove unused debug_print_blob
  * c43c640809e util: remove unused set_random_entry
  * 0b6c0bfa090 util: remove unused half_to_unorm8
  * e25fdc701bc gallium/util: remove unused macros and their functions
    from sse class
  * 753b31c35ea gallium/util: drop unused
    sampler_view_default_dx9_template
  * 7995050462f gallium/util: drop unused rect_area
  * 4abb08ac60c gallium/util: Drop unused translate_prim_restart_ib
  * 2c25d2ea90d gallium/util: Remove linear class
  * 469251c8987 gallium/util: Remove dirty surfaces class

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 07 Nov 2022 00:41:12 +0100

mesa (23.0.0~git2211041839.1c567ae3a2f~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1c567ae3a2f dzn: Hook-up format-casting
  * bda14ae9987 dzn: Try to get a ID3D12Device10 object
  * 457e9deee17 vulkan: Provide a vk_image_create_get_format_list()
    helper
  * d65f4396619 vulkan: Automatically generate helpers to retrieve
    format information
  * bbc4b4f59a9 dzn: Query D3D12_FEATURE_DATA_D3D12_OPTIONS12
  * 40bd7b4307c docs: use code-block
  * ebf33212edb docs: eg -> e.g.
  * e082cff56b6 docs/gallium: glsl -> GLSL
  * 45b4f820917 docs/gallium: fixup broken markup
  * 1d947e8f7f2 docs: remove spurious backtick
  * 8458451180c docs: fix a couple of links
  * 5525d0b196b docs: use inline-code instead of default role
  * 779b4639b75 docs: consistently use single-quotes in config
  * 7c5c1816947 ci: Uprev kernel to 6.0
  * ef5f9c99e05 VERSION: fix version as it will be a new year
  * e9b81c663da Revert "ci: Collabora farm maintanance"
  * 67cee534a88 CI: convert to use the new S3 server instead of the
    legacy minio
  * a04ed2f971d ci: Update ci-fairy in CI, rootfs and containers
  * a108e4f70cc ci: Update piglit-traces tests expectations
  * 70ce1dcacc9 ci: Update piglit with s3 support
  * 96e251aa86c ci: re-enable scheduled pipelines for git cache
  * d7ad9e70142 zink/ci: add another subtest to the list of known
    failures for radv
  * c7150ad8e6a broadcom/compiler: drop unused v3d_compile parameter for
    nir pass
  * 22789d34be0 v3dv: use vk_alloc instead of malloc
  * 36ef75b6eb9 v3dv: vkCmdWaitEvents2 takes an array of
    VkDependencyInfo
  * dc088754150 zink/ci: mark another test as fixed after the frontend
    caching series
  * 224f774e61e ci: uprev vkd3d-proton to v2.7
  * e891e84f4be radv: fix setting MIN_LOD for texture descriptors on
    GFX11
  * 617e48ecda4 ci: Collabora farm maintanance
  * 798aa43b6b6 microsoft/spirv2dxil: Lower sample pos for fragment
    shaders

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Nov 2022 19:36:17 +0100

mesa (22.3.0~git2210311953.d9f0fef91d4~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * d9f0fef91d4 docs/panfrost: Document Mali-T620 support
  * 4e14da056d6 zink: Enable mesa/st frontend shader caching.
  * b4f2b244fae d3d12: Advertise PIPE_CAP_BUFFER_MAP_PERSISTENT_COHERENT
  * 61afaa0c689 dzn: Set factory flags before creating device
  * 1c7d208302b radv/rt: Set vars.arg in the traversal shader
  * 6fd14140161 radeonsi/ci: Test piglit quick_shader profile as well
  * b7ea47ede62 radv,aco: don't use lower_to_fragment_fetch_amd on
    GFX11+
  * b9a3d8b0abe radv/gfx11: don't create texop_samples_identical
  * d31e5c8efc1 radv/gfx11: don't create fmask copy/expand pipelines
  * 140cefe95ae ac/nir: lower gfx11 vertex parameter exports
  * 14a1925727a aco: don't split swizzled store_buffer_amd on GFX9+
  * e6d26cb2880 nir,ac/nir,aco,radv: replace has_input_*_amd with more
    general intrinsics
  * 9f692f5aa64 radv: do not unconditionally disable NGG streamout
    lowering in NIR
  * d653ca4c52b radv: lower NIR intrinsics for NGG streamout
  * 3bafe6e0bcd radv: call nir_io_add_intrinsic_xfb_info() after IO
    lowering
  * ed865440db2 radv/llvm: prevent emitting streamout outputs for NGG
  * fa287c99ed1 aco: remove invalid assertions for NGG streamout
  * db7ffa40063 aco: implement NIR intrinsics for NGG streamout
  * fdc212bd7b6 aco: create a new builder variant for ds_add_rtn
  * 5d040646422 radv: Handle attribute ring intrinsic correctly with
    LLVM.
  * 45ff58cfd15 radv: Handle GSVS ring intrinsic correctly with LLVM.
  * ec9d71498e2 radv: Use correct types for loading the rings with LLVM.
  * 18e7f5c4287 panfrost: Enable Mali-T620
  * 333aa0a6e8c r600: Print MOVA_INT dest on Cayman
  * dfeb96e2771 r600: Only count ALU registers that are not clause local
  * 04465c10bdd r600: declare for counter locally and fix
    signed/unsigned warning
  * d4ec3f21cf5 Revert "radv: add a pointer to radv_shader_binary in
    radv_shader"
  * 4f57dfc1151 winsys/amdgpu: clamp up the alignment if zero
  * 5eaca461a77 freedreno/fdl: Increase alignment for UBWC images
  * d4b43d1bcfb pvr: setup buffer and image format feature bits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 31 Oct 2022 21:04:40 +0100

mesa (22.3.0~git2210290420.10ace5de3af~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 10ace5de3af panfrost,asahi: Support ARB_buffer_storage
  * 99b832008a0 gallium/util: add a helper for get_timestamp
  * 7fa50ced14d aco: insert waitcnt before/after ds_ordered_count
  * ea8ddf5c263 aco: add storage_gds
  * 590f176327a zink: Lazily allocate the dummy surfaces.
  * f0c033ebbc9 zink: No need to use a 2-sample dummy image for bindless
    without null descs.
  * 09c4ed4f2c9 iris: Do not export iris_bo_wait()
  * 144ccc31d7e iris: Drop duplicated errno handling in iris_bo_wait()
  * 191f9a39c9d iris: Nuke pci_id from iris_screen
  * bb9f66800cf intel/perf: Use intel_device_info functions to compute
    subslice and eu totals
  * dc4d7d7b0f0 d3d12: Don't align already-aligned size in
    `d3d12_bufmgr_create_buffer`
  * e902f2ab8cc gallium/pipe: Align allocation size in
    `pb_cache_manager_create_buffer`
  * 416b33337d9 freedreno/ci: Small bit of xfails cleanup
  * edfc98460b2 freedreno: Enable GL_ARB_enhanced_layouts
  * 5b7e6b583a7 freedreno/a6xx: Enable
    GL_ARB_texture_mirror_clamp_to_edge
  * c50e9f65bd4 freedreno/a6xx: Support GL_ARB_viewport_array + gl43
  * 23b7948a72b freedreno: Move guardband calc to bind time
  * d9150eab287 freedreno: Massage scissor state at bind time
  * e752a26ca43 freedreno: support multiple viewports
  * 138b513fb70 freedreno/a6xx: Support AMD_vertex_shader_layer
  * 110a5f4f02f freedreno/a6xx: Fix buffer size clamping
  * b416c08e869 freedreno/ir3: Drop unused view_zero/layer_zero lowering
  * 679adcbc3c7 freedreno/a6xx: Move layer_zero handling to interp state
  * 3a695470862 freedreno: Don't advertise TGSI support for GS/tess
  * 2e689e9d9d5 Revert "mesa/st: ARB_vertex_attrib_64bit depend on
    glsl>=410"
  * c84dbd189bc ac/nir/ngg: fix emitting streamout output by using
    packed location
  * 1c37a8342ce rusticl/kernel: fix more 32 bit problems
  * eae28671228 radv: move nir_opt_idiv_const/nir_lower_idiv after NGG
    lowering
  * e2fcbd4a37d radv/llvm: fix dual source blending on GFX11
  * d172fc1fcab radv: fix VRS limit when attachmentFragmentShadingRate
    is disabled

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 29 Oct 2022 13:15:50 +0200

mesa (22.3.0~git2210270416.d9a257b339b~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * d9a257b339b nv50/ir: nir_op_b2i8 and nir_op_b2i16
  * cc961a28f85 docs: update to latest venus driver support
  * a408f5cafe9 venus: add VK_EXT_depth_clip_control support
  * 8f7b5bf34b4 venus: add VK_EXT_primitives_generated_query support
  * 4f22fb117dc venus: sync to latest venus protocol headers
  * 4f2471e8c68 venus: handle
    VkAndroidHardwareBufferFormatProperties2ANDROID
  * 1c010da0831 venus: remove redundant codes
  * 6a29cb2654f nir/lower_bool_to_int32: add support for lowering
    functions.
  * 117b32a5944 nir/divergence_analysis: add missing
    desc_set_address_intel
  * edda5731c09 nir/divergence_analysis: add some missing RT intrinsics
  * db42ed1e04c vulkan/wsi/wl: correctly find whether the compositor
    uses the same GPU
  * 93dbd14ed77 anv: init major/minor before WSI
  * 324d9455897 anv: disable mesh in memcpy
  * 2ea481b2f0a Zink: add Zink profiles file
  * be235edfe2b zink: add profile documentation
  * 8dd314d2035 zink: handle broken resource mapping deadlocks
  * 5e05d98848c nir: Unconditionally call nir_trim_vector in
    nir_lower_readonly_images_to_tex
  * d9cf6de4a8a nir: Misc. style fixes to
    nir_lower_readonly_images_to_tex
  * b684a603f10 nir: Use nir_shader_instructions_pass in
    nir_lower_readonly_images_to_tex
  * a3c3d0d2871 nir: Reformat a comment
  * 16e0702ec71 etnaviv: properly reference flush_resources
  * 20b9eece6ef winsys/amdgpu: Set RADEON_FLAG_32BIT again
  * d50db140238 zink: limit gl_Layer clamping to drivers that need it
  * 2562c9c5c6b zink: clamp gl_Layer output to 0, if framebuffer is not
    layered
  * 72d18325dd8 zink: add new framebuffer_is_layered state
  * fd89690795a zink: add pushconst only pipeline layout
  * a0c6286485c zink: cleanup zink_pipeline_layout_create
  * 0f070923e83 zink: use unified pushconst layour for passthorugh tcs
  * ec4ac380f1e zink: cleanup pushconst interface between
    driver/compiler
  * 001c8fdfbf9 lavapipe: stop allocating 0 size const buffer

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 27 Oct 2022 05:23:58 +0200

mesa (22.3.0~git2210191807.3873ef47f7a~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 3873ef47f7a pvr: Remove outdated comments.
  * 849c2e14abf pvr: Handle pipeline barrier vk_sync.
  * d19835e43cd pvr: Fix overflow before widen warning for rgn headers
    size calculation.
  * 6a35563de0e pvr: Fix possible seg fault on csb copy.
  * f9eb0c13a03 freedreno/a6xx: Drop max_scissor tracking
  * 2ad637f52aa freedreno/a6xx: Update caps
  * dc70a940d4b freedreno/a6xx: Fix primitives-generated query
  * f26631c6de5 freedreno/a6xx: Fix MAX_GEOMETRY_OUTPUT_VERTICES cap
  * b96e8050d6f freedreno/ir3: Lower all the 64b
  * 1b38d233fc5 freedreno/ir3: Fix clipvertex with GS+tess
  * 0f6f6718247 freedreno/a6xx: Remove unused param
  * 533b87dff09 mesa/st: ARB_vertex_attrib_64bit depend on glsl>=410
  * 1aeca308a20 docs: Update freedreno features
  * 8dba83bb8d9 driconf: add a workaround for Cossacks 3
  * 53e7f3afbd2 driconf: add a workaround for a cursor issue with
    kwin_wayland
  * c849c41b0da docs: correct spelling of "freedreno"
  * 264080057a3 docs: correct spelling of "traveling"
  * ead77aeb829 docs: correct spelling of "correctly"
  * de9449c17a5 docs: ie. -> i.e.
  * 51481b8f4c8 docs: fractionary -> fractional
  * f3475859fa7 docs: correct spelling of "rasterizer"
  * c20f4484d32 docs: correct spelling of "explicitly"
  * 60e8c443b1c docs: correct spelling of "addition"
  * b469d9746f7 docs: correct spelling of "average"
  * f8d047c08b0 docs: correct spelling of "laid"
  * 9d55200e72c docs: correct spelling of "compression"
  * 5590fbd5305 docs: correct spelling of "commutativity"
  * 57db29e967a docs: correct spelling of "hierarchy"
  * fa210550b0f docs: correct spelling of "maximum"
  * fcd93216c69 docs: correct spelling of "synced"

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Oct 2022 20:04:14 +0200

mesa (22.3.0~git2210172233.6fbb87851cd~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 6fbb87851cd d3d12: HEVC Set
    D3D12_VIDEO_ENCODER_CODEC_CONFIGURATION_HEVC_FLAG_USE_ASYMETRIC_MOTI
    ON_PARTITION when required by caps
  * 8f654b90005 d3d12: Fix HEVC wrong caps detection due to bad
    parenthesis in condition
  * be7e2e5525b d3d12: HEVC Encode workaround for edge case in caps
    reporting not contemplated by upper layer interface
  * 3eed5931edf tu: Fix the size of patch control points state
  * ebf7f7a1827 aco/spill: Fix spilling of Phi operands
  * 829f769e602 pan/mdg: Fix 16-bit alignment with spiller
  * 2c446b66364 pan/mdg: Limit work registers for large workgroups
  * 9b19104a30b pan/mdg: Lower PIPE_COMPUTE_CAP_MAX_THREADS_PER_BLOCK on
    Midgard
  * 5c95be85ab5 panfrost/ci: Remove stale fail
  * 16d061d3acd anv: Enable 16 bit float ops on devices that have a LSC
  * 43169dbbe5f intel/compiler: Support 16 bit float ops
  * 2e774180c61 Revert "panfrost/ci: Disable t720 jobs"
  * c1cb7506bb3 v3dv/pipeline: keep qpu_insts around if we expect them
    to be used later
  * 7dcdd519385 glthread: leave dlist dispatch in place for Begin/End
  * ca02da294ad radv: discard the PS epilog when the pipeline doesn't
    use a fragment shader
  * 7b3aae89126 radv: do not create a noop FS when the FS is imported
    from a library
  * c8849043a84 Revert "CI: Igalia farm is down"
  * 675bcbb7a1c mesa: add EXT_debug_label support
  * 70fef476334 ci/windows: Getting the default supported windows
    version to be 7 when using mingw
  * 79891bea1cb ci/windows: Remove -Dlibelf:warning_level=1 as libelf
    subproject are already removed
  * 2cb21fdd53f ci/windows: Enable gles1 for msvc
  * 6905c258298 radv/rra: Use the accel struct type for header
    validation
  * 43756a9f76e radv/rra: Continue dumping accel structs if validation
    fails
  * e8547392b02 radv/rra: Add basic header validation
  * 2ccd039174a radv/rra: Validate before gathering bvh info
  * d83176d1c07 radv/rra: Fix dumps in the case of aliasing
  * aa405b789eb CI: Igalia farm is down
  * 2b64ff92843 util: Turn -DWINDOWS_NO_FUTEX to be pre_args
  * 4c7a44413a0 mesa,gallium: Revert "Make point coord origin a CAP"
  * 86c9aa6bfeb intel: Add and use intel_engines_class_to_string()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 17 Oct 2022 23:02:51 +0200

mesa (22.3.0~git2210151015.9fc4cb8067e~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 9fc4cb8067e gallium/vl: Add opaque rgb pixel formats
  * 8255739a0a5 mesa/main: remove driver-cap for ARB_point_sprite
  * 310959d9fe1 mesa/st: rip out point-sprite cap
  * b0d698c5328 rusticl: correctly check global argument size
  * c935232822f rusticl: use 32-bit address format for 32-bit devices
  * 66b3df3c152 clc: add 32-bit target
  * b3a69d1c31a panfrost/ci: Disable t720 jobs
  * eccc5600c3b zink: use util_dynarray_clear
  * 17d8ff3a398 zink: fixup dynarray-type
  * 510a34fbf33 zink: fix broken pool-alloc consolidation
  * b49b18f0b7a anv: reduce BT emissions & surface state writes with
    push descriptors
  * ff91c5ca42b anv: add analysis for push descriptor uses and store it
    in shader cache
  * 01e282f23fe anv: initialization pipeline layout to 0s
  * 8616f11a395 anv: track descriptor set layout flags
  * d7f1569307b anv: limit push constant reemission
  * 2db45f713a3 isl: avoid gfx version switch cases on the hot path
  * 06d955ab210 anv: remove multiple push descriptors
  * 803f438d852 anv: optimize 3DSTATE_VF emission
  * 126f5bc15a7 anv: limit calls into cmd_buffer_flush_dynamic_state
  * 54bc34f70a0 anv: comment out the Gfx8/9 VB cache key workaround for
    newer Gens
  * f8136ea5b63 anv: remove unused code
  * cea113c9770 vulkan/runtime: don't lookup the pipeline disk cache if
    disabled
  * 6558ecf3ebb radv: Mark dEQP-VK.ray_query.misc.dynamic_indexing as
    crashing in CI.
  * b516f594905 vulkan/wsi: Add dep_libudev to idep dependencies
  * 9cb251a0b06 ci/traces: Blender demo (Cube Diorama) flakes on Intel
    APL

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 15 Oct 2022 19:23:44 +0200

mesa (22.3.0~git2210141508.2e50bf19cd9~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 2e50bf19cd9 nir: move fusing csel and comparisons to
    opt_late_algebraic
  * aea311dbef4 r600/sfn: run cleanup passes after late algebraic opt
  * cfc6bdb7606 hasvk: Correctly set NonPerspectiveBarycentricEnable on
    gfx7
  * eec49374b06 nir: fix NIR_DEBUG=validate_ssa_dominance
  * 44ccaca41d4 util/mesa/wide: Rename _SIMPLE_MTX_INITIALIZER_NP to
    SIMPLE_MTX_INITIALIZER
  * be3c46964bd ci/bin: Remove whitespace from token files
  * d52d51b24dc ci/bin: Fix requirements.txt
  * bb6c43027ea agx: Reserve live-in regs at the start of block
  * de6e11b8482 agx: Pass in max regs as a paramter to RA
  * 68f89d4cc59 agx: Introduce ra_ctx data structure
  * bcb2cf96880 agx: Write to r0l with a "nesting" instruction
  * c9a96d46156 agx: Preload vertex/instance ID only at start
  * f665229d770 agx: Print agx_dim appropriately
  * 6c95572ef00 agx: Print instructions as "dest = src"
  * 72a1e1f33f6 agx: Emit trap at pack-time, not during isel
  * 1dcaade3e24 agx: Rename "combine" to "collect"
  * 82e8e709cb8 agx: Dynamically size split instruction
  * 7c9fba34bca agx: Switch to dynamic allocation of srcs/dests
  * 544c60a1326 agx: Improve printing of immediate sources
  * c2bc8c13846 agx: Don't prefix pseudo-ops
  * 40f0ac20821 agx: Emit smaller combines for nir_op_vec2/3
  * f4726cf240f agx: Set PIPE_SHADER_CAP_INDIRECT_CONST_ADDR
  * 6a183a9ffd1 agx: Add iterators for phi/non-phi instructions
  * d3880a63245 zink: disable fbfetch when flushing clears
  * 1ae26de36f5 zink: unset rp_changed after initializing renderpass
    attachments
  * f72071fbc35 zink: clamp line_stipple_factor to 1 if stipple is
    disabled
  * 2710ef4c2af zink: don't add other usage bits for transient images
  * 3dcc03d979b zink: check core feature for pipeline cache control
  * 179e638bb82 zink: Fix dummy CB path decision for VK_EXT_cwe
    presence.
  * 6a18e154bce rusticl/mem: propper CL_MEM_ALLOC_HOST_PTR support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 14 Oct 2022 20:37:19 +0200

mesa (22.3.0~git2210112330.20ad1678ab1~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 20ad1678ab1 docs: update calendar and link releases notes for 22.2.1
  * b860a2b802f docs: Add sha256 sum for 22.2.1
  * 7406a3e89f4 docs: add release notes for 22.2.1
  * 69c22dd8173 zink: fix isNan mismatch between NIR and SPIR-V
  * a730b1bb0a4 zink: stop enabling minmax filtering when not supported
  * b87c08b3bf7 zink: fix invalid Offset set for variables which do not
    need an offset
  * 6eadd6d1698 radv/rra: Calculate bvh size requirements recursively
  * e4283d857b8 radv/rra: Handle box16 nodes
  * 7754f208cea radv: Use half floats for box16 coords
  * 266f0ae9486 radv: Add radv_bvh_node_box16
  * 5f859f805b7 radv: Rename node_internal to node_box32
  * da856af2c92 draw: s/start_or_maxelt/start/ in llvm VS code
  * 4c73a503e3e draw: move vs_slot var in tgsi/llvm_fetch_gs_input()
  * 717572e5be3 draw: fix some const-correctness in draw_vbo()
  * 0a809fca619 draw: make draw_geometry_shader_run() return void
  * 8d8683ab1d0 draw: replace double conditional expression with if/else
  * 645a3d24a1b draw: asst. clean-ups in
    draw_pt_fetch_shade_pipeline_llvm.c
  * baee3c62f71 draw: asst. clean-ups in draw_private.h
  * bfaed9dd63e draw: clean-up count assignment in draw_pt_arrays()
  * e4552632aab draw: asst. clean-ups in draw_pt.c
  * 529707d4eff draw: asst. clean-ups in draw_split_tmp.h
  * 39a42c48e3e draw: asst. clean-ups in draw_pt_vsplit_tmp.h
  * 0a340419cb4 draw: asst. clean-ups in draw_pipe.c
  * f83e284543c draw: asst. clean-ups in draw_prim_assembler.[ch]
  * 8613316a31c draw: asst. clean-ups in draw_gs.[ch]
  * 490f7a14f61 draw: asst. clean-ups in draw_cliptest_tmp.h
  * 0d27e3b917a draw: asst. clean-ups in draw_llvm.c
  * 4e6a32219b3 draw: asst. clean-ups in draw_pipe_aapoint.c
  * 6af739bb9ef draw: asst. clean-ups in draw_pt_so_emit.c
  * 9daf8531e55 draw: asst. clean-ups in draw_vertex.[ch]

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 12 Oct 2022 00:09:30 +0200

mesa (22.3.0~git2210101220.55f6a2bb51a~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 55f6a2bb51a gallium: normalized_coords -> unnormalized_coords
  * 4e7b9aaa066 r300: don't use smooth line if not requested
  * 98944b327b4 util/radeonsi: enable zerovram workaround for Exanima
  * 3200b5c46b2 util/conf: enable init to zero workaround for Exanima
  * 091b5b08d44 pps: enable track_event in intel.cfg
  * e68adf19bc3 radv/rra: Transcode nodes recursively
  * 0c6c30d2117 ci: uprev DXVK to 1.10.3
  * 27aa1720120 isaspec: Fix out of date comment
  * c0cdc148f40 freedreno: Add perf-debug trace
  * f6f72b56296 freedreno/drm: Don't call kernel with no ops
  * 6dcc5240352 freedreno: Use TC cpu-storage to shadow buffers
  * 3aa76e6a05b r600: info.stage MESA_SHADER_KERNEL as
    MESA_SHADER_COMPUTE
  * 98cace52246 r600: set clear_buffer = u_default_clear_buffer
  * 505dd284c1a radv: Remove main_loop_case_visited
  * d4345ec4d22 radv: Use cache_uuid for accel struct compatibility
  * 12efb83ae89 gallivm/sample: refactor multisample offset calcs code.
  * b4f132b2dd0 gallivm/nir: drop some unused struct members.
  * c457e1f0e4d gallivm/sample: move some first_level/last_level calcs
    out
  * 3052d30dc21 CI: Re-enable Collabora devices
  * b666c203eed gallium/u_threaded_context: remove stale comment
  * 12acee17fad frontends/va: reallocate surface for yuv400/yuv444
    picture
  * 3e2f7905a63 radeonsi/vcn: enable jpeg decode of yuv444 and yuv400
  * 6b933676cca frontends/va: support yuv 400/444 rt_formats in vaconfig
  * d2c0ff1cafb frontends/va: add support for yuv400 and yuv444
  * 9055ab9de33 util/format: add util format y8_400_unorm
  * 791f1874059 pvr: Add vulkan shader factory headers for Query and
    clear APIs.
  * 0923de04bae pvr: Split pds compute shader create and upload code for
    reuse.
  * b8d9afe75ce pvr: Remove double error reporting.
  * b03e73a0241 pvr: Fix allocation size passed in
    pvr_cmd_buffer_alloc_mem.
  * 0b694c2eb35 pvr: Fix heap type of availability_buffer allocation.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 10 Oct 2022 18:24:59 +0200

mesa (22.3.0~git2210060730.1ebd3fb3ad8~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1ebd3fb3ad8 ci/etnaviv: add GC7000 support
  * 37cddadf293 ci/bare-metal: introduce BM_MKBOOT_PARAMS
  * 13c6d7e97d5 ci: switch to mkbootimg.py
  * 1cba34d8d53 ci: include etnaviv support in ARM64 container
  * df3fdbdeb50 aco: Fix build error with std::max on GCC 12
  * 3ca8402ec71 ac/nir/ngg: Fix cross-invocation indices and cull
    outputs.
  * 458fc9ce815 cso: asst. clean-ups in cso_context.[ch]
  * faf8398893d cso: asst. clean-ups in cso_cache.[ch]
  * eaa93d71775 cso: use util_bitcount
  * 983e06af2ba cso: asst. clean-ups in cso_hash.[ch]
  * 406a1854d07 vulkan_hasvk: set READ/WRITE_WITHOUT_FORMAT for buffer
    views
  * b75fbfdd469 anv: set READ/WRITE_WITHOUT_FORMAT for buffer views
  * 847361ba072 panfrost: Remove load_kernel_input path
  * deb3810f1e2 agx: Remove load_kernel_input path
  * 6dcad8a13b3 lavapipe: zero-init sampler objects
  * 2aac8ef1256 lavapipe: remove continue statements in emit_state() to
    be more consistent
  * 77515d722b5 zink: Map ETC1 to ETC2 to avoid uncompressing in the
    frontend.
  * 061914ad833 zink: Enable ASTC texture format translation.
  * 44894ba8b1d zink: enable native ETC2 if vk driver supports it
  * 270ea2ac7e7 zink: Skip border color clamping for compressed formats.
  * da04bbe5862 ci/zink: Clear stale xfails for turnip.
  * afe4b534b52 freedreno: Fix graphic glitches on a4xx and a5xx
  * 1d32bcdcb2a iris: better error message with GuC loading failures

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 Oct 2022 23:13:19 +0200

mesa (22.3.0~git2210050059.537176181ec~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 537176181ec llvmpipe: bump LP_MAX_THREADS to 32
  * 0a06db8fb98 ci/venus: enable render server for venus testing
  * dadb29cf2e2 turnip: Don't use the dynamic color write enable during
    non-dynamic.
  * 6f27bf25046 gallivm: remove legacy pointer_get apis
  * 0c865245900 gallivm/sample: use retrieved types to do opaque pointer
    loads.
  * 1a9889ae127 draw/llvmpipe: add way to return pointer types to
    generic code.
  * 02c675b1960 draw/llvmpipe: move texture/sampler/image member load to
    opaque.
  * 9fe8e5ccf7a gallivm/llvmpipe: add opaque pointers support to sampler
  * 3d242c04475 llvmpipe/tests: port to new pointer interfaces.
  * 0066e60fc4a anv: Split the debug part of anv_queue_exec_locked()
  * bc384e24f00 anv: Use Vulkan types for priority as much as possible
  * f5a58b8886e anv: Split i915 specific parts of
    anv_queue_submit_simple_batch()
  * 35ed40f3561 anv: Move fetch of i915 physical device parameters
  * a17783b066f intel/dev: Split i915 specific parts of
    intel_get_device_info_from_fd()
  * 03b959286e2 intel: Make engine related functions and types not i915
    dependent
  * 24bc3b76446 docs: move VK_EXT_extended_dynamic_state3 out from 1.3
  * 68f3c38c801 tu: Implement extendedDynamicState2PatchControlPoints
  * 1bd3d28050d tu: DS primitive stride does not use patch control
    points
  * 042c135a993 tu: Fix param_stride placement
  * 998122d9c2a mesa: fix GL_INVALID_OPERATION in
    glEGLImageTargetTexStorageEXT
  * 66b9c05bb9c ir3: Add missing cat5 encoding to asm parser
  * dcab399a173 ir3/analyze_ubo_ranges: Account for reserved consts
    better
  * c58d633dd2f ir3: Move fixup_regfootprint() to ir3_collect_info()
  * 7d1b8c8ab27 ir3: Delete outputs from fixup_regfootprint()
  * 34a390569d3 v3dv/pipeline: use a array instead of individual pointer
    to stages
  * cc06b7e00d8 aco: Use s_pack_ll for s_bfe operand on GFX9+.
  * 1cf1a94f976 intel: revert preemption disable via VFG changes
  * 9ebe893a61f nir_lower_to_source_mods: Don't sneek in an abs modifier
    from parent
  * 8945375b80c vulkan: update beta and video headers to 1.3.230
  * fbe7b6f6a20 gallium/tgsi: handle temps/outputs array.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 05 Oct 2022 02:41:19 +0200

mesa (22.3.0~git2209282335.2044f2910ca~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 2044f2910ca vulkan/wsi: Add a supports_scanout flag
  * 15fca5ca7e7 vulkan/wsi: Add a typedef for memory type select
    callbacks
  * 39f81564aba vulkan/wsi: Don't expose as many image configure helpers
  * 43c1c2b8885 vulkan/wsi: Always configure images in
    wsi_swapchain_init()
  * 5424049e662 vulkan/wsi/win32: Configure images via params passed to
    wsi_swapchain_init()
  * 76d15717e37 vulkan/wsi/display: Configure images via params passed
    to wsi_swapchain_init()
  * c315e20d619 vulkan/wsi/wayland: Configure images via params passed
    to wsi_swapchain_init()
  * 8775f08bf11 vulkan/wsi/x11: Configure images via params passed to
    wsi_swapchain_init()
  * 29e3fc8eb1e vulkan/wsi: Support configuring swapchain images as part
    of swapchain init
  * bfa08a1681b llvmpipe/cs: move compute code to explicit pointer types
  * 1d6819bf5b3 llvmpipe/setup: move setup code to explicit pointers.
  * 977476bb050 llvmpipe/fs: fix invocations access for opaque ptrs.
  * 98efdc449d1 llvmpipe/cs: convert cs thread data to opaque friendly
    api
  * dd60813657b llvmpipe/cs: convert cs context to opaque friendly api
  * a8bd993809a llvmpipe/fs: convert linear context to opaque pointers
    friendly
  * f0e9d3e497e llvmpipe/fs: convert thread data ptr to opaque ptr
    friendly apis
  * 1a7250ad966 llvmpipe/fs: start passing explicit context pointer
    type.
  * ae201bcd42a gallium: Do not include offscreen winsys if glx is
    disabled
  * 521da0360a0 docs/rusticl: Document minimum required bindgen version
  * 13016d22c57 rusticl/bindgen: Use `allowlist-*` instead of `whitelist-
    *` switches
  * 5537f778a06 gallivm: avoid the use of an uninitialized value
  * 3ed712f7483 zink: set layouts before possibly reordering image
    copies
  * 440c1e3702c zink: always unflag unordered_write when binding image
    descriptors
  * 4c58b92e44c aux/trace: dump depth_clamp for rasterizer state
  * 0de63e9774f aux/trace: dump line_rectangular member of rasterizer
    state
  * 7c6f407d4c8 radv: Add and use AS and scratch layout structs
  * bad75ed3f16 radv: fix emitting RBPLUS state when MRTs are compacted
  * 1dd5d94f65d radv: Do an early check of distance in triangle culling.
  * e06c332bf77 tc: don't use CPU storage for glBufferData
  * 8af8dc97bc3 tc: do a GPU->CPU copy to initialize cpu_storage

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 29 Sep 2022 00:24:52 +0200

mesa (22.3.0~git2209241523.0d66ed49b41~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 0d66ed49b41 radv/rtpso: Use the common traversal helper
  * 3f72061be93 radv/rq: Use the common traversal helper
  * ac459353450 radv: Add a common traversal build helper
  * e24a8168189 radv: Fix file descriptor leak.
  * 5a3411567a3 radv: Properly initialize all memory in RRA dumps.
  * 19aae066925 radv: Use deterministic order for dumping acceleration
    stuctures.
  * 50bb0d64277 radv: Use GLSL matrices for instance transforms in BVH.
  * 3c09681eddb radv: Use proper matrices for instance nodes.
  * 0f9fb8e15ff radv: Remove aabb bounds from instance nodes.
  * b1ddb350402 radv: Translate the BVH copy shader to glsl from
    nir_builder.
  * ffc5f527248 radv: Hardcode root node id.
  * 513d074d398 radv: Fix GLSL BDA struct alignment and use pointer
    arithmetic SIZEOF.
  * f446f7a7693 intel/l3: Use L3 full-way allocation setting for gfx12.5
    (DG2, MTL)
  * 02d858ef0dd d3d12: Fix usage of %ld with PRIu64 instead for cross-
    platform build
  * b3be2ace593 zink: PIPE_CAP_SHAREABLE_SHADERS
  * 10ed67867e9 zink: use screen param for zink_shader_free()
  * ac1b343477b zink: use program's context for cache deletion
  * 275e4a9c895 zink: add locking for program caches
  * a10cad018b2 zink: don't try to delete programs from the cache if
    stages have been modified
  * eab18cb7a29 zink: use screen params for program reference functions
  * 697eb99d699 zink: track the owner context for gfx programs
  * 2fa70912633 zink: track a mask of gfx stages remaining in gfx
    programs
  * 0f770caa232 freedreno: Disable 8bpp_ubwc on a6xx gen2
  * 7bf8af2c8d5 radeon/vcn: process invalid frame rate in encoding
  * 4fdf10fdafe radeonsi/gfx11: don't set VERTS_PER_SUBGRP to 0
  * 7483e50404a winsys/amdgpu: init 'r' before using it
  * 58829d9f112 iris: implement Wa_14016118574
  * f2645229c2f anv: implement Wa_14016118574
  * c7ff9876d6c zink: correct emulation of luminance-alpha formats
  * e7f192030ce zink: fix luminance/luminance-alpha emulation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 24 Sep 2022 22:58:23 +0200

mesa (22.3.0~git2209221925.d68e74955c8~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * d68e74955c8 mesa/st: fix a set_sampler_views call parameter order
  * 672a1a9021e pvr: Implement vkCmdNextSubpass API.
  * 154ffdbd45e pvr: Pass load-op struct instead of idx to support
    subpass load-ops.
  * f1d61d8161f pvr: Add support to create subpass load ops.
  * 0756a28f2d3 pvr: Add attachment resolve support.
  * ce5a34aadb2 pvr: Add const to structs that are not supposed to be
    modified.
  * 2fc20cff4c3 pvr: Rename userpass_spawn to isp_userpass.
  * f19697de5a5 pvr: Add missing output register write in
    pvr_CreateRenderPass2.
  * 7eff9502151 pvr: Use ~0 for masks instead of ~0U.
  * 10b6a0d567e pvr: Add support for generating render pass hw setup
    data.
  * b57cd626985 pvr: Replace pvr_renderpass_surface_initop with
    VkAttachmentLoadOp.
  * 9f9a1ab1189 pvr: General reformatting and renaming some fields.
  * 88eeece6623 docs: update calendar and link releases notes for 22.1.7
  * 40bfaa7354a docs: add release notes for 22.1.7
  * c3df3baf8b7 docs: update calendar and link releases notes for 22.1.6
  * 2b4a819e60e docs: add release notes for 22.1.6
  * cd36a297598 aco/optimizer: change inverse_comparison in-place
  * c8445c16910 aco: Change inverse-comparison optimization to work with
    s_not
  * cf5f9854bcb aco/optimizer: optimize s_and(exec, s_and(x, y)) more
    aggressively
  * 79a8e8b5b26 aco/optimizer: do can_eliminate_and_exec() optimization
    later
  * 14b15b4038d zink: assert on unnormalized texcoords
  * 37733c100d6 mesa/st: always use normalized coords for samplers
  * 1a135bdd6ce mesa/st: always use normalized coords for samplers
  * 484205b7ebf mesa/st: always use normalized coords for samplers
  * 7eeb0fec8d6 broadcom/compiler: increase V3D_MAX_BUFFE_RANGE to 2^30
    bytes
  * 3417a0c4a22 iris: Support up to 128 textures
  * 06a0de492ac iris: Support up to 64 images
  * c4ff82d9588 iris: Split max #defines for textures/samplers/images
  * c9c8134d768 iris: Stop looking at textures_used for samplers
  * 0edf63de76d Try to fix FTBFS on kfreebsd architecture

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 22 Sep 2022 20:16:09 +0200

mesa (22.3.0~git2209170532.569ade73b4c~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 569ade73b4c panvk: Implement VK_KHR_descriptor_update_template
  * 42d60aa0bc9 panvk: Fix buffer views
  * c63cb7f4d24 vulkan/runtime: Compact descriptor update templates
  * 74cebc5d5d4 hasvk: Switch to the common descriptor update template
    struct
  * 94f8222dde1 anv: Switch to the common descriptor update template
    struct
  * 3c24f19fa54 vulkan/runtime: Add a comon
    vk_descriptor_update_template
  * 571309be31a glx: Remove some excess work from the GLX_FBCONFIG_ID
    fallback
  * fed3643eb9a glx/dri: Avoid a weird indirection in driFetchDrawable
  * 333895bebca glx/dri*: Unify glx_context subclassing
  * b13d4362b64 turnip: fix kgsl tu_enumerate_devices return code
  * 3c57d05b47a util: fix missing fcntl.h on musl
  * 546c40cd661 ci/turnip: Move some 15-second-ish test skips to pre-
    merge skips.
  * 5694fe2a44d ci/turnip: Drop a couple of spillall skips.
  * 1bef39c50f7 ci/turnip: Allow running spirv_ids_abuse in full VK
    runs.
  * 3503d5fbdaa ci/turnip: Re-enable the compressed cubemap tests.
  * 17c27e68edd ci/turnip: Bump the full-run a618 runner count to 3.
  * 4319e896665 ci/turnip: Use all 9 a618 runners at once for VK
    testing.
  * 10ddbf50bb6 r600/sfn: lower tg4 to backend in NIR
  * 1dca2b8ae96 r600/sfn: Make sure texture lowering is done in the
    right order
  * ed6204eb06c r600/sfn: only use 3 channels on Cayman for trans ops
  * 260cddf9ec2 r600/sfn: Handle shifts on Cayman
  * 2fbcd3d4a9d r600/sfn: fix some channel pinning
  * 56ded410af8 r600/sfn: Add a free-channel mask when testing whether a
    register can switch channel
  * 668167aac12 r600/sfn: VS inputs are effectively SSA
  * f3415cb26a6 r600/sfn: copy propagate register load chains
  * 1852f1e328d r600/sfn: drop some unused code
  * c0b6c59e084 r600/sfn: Copy propagate into TEX source
  * 5416d1bc4b2 r600/sfn: Don't assert when setting one value
  * 4a505609e44 r600/sfn: Add an easy access to get an instruction as
    ALU
  * a7c6a7e3458 r600/sfn: Don't allocate un-used components in texture
    ops

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 17 Sep 2022 11:56:21 +0200

mesa (22.3.0~git2209132137.4da147a02b5~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 4da147a02b5 mesa: remove fallback for GL_DEPTH_STENCIL
  * 2baa40b0411 mesa: simplify _mesa_texstore_z24_s8 and s8_z24
  * a5b1a811053 mesa: avoid reading back textures from VRAM
  * a6e6ffb7039 venus: add support for VK_EXT_multi_draw
  * 99378c88739 venus: sync to latest venus protocol headers
  * 873365caeeb nouveau: Fix compiler warnings about silly address
    checks in ir_print.
  * 210807a1a48 turnip: reduce MAX_STORAGE_BUFFER_RANGE
  * 89dcc52b783 rusticl/device: print error when libclc fails to load
  * cf7069469cb asahi: Handle blending with MRT
  * e1715c6a4f0 asahi: Don't crash on <4 channel render targets
  * 89e0f544223 agx: Don't use nir_find_variable_with_driver_location
  * 0883f0b3028 agx: Lower txs to a descriptor crawl
  * bc4f418cb40 agx: Implement load_global(_constant)
  * 965cc62bddd agx: Implement txd
  * 7a4e0a4d351 agx: Implement texture offsets and comparators
  * 4f85a7be8cd agx: Make p_combine take a dynamic src count
  * ef31dceee8c agx,asahi: Implement nir_intrinsic_load_texture_base_agx
  * 7371803f145 nir: Add nir_intrinsic_texture_base_agx sysval
  * ef75dbfddd0 panfrost: Honour cso->req_local_mem
  * b4dd1b8916d panfrost: Respect buffer offset for OpenCL
  * 4be56e5e3f0 pvr: Update FWIF 3d and compute register structures
  * 24e24e9a285 pvr: Emit cs words for load op on
    vkCmdBeginRenderPass().
  * ad56b9644d2 pvr: Remove STRIP_RENDERING members from FWIF
  * 222f3c8a6d9 pvr: Implement vkCmdDrawIndexedIndirect API.
  * cdf986a3e6a pvr: Implement vkCmdDrawIndirect API.
  * e14c418862e docs: move rusticl readme into docs/
  * 0265a231724 pvr: Implement vkGetPhysicalDeviceImageFormatProperties2
    API.
  * 1e7a930e104 radv: Enable VK_EXT_load_store_op_none.
  * cf0e065dccf ci: uprev piglit 2022-09-08
  * 45eda069531 ci: introduce update_traces_checksum.py

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 13 Sep 2022 22:11:52 +0200

mesa (22.3.0~git2209030741.6ffbb1abdb2~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 6ffbb1abdb2 vulkan: Dirty VP_VIEWPORTS/SCISSORS when copying
    viewports/scissors
  * 136a26f271b gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_format_soa.c
  * 4ff7e64e81c gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_struct.c
  * 02b9a8ba12e gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_format_s3tc.c
  * 1b8c4931df9 gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_jit_types.c
  * f30251ef9bf gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_nir_soa.c
  * 8289ac87a40 gallivm: fixes for LLVM-15 opaque pointers in
    lp_bld_nir_aos.c
  * 49c6e2fd70a gallium: drop unused macros in draw_llvm.h
  * 3668ebf8bd4 gallivm: drop unused "emit_load" in
    lp_llvm_buffer_member()
  * adf28955162 gallivm: LLVM-15 opaque pointers: disable
    LLVMGetElementType(ptr_type)
  * 08615f2807e llvmpipe: fix front/back face system value in the fs
  * 723ae2368f6 vulkan: fixup 1.3.226 update
  * 7e282694ed7 anv: remove non present field in upstream spec

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 03 Sep 2022 11:50:44 +0200

mesa (22.3.0~git2209022315.2a2766ce18f~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 2a2766ce18f Enable .VALVE_mutable_descriptor_type in physical_device
  * de5879447b4 Track bitset when create descriptor pool
  * d5f116feb53 Update bitset when init descriptor layout.
  * 70394675229 Increase enum type in vn_descriptor_set.
  * 250c6847505 ci: uprev piglit 2022-08-30
  * c93173fcecc util/perf: use ALWAYS_INLINE for tracepoints
  * 4d747d5690b util/perf: simplify u_trace_instrument
  * 18d7cb4abbd util/perf: add u_trace_instrument
  * aeb2c5a8daf util/perf: remove u_trace::enabled
  * 8d8d4347e39 util/perf: ignore ut->enabled for iterators
  * 8b15025a2ba mesa: add GLSL_SOURCE
  * 9701b9098f2 anv: enable EXT_mesh_shader
  * d5dedecfe7e anv: implement draw calls for EXT_mesh_shader
  * 637063ffc63 anv: implement EXT_mesh_shader
  * b3354afd896 anv: replace VK_SHADER_STAGE_[TASK|MESH]_BIT_NV with
    VK_SHADER_STAGE_[TASK|MESH]_BIT_EXT
  * 9cefaa9b6d5 anv: check EXT_mesh_shader whenever NV_mesh_shader is
    checked
  * 2e1b96bb1b9 intel/compiler: implement EXT_mesh_shader
  * 3ef13ef2349 turnip: Treating non-d/s-write pipelines as not having
    d/s feedback loops.
  * 14911e8f83f spirv, compiler: add "bool nv" to shader_info.mesh
  * 7d1bcf1f55b spirv, nir: Handle EmitMeshTasksEXT opcode.
  * 42e906485c4 spirv: Support TaskPayloadWorkgroupEXT storage class.
  * a03c30bd8dd spirv: Support the CullPrimitiveEXT mesh shader built-
    in.
  * c5c6cef893a spirv: Support EXT_mesh_shader SetMeshOutputsEXT.
  * b3cc09cff3b spirv: Support EXT_mesh_shader mesh/task stages.
  * bbebc1fb357 spirv: Add mesh_shading capability for EXT_mesh_shader.
  * f6925b84465 spirv: Support EXT_mesh_shader indices and mark them per-
    primitive.
  * c315e2e7180 vulkan, spirv: Update to Vulkan 1.3.226 and latest SPIR-
    V headers.
  * 3bf3c45ae8b pan/bi: Add and use bi_num_successors helper
  * 875a34160ac pan/bi: Add and use bi_replace_src helper
  * f01ccdbf69b pan/bi: Remove assert(bi_is_ssa(dest))

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 03 Sep 2022 00:18:03 +0200

mesa (22.3.0~git2208311740.296eb2918c1~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 296eb2918c1 util: Remove the need of _MTX_INITIALIZER_NP in
    simple_mtx.h
  * 064ec944c12 util: Add extern "C" guard in simple_mtx.h
  * 67cd0c44d23 util: Add api util_call_once_with_context
  * 201e1ba9dbd pvr: Only destroy the physcial device if it exists
  * 6fed6161876 pan/mdg: Print 3 sources for CSEL
  * 4fe755e803c pan/mdg: Always write return address to r1.w
  * d05a2243d46 radeonsi/sqtt: set stable pstate if possible
  * 33426a328b7 wayland: avoid writing interface names as free-form
    strings
  * 6d34925967c pvr: Change indentation from tab to spaces for xml
    files.
  * 7d614fa9b9c pvr: Implement vkResetCommandBuffer
  * 88bed3babc3 pvr: reset all command buffer state in
    pvr_cmd_buffer_reset()
  * 492ec311f79 virgl/ci: remove some flakes
  * 6e2b01e5b80 virgl: when reading back wait first, then do the
    transfer
  * 16143642812 v3dv: expose VK_KHR_synchronization2
  * 378be25016f v3dv: use VkPipelineStageFlagBits2 when checking
    semaphore wait stage
  * 4b50431c3e7 v3dv: port remaining entry points to
    KHR_synchronization2
  * 9cd81fb9108 v3dv: implement vkCmdPipelineBarrier2
  * a27111cdbd1 v3dv: also check GS stage on image access for binning
    barriers
  * f5e867712f4 zink: request forcing of fp32-samplers to nearest when
    needed
  * 8abb5c8b41b mesa/st: force nearest-filtering for fp32 textures
  * ec222a20dad mesa/st: always force integer filtering to nearest
  * 70c71c42003 mesa/st: also override mip filter for integer textures
  * d2de931c16a radv: determine if the topology uses adjacency from the
    shaders on GFX9+
  * 4406905600d radv: allow null descriptor set layouts in pipeline
    layouts
  * ca33c319e5d v3dv: implement VK_KHR_zero_initialize_workgroup_memory
  * a68a2805bf1 nir/lower_variable_initializers: implement non-scoped
    barrier path
  * 40ad12126fc radv: Remove redundant radv_QueuePresentKHR.
  * 0e0e5d1f204 venus: allow no external memory handle when renderers
    lacks support
  * 80b35fbefe5 nir/lower_mediump: Lower FS outputs to 16-bit when the
    value was upconverted.
  * dbb17f567a2 d3d12: Change displayable format logic

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 31 Aug 2022 19:00:20 +0200

mesa (22.3.0~git2208221926.20fba14f2cb~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 20fba14f2cb wsi/x11: fix memleak in wsi_x11_connection_create()
  * 9573b24ab41 gallium: Remove util_make_fragment_tex_shader_xrbias
  * 18539a40997 gallium: Inline away util_make_fragment_tex_shader
    interp_mode
  * b61ce265d72 gallium: Inline away
    util_make_fragment_tex_shader_writemask
  * c20139c2922 tu: Enable bufferDeviceAddressCaptureReplay
  * e23c4fbd9b6 tu: Switch to userspace iova allocations if kernel
    supports it
  * 3e5aac8fbcf Revert "ci: disable unit tests"
  * 9fc82560d3f ci: disable glcpp tests for now
  * 0f9b662f9a7 meson: add enable-glcpp-tests option
  * 201a62cbbae meson: Use different STRACEDIR folder for
    intel_devinfo_override_test
  * 12bb9cba8bd anv: Fixes struct anv_device::info is not initialized
    with struct anv_physical_device
  * 8a78fbb8324 radv: move lowering the view index to
    radv_pipeline_link_shaders()
  * 98fe5acbdba radv: move lowering patch vertices to
    radv_pipeline_link_tcs()
  * b9ed82815d2 radv: move assigning driver locations to the new linking
    helpers
  * cac4ad2115a radv: rework linking shaders in NIR
  * f9e3339e39c radv: add radv_remove_point_size() linking helper
  * 7e635adb2c9 radv: remove useless parameter from radv_link_shaders()
  * f461fa19333 radv: use NIR_PASS with
    radv_export_implicit_primitive_id
  * 2167a61611c radv: remove unused parameter in radv_lower_io_to_mem()
  * f66d822d872 radv: move dumping NIR shaders to the previous similar
    loop
  * 619da8df77f radv: move lowering FS intrinsics to
    radv_postprocess_nir()
  * 0fd0c3871a0 radv: add a radv_postprocess_nir() helper
  * 22faf8597a5 radv: copy the whole radv_shader_info struct for merged
    stages
  * 6262586bd73 radv: copy linked I/O info for merged stages in
    radv_fill_shader_info
  * 0eab07bf66d radv: remove useless check when creating the noop FS
  * 4ac72f7d1a4 r600/sfn: Don't use broken idiv lowering
  * c38023a9b2c r300: Set more shadow sampler lowering in precompiles.
  * 58432e56ae1 Update docs/drivers/llvmpipe.rst
  * 4ba21c3e8ce vc4: store tex sampler in proper register
  * 177f7fae013 ci: enable lima farm

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 22 Aug 2022 20:33:58 +0200

mesa (22.3.0~git2208210952.9c01fff4453~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 9c01fff4453 r300: merge MOVs with MULs or ADDs in merge channels
  * 275beae42d4 r300: merge MOVs into ADD using the 0 swizzle
  * 13607d8c482 r300: don't merge w channel in fragment shaders
  * 268f317f228 r300: generalize the merge_movs pass
  * 05785d482ea r300: run dataflow optimizations in separate loops
  * 2755faf9386 r300: check for identical saturate mode when merging
    MOVs
  * 6286e48e5dd r300: fix negate mask computation when merging movs
  * aeae7b812cc r300: allow constant swizzles with inline constant
  * 7b60414494b microsoft/clc: Handle a null clc logger
  * 163390d762b vulkan/device_select_wayland: fix a memory leak with DRM
    device handling
  * 995480a3f7e radv/ci: Remove host build related fails
  * 1762e6b5406 aco: Improve SCC nocompare optimization when SCC is
    clobbered.
  * e69de0f81d6 aco: Support s_cselect_b64 in SCC no-compare
    optimization.
  * b0ef7c7c828 aco/optimizer_postRA: Don't try to optimize dead
    instructions.
  * 4a4e5320a12 ci: implement stress testing jobs in ci_run_n_monitor.py
  * 607bf3cc41f ci: GraphQL was already implemented in
    ci_run_n_monitor.py
  * d6b61fcf60e ci: traces: update freedreno and broadcom to brotli
    compressed traces
  * 1d521a5c15f zink: add gfx pipeline lookup shortcut
  * 6a836eaff55 zink: track which stages in gfx programs are using
    inlined uniforms
  * 8a5b3658dfc zink: split resource tracking into two sets for
    buffer/texture
  * 8b93f157de4 zink: make batch internal api static again
  * 40424cbe980 zink: merge all the batch state sets onto the struct
  * a4830517c26 zink: use PIPE_CAP_RGB_OVERRIDE_DST_ALPHA_BLEND
  * 16ae4fb8b73 zink: add is_buffer param to
    zink_batch_resource_usage_set
  * 0b56ac82eb8 zink: move zink_batch_resource_usage_set to be static
    inline
  * 7172c8a4217 zink: remove c++ guard from zink_resource.h
  * 277590d3e4b zink: add more c++ guards to headers
  * 58823f054e5 zink: make zink_bo.h compile in c++
  * bc46d44ba5a zink: constify shader module variable
  * 98fdcd9f9b6 zink: pass shader stage as param for gfx module update

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 21 Aug 2022 17:22:28 +0200

mesa (22.3.0~git2208190003.a9556f97daa~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * a9556f97daa v3dv: Avoid swapchain_info handling on Android
  * b17ea48f91d v3dv: Limit API version to v1.0 for Android
  * 5e32e8c962d v3dv: Enable sync_fd importing/exporting on Android
  * 54f3754107c ci: bumping all tags to make sure we don't have hidden
    fails
  * c63303aea24 ci: update fails list
  * ace13203f30 ci: remove broken device-select-layer from build
  * 446eeccb1c9 intel/compiler: fix mesh urb write regression
  * ddc8ab9e432 Revert "radeon: add EFC support to only VCN2.0 devices"
  * 1ef43ea3c4e iris: Fix PIPE_CAP_UMA
  * 2cea0d6ef60 intel/compiler: Drop variable group size lowering
  * 79f47249e8c llvmpipe: Align persistent mappings to page size

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 19 Aug 2022 00:59:09 +0200

mesa (22.3.0~git2208181638.49efa73ba11~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 49efa73ba11 zink: try to reuse swapchain modifier for dmabuf export
  * f7b1ef37c0b zink: iterate over all modifiers and nuke the ones that
    aren't supported
  * 63d70d6dd99 zink: bail out of dmabuf resource creation when srgb
    explosion is expected
  * 04e4de6faeb microsoft/compiler: Fix PSV struct when numthreads is 0
  * f44ca247d4f dxil_nir_lower_int_cubemaps: When not lowering samplers,
    don't touch sampler types
  * 34294bd9bbf microsoft/compiler: Discard shouldn't be marked readnone
  * 2dd641119fa aco: Force tex operand to have the correct sub dword
    size before packing.
  * 70871aa50cd radv: refactor descriptor set layout tracking
  * f97ba1f95d5 c11: #include <threads.h> when the os/platform provide
    it
  * f228c26520d llvmpipe: Add some missing locking
  * 37aa92a3cd8 nir: add uses_bindless flag for shader_info
  * aaeb5bea29f egl/dri2: Error path cleanups
  * a4cd1bc9b7f egl/dri2: Indenting fix
  * 7fcdc07aaa7 egl: Add some locking asserts
  * a020e9e70af egl: Convert to simple_mtx_t
  * 8c34ea69d82 egl: Remove redundant fxn param
  * 7d55729ae51 egl: Drop unused _EGL_FUNC_START() arg
  * c11583b1644 egl: Drop _eglSetFuncName() return
  * 45d9c94a285 util: Fix vs2019 build error
  * bacb04ef625 freedreno/drm/virtio: Add some atrace
  * b69cbc0caa8 egl: atrace support
  * 2d0d867935c freedreno/drm: Avoid lock in fd_pipe_del()
  * 93fa687808f radv: do not compress DCC in presence of render loops on
    GFX10+
  * 854e8797ac3 svga: support TGSI_SEMANTIC_TEXCOORD in swtnl draw
    context
  * d7e6174c2bd pan/mdg: Remove disassembler stats
  * 76e8f8b40ed pan/decode: Clean up _bifrost_ decode routines
  * 5c00efa695d pan/decode: Centrally declare pandecode entrypoints
  * aba69fc9c81 pan/decode: Defeature disassembler stats
  * 6dfd0998f24 pan/decode: Unify SFBD/MFBD decoding
  * e88b4949de7 pan/decode: Reorder MFBD decoding

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 18 Aug 2022 18:04:50 +0200

mesa (22.3.0~git2208142159.5fd8ae15415~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 5fd8ae15415 asahi: Identify depth clip mode bit
  * a6f88863f61 asahi: Don't advertise ARB_clip_control yet
  * 5ead9738245 aco: Add faster code path to store_lds for consecutive
    write mask.
  * 4588453815c vk/device-select-layer: fix .sType of
    VkPhysicalDeviceGroupProperties
  * d08bd9a8d8b etnaviv: don't expose array and 3D texture support on
    pre-halti GPUs
  * 2b0f77bde56 etnaviv: allow 3D textures with TS in transfer
  * 9496b7a2fa0 etnaviv: fix TS buffer allocation for 3D textures
  * 2d93327cc4b etnaviv: properly check number of layers in surface
    creation
  * 88fd397c741 r300: fix variables detection for paired ALU and TEX
    instructions in different branches
  * b5df20568a6 frontend/nine: Fix ff position_t fallback when w = 0
  * 93da6e9f342 frontend/nine: Fix shader multi-use crash
  * 4c65ccab6d4 frontend/nine: Fix cso restore bug
  * 4f953ad5129 frontend/nine: Fix ATOC handling
  * e5124e83ba1 frontend/nine: Fix buffer tracking out of bounds
  * b74febffe6e frontend/nine: Skip invalid swvp calls
  * 0d0d245e7e1 ci: Enable llvmpipe on MacOS
  * e04d4f881e1 ci: Improve MacOS github ci
  * 1f05b23b4f9 util: Disable usage of __attribute__((__const__)) when
    the compiler is clang
  * 075b72ea069 util: Fixes invalid assumption that return non null by
    function util_format_fetch_rgba_func
  * a1b7682d10d util: Fixes memory leak in u_printf_test.cpp
  * 11ab6087797 util: Fixes memory leak in
    create_cache_item_header_and_blob
  * 44a64a34bf4 intel: Fixes compile error of aubinator_viewer.cpp with
    gcc
  * 1b38ca78449 panfrost: Do no use designated initializer for union
  * 41af9bc0a55 nine: Fixes compile of nine_pipe.h with clang
    ../../src/gallium/frontends/nine/nine_pipe.h:377:9: error:
    unannotated fall-through between switch labels [-Werror,-Wimplicit-
    fallthrough]         default:         ^
    ../../src/gallium/frontends/nine/nine_pipe.h:377:9: note: insert
    'break;' to avoid fall-through         default:
  * b5b855149ca meson: Microsoft / maybe Intel CLC need the all-targets
    workaround just like clover
  * 1df92ed2a68 meson: Don't include glsl compiler if flex/bison aren't
    found
  * 5ee3212078e util: Add os_create_anonymous_file support on win32
  * 24b9ad7cd5e meson: Enable graw tests on mingw
  * 4f5d9bd9a05 zink: stop skipping bunch of GLESx tests
  * c3ca94261af zink: Use DETECT_OS_WINDOWS instead of 'WIN32'

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 15 Aug 2022 01:10:54 +0200

mesa (22.3.0~git2208111653.58bf84044bb~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 58bf84044bb radv: copy the sample locations only if the state isn't
    dynamic
  * 0ca33a6c0d4 radv: copy line stipple factor/pattern only if the state
    isn't dynamic
  * 1d92ab921b1 radv: remove unecessary
    radv_pipeline::uses_dynamic_stride
  * 56bb29cb93a anv: don't return incorrect error code for
    vkCreateDescriptorPool
  * bc7edc1c7a4 radv: force inlining on another draw function
  * 64395f0d85a radv: remove stupid conditional from draw path
  * 50e6a80b5ea radeonsi/tests: cosmetic changes
  * 7d7275dd886 radeonsi/tests: update navi21 expected results
  * b4b7162e234 radeonsi/tests: update raven expected results
  * 4d7637bb73b radeonsi/tests: add testing of the khr-single tests
  * 62d3f799de7 radeonsi/tests: remove left-over debug print
  * 6b5aecb1955 virgl: add support for hardware video acceleration
  * 15c210649d3 gallium/util: add a new helper function
    pipe_buffer_size()
  * e2199651b83 vl: change vl_video_buffer_destroy() to non-static
  * a7366d68ae5 gallium: add key size to the structure pipe_picture_desc
  * 04d192fccbd pvr: Fix bo mapping on alloc with
    PVR_BO_ALLOC_FLAG_CPU_ACCESS.
  * 4e9cce39d3f nouveau: implement and enable PIPE_CAP_QUERY_MEMORY_INFO
  * 17eda68df3b egl/wgl: Fix some awkward sizeof formatting
  * efd2ae6c0c8 egl/wgl: Delete unused variables/code
  * 35e9c7e082d wgl: Use pfi instead of iPixelFormat more often
  * aeb3147a96d egl/wgl: Support sync objects
  * e08d2dde220 egl/wgl: Support EGL_MESA_query_driver
  * 52e663959ed egl/wgl: Hook up image validate/get in smapi
  * c512b68816b egl/wgl: Use a per-display st_manager
  * 250bdcbfbee wgl: Pass smapi explicitly to framebuffer creation
  * f5b1824ce3c wgl: Pass smapi explicitly to context creation
  * d57a4abcf86 egl,wgl: Support eglCreateImageKHR
  * 76756ea4c64 egl/wgl: Support eglWaitNative
  * 0e8271b27a7 egl/wgl: Support eglWaitClient
  * 1d9e0a4ab0e egl/wgl: Support eglSwapInterval

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 11 Aug 2022 17:30:06 +0200

mesa (22.3.0~git2208090804.8d00c55e9ea~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 8d00c55e9ea radv/ci: bump the console activity timeout of VanGogh to
    3 minutes
  * 1db0b566097 radv/ci: skip host_write_transfer_src.1048576 on renoir
  * e091e56fc16 radv/ci: add more tests to the flake list of vega10
  * 6bbe3c6d36c radv/ci: move some tests from the vega10 fail to its
    flake list
  * 3f8a356bd35 radv/ci: document a recent regression
  * 401d03e1e94 freedreno: Cap reported video memory by VA size
  * 2bc1d08c48b freedreno/drm: Add FD_VA_SIZE param
  * 32d0dfc4627 dzn: Use D3D12 constants instead of naked numbers for
    device limits
  * d48ce281f80 dzn: Disable extensions that require multi-view
  * 1a3b086b06c docs: fixup link to virgl docs
  * 9efb1d7fbc5 wgl: Release the context before deleting it in
    wglDeleteContext
  * 7dafdb58b86 wgl: Always release local references in
    stw_make_current_by_handles
  * 3fcd0309790 wgl: Homogenize read framebuffer reference counting
    logic
  * a60181e8f2e radeonsi: use do..while loops and other cosmetic changes
    in display list path
  * e9a0cae1a13 radeonsi: use si_cp_dma_prefetch_inline for prefetching
    VBO descriptors
  * 0e574c801c3 radeonsi: remove temporary
    si_context::vb_descriptor_user_sgprs
  * a5d37e161d9 radeonsi: remove vb_descriptors_gpu_list only used for
    debugging
  * b4cef2487b5 radeonsi: add vertex buffers into the BO list in
    set_vertex_buffers
  * c4ffac8a173 radeonsi: merge both fail paths in si_set_vb_descriptor
  * a7e64ab63c5 tu: Fix sysmem depth attachment clear flushing
  * de55058cbc6 docs: document DRI_PRIME
  * 903e99150f3 vulkan/device_select: allow
    DRI_PRIME=vendor_id:device_id
  * a71b92fff82 vulkan/device_select: print the dri_prime warning only
    if needed
  * 4005ba3ed42 loader: allow DRI_PRIME=vendor_id:device_id syntax
  * 6d50e4cdc1b loader: don't return empty string in
    loader_get_dri_config_device_id
  * 6daf99fcb2b ci/windows: Re-enable Windows runners
  * d4b8abe511a radv: simplify radv_bind_dynamic_state() slightly
  * 18e9ba3e3b0 radv: remove unused states parameter from some
    radv_emit_XXX() helpers
  * 1f6e32ff7cf radv: simplify saving/restoring all dynamic states
  * 1d82ec1b3f9 radv: remove RADV_META_SAVE_SAMPLE_LOCATIONS

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 09 Aug 2022 08:37:39 +0200

mesa (22.3.0~git2208071126.6b86c0ba90f~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 6b86c0ba90f radv: Switch to the GLSL leaf implementation
  * e55c852600a radv: Add a GLSL leaf kernel implementation
  * 60a91dddf4b radv: Switch to the GLSL internal implementation
  * f3a457656b3 radv: Add a GLSL internal kernel implementation
  * b1a8797de91 radv: Switch to the GLSL morton implementation
  * f79fe32cdc0 radv: Add a GLSL morton kernel implementation
  * 46c723c7c02 radv: Add the basics for GLSL bvh kerrnels
  * 83a59403ae4 radv: Add create_build_pipeline_spv helper
  * dfa56120679 radv: Remove unused push constant structs
  * de75d9d1d09 radv: Remove accel_struct_build
  * c39271bb4bc radv: Always emulate fmin/fmax
  * 4f5da7939cd radv: Remove acceleration structure host builds
  * d0e20136336 radv: Move radv_acceleration_structure
  * 0e48165411b radv: Move accel struct structs to bvh/bvh.h
  * ec454302055 ci/lavapipe: implement traces
  * f6e59fa5130 ci: prepare piglit-traces for WINE and DXVK
  * 6aa81bfb306 vulkan: disallow VK_KHR_performance_query on android
  * cbbd9f3402f ci: Upgrade deqp-runner to 0.15.0.
  * f01ae0203dc ci: Add testing of the khr-single tests.
  * 478626fd941 ci/swrast: Add some flakes I've noticed in the IRC
    channel.
  * 9d6770d20ae nir/lower_alu: drop unnecessary iand on uadd_carry
    result
  * 8ecea47f066 broadcom/compiler: simplify code emitted for centroid
    coordinates
  * e035c289b52 ac/nir/cull: Tweak phi for cull_small_primitive branch.
  * abc4eda8468 radv: Implement radv_flush_before_query_copy to
    workaround UE Vulkan bugs.
  * 4148a525201 ci: Windows runner is experiencing DNS issues; disable
    Microsoft farm
  * 46396e97bea virgl: Fix unmapping of blob resources
  * b731be2e96c aco: Remove branch instruction when exec is constant non-
    zero.
  * baab6f18c91 aco: Optimize branching sequence during SSA elimination.
  * e4b0caae61d ac/nir/cull: Make cull functions more consistent.
  * c721f751f25 ac/nir/ngg: Move LDS store of accepted flag into the
    inner branch.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 07 Aug 2022 14:04:23 +0200

mesa (22.2.0~git2208022120.3225d606858~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 3225d606858 vulkan: Improve the docs for vk_subpass_info
  * 378b398da7c vulkan: Always populate
    vk_render_pass_state::render_pass
  * d5cd8f18c2c etnaviv: Move nir_shader_compiler_options to compiler
  * 5a000b4eb64 ci: set reasonable amount of wget retries for each
    download
  * 875ee25e981 r300: don't read from output
    transform_r300_vertex_SEQ/SNE
  * 19f8d338761 radv: Use vk_descriptor_set_layout
  * da2233a1089 vulkan: Handle descriptor set layout alloc fails
  * ae64b7a08cc vulkan: Fix descriptor set layout allocation scope
  * 8b13acd715d anv: Move Wa_1806527549 and enable by default
  * 6498328210d iris: Move Wa_1806527549 and enable by default
  * 188d1e2b206 freedreno: WFI after PC_TESSFACTOR_ADDR update
  * 18573e4058f tu: WFI after PC_TESSFACTOR_ADDR update
  * 8c9dd9e783c intel/dev: remove INTEL_DEVID_OVERRIDE
  * 7f82ab7104d intel/dev: add a test verifying that device override
    works
  * 9d55c5237ed intel/tools/stub: fixup parsing of --platform=
  * f2bbc959a0e intel/tools/drm-shim: fixup eu_stride for topology
  * 186ff4696a6 intel/dev: move verification function to a header
  * 6931ae83ce4 anv: decode init batch with INTEL_DEBUG=bat
  * 2926a1aa76d virgl: do not share virgl_screen between different
    drm_files
  * 883acc41505 intel/compiler: use NIR_PASS more
  * 7ebae85955c intel/compiler: insert URB fence before task/mesh
    termination
  * 30c0f2bfbbd intel/compiler: there are 4 types of fences on gfx >=
    12.5
  * 2bd148c9902 intel/compiler: emit URB fences for TASK/MESH
  * 9afd9553530 intel/compiler: Delete unused Gfx8+ code in
    brw_find_live_channel()
  * 49ee3ae9e8b intel/compiler: Lower FIND_[LAST_]LIVE_CHANNEL in IR on
    Gfx8+
  * 6401d768b99 intel/dev: drop warning for unhandled hwconfig keys
  * be0e8a99ee2 r600/sfn: Handle R600 class sin/cos
  * fe9333f7b5e virgl: Set res->maybe_busy to true when creating
    resources
  * a19dd430828 ci/lava: Remove MINIO_RESULTS_UPLOAD if requested
  * 59f2a072ca2 libsync: Fix compiler warning

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 02 Aug 2022 22:19:29 +0200

mesa (22.2.0~git2207290949.438d5baa369~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 438d5baa369 turnip: expose support for VK_EXT_acquire_drm_display
  * 42b89276e6f iris|anv: gfx version 12.5 data cache flush is not a
    workaround
  * 180af73101a anv: add gfx version 12.5 flushes to CCS path
  * fc02ce57131 intel/eu: Mark header present in URB memory fences on
    XeHP
  * 986b49a56d4 intel/eu: Clarify spec citations for XeHP region
    restrictions
  * 5c88488a645 intel/eu: Fix XeHP register region validation for
    hstride == 0
  * 0772242feba intel/eu: Don't throw validation errors on float
    MOV_INDIRECT
  * 82ee30e5586 intel/eu: Handle compaction when inserting validation
    errors
  * ce42fc4fa16 virgL: lower fneg and fabs
  * 9ba62ea8fba util/reallocarray: add errno.h include.
  * d5dec00e94f docs/ci: fix Emma's name
  * a02c026eb71 zink: print result code string on vulkan failure
  * 91c0d46afd4 r600: Don't set TES_EVAL UCP dirty when it is not
    supported
  * 97708505d77 v3dv: expose Vulkan 1.2
  * 46d43b1ca10 broadcom/ci: update list of slow tests
  * 15bf6d08c52 v3dv: enable missing mandatory Vulkan 1.2 features
  * 6a48d381965 v3dv: enable missing Vulkan 1.2 features for supported
    extensions
  * 366534768aa v3dv: fill in Vulkan 1.2 missing device properties
  * efb17fc4f11 v3dv: explicitly set sampler min/max filter properties
    to false
  * d6986e95d75 docs/features.txt: mark VK_ANDROID_native_buffer as
    supported on v3dv
  * bb75e353e6c docs/features.txt: mark VK_ANDROID_native_buffer as
    supported on turnip
  * 065691e299e nouveau: use existing list_first_entry() macro instead
    of re-writing it
  * 2c67457e5e1 util/list: rename LIST_ENTRY() to list_entry()
  * a9ebf55d025 turnip: Simple breadcrumbs implementation to debug hangs
  * 83d820973c1 util/u_threaded: fix a CPU storage crash due to an
    invalid codepath taken
  * 62207cf8855 lavapipe: enable VK_EXT_depth_range_unrestricted.
  * 876db77baeb llvmpipe/fs: handle unrestricted depth values.
  * 189755a9ac2 util/pack_color: clamp depth values outside range for
    unorm formats.
  * 171e35de919 mesa/st: disable unrestricted fragment depth values for
    GL/GLES
  * 0e38db01460 gallium: add a rasterizer state bit for unrestricted
    depth values.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 29 Jul 2022 12:46:06 +0200

mesa (22.2.0~git2207251838.fbb4b90d7d9~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * fbb4b90d7d9 zink: add a ci flake
  * 5e600afa33b lavapipe: remove some skips
  * d23a9380dd6 lavapipe: implement extreme uniform inlining
  * 1a244e13948 ci/freedreno: 3 pixel change in Raven restricted trace
  * 2b3b7b692b8 wsi/x11: Synchronously check for error from
    xcb_present_pixmap
  * 747913377f2 zink: fix EXT_color_write_enable check
  * 32b9e639b77 zink: warn about missing image2DViewOf3D feature
  * 1318a58538c docs/zink: document required VK_EXT_border_color_swizzle
  * d9064d3c30d docs/zink: document required
    VK_KHR_swapchain_mutable_format
  * 28cbb40a986 docs/zink: correct name of extension
  * fef2004b11d radeonsi/vcn/enc: enable cabac entropy mode
  * dea360dcf95 frontends/va: get entropy mode info for h264 encode
  * ea9e8e776a0 vl: add cabac init idc for h264 encode
  * e13a450bf29 pvr: Add support for input attachment descriptor.
  * b562d29196f pvr: Add support for storage and uniform texel
    descriptor.
  * 08c867972f4 pvr: Add support for image descriptor.
  * ecfea72c73c pvr: Add support for combined image and sampler
    descriptor.
  * 290b9a953af pvr: Add support for sampler descriptor.
  * 1bf883a8aea pvr: Move binding related checks in common code.
  * f044676dbb6 pvr: Implement vkCreateBufferView and
    vkDestroyBufferView.
  * 8ef42c25a68 pvr: Use common vk_buffer implementation.
  * 405a407d428 pvr: Init and store default sampler in pvr_device.
  * dbc82906564 llvmpipe: clean up bresenham implementation
  * 8f99bab70cc llvmpipe: consolidate legacy_points and multisample
    state
  * a1846e39269 llvmpipe: merge all rasterizer-bind functions
  * 4ff28bd5d86 lavapipe: accurately set image/ssbo access based on
    shader usage
  * 878784dbec0 crocus: fix leak in query code.
  * ad09694cba8 lavapipe: EXT_non_seamless_cube_map
  * a2f97bd88a0 zink: avoid crashing when bindless texture updates
    aren't used
  * 992cd1ae2b7 zink: assert !rp_changed after renderpass has started

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 25 Jul 2022 19:00:27 +0200

mesa (22.2.0~git2207200937.95fe5401390~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 95fe5401390 v3d/ci: (partially) revert expected list
  * 2e7ecc02bcf zink: default to lazy/templated descriptors
  * 6493f6ef795 zink: add an explicit ZINK_DESCRIPTOR_MODE_CACHED
  * 9172127057e zink: delete ZINK_DESCRIPTOR_MODE_NOFALLBACK
  * 1c2bd27d812 zink: move descriptor_mode to be a global
  * d1e36634bdf nir/loop_unroll: clean up after
    complex_unroll_single_terminator()
  * bfebf51571e lavapipe: state latest conformance tests passed
  * 7b0fcd8932a turnip: Disable LRZ fast-clear for gen1 and gen2
  * 7e381ba9fcc ci/freedreno: Switch a630 to manual/disabled for lab
    maintenance.
  * 4ce29c5568e venus: reenable VK_EXT_extended_dynamic_state2
  * 4eaa7809443 venus: check dynamic state for raster enablement
  * e14022c0525 crocus: fail query begin if upload allocation fails.
  * 2159a377c0f Zink: Fix clear being missed when using emulated draws
    in zink_blit
  * 3dfd8e4d7dd zink: Fix spirv stream 0 vertex emit for multistream
    shaders
  * 9ecc26ff276 anv: Do depth/stencil optimization for dynamic
    depth/stencil
  * 07f5f159634 vulkan/graphics_state: Improve the depth/stencil
    optimization code
  * 7d25c04236b anv: Switch to using common dynamic state tracking
  * cc89232f2e9 anv: Stop merging DEPTH_STENCIL state
  * 97dd1a100d4 anv: Rework setting primitive topology
  * b656957c563 anv: Convert to using vk_graphics_pipeline_state
  * 44cbb7d9c8e anv: remove pipeline setting dynamic state
  * 18868f1c767 anv: Stop recording sample locations per-sample-count
  * 36417bd05b5 anv: Handle vertex buffer sizes in
    anv_CmdBindVertexBuffers2
  * 1faba01c2bc anv: Add an instance multiplier to anv_pipeline
  * 6f25d45877a spirv: handle phis decorated with RelaxedPrecision
  * cde8c92ab6d ci/bare-metal: Add timeouts to the shell commands called
    in fastboot.
  * 0fb3aa005f8 radv: don't update misaligned_mask in
    CmdBindVertexBuffers2
  * 1d019d2ab77 radv: fix vbo_bound_mask indexing
  * ae003ef78cb r300: disable PIPE_CAP_PREFER_IMM_ARRAYS_AS_CONSTBUF
  * 3f19a608694 vulkan: Detect pNext chain loops in vk_foreach_struct()
    (v2)

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 20 Jul 2022 11:14:35 +0200

mesa (22.2.0~git2207141230.1c2ca3cfb73~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1c2ca3cfb73 radeonsi: no need to call si_pm4_clear_state() in
    si_pm4_free_state()
  * 2330c717511 radeonsi: remove tabs from code
  * 301bcbac0e5 fix(gallivm): Replace LLVMConstF* with LLVMBuild*
    methods.
  * a41e8dc5887 spirv: switch to uint64 for rayquery internal type
  * 05552b46889 lavapipe: support inlined shader spirv for compute
  * c1d0bf98f49 docs: Update features.txt and new_features.txt
  * 333432310a8 d3d12: Fix up resource import validation
  * d119e6a46ff d3d12: Implement fence opening and value setting
  * ea243ef1d55 d3d12: Implement server signal/wait
  * 416f10fc3fb d3d12: Support importing fences / timeline semaphores
  * e3e22ce882e d3d12: Support opening resources and memobj by name
  * d4623258958 d3d12: Implement resource_from_memobj
  * bd0407a4a61 d3d12: Support creating memory objects
  * c87d7cfaade d3d12: PIPE_BIND_SHARED doesn't mean linear and is
    always on opened resources
  * e02b11af579 d3d12: Get adapter LUID after device creation
  * d6fa0a20b07 d3d12: Support B4G4R4A4 format
  * 5a9cc967845 d3d12: Add pipe getters for Win32 and base external
    objects device matching
  * 5f6795309f3 d3d12: Compute UUIDs required by external objects
    extension
  * 1b59b542baa d3d12: Store the rest of the device IDs in the screen
  * acba2bbb0ef gallium, mesa: Support setting timeline semaphore values
  * cd01e71999c mesa: Implement ImportSemaphoreWin32NameEXT
  * c760f0e8b85 mesa: Support importing D3D12 fences as timeline
    semaphores
  * 8cd391a63e9 gallium: Add a new fence type with a pipe cap to
    indicate it can be imported
  * 633a469a7a1 driver_noop: Remove infinite recursion from
    create_fence_win32
  * 7c4fa79bfae gallium: Add 'name' field to Win32 semaphore import
  * 51408dfec41 mesa: Implement ImportMemoryWin32NameEXT
  * 91b14d4a779 gallium: Add a 'name' field to winsys_handle
  * 8f11c0553c3 mapi: Add more EXT_external_objects_win32
    functions/enums
  * 78ba74cfdab mesa: Support D3D11/D3D12 memory imports
  * 0ff4f5a7e9e util: Shut down Perfetto before driver unload

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 14 Jul 2022 15:05:10 +0200

mesa (22.2.0~git2207032001.b41620f9ed3~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * b41620f9ed3 freedreno/registers: add missing varset="chip" for new
    enum values
  * 09934730540 etnaviv: rework resource status tracking (again)
  * a11fa44b2d8 etnaviv: add function to get resource status
  * ce4e5198a3d etnaviv: drm: rename etna_drm_table_lock
  * 6e181476c3f etnaviv: drm: make etna_bo_map thread safe
  * 5711329cbc0 etnaviv: drm: don't cache mmap offset
  * 8997b9579ff etnaviv: drm: always use hash to track BO index
  * 7bb62d9dd85 etnaviv: allow mapped buffers during execution
  * 07369bf44d0 etnaviv: expose real map buffer alignment
  * b50aa918f42 radv/ci: do not reboot on soft-recovered hangs, just
    warn
  * acbec0fa23e radv/ci: allow specifying a warning pattern
  * 3e90eb44632 radv/ci: add CI lists for LLVM on NAVI21
  * c0fbc317374 radv/ci: test the llvm backend on navi21
  * a0c2b342482 gallium/util: Move u_dl and u_pointer to src/util
  * 1141ed58590 etnaviv: async shader compile
  * a427a7f5d4e etnaviv: factor out shader screen related init/deint
  * 4d7c11aa8d7 ci/x86: update to llvm 13
  * ff13fc381d5 radv: Use NIR optimization to move discards to the top.
  * 1b4784c5fbb venus: swizzle the chroma channels for YVU420 to match
    the VkFormat
  * 5d2a243dde0 radv: Add CULL_PRIMITIVE to special output mask.
  * 7144d52d59e radv: Don't assign driver locations to mesh shader
    outputs.
  * 8bfeb467bff ac/nir/ngg: Ignore driver location for mesh shader
    outputs.
  * 66bd470922d ci/radv: enable vkcts testing on kabini
  * 1bcb883ea54 ci/freedreno: disable SpecOps trace, each run flaky
  * de8c769d116 freedreno/registers: add a7xx registers for drm/msm
    kernel driver
  * 31fab141df3 dzn: Support Vulkan loader interface v5
  * 6a90d3832ad radv: Use two bools for ahit_status
  * 6f2a991f787 ci/freedreno: disable Stellaris trace
  * f77695d13fb ci/freedreno: temporary disable AmnesiaTDD
  * 74da4dc2168 ci/freedreno: add more restricted traces

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 04 Jul 2022 00:18:01 +0200

mesa (22.2.0~git2206281923.4b5f0d98fd5~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 4b5f0d98fd5 tu: Overhaul LRZ, implement on-GPU dir tracking and LRZ
    fast-clear
  * 70f1d70ddd7 freedreno: document GRAS_UNKNOWN_810A
  * 1cd91fdec38 freedreno: Document a650-specific CP_REG_WRITE flag
  * 5592c366cf1 freedreno: Document rest of GRAS_LRZ_CNTL, clarify
    UNK_25 event
  * edc7f40a831 meson: drop dladdr check on win32
  * 3129520a733 ci/dzn: Add pipeline cache tests to the include list
  * 91f1bd8f81d dzn: Cache pipeline info
  * d8b686783ef dzn: Cache DXIL shaders
  * 52e2ca084af dzn: Caculate a binding translation hash
  * 276c73580d2 dzn: Cache NIR shaders
  * 66764904b3a dzn: Move the compute shader compilation logic to a sub-
    function
  * 6236d1eead4 dzn: Drop unneeded goto statement in
    dzn_compute_pipeline_create()
  * d4630b703d2 dzn: Add a generic cached blob wrapper
  * 06f37025f14 dzn: Hash pipeline layout stages
  * 391d3251fa2 dzn: Don't delegate binding translation to
    dxil_spirv_nir_passes()
  * c7b43711f38 dzn: Save a few indentation levels in
    graphics_pipeline_compile_shaders()
  * 84770a90bb3 dzn: Use vk_to_mesa_shader_stage()
  * f4a96675ec4 dzn: Fix potential nir_shader leak
  * af83f104da6 dzn: Let dzn_pipeline_init() initialize the root
    signature in the stream
  * 301fb478fee dzn: Drop unused allocator passed to
    dzn_graphics_pipeline_create()
  * b886619313f dzn: Drop useless while(link_mask != 0)
  * 31357f3cf4f dzn: Pass the maximum stream size to
    d3d12_pipeline_state_stream_new_desc()
  * e4e531732b5 dzn: Use d3d12_compute_pipeline_state_stream_new_desc()
    in the compute path
  * d3e6ef195a2 dzn: Fix assertion in
    d3d12_pipeline_state_stream_new_desc()
  * 26ca9a43441 dzn: Add missing D3D12_CACHED_PIPELINE_STATE to
    MAX_COMPUTE_PIPELINE_STATE_STREAM_SIZE
  * c66caa1d589 dzn: Drop dzn_pipeline_cache.c
  * b59abbe3d57 dzn: Initialize UUIDs
  * be019e69e2c dzn: Fix indentation
  * aab5d176b83 pytracediff: implement pager ('less') invocation
    internally
  * 95fc0e1b7c5 pytracediff: change how 'junk' calls are handled

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 28 Jun 2022 20:02:53 +0200

mesa (22.2.0~git2206230022.bc42bbff4ce~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * bc42bbff4ce iris: Wa_14016820455 for GFX_VERx10 == 12.5
  * 5d05ffa4653 anv: limit RT writes to number of color outputs
  * 76981e5615f agx: Handle loop { if { loop { .. } } }
  * 062e822e1b9 ci/bare-metal: Collapse artifacts wget by default.
  * 13bf36588d4 ci/bare-metal: Consolidate needs declarations in
    .baremetal-test-*.
  * 1f9566cbb03 ci/bare-metal: Remove "stage: test" from .baremetal-
    test.
  * e13f04fcf09 zink: flag dmabufs for foreign queue transition on
    flush_resource call
  * 32c34e93aa7 zink: add flag to indicate if a resource is a dmabuf
  * 69cad6dcb71 ci/freedreno: Turn a530 back on by default and update
    expectations.
  * 4e3c51cbd8a freedreno/a5xx: Set the buffer bit appropriately in
    XS_CTRL_REG0.
  * 6cf2b24eafe freedreno/ir3: Disable image/ssbo 16-bit conversion
    folding pre-a6xx.
  * fd1f2d3b5a4 nir: Add and use algebraic property "is selection"
  * a2a2fbc5101 nir/algebraic: Fix NaN-unsafe fcsel patterns
  * ccd18ec4f34 nir: i32csel opcodes should compare with integer zero
  * d4558380810 tu: Fix linemode for tessellation with isolines
  * e812e8892a1 v3d: Drop workaround for u_blitter bug
  * f1c1b9687e8 tu: Do not expose storage image/buffer features for
    PACK16 formats
  * 4309e09d6fe vc4: Propagate txf_ms's dest_type to the lowered txf.
  * 1de87497bab ci/vc4: Turn on deqp-egl testing by default.
  * e9fad0b9aac ci/vc4: Merge quick_shader in with deqp-gles
  * 872a1ae69ec zink: ci updates
  * 90586f812c9 mesa: explicitly disallow multiple pointsize exports
    from generating
  * 096c5aa34a8 mesa: enforce pointsize exports if pointsize is being
    clamped
  * 3e2c132eb81 mesa: skip pointsize exports if pointsize attenuation is
    enabled
  * de732cf61b5 mesa: rename PointSizeIsOne -> PointSizeIsSet
  * b2155a044d1 mesa: break out PointSizeIsOne setting to util function
  * 4830cc77cb8 nir/lower_point_size: apply point size clamping
  * 42a12649511 virgl: overpropagate precise flags
  * e1488d93743 radeon: Support shared memory user pointers.
  * f871aa10a11 intel/compiler: assert that base is 0 for
    [load|store]_shared intrins

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Jun 2022 01:13:31 +0200

mesa (22.2.0~git2206162107.2df90aa562d~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 2df90aa562d ci/iris: disable Blender Diorama trace (incompatible
    with perf. traces)
  * d7f2e6c8d03 venus: add fence feedback
  * 9f9d543b12d venus: renderer to store allow_vk_wait_syncs capset
  * 8ecac4c063d venus: create per queue family command pool for feedback
    cmd
  * 1a7632e54b4 venus: add NO_FENCE_FEEDBACK perf option and disable
    sparse resource
  * 942ec179f3d venus: add event feedback
  * f2563788a1c venus: add feedback check/set/reset helpers
  * e52da323b03 venus: add vn_feedback_pool backed by coherent buffer
    (part 2)
  * 27a24caf166 venus: add vn_feedback_pool backed by coherent buffer
    (part 1)
  * d578f6c7278 venus: let device track queue families used for device
    creation
  * 4cf87d88229 venus: adjust device resources init order
  * cf55a3f70e1 venus: fix a missing mtx_destroy in vn_device_init
  * cb8dfa49662 venus: fix the queue init failure path
  * 01a0bfc3f99 venus: fix a bug on buffer cache init failure path
  * b91511b9a89 docs: update calendar and link releases notes for 22.1.2
  * a1ba2bdf3da docs: add sha256sum to 22.1.2 notes
  * 4b5a73062ba docs: add release notes for 22.1.2
  * 16c47ad3474 radv: advertise VK_EXT_border_color_swizzle on GFX10+
  * 09a7304d5ab zink: tu ci baseline update
  * 4666ef720ed anv: do not get rid of empty/useless fragment shaders
  * 10f6191fb5e turnip: copy disasm strings for pipeline executables
  * 9df7ad03203 radv/ci: add vkd3d-proton testing
  * 5878eca643e ci: add VKD3D_PROTON_RESULTS to the list of variables to
    pass down for testing
  * 08113e5c02c ci: print a message when vk3d-proton returns
    successfully
  * 70ba820395e ci: update vkd3d-proton builder/runner
  * 3f2de5e662f radv/ci: refactor test machines and dEQP rules to reduce
    copy&paste config
  * 365bf2a3b02 radeonsi/vcn: support unified queue in vcn4
  * 515112eabd9 radeonsi/vcn: prepare for unified queue in vcn4
  * 7b747478547 iris: provide a callback to INTEL_MEASURE to clean up
    snapshots
  * a1a5f6430a0 intel: provide a callback to clean up after
    intel_measure_gather

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 16 Jun 2022 21:49:36 +0200

mesa (22.2.0~git2206091124.bcc22b9e4d8~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * bcc22b9e4d8 Init macOS GitHub Action
  * 69b95b7839f Remove Travis CI config
  * ef6cc03b175 v3d: add ARB_polygon_offset_clamp extension support
  * a2463ec271f panfrost: Constant stencil value tracking
  * 79877d5df51 radv: advertise VK_EXT_primitives_generated_query
  * 1ebf463a5a6 radv: implement VK_EXT_primitives_generated_query
  * e0edf8d2408 radv: add few helpers related to streamout
  * f3daf7ce402 radv: flush the NGG query state when the argument is
    declared
  * fe57fe1fd8a ac/nir/ngg: count the number of generated primitives for
    VS and TES
  * 60b07a0ab25 radv: declare the NGG query argument for primitives
    generated query
  * 11734f935a5 radv: add primitives_generated_query to the graphics
    pipeline key
  * dc8cf44f608 radv: track if primitives generated query features are
    enabled
  * 3efbbf95886 radv: rename ngg_gs_state to ngg_query_state
  * 6b9b28f94eb lima/ci: Don't skip piglit opengl 1 tests
  * 704c9b2825c svga: fix shared memory index
  * d9aedaa7955 svga: fix reference to NULL offset for atomic counter
  * 893b4d98f8e glsl: inline do_common_optimization() call
  * d09a37ef54e glsl: remove never true do_dead_code() parameter
  * 3223f5b63f7 docs: link releases notes for 21.3.9
  * c44ece16792 docs Add sha256 sums for 21.3.9
  * d413674160b docs: add release notes for 21.3.9
  * 4655ff1f5b3 nir/deref: Handle RESTRICT for SSBO deref bindings
  * 8492e78f9d1 nir/deref: Handle SSBO array bindings specially
  * a5b12742758 nir/vars_tests: Use nir_var_mem_global instead of ssbo
  * 2d221c64e78 nir: Increase nir_variable_data::mode to 16 bits
  * 0ad2dfe942d nir/deref: Re-arrange variable checks in
    compare_deref_paths
  * 130d9d80dbb nir/deref: Make compare_deref_paths take a stop callback
  * 7ebcdada000 nir/deref: Use an index in compare_deref_paths
  * 4d80b3217e6 nir/deref: Break out a helper for compare_deref_paths
  * cb5c1bcb7c6 nir/deref: stop assuming coherent accesses of different
    SSBOs may alias

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 09 Jun 2022 11:40:56 +0200

mesa (22.2.0~git2206022259.26bb81f3f62~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 26bb81f3f62 intel/compiler: Fix uncompaction of signed word
    immediates on Tigerlake
  * 9eee4c79db7 zink: fix radv piglit fails
  * 2deee5ddb3e ci/vs2019: Clear CI_COMMIT_MESSAGE and
    CI_COMMIT_DESCRIPTION for please meson
  * c642ebf8ab7 venus: Add driconf option to enable implicit fencing
  * 87a53127e9c mesa: throw a log warning any time a fallback texture is
    used
  * ad5c84999b9 pan/bi: Rework Valhall register alignment
  * 0770e7a90ce pan/bi: Align 64-bit register sources
  * 8553dd97adc pan/bi: Allow vec6 for collects
  * 1bfff407b96 pan/bi: Use nodearrays for linear constraints
  * c70daa74f03 pan/bi: Add nodearray datastructure
  * c24b78cceb8 pan/bi: Reverse linear constraint bits
  * 65b3decd5b8 d3d12: Align output buffer offset access to
    D3D12_FEATURE_DATA_VIDEO_ENCODER_RESOURCE_REQUIREMENTS.CompressedBit
    streamBufferAccessAlignment
  * bd68559d366 tu: Enable shaderTessellationAndGeometryPointSize
  * eba8671e406 tu: Fix D32S8 resolves into D32 or S8 in sysmem mode
  * e680fe224a7 radv/ci: update list of failures for Pitcairn
  * be4c1a5f527 radv,aco: disable shader cache when ACO debug options
    are used
  * d8df87056c5 nir: xfb_buffer_info::stride is in bytes
  * 7c876a6b2f1 nir/glsl: Use rzalloc for nir_xfb_info
  * fc5a3e1e37a lavapipe: fix dynamic patchControlPoints
  * df2dd474c73 include: drop c11_compat.h
  * 18246ed06a1 include: drop c99_math.h
  * 6ed10a99bda vulkan/device_select: remove needless c99_compat.h
    includes
  * df4fe7c4a26 intel/isl: remove needless c99_compat.h includes
  * 9633b426724 include: remove needless c99_compat.h includes
  * beaa26bd753 gallium: remove needless c99_compat.h includes
  * 75f3373b34c mapi: remove needless c99_compat.h includes
  * afce7ddacb6 gallium/util: remove needless c99_compat.h includes
  * 1613aa73419 egl: remove needless c99_compat.h includes
  * 9f717b5f23c util: remove needless c99_compat.h includes
  * 9ec514ded7c util: add missing c99_compat.h includes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 03 Jun 2022 00:18:28 +0200

mesa (22.2.0~git2205271414.01ba3460a99~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 01ba3460a99 pan/bi: Test CMP result_type optimization
  * 501a66cb5ce pan/bi: Fuse result types
  * 112a856813e nir: Keep track of cross-invocation mesh shader output
    access.
  * cd14431b8ca radv/ci: skip dEQP-
    VK.fragment_operations.transient_attachment_bit
  * 211db6d3336 radv: Fix redundant subpass barriers due to erroneous
    comparison
  * 1a8b03732fd vulkan/wsi: fix extra free if buffer_blit_queue
  * 77a67f11151 radv: Add mesh and task stage names to pipeline
    executable properties.
  * 8aff8d3dd42 nir: Add common task shader lowering to make the
    backend's job easier.
  * 9eaf918ed29 nir: Add new launch_mesh_workgroups intrinsic.
  * c9f0a511e06 ci/panfrost: add RoR and Nheko traces
  * da70c1b9f08 ci/virgl: traces: add RoR and Nheko traces
  * 0a9461caf54 ci/radeonsi: add RoR and Nheko traces
  * 2d42335fb86 ci/llvmpipe: add RoR and Nheko traces
  * 9f3c91850b7 ci/crocus: add RoR and Nheko traces
  * b19c858f3d5 ci/intel: add RoR and Nheko traces and reenable most of
    Valve traces
  * 270e0d45fb4 ci/i915: add entries for RoR and Nheko traces
  * b8381aaa376 ci/freedreno: enable ROR and Nheko traces
  * 6bbe457f683 ci/virgl: fix checksum for valve traces which run on
    iris
  * 7577ca7e6a4 mesa: Avoid temp images in _mesa_texstore_*_dxt* for
    stride = 0
  * 035e6e32f1c mesa: Require temp images in _mesa_texstore_*_dxt* with
    SkipImages
  * 6910891c7f7 mesa: Avoid temp images in _mesa_texstore_rgb_dxt1 for
    GL_RGBA source
  * 5602f424c35 mesa: Split tx_compress_dxtn into per-format functions
  * eb673c55f1f st/mesa: remove unused GENERIC input and output from the
    clear VS
  * 3d6e44fd2a1 r300,r600,svga: save the FS constant buffer for
    u_blitter to fix a regression
  * d827d433ce5 util: Fixes typo in test_util_get_process_exec_path
  * aa7446b17ed util: Fixes test_util_get_process_exec_path on windows
    host with msys2/mingw
  * 746287d2218 v3dv/format: Add support for
    VK_KHR_format_feature_flags2
  * 11a0ea76a26 v3dv/format: no need for
    GetPhysicalDeviceFormatProperties
  * 0c4a65ef345 zink: update radv piglit fails
  * 6450037b321 panfrost: Use tiled AFBC textures

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 27 May 2022 15:07:35 +0200

mesa (22.2.0~git2205231851.ee2278de654~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * ee2278de654 ci/lava: Fix Gitlab Section markers
  * e00281f6dae ci/lava: Fix colored LAVA outputs
  * cc10c533336 nir: Fixes MSVC compiling error about unused variable
    `_`
  * 836ff4b5867 nir/algebraic: Add two more pack/unpack rules
  * 849ebe3057a d3d12: add missing cmath includes
  * 4513cb8d418 aco: only add/subtract low bits of program addresses
  * 69d1f4186a0 aco/tests: add test for p_constaddr with a non-zero
    offset
  * bd8f8dda8cf aco: fix p_constaddr with a non-zero offset
  * da49fee80fc radv: introduce radv_graphics_pipeline_info and split
    existing info structs
  * 106dc60fc0b lima/ppir: merge branch nodes in simple cases
  * c3f13ee5511 lima/ppir: optimize branch comparison when possible
  * 5718629a704 docs/ci: fix literalinclude of caching setup files
  * 9fb97c75f24 pvr: use UINT64_C for 64-bit constant
  * 47c6f7ccf33 dzn: Use the correct ICD path on Win32
  * c79451e23cd spirv: Fix windows build
  * 1eaba553e24 dzn: Use the vk_sync_binary abstraction
  * 23be0aad9c5 radv: split radv_pipeline into
    radv_{graphics,compute,library}pipeline
  * fc3717df0c3 radv: cleanup using device/physical_device during
    pipeline creation
  * 7fb48493144 radv: move gs_table_depth to the physical_device
  * 6c44e25078a radv: remove unused radv_get_conservative_raster_mode()
    helper
  * a1d3b80c5d7 radv: remove couple of useless pCreateInfo pointers in
    the emit path
  * f75b80fd80c radv: rename radv_pipeline_generate_XXX() to
    radv_pipeline_emit_XXX()
  * 3825c7202b5 radv: constify radv_pipeline in more
    radv_pipeline_generate_XXX() helpers
  * 583a4210e5a virgl/ci: Update virglrenderer
  * d12b97122ea docs/asahi: Add initial driver docs
  * 1b7304f44b6 asahi: Add wrap library
  * d814711155a asahi: Guard against encoder overflows
  * 1d0d27aac77 asahi: Allocate a larger segment list
  * ac09dcd358b asahi: Handle RECT textures as 2D
  * 689be69681c asahi: Fix pipeline decoding

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 23 May 2022 21:24:58 +0200

mesa (22.2.0~git2205161806.5c90eb1c53f~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 5c90eb1c53f glsl: Delete lower_extracts code
  * bd665fdd7f7 nir: Use nir_vector_extract to generate code for
    ir_binop_vector_extract
  * e944a98826a glsl: Add flag to disable part of
    do_vec_index_to_cond_assign
  * 4eff1e64811 glsl: Fix mixed tabs and spaces in
    lower_mat_op_to_vec.cpp
  * 3749a6ecd28 nir: honor lower_double options for ffloor and ffract
  * 9b146368768 glsl: simplify finding cursor in varying packing code
  * e0bec58340d radv: Fix loading task shader ring buffer addresses.
  * 063a61a8409 radv: Fix task shader info.
  * 3382af7f6a7 radeonsi/gfx11: set BIG_PAGE for the attribute ring
  * 8a2f151ef84 radeonsi: print an error when failing to create a
    context
  * 6515b3b2dc0 radeonsi: fix a crash when failing to create a context
  * 0755d02456b radeonsi: use AMDGPU_VM_PAGE_NOALLOC to disable MALL
    (infinity cache)
  * e9e9086b664 radeonsi: use the new flag AMDGPU_GEM_CREATE_DISCARDABLE
  * 8a04a0c95b1 include: update amdgpu_drm.h
  * 527e22412a9 winsys/amdgpu-radeon: clean up code related to heaps
  * ac0becc6481 radeonsi: use PIPE_RESOURCE_FLAG_UNMAPPABLE and
    DRIVER_INTERNAL more
  * d21be64b3a1 winsys/amdgpu: handle RADEON_FLAG_ENCRYPTED as a heap
    modifier
  * 593f72aa212 winsys/amdgpu-radeon: rework how we describe heaps
  * ceddd7d49a6 radeonsi: rename RADEON_FLAG_UNCACHED ->
    RADEON_FLAG_GL2_BYPASS
  * 5bc289c5476 radv/ci: re-enable fossils testing
  * 534cc990810 aco: do not emit the primitive ID twice for NGG VS or
    TES with GS
  * 3999fcba155 dzn: Fix dzn_cmd_buffer_collect_queries()
  * b9489ba7d25 radv: do not declare the scratch offset on GFX11
  * 0ef28ca34a3 dzn: reset correct list
  * 875643feeb4 ci: uprev piglit 2022-05-10
  * aa29e0d8587 etnaviv: don't halve max_instructions for GC400
  * 318d8ce6fc3 glsl: remove now unused GLSL IR varying linker code
  * 7647023f3bb glsl: enable the use of the nir based varying linker
  * fa9cee4247d glsl: implement lower_xfb_varying() as a NIR pass
  * 4600108ddfe glsl: implement opt_dead_builtin_varyings() as a NIR
    pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 16 May 2022 20:03:41 +0200

mesa (22.2.0~git2205111112.c708da6e291~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * c708da6e291 v3dv: expose VK_KHR_spirv_1_4
  * e981ed21e36 v3dv: expose VK_KHR_shader_float_controls
  * 187d3df52c7 tu: Do not flush ccu in clear/blits during renderpass
  * 66888d51219 radv: remove useless check against
    nir_texop_samples_identical
  * 98ea2347a08 radeonsi: report more missing/broken texture formats as
    unsupported on gfx6-9
  * e4283708f0d radeonsi: report 10_10_10_2 scaled formats as
    unsupported on gfx6-9 as well
  * 9775da11963 radv: optimised command buffer reset of vertex bindings.
  * 543d52a7a2f radv: only dirty line stipple when necessary.
  * b20bd9e0dfd radv: cache the slab bo pointer in the pipeline.
  * 87f4252a51f zink: don't finish barriers cmd buffer if not used.
  * 57df27be5f2 zink: avoid extra submits for empty wait cmdbufs.
  * 997dc0a5e87 radeonsi: Move NULL check before dereference.
  * 14b1ed1ce10 radeonsi: port tess ring calcs to the common helper.
  * 17fcbd87428 ac: port radeonsi tess factor calculations to common
    code.
  * d4c7ffc550f radv/ac: introduce a new common function for hs calcs.
  * d79c716331f zink: create images with modifiers any time there is an
    import handle
  * 4eeabb59f59 zink: rebind resources for export as needed
  * 4a19ebfafcb zink: add a LINEAR drm modifier if rebinding to add
    dmabuf export
  * 565bf8e45bd zink: force memory exports if dmabuf bind is specified
  * c03f6967ccc zink: fix conditional for modifier usage
  * 5513597305a zink: add a bind flag to indicate a resource is exported
    as a dmabuf
  * 8c1d9c7b744 zink: unset pipe_resource::next pointers when creating
    resource copies
  * 9aab9b4a1b2 zink: always check for fb rebinds when starting
    renderpass
  * 17ac8e76047 Revert "zink: export fd info for all 2d images"
  * b978761385f zink: create a copy context for the screen on init
  * 94d400d5afe zink: introduce copy contexts
  * afa4c402dd4 zink: break out resource bind-adding into separate
    function for reuse
  * 1c20688dcc6 zink: add a flag to indicate whether a resource is
    exportable
  * 00591f3a996 zink: outdent some code
  * d474229ed11 zink: remove unused headers/struct members/linkage

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 11 May 2022 11:46:35 +0200

mesa (22.2.0~git2205100732.d0f15304a3f~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * d0f15304a3f zink: scale depth bias by factor of 2
  * f3df3d4c80f glsl: Make all drivers take the
    GLSLOptimizeConservatively path.
  * d100c07c48d radeonsi: remove tautologies when setting CU_EN
  * 74bd5bbf286 radeonsi/vcn: update av1 decoding to support vcn4
  * 62bb11a5a5a radeonsi/vcn: Add support of array_mode for gfx11
  * 88075b7ea1c radeonsi/vcn: add jpeg decode support for gfx11
  * caa09f66ae4 amd: add chip identification for gfx1100-1103
  * b00ab763a98 radeonsi/vcn: enable vcn 4.0 encode for gfx11 asic
  * efde05c631c radeonsi/vcn: add session init ib for vcn 4.0
  * dbd75e0d481 radeonsi/vcn: add encode context ib for vcn 4.0
  * 38a95f2109c radeonsi/vcn: add vcn 4.0 encode fw interface version
  * ff2b2584fcf radeonsi/vcn: add vcn 4.0 encode support
  * f9de35a7313 radeonsi/vcn: add decode software ring support for gfx11
  * b8a3bafe94d radeonsi/gfx11: update codec support for gfx11
  * 69f02164b3b amd: update headers to support decode software ring
  * 2e4e39837ac radeonsi/gfx11: add a workaround for CB perf counters
  * e3b4e1fe850 radeonsi: inline si_cp_dma_prefetch in si_draw_vbo for
    lower overhead
  * 1bc6d6c9338 radeonsi/gfx11: limit CP DMA to max 32KB sizes
  * 3bc754a9a62 radeonsi/gfx11: mark streamout as unimplemented for now
  * 66d4bafd5b3 radeonsi/gfx11: resolve MSAA using u_blitter
  * 8bfb4657c84 radeonsi/gfx11: don't count the non-existent
    scratch_byte_offset SGPR
  * c65a303f532 radeonsi/gfx11: change LDS allocation granularity for PS
  * c749b6f6ae9 radeonsi/gfx11: update the initialization of SGPR0/1
    registers for HS and GS
  * 54d85700a12 radeonsi/gfx11: limit MSAA color buffers to the RGBA
    channel order
  * 6531ec89225 ac,radeonsi/gfx11: swizzle MRT0/1 for dual source
    blending
  * 12a606c1bd1 radeonsi/gfx11: export alpha through mrtz for alpha-to-
    coverage if mrtz is there
  * 167b378377e radeonsi/gfx11: VRS changes
  * 6d0e50f226a radeonsi/gfx11: TF_RING_SIZE changed to a per-SE size
  * ce950f1d965 radeonsi/gfx11: don't use FLUSH_AND_INV_DB_META
  * c33a930ceae radeonsi/gfx11: emit SQ_NON_EVENT for tessellation at
    the end of IBs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 10 May 2022 07:47:04 +0200

mesa (22.2.0~git2205081627.a7f44b62694~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * a7f44b62694 vulkan/wsi/x11: Ensure we have the required number of
    images for acquire.
  * 24049b8771b wsi/x11: Don't leak xcb_get_geometry_reply_t.
  * 56070d33225 radeonsi: Use
    nir_fold_16bit_image_load_store_conversions.
  * ad864a7c150 nir/lower_tex: Copy more fields in lower_tex_to_txd and
    friends

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 08 May 2022 20:00:08 +0200

mesa (22.2.0~git2205070726.81515f6b3c4~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 81515f6b3c4 venus: extend buffer cache to cover layering usage
  * 6983c8580a2 gallium/clover: LLVM setLangDefaults moved from
    clangFrontend to clangBasic
  * b2b810ebff6 anv: advertise rectangularLines only for Gen10+
  * ef8c5a20ee3 llvmpipe: never infer early zs tests when fbfetch is
    active
  * 5c24eb721ac nir/gather_info: flag fbfetch on subpass image loads
  * 359e60cf5ed aco: split load_sbt_amd result
  * 594fa057224 radv: use SMEM for a few load_global
  * 21c1a35d887 radv: remove subtractions in address calculations
  * 30980464002 radv: allow LBVH on GFX6+
  * 28a87dee606 radv: add radv_has_shader_buffer_float_minmax
  * d70688492c5 aco/optimizer: re-combine and copy-propagate
    p_create_vector(p_split_vector)
  * 5e6e47ecea8 aco/ra: improve split_vector register assignment if the
    operand is not killed
  * 499dc20e6ac aco: don't re-create vectors for load_barycentric_*
    intrinsics
  * 0607c27fd11 zink: restore conditional ordering for query begin/end
  * d74cd2a34b6 radv: emit fewer framebuffer registers
  * 38ab178c4ad util/blitter: fix sampler restore with 0 saved samplers
  * 969512d6962 intel: fix stall debug option
  * cfec9a55ea6 frontend/dri: allow swapped BGR->RGB channel order for
    MSAA color buffers
  * 89c94502b66 mesa: consider the sample count when choosing a texture
    format
  * dd3179aff0c glsl: Remove unused lower_variable_index_to_cond_assign.
  * 2529690ee38 glsl: Remove EmitNoLoops and the associated
    lower_jumps(lower_break=true) code.
  * c03cc83ef14 compiler/glsl: Remove the dead parts of
    build_program_resource_list().
  * 74056f63588 mesa/st: Clean up a bit of st_prepare_vertex_program().
  * 3a42e92a4f2 glsl: Drop the dead MOD_TO_FLOOR path.
  * 7f137636907 glsl: Remove the unused lower_if_to_cond_assign.
  * e9b491f9b51 gallium: Remove now-unused shader caps.
  * 9617184bc2c glsl: Retire the non-NIR GLSL linking paths.
  * 7221cc76579 mesa/st: Remove now unused TGSI paths from disk cache.
  * 8dc99300d6f gallium/tgsi: Remove tgsi_emulate.
  * 9837370adf8 mesa: Remove unused Mesa IR PROGRAM_* register files.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 07 May 2022 11:25:26 +0200

mesa (22.2.0~git2205031239.6ee9e6ce875~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 6ee9e6ce875 radeonsi: generate unique shader name in
    si_get_nir_shader
  * f1f2d407e77 radeonsi: don't always strip NIR debug infos
  * ce7966fcb49 aco: Use movk for AddressHi bits in vertex prolog
  * 58bd9a379ef aco/ra: fix live-range splits of phi definitions
  * d639608b8bf ac/nir: Do not set cursor in try_extract_additions
  * 3829981eb74 radv: use 3D views for 3D internal operations on GFX6-8
  * 180398f7851 nir: fix sorting before assigning varying driver
    locations
  * 067023dce2c util: Add some unit tests of the half-float conversions.
  * 27e33d5c963 util: Keep quiet NaNs quiet when converting to half
    float.
  * acf6bf88c07 iris: use new kernel uAPI to compute video memory
  * 763744aa8b0 panvk: Add address/range helpers for panvk_buffer
  * 631f47e83a3 panvk: Only write depth when depth test enabled
  * 46778f2b2a5 panvk: Lower image deref atomics
  * 54412afadc3 pan/bi: Handle texture offset + index
  * 86d32eed38c panvk: Allocate stack for each thread
  * 7a7403f6aae panvk: Lower global vars to local
  * 3f44bad1ce8 venus: log performance envs upon instance creation with
    debug init
  * 84a53de76ce venus: add VN_RELAX_BASE_SLEEP_US env var for tuning cpu
    utils
  * f3fb1d66327 drm-shim: Cleanup on device file close
  * 409b76511c9 freedreno/drm-shim: Better iova handling
  * 6c465ad6c76 drm-shim: Add error handling for bo_init()
  * c4b5ebe1fc9 drm-shim: Better mmap offsets
  * 97f4e48717c freedreno/drm-shim: Robustify error handling
  * d06fc7bb4f9 freedreno/drm-shim: Update to latest uapi version
  * a922997ffd3 drm-shim: Add GET_UNIQUE support
  * bf04be17f7f vulkan/wsi/wayland: Fix double free on error condition
  * 1e7ea180268 vulkan/runtime: 0-out pipeline cache object
  * 7cd9adeb415 intel/compiler: In XeHP prefer <1;1,0> regions before
    compacting
  * 562fd989982 llvmpipe: add a ci flake
  * 2505afc430c d3d12: Destroy empty residency bo set during early-
    return

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 03 May 2022 13:10:41 +0200

mesa (22.2.0~git2205010011.53fe6f10846~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 53fe6f10846 radv: Use the entire morton code as sort key
  * 6ba55b40334 radv/radix_sort: Make variable names consistent
  * f1eb1bd10ad radv/radix_sort: Add missing entry points
  * 2f8123abab7 venus: enable ANB shared presentable image prop
  * 2df0aa185ec venus: update vn_GetSwapchainGrallocUsage2ANDROID for
    shared present
  * d6b4f746b00 venus: cache front_rendering_usage bit at gralloc init
  * 52ad0368cd4 venus: refactor android gralloc pieces
  * 14cad38b190 intel/dev: Compute pixel pipe information based on
    geometry topology DRM query.
  * bf02bffe156 nouveau: Enable the NIR backend by default.
  * 16ead7132f4 nouveau/nir: Put the UBO offset indirect into the
    address reg.
  * d1ff453a0df nv50/nir: align tlsspace to 0x10
  * c228cb38895 nouveau/nir: Add support for pre-GF100 images and ssbos.
  * 75f0127d783 ci/nouveau: Add MESA_GLES_VERSION_OVERRIDE=3.1 baseline
    state.
  * 3ddc505400e nouveau/nir: Move FS output stores to the end of the
    last block.
  * 53d87865cac turnip: fix drm modifier support with planar formats
  * ba9c917149e mesa: add missing error-path
  * 82b681db997 gallium/xlib: fix stale comment
  * 202cab3d308 meson: deprecate specifying osmesa-bits
  * 36250e839b2 meson: remove unused defines
  * 33456ae5a48 iris: Fix assertion meant to only target the clear-color
    stride
  * ab9d649ac3c microsoft/compiler: Unload DXIL validator library
    *after* calling Release()
  * 12d7f911c96 aco/optimizer: prevent any overflow between SGPR and
    const offset on MUBUF
  * d5dc0c0392d aco: adjust num_waves for LDS before scheduling
  * 8d8c59b4cd9 aco: split num_waves adjustment into separate function
  * 6220046ad19 aco: remove 'max_waves' and use 'num_waves' to adjust
    for LDS and workgroup size
  * 6e6ba85fd9f turnip: Fix tu_debug_flags values clashing
  * a47375d4dab mesa: unref syncobj after wait_sync
  * 1585d12decb radv/ci: stop skipping dEQP-VK.synchronization.* on
    Bonaire
  * cdd201010df radv: fix the number of generated primitive queries with
    NGG GS vs legacy
  * 725ae34458f turnip: Add debug option to print gmem load/store skip
    stats

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 01 May 2022 17:51:47 +0200

mesa (22.2.0~git2204290027.7ab05e3c3fe~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 7ab05e3c3fe gallium/vl: respect the video codecs configure in meson
  * 7d969fe9e91 meson: add a video codec support option
  * 2c3178329b5 gallium/omx: add video codec supported hook for decode
    paths.
  * 20dfdcde718 gallium/vl: wrap codec support checks in a common
    function.
  * de99a11172e intel_dev_info: Add --hwconfig command line parameter
  * d9ff9ea9c33 intel/dev: Read hwconfig from i915
  * 463cb1153f9 nir_to_tgsi: Drop the txl(lod=0)->tex nir_lower_tex()
    fixup.
  * 536c8ee96df nir/lower_tex: Make the adding a 0 LOD to nir_op_tex in
    the VS optional.
  * fd90a57e281 venus: disable VK_EXT_extended_dynamic_state2
  * b023f18badf isl,iris: Add DG2 CCS modifier support for XeHP
  * a53abeb7fbe intel/isl: Add a score for I915_FORMAT_MOD_4_TILED
  * ac441d0953a isl,iris: Add I915_FORMAT_MOD_4_TILED support for XeHP
  * acba3efe695 include/uapi: Update drm_fourcc.h from kernel
  * 2bc8c61fd00 iris: Return a 64B stride for clear color plane
  * a1277311195 d3d12: Add a unit test for context reset recovery
  * 869a1a60668 d3d12: Attempt screen reset during context create
  * 2d7eea08e2b d3d12: Plug screen leaks
  * d0144255837 d3d12: Plug context leaks
  * 2bf00b4cff8 d3d12: Hook up robustness extensions
  * 06ae10bb925 wgl: Implement WGL_ARB_create_context_robustness
  * a2c9e1cb509 nir: add 16 and 64 bit fisnormal lowering
  * 081ac731628 kopper: implement texture-from-pixmap for software (non-
    dmabuf)
  * 27834266f9d kopper: rename a confusing variable
  * ab8702c59ec kopper: check whether zink is using sw
  * 5660cded600 zink/kopper: add a function for determining if running
    on software
  * 05ffc5f5ea8 kopper: check for modifiers to use modifier
    functionality
  * ca6760948ff kopper: add some error logging for pixmap->texture
    failure
  * 6db7dd64b61 d3d12: Don't block DISPLAY based on format for non-
    Windows
  * 08bb4988406 ac: remove gallivm header include
  * 1dc697942af zink: radv ci updates

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 29 Apr 2022 01:34:53 +0200

mesa (22.2.0~git2204271913.f17d3a12512~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * f17d3a12512 radeon/vcn: skip create and destroy message for jpeg
  * de3890daa54 zink: add supported present modes to kopper
    displaytarget
  * d89b95b247c ci: Limit Intel CPU scaling frequency for performance
    tests
  * 99b04cbb736 ci: Add CPU frequency adjustment capability
  * 76cea8e27b3 panfrost: Fix pack_32_2x16 implementation
  * 92e5eee39e5 radv: use correct push constants range for internal
    operations
  * 031bcf686b1 v3d/simulator: add support for AMD cards
  * 9c3144d2efc v3dv: store device_id on device init
  * 3f824e0e85c panvk: Eliminate unused vertex attributes
  * e248c64f069 panvk: Take buffer offsets into account in
    BindVertexBuffers
  * 657b0ff8615 ci/iris: Enable SKQP on Tiger Lake boards
  * c1e59bea05c ci: intel: Merge anv and iris into src/intel/ci
  * 3620e7e71c7 vulkan: drop empty vulkan_wsi_args
  * 6623f60c34c vulkan: use c_msvc_compat_args for shared code
  * e6bcdc763c9 radv: enable radv_disable_sinking_load_input_fs for Grid
    Autosport
  * 1dbfd2be4b1 radv: allow to disable sinking of load inputs for FS via
    drirc
  * 6261ca74257 etnaviv: add tile size helper
  * 2d2f9572c24 etnaviv: use feature bit to check for big tile support
  * 41220116978 etnaviv: properly set additional DEC400 compression
    states
  * 17d9b0808ab etnaviv: add support for big tile RS states
  * c2a3236d1a3 etnaviv: clean up tiling setup in etna_compile_rs_state
  * 8d6b6e31e18 etnaviv: use feature bit for one const src per
    instuction limitation
  * 5fcf55bb153 etnaviv: use feature flag to determine which RS states
    to use
  * 7c46a488362 etnaviv: use new PE pipe address states on >= HALTI0
  * 617339ab5b4 etnaviv: correct bits per tile and clear value for
    HALTI5
  * dd8a314d3f6 etnaviv: update headers from rnndb
  * 8c153bb0919 etnaviv: fill all minor GPU features from the kernel
  * ab942aaed0f etnaviv: don't supertile textures if supertiling is
    disabled via debug option
  * f525706e772 radv: fix handling divisor == 0 with dynamic vertex
    input state
  * 4f3736595f0 r600: Add support for TGSI_OPCODE_ATOMIMIN and IMAX

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 27 Apr 2022 20:43:13 +0200

mesa (22.2.0~git2204241756.a6a4bf0f1ea~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * a6a4bf0f1ea glsl/nir: set new_style_shadow for sparse tex ops as
    necessary
  * 5f0ac8ac191 aux/trace: make get_sparse_texture_virtual_page_size
    useful
  * 272f6ede0d8 mesa/st: clamp GL_RENDERBUFFER to GL_TEXTURE_2D for
    sparse queries
  * e4a6f09d127 radv: Clean up the accel-struct build shaders
  * be57b085be6 radv: Build accaleration structures using LBVH
  * 5d9ef0efb57 radv: Add the fuchsia radix sort
  * 9c020b525ba radv: Format radv_acceleration_structure.c
  * 49383fe39e3 radv: Make fill_buffer_shader non-static
  * 2a004866fb2 radv: Use VAs in radv_meta_buffer.c
  * 8cb92ce94e4 ci: Always install glslangValidator for build jobs
  * 6bef59f56b3 pan/bi: Simplify bi_propagate_pass_flags
  * 46b099e3925 meson: Ignore unused variables in release builds
  * 3d5ba0e1b70 ac/gpu_info: remove old and unused fields from
    radeon_info
  * 1bf39b1f9d1 ac,radeonsi: rework how scratch_waves is used and move
    it to ac_gpu_info.c
  * 159b28ad36b ac/llvm: rename tbuffer -> buffer where tbuffer
    instructions are not generated
  * 6698753cdb6 ac/llvm: don't use tbuffer_store as a fallback for
    swizzled stores
  * 4b63b5caa20 ac/llvm: remove unused code from ac_llvm_build.c/h
  * 99356c597f2 ac/llvm: remove immoffset parameter from
    ac_build_tbuffer_load_byte/short
  * c888e77dfc0 ac/llvm: remove inst_offset parameter from
    ac_build_buffer_load
  * e3421ae8ff0 ac/llvm: use soffset correctly in ac_build_buffer_load
  * f68aeaa2c2e ac/llvm: remove inst_offset parameter from
    ac_build_buffer_store_dword
  * 8abb612cba5 ac/llvm: remove immoffset parameter from
    ac_build_tbuffer_load
  * 6234d920736 ac/llvm: remove immoffset parameter from
    ac_build_tbuffer_store
  * a3e777a89a2 ac/llvm: add AC_WAIT_EXP for ac_build_waitcnt
  * f7190850071 ac: add more non-shadowed registers to the lists
  * c16239d464c ac/surface/tests: generalize and extend gfx10 tests
  * dda718d2bfe amd: document chips
  * 5af4d0c2dca ac/llvm: remove LLVM pass ac_optimize_vs_outputs
  * 3777a5d7157 radeonsi: assign param export indices before compilation
  * 11c28d9798c ac: add ac_nir_optimize_outputs, a NIR version of
    ac_optimize_vs_outputs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 24 Apr 2022 21:49:09 +0200

mesa (22.2.0~git2204211835.68e8f00c441~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 68e8f00c441 ci/zink: Add glx-tfp to skips
  * c9214768faa radv/ci: add a Van Gogh dEQP runner
  * 669a3f39912 ci/b2c: update b2c to enable monitoring support
  * e38d23a3965 ci/b2c: bump the kernel to 5.17.1
  * c672464844e ci/b2c: fix the generation of the IMAGE_UNDER_TEST
    variable
  * ea7cda93f3d misc: replace `#ifdefss__cplusplus` with
    `#ifdefs__cplusplus`
  * 9aa094d1b11 misc: Replace `#ifdeft__cplusplus` with
    `#ifdefss__cplusplus`
  * 30aab0af07c nir/lower_int64: do not try to clamp floats to int-range
  * 25acf1d8697 spirv: fix OpBranchConditional when both branches are
    the same
  * 4b7ba3869be util/stencil: fix stencil fallback blit shader texture
    types.
  * dbc264f5041 u_blitter/stencil: take dstbox x/y into accounts for dst
    fb width
  * e0e5cbd5a4a pvr: replace p_compiler.h boolean with stdbool
  * ec4baed0eef ci/windows: Eliminate duplicate script definition
  * 0606c7b0dbc ci: Also disable Windows container builds when down
  * f2ddd59bf68 ci: Allow lima jobs to be globally disabled
  * 4300b5d9147 dzn: remove stale cpp_args
  * 85d0d3fede5 dzn: fixup indent
  * dee89ea027a dzn: drop needless enum-casts
  * 785b6579ae5 anv: Fix geometry flickering issue when compute and 3D
    passes are combined
  * f854e6ec9bc dzn: add space before += operator
  * 52cde4a1ad8 dzn: clean up pointer syntax
  * 92964d2bfdd dzn: remove some needless casts
  * b8d41d5919a dzn: Add support for KHR_descriptor_update_template
  * 4da5524c9b4 dzn: Split the write desc helpers in two halves
  * 31dc341f3aa dzn: Pass layout objects to various
    dzn_descriptor_set_ptr_xxx helpers
  * fe68cfe82ae dzn: Rename a bunch of dzn_descriptor_set helpers
  * d257494ec4d intel/dev: Add device info for RPL-P
  * 3af6631c6d1 dzn: Add support for EXT_vertex_attribute_divisor
  * d01a149b8b4 ci/windows: Split the windows-related tests
  * cf930db39cd d3d12: Move the D3D12ResourceState code to the gallium
    driver

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 21 Apr 2022 18:54:59 +0200

mesa (22.2.0~git2204181439.dd7278aa10a~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * dd7278aa10a mesa: flush bitmap caches when changing scissors or
    window rects state
  * f9e424f98dd ci/v3dv: remove fixed test
  * 4b4bb46af41 nir: fix setting varying from uniform as flat
  * 67af7e2b400 Use proper types for meson objects
  * ed7d8315254 radv: fix initializing pipeline_key::topology for GFX9
    and older
  * 3dae5442efa glsl/st: vectorise interfaces of SSO shader programs
  * 04bd0077571 intel/fs: require memory fence commit bit on Gfx9
  * b07c215c353 intel: fix URB programming for GT1s
  * ee9997e9324 driconf: add SD Gundam G Generation Cross Rays
  * ef75752ef86 r600/sfn: Fix store_shared_r600 write masks
  * 11c462534bd gallium/winsys: move {amdgpu,radeon_drm}_public.h
    contents into radeon_winsys.h
  * efac875b666 gallium: move radeon_winsys.h into
    gallium/include/winsys/
  * 139f55071bc gallium: move drivers/radeon/* into drivers/radeonsi/
  * 66a0f318fdb nir: Avoid generating extra ftruncs for array handling.
  * e4aa5f78897 nir: Skip fround_even on already-integral values.
  * 6947016b468 nir: Add lowering for fround_even on r300.
  * c60fea8c228 Revert "egl/wayland: deprecate drm_handle_format() and
    drm_handle_capabilities()"
  * f267000240b panfrost: Stop overallocating compressed textures
  * f68e5790447 docs/panfrost: Document drm-shim usage
  * 4d460c9fdd3 panfrost: Rework PAN_GPU_ID mechanism
  * dae5e1bccd1 panfrost: Dirty track batch masks
  * c4167e8911b panfrost: Rework dirty tracking for Valhall
  * fc1397d1d7f docs/panfrost: Document u-interleaved tiling
  * bb6c14a6978 panfrost: Unit test u-interleaved tiling routines
  * 944049dedc0 panfrost: Document arguments to tiling routines
  * 1d8ea776456 panfrost: Assert alignment in tiling routine
  * f96110363aa panfrost: Allow tiling all texture targets
  * 58a2174f8e2 panfrost: Only tile for 2D dimensions
  * cd2aa776cfc panfrost: Implement tiled 3D resource access
  * 594653173b7 panfrost: Only handle 2D in should_linear_convert

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 18 Apr 2022 17:20:04 +0200

mesa (22.2.0~git2204141101.4d23967e8c1~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 4d23967e8c1 radv: exclude PRIMITIVE_{COUNT,INDICES} from the per-
    vertex output mask

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 14 Apr 2022 13:03:30 +0200

mesa (22.2.0~git2204140214.f2262228467~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * f2262228467 clc: Use stringstream for printing spirv errors
  * fb69d9925ed docs: truncate new_features.txt
  * 6a83d94e626 VERSION: bump to 22.2-devel for next cycle
  * 2036a2c5c5e radv: use load_shared2_amd/store_shared2_amd
  * 67fc0e36555 ac/llvm: implement load_shared2_amd/store_shared2_amd
  * c883abda763 aco: implement load_shared2_amd/store_shared2_amd
  * 5aa5af7776f aco: handle read2st64/write2st64 in optimizer
  * 2135c88d9cc aco: fix signedness of DS_instruction::offset0/1
  * 778fc176b15 nir/opt_load_store_vectorize: create
    load_shared2_amd/store_shared2_amd
  * dc835626b36 nir/opt_load_store_vectorize: fix broken indentation
  * 8ff122f8b89 nir: add load_shared2_amd and store_shared2_amd
  * bbdf22ce136 radv: Fix barriers with cp dma
  * d703a0e8081 aco: remove register hints entirely
  * 2fe005a3fe5 aco: remove occurences of VCC hint
  * b10c4d7dee1 aco: make program->needs_vcc independent of VCC hints
  * 415a3820fc1 aco/ra: omit VCC affinity on VOPC_SDWA for GFX9+
  * 6ebc61d71b8 aco/ra: create VCC-affinities during RA
  * 44fb9ba84ac aco/ra: only use VCC if program->needs_vcc == true
  * 08f3950d6b9 anv: stop using old entrypoint/struct/enum names for 1.3
  * 5fad6bca72e nir_to_tgsi: Do the required cleanup for
    nir_opt_find_array_copies().
  * c8df09ebd4f iris: More gracefully fail in resource_from_user_memory
  * 85016613324 zink: set optimal tiling on swapchain images
  * 3017522e74c dzn: Add CI target for vulkan driver
  * fb24f34fc3e dzn: Add a debug flag to enable D3D12 debug layer
  * f7ddd584ab6 pvr: Implement vkCreateQueryPool() and
    vkDestroyQueryPool().
  * 1250e30929d pvr: Add pvrsrvkm visibility test heap.
  * 76ee1671f6d pvr: Add core count info and pvr_device_runtime_info.
  * 93fbaae7d54 v3dv: Add emulated timeline semaphore support
  * 1cc917bc683 v3dv: Use the core version property helpers
  * 1973b2da9d9 v3dv: Use the core version feature helpers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 14 Apr 2022 10:50:58 +0200

mesa (22.1.0~git2204112144.960119008ba~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 960119008ba zink: update radv piglit baseline
  * b05ac36f01b intel/genxml: Add SAMPLER_MODE bits for enabling Small
    PL on Icelake
  * e3defe7ae72 intel/genxml: Delete SAMPLER_MODE register definition on
    Gfx12+
  * 80927047052 intel/genxml: Add new "Low Quality Filter" field on
    Gfx12+.
  * 9a70385e2bf intel/genxml: Add SAMPLER_STATE::Allow Low Quality LOD
    Calculation field
  * 3ac73838433 ci: enable v3dv arm64 jobs
  * 809dc312235 zink: reorganize radv ci baseline
  * 5abd95434ec zink: update radv ci baseline
  * bc58b34087e dzn: Fix loop condition in dzn_descriptor_set_copy()
  * 7744a477e8e zink: only do swapchain update during fb setup if
    swapchain is active
  * 6d263ff5a3e util: Convert util/u_printf.cpp to util/u_printf.c
  * 1dca31cda65 util: Add tests for u_printf.h
  * bcf5d2d8f4f zink: force texture barriers when performing in-
    renderpass clears
  * 4f6f34456af zink: rework texture_barrier hook
  * aced1ac2d38 zink: add a self-dependency for fbfetch renderpasses
  * 42bb760c8d8 zink: remove compiled conditional for lavapipe usage
  * dd078d13cb6 zink: fix tessellation shader key matching.
  * ec05155c30f zink only use zs-specific layout for zs attachments
  * 97d5ebc93ef zink: clamp cube size queries to 2 return components
  * ab3ee60282b util/hash_table: Remove Unicode byte order mark
  * ee2741e4511 zink: ci updates
  * ee29db02706 mesa/st: handle adding pointsize when gl_Position is
    never written
  * 9c212e117d5 nir/lower_point_size_mov: handle case where gl_Position
    isn't written
  * cfca760d6e8 mesa/st: handle copy_deref cases for adding pointsize
  * a2823747bbd mesa/st: fix pointsize adding check
  * 6357ce2b8e4 mesa: set PointSizeIsOne on context creation
  * f567a832eed ci: disable v3dv arm64 jobs
  * 5da8c280b74 panfrost: Remove BO mapping from import
  * 279eea5bda2 amd/llvm: Transition to LLVM "opaque pointers"
  * 6c0150c389c ci/zink: Mark a new GLX flake that hit an innocent MR.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 11 Apr 2022 21:56:45 +0200

mesa (22.1.0~git2204081917.949bc15ea51~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 949bc15ea51 nir_to_tgsi: Fix emitting the sample number for non-
    array MSAA image access.
  * b18374002e5 virgl: Disable nir_op_ffloor to avoid sending DFLR to
    virglrenderer.
  * a652c1653a5 radv: introduce new radv_pipeline_stage structure
  * 86b1a1d5f27 radv: add missing multi inclusion define to
    radv_shader_args.h
  * 000e9ac8742 radv: rework pipeline and shaders creation feedback
  * 1387593fbfb radv: re-order shader stages directly in
    radv_create_shaders()
  * 748c1fdf1b4 pvr: Remove logic to set vk_device::alloc.
  * 40f0c616e88 v3dv: fix bogus VkDrmFormatModifierProperties2EXT usage
  * 30be6788cc5 ci: Disable Link Power Management with RTL8153
  * 9d5fa593221 Revert "ci/freedreno: Disable a618 jobs"
  * 36066702ade v3d: do not leak BO on query begin
  * 82ca8a707eb wgl: do not disable error-dialogs by default
  * ae73a263551 util: limit error-dialogs to win32
  * 116553b554f wgl: rename force-msaa env-var
  * 94706601fa2 radv: Disable NGG for GS with suboptimal output vertex
    count.
  * 53e83b7031b dzn: Support independent depth/stencil access
  * 69e8a6042ff dzn: Fix 2D <-> 3D blits
  * 451a43ae1ee dzn: Lower partial copy of multisample resources to
    blits
  * f0667be8b5c vulkan/util: Make STACK_ARRAY() C++-friendly
  * 8d30204ca4d dzn: Drop extra blank line in dzn_CmdCopyImage2()
  * 653c362ca6b dzn: Check image view usage instead of image usage when
    creating an image view
  * 7ecc22ccaaa dzn: Force sampleCounts to 1 for bgra4 images
  * 84ad9234820 dzn: Get rid of dzn_GetPhysicalDeviceProperties()
  * 9a804b63901 dzn: Get rid of dzn_GetPhysicalDeviceFeatures()
  * e9c69fe39aa dzn: 3D array images don't exist
  * ad0ac592be3 dzn: Set bufferFeatures to zero on depth/stencil formats
  * 8dfab9b382d dzn: Make sure the properties are all zero when the
    format is not supported
  * dc3dd9690ba dzn: Return a valid imageFormatProperties.maxMipLevels
  * cfd3dfc0741 dzn: Fix 3D <-> 2D image copies
  * 94923021d7e dzn: Support 2Darray views on 3D images for color
    attachments

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 08 Apr 2022 19:59:13 +0200

mesa (22.1.0~git2204010902.e6d7a6a3b72~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * e6d7a6a3b72 radv: enable VK_EXT_separate_stencil_usage
  * 7c14671535f radv: use the common vk_framebuffer
  * 8396a0d1fda radv: remove now unused
    radv_cmd_buffer_{begin,end}_render_pass()
  * be28b566b0d radv: convert the meta clear path to dynamic rendering
  * 67c2a6adc63 radv: convert the meta blit path to dynamic rendering
  * e6fac090e69 radv: convert the meta resolve HW path to dynamic
    rendering
  * b18afccb615 radv: convert the meta resolve depth/stencil FS path to
    dynamic rendering
  * 518c6d808e0 radv: convert the meta resolve color FS path to dynamic
    rendering
  * 42db5900061 radv: convert the meta blit 2d path to dynamic rendering
  * fc3125ed6cb radv: convert the meta fast clear flush path to dynamic
    rendering
  * 70e663aa215 radv: convert the meta depth decompression path to
    dynamic rendering
  * 9309c3d8872 radv: rework the workaround that disables DCC for
    incompatible copies
  * be1b30393bd util: Getting u_debug.h not depends on pipe/*
  * b2ece67f11c util: Rename PIPE_DEBUG_TYPE to UTIL_DEBUG_TYPE
  * ab225a1e36d util: Rename pipe_debug_type  to util_debug_type
  * dca7ea4a125 pipe: place `struct util_debug_callback` at the proper
    place in p_context.h
  * 2ca6ef22f78 util: Rename pipe_debug_callback to util_debug_callback
  * 523675e9954 util: Rename pipe_debug_message to util_debug_message
  * 240cd8088c6 lavapipe: set LVP_POISON_MEMORY for ci
  * 2d8d7c06381 zink: set LVP_POISON_MEMORY for ci
  * 0be484ece4c lavapipe: add an env var to enable poisoning memory
    allocations
  * dcadeb9a477 llvmpipe: fix nr_sampler_view in key creation.
  * 57dd05616fa zink/query: rewrite the query handling code to pass
    validation.
  * b96ddc37bc9 zink/query: only reset the range of queries in use.
  * 7f3a959d2f0 zink/query: refactor get_query_result to map upfront.
  * f090cac54af zink/query: use a single query pool for XFB queries.
  * 0d14c491dea zink: refactor out number of vk queries per gallium
    query helper
  * ce28974d065 zink/query: collapse the xfb_query_pool array into the
    normal one.
  * 7303ba3a672 zink/query: consolidate xfb_buffers into one array.
  * 6bbbe15a783 Reinstate: llvmpipe: allow vertex processing and
    fragment processing in parallel

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 01 Apr 2022 10:11:09 +0200

mesa (22.1.0~git2203311321.83ed40cdcd5~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 83ed40cdcd5 vbo/dlist: do not try to pad an empty draw
  * b784910ac78 radv: save/restore the stencil write mask during
    internal driver operations
  * d58105fdd4c ac: remove LLVM 4.0 workaround
  * 7d7c56e61a0 radeonsi: drop LLVM global instruction selector
  * 47152875c7c docs: document useful radeonsi env variables
  * 9c2605ae427 drirc: enable radeonsi_zerovram for Black Geyser
  * 329f16fffc8 dzn: Make a bunch of functions private
  * 4194c89ed87 dzn: Remove the dzn_cmd_exec_functions file
  * b402cff5912 dzn: Add Missing return type to
    dzn_translate_sampler_filter()
  * bf3c772e5e5 ci: Improve vs2019 mesa_build.ps1 for remove the need of
    cmd.exe
  * 55ca1c8db37 vulkan/microsoft: Remove `override_options:
    ['cpp_std=c++latest']` option for visual studio
  * db8c401f71b aco/ra: fix stride check on subdword parallelcopies for
    create_vector
  * d32656bc65a radv: lower has_multiview_view_index in NIR
  * 2b18234e616 radv: drop EXT or KHR suffixes for stuff promoted in
    Vulkan 1.3
  * e8a63cf61ec virgl: fake modifier plane count query support
  * 51077e821a9 vulkan: Allow the driver to manually enable threaded
    submit
  * 08512aea09f vulkan: Replace various uses of device->timeline_mode
  * 8e51778acfb vulkan/queue: Rework vk_queue_submit()
  * e0ffdc8ce0b vulkan/queue: Rework submit thread enabling
  * 9ddab162b78 vulkan/queue: Add a submit mode enum
  * 97f17d4b38e glsl: Delete dont_lower_swz path of lower_quadop_vector.
  * 761eb7e5396 glsl: Delete unused EmitNoPow path.
  * dc2c9bae250 vulkan: Add more VU comments to justify framebuffer
    asserts
  * 38064566c63 zink: update radv ci baseline
  * 0c1fde956bf panfrost: Add Valhall compressed formats
  * 42b9295fa65 panfrost: Restrict Z/S formats for Valhall
  * ac51142babb panfrost: Handle Valhall IDVS in job_uses_tiling
  * ee9b63a7bbd panfrost: Disable AFBC on Valhall
  * 5b056971a33 pan/bi: Preload r60/r61 for MSAA + blend shader
  * 913a7ed41a9 pan/bi: Use ID accessors for LEA_ATTR

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 31 Mar 2022 13:53:38 +0200

mesa (22.1.0~git2203292206.1967fd3b101~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1967fd3b101 intel/compiler: Call inst->resize_sources before setting
    the sources
  * 356f6bb8a59 docs: update calendar and link releases notes for 22.0.1
  * 215ae6b2707 docs: add sah256 sum for mesa 22.0.1
  * d85cdcad5d1 docs: add release notes for 22.0.1
  * 5a459b8f6b0 r300: fix swizzle handling in transformation of abs
  * 85ae6598faf docs: Add calendar entries for 22.1 release candidates.
  * 01f3504e2f8 zink: remove anv workaround for broken color writes
  * 408f114830f zink: break out CmdSetColorWriteEnableEXT to util
    function
  * a1814067cdc nir: Move the define of snprintf to header nir.h
  * 153cb830c47 vtn: Fixes compiling error for mingw/ucrt by using
    setjmp/longjmp function instead compiler builtin
  * 887d74dd2fc meson: Add predefined macro -D__MSVCRT_VERSION__=0x0700
    only in mingw environment without _UCRT
  * 0bef8bc054b zink: fix error logging for 2d z/s checking
  * 4a08ee7ecf0 spirv/libclc: Add generic versions of arithmetic
    functions
  * 688d4780451 v3dv/queue: Rework multisync_free
  * d001150d0ce doc: update extensions for lavapipe
  * aed49c89a59 lavapipe: display EXT_graphics_pipeline_library
  * d4d5a7abba7 lavapipe: implement EXT_graphics_pipeline_library
  * 22fd70ca818 lavapipe: support KHR_pipeline_library
  * 0918095b9a6 lavapipe: EXT_primitives_generated_query
  * 8c3b4dd9963 vulkan: update spec to 1.3.210
  * 7f6ecb8667c v3dv: add reference counting for descriptor set layouts
  * ca861bd6f46 v3dv: drop unnecessary memset
  * 591eed30b23 v3dv: fix sampler array addressing in
    v3dv_descriptor_set_layout
  * 00cc52b282b radv: remove now unused
    radv_nir_compiler_options::layout
  * 50467aa558f iris: Properly tell the decoder about inherited binder
    addresses
  * 9bc97e4fc16 intel/decoder: Fix decoder handling of binding table
    pool alloc on XeHP
  * 08f74e71852 radeonsi: merge the copy_image shader generators
  * c0ef40bbce1 radeonsi: convert copy_image_1d_array shader to NIR
  * 18722af9d22 radeonsi: convert copy_image shader to NIR
  * 79ba1962ac8 pvr: Remove duplicate variable queue_create.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 29 Mar 2022 23:01:49 +0200

mesa (22.1.0~git2203252302.2d1e6b756e9~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 2d1e6b756e9 aco: remove 'high' parameter from can_use_opsel()
  * b98a9dcc36b aco/optimizer: fix call to can_use_opsel() in
    apply_insert()
  * 8006179cfdc wsi/x11: xcb_wait_for_special_event failure is an error
  * f31208f778c pan/va: Lower BLEND to call blend shaders
  * cb76cc1f1d0 pan/va: Add packing unit tests
  * 18bf478f1e8 pan/va: Add shader-db support
  * 8bc268f2d54 pan/va: Implement the cycle model
  * 8a258a685c9 pan/va: Test instruction selection lowerings
  * 1745c893124 pan/va: Lower branch offsets
  * 9a9b20e6526 pan/va: Add instruction selection lowering pass
  * b796d32564f pan/va: Add constant lowering pass
  * b8f912e5471 pan/va: Validate FAU before packing
  * fd1906afea5 pan/va: Add FAU validation
  * 676d9c94412 pan/va: Add unit tests for ADD_IMM optimizations
  * 13d7ca13001 pan/va: Optimize add with imm to ADD_IMM
  * f45654af595 pan/va: Add packing routines
  * edf284215dc pan/va: Add helpers for swapping bitwise sources
  * 619566dea18 pan/va: Generate header containing enums
  * 7ad98ae96ec pan/va: Build opcode info structures
  * 40ed485e32e pan/va: Permit encoding more flags
  * 76487c7eb48 pan/va: Unify flow control
  * cf6d1a81f68 pan/va: Add Bifrost-style LD_VAR instructions
  * 295b802f64b pan/va: Add LD_VAR_BUF instructions
  * e8590e0d043 pan/va: Add ST_TILE instruction
  * fa841273d4f pan/bi: Rename I->action to I->flow
  * f5585700be6 pan/bi: Model LD_VAR_BUF instructions
  * 97a13d6424e pan/bi: Augment ST_TILE with register format
  * c7f6b973b21 pan/bi: Check return addresses in blend shaders
  * 1b7d7ebbab7 pan/bi: Allow branch_offset on BLEND
  * cfde0275e4a pan/bi: Model Valhall-style A(CMP)XCHG

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 25 Mar 2022 23:32:29 +0100

mesa (22.1.0~git2203200635.c36f3f2db82~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * c36f3f2db82 nouveau: Fix out-of-bounds access in AlgebraicOpt
  * d12e16fc3b5 nouveau: Handle unaligned tlsBase during spills
  * 4de13d53fee iris: Fix MOCS for copy regions
  * ed2f496ce49 ir3: set local_size for shaders of MESA_SHADER_KERNEL
    type
  * 44c52e94e99 ci/traces: Make sure we have no pre-existing traces-db
    before starting.
  * 49e2d39c666 lavapipe: fix i686 mingw build
  * 47209e80db3 lavapipe: zalloc lvp_image_view structs
  * 4a13b11f4ae lavapipe: break out resolves into separate functions
  * 441c553ef7f lavapipe: store number of immutable samplers to pipeline
    layout
  * 7030d14e0d9 spirv: Properly mangle generic pointers
  * 9ba636cdc76 docs: update calendar and link releases notes for 21.3.8
  * daf6ee08d69 docs: add release notes for 21.3.8
  * f831ba238f6 ci/turnip: Increase the hangcheck timer to 2 seconds.
  * 0cbe4dd4c41 pan/bi: Use bi_dontcare for ZS_EMIT
  * 1b934d5962c pan/bi: Emit arch-specific code for bi_dontcare
  * 222d17fc671 pan/bi: Model Valhall action on bi_instr
  * 38625af0101 pan/bi: Add Valhall-specific zero builder
  * 666b714a372 pan/bi: Don't analyze helper reqs in !frag shaders
  * a16163a9fd4 pan/bi: Print Valhall-specific FAU indices
  * 32ca9200232 pan/bi: Use vertex/instance ID helpers
  * 1e37113edef pan/bi: Add helpers to get vertex/instance ID
  * 76a09b8cd33 pan/va: Fix ST_CVT definitions
  * 9b7a45e3dc0 pan/va: Align error messages in disassembler tests
  * 3a4b8641974 pan/va: Add missing .auto32 register format
  * 263c5ef194e pan/va: Add LEA_ATTR_IMM instruction
  * 459c6ac23fc pan/va: Model LEA_TEX_IMM more accurately
  * 17caccd15d5 pan/va: Correct definition of ZS_EMIT
  * 508335c927c panfrost: Add Tiler Job to v9 XML
  * e635dc9ea51 panfrost: Refactor XML to permit non-IDVS jobs
  * 53f1fa92193 panfrost: Fix definition of DCD on v9

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 20 Mar 2022 15:25:10 +0100

mesa (22.1.0~git2203172314.3bd9b250609~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 3bd9b250609 intel: change INTEL_MEASURE output to microseconds
  * 2e6d14cc7b7 intel: increase INTEL_MEASURE batch/buffer sizes
  * e0c9032db85 anv: add indirect draw to INTEL_MEASURE
  * f452317849d clover/nir: respect lower to scalar options.
  * f34260bbf74 vulkan: update vk video headers for new vulkan headers.
  * 3d04c435766 tu: Trivially implement VK_EXT_texel_buffer_alignment
  * 177b54ebe91 aco/tests: add v_fma_mix tests
  * 1092f378054 aco: use v_fma_mix to combine mul/add/fma output
    conversions
  * 21304b772c2 aco: apply clamp to v_fma_mix
  * 35196b6d891 aco: combine add/mul as v_fma_mix into fma
  * 9934c867613 aco: use v_fma_mix to combine mul/add/fma input
    conversions
  * eeef1bbe653 aco: refactor selection of mad/fma
  * e12bee3cb7f aco: improve support for v_fma_mix
  * 79c8740c6e7 aco: fix fp16 opcode definitions
  * 6d4eb4a72e9 mesa/main: replace use of simple_list with util/list
  * 4b10a4aaaaf util/list.h: Add docstrings for list_add and
    list_addtail
  * b0faf422b7c pan/va: Use XML for special FAU page 0
  * 31a171d92d1 pan/va: Use boring names for FAU special pages 1/3
  * 76159ee3793 pan/va: Remove immediate modes from XML/asm
  * 81498f15386 pan/va: Use 64-bit special FAU for pages 1 and 3
  * 139867cb431 pan/va: Rename imm_mode -> fau_page
  * 3bd1401075b pan/va: Handle uniforms from page 1
  * cf43a1cc581 pan/va: Rewrite FAU handling in dis/assembler
  * 95b7908d2d1 pan/va: Fix BLEND instruction
  * c7e8e8b319e pan/va: Handle 64-bit sources in message instrs
  * 9878469833b pan/va: Add start property to source
  * 5a759140b03 pan/va: Fix typo in BLEND text
  * 96e17287b4a ci/freedreno: Disable a618 jobs
  * 115298b71e8 gallium: rename ballot cap
  * b3ce733da9c gallium: rename clock cap

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 18 Mar 2022 00:06:41 +0100

mesa (22.1.0~git2203161913.893fa30afed~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 893fa30afed anv: Include scissors in viewport calculations
  * b4e38e174f5 anv: Move viewport/scissor emit to genX_cmd_buffer.c
  * 2c04373c45e anv: Calculate the real guardband based on render area
  * 12d815bcac0 intel/guardband: Take min/max instead of total size
  * d89d6c7a4d0 docs: Add high-level documentation for Vulkan render
    passes
  * 7521b5db182 docs: Add the start of Vulkan runtime docs
  * 3501a3f9ed9 anv: Convert to 100% dynamic rendering
  * 8112e6d601e anv: Drop pipeline pass/subpass in favor of
    rendering_info
  * ee9c0680436 anv/pipeline: Stop pretending we're the validator
  * 2da152b5e67 anv: Stop treating color input attachments specially
  * 1ad0f1b0045 anv/pass: Make unused color attachments
    VK_ATTACHMENT_UNUSED
  * 9bbecbed7a2 anv: Better null surface state size for dynamic
    rendering
  * fff3f8bfe55 anv: Fix handling of null depth/stencil attachments with
    dynamic rendering
  * 030b231ba98 vulkan/framebuffer: Add a flags field
  * c3d8ca93009 vulkan/render_pass: Add an optimization for
    UNDEFINED+LOAD_OP_CLEAR
  * 17395d395a8 vulkan/render_pass: Support fragment shading rate
  * 6b61953684d vulkan/render_pass: Provide self-dependeny information
  * ca5ad9cbeed vulkan: Add helpers for getting rendering info from a
    renderpass
  * 1d726940d28 vulkan: Add a common CmdBegin/EndRederPass
    implementation
  * 874aeb8743d vulkan: Add a common vk_render_pass struct
  * 83101429bf7 anv: Convert to vk_framebuffer
  * d84e6b8f221 vulkan: Add a common vk_framebuffer struct

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Mar 2022 20:29:29 +0100

mesa (22.1.0~git2203161558.acbb0d86f71~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * acbb0d86f71 panvk: Implement VK_EXT_vertex_attribute_divisor
  * 58587c32cbd panvk: Implement indexed rendering
  * a08b6953865 panvk: Fix per-instance attribute handling
  * 417cf3d35e0 panvk: No-op zero-vertex draws
  * 3244100557f Revert "virgl: Enable PIPE_CAP_TGSI_TEXCOORD when the
    host supports it"
  * 60517948af1 radv: fix missing destruction of the inotify thread
  * 550f48a8265 anv: implement EXT_depth_clip_control
  * 61ad60dc009 ci, radv: Update flake expectations
  * a815d4001a6 ci, valve: Bump the trigger container
  * 729537438e9 ci, valve: Show real kernel addresses in KFENCE reports.
  * 737c86da624 radv: only clear VRAM for app and descriptor BOs when
    set via drirc
  * 45b909a5a0a radv/winsys: remove old comment about zerovram
  * acb300a3f02 lavapipe: EXT_image_robustness
  * 6345575f8a9 gallivm: fix oob image detection for
    cube/1dArray/2dArray/cubeArray
  * b7fbaf924d8 lavapipe: EXT_pipeline_creation_cache_control
  * 9bce8784908 lavapipe: EXT_pipeline_creation_feedback
  * dffe8141bdf lavapipe: KHR_zero_initialize_workgroup_memory
  * e106c1294ba llvmpipe: add handling for zeroing cs shared memory
  * f72d5a930b1 lavapipe: KHR_format_feature_flags2
  * 90e091b072b lavapipe: use VkFormatFeatureFlags2 in format detection
  * 65bf1cbc26e gallium: add flag to draw info to indicate converted
    draws
  * 864f3c0ee0e panvk: Fix SSBO buffer offsets
  * 6214cce3826 panvk: Require 16B alignment for UBOs
  * a54f5e8e00e anv: silence compiler warnings
  * 2221e3d4873 ci: Add new Panfrost G52 skip
  * c287ed4f398 meson: restore private requires to libdrm in dri.pc file
  * 3b90d3997a1 turnip: use vk_shader_module_to_nir().
  * 5a0e081e00a panvk: Use vk_shader_module_to_nir()
  * 0c871d89aed panvk: Use vk_shader_module
  * 0b4a80b4c4f anv: Use vk_shader_module_to_nir()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Mar 2022 19:22:37 +0100

mesa (22.1.0~git2203120912.cd00247db5b~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * cd00247db5b crocus: force ignore_sample_mask_out on gen4/5 for
    precompile
  * 7edda218fda intel: add some missing debug recompile info.
  * 65db6b0e7ca bifrost: Constant fold after lower_explicit_io
  * e0b6493c491 mesa: Remove unused framebuffer validation
  * 1aa120b10f5 bifrost: Handle nir_op_frexp* and nir_op_ldexp
  * d2a09f3dd3e bifrost: Implement fine and coarse derivatives
  * 83010c57a62 bifrost: Simplify derivatives a bit
  * c043e93ca53 bifrost: Lower usub_borrow
  * e50eb1ce7ab util: fix msvc build
  * d65dbe80189 anv: Allow MSAA resolve with different numbers of planes
  * ffd67b39e71 zink: remove flake
  * 95a44a5b092 lavapipe: Use the auto-generated
    vk_enqueue_BeginRendering
  * f76621f7192 vulkan/cmd_queue: Properly support non-array pointer
    members
  * 027f1302fcb radeonsi: add option to disable EFC
  * 23e5b910c57 radeon: add EFC support to only VCN2.0 devices
  * 9fa6ab962a9 frontends/va: zero-copy efc
  * 96025265689 frontends/va: add encoder format conversion (EFC)
    support
  * 73153746d5b gallium: add parameters for encoder format conversion
    (EFC) support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 12 Mar 2022 13:37:34 +0100

mesa (22.1.0~git2203111058.adea0960295~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * adea0960295 ci: update various ci result files
  * 2a14baab855 mesa: check for valid internalformat with
    glTex[Sub]Image
  * 6cea8a43fa0 anv: silence compiler warning
  * 90000aea9b9 anv: make a couple of descriptor function private
  * e12698724e5 anv: rename host only descriptor internal flag
  * 87f59b18cf4 anv: don't lazy allocate surface states in descriptor
    sets
  * 71cd6a7b84c anv: fix acceleration structure descriptor copies
  * 968d68125c2 radeonsi: don't clear framebuffer.state before dcc
    decomp
  * 01442cf4d4e iris: Restore flagging of dirty bindings in
    binder_realloc
  * b366fef091d radv: optimize the number of loaded components for VS
    inputs in NIR
  * 1ec4e568de2 radv: abstract queue family away from queue family
    index.
  * afb4cced5c3 lavapipe: more descriptor validation
  * 0c130d64d3c lavapipe: validate per-stage descriptor limits when
    creating pipeline layouts
  * 21abb01fb96 lavapipe: make device limits a physical device struct
  * 5ab0e3f0bb0 anv: fix some dynamic rasterization discard cases in
    pipeline construction
  * 1e3e7b3a4da anv: fix CmdSetColorWriteEnableEXT for maximum rts
  * 52f6978484f anv: fix xfb usage with rasterizer discard
  * e8c3be0eb84 crocus: don't map scanout buffers as write-back
  * 42e78ba1257 llvmpipe: fix occlusion queries with early depth test
  * f7175bf416d lavapipe: Use the common
    vk_enqueue_CmdBindDescriptorSets
  * ac58e93633d lavapipe: Reference count pipeline layouts
  * 48a10c5dd31 lavapipe: Allocate descriptor set layouts with DEVICE
    scope
  * 94ea3b9c031 vulkan/cmd_queue: Add a common
    vk_cmd_enqueue_CmdBindDescriptorSets
  * c1070556a0c vulkan/cmd_queue: Add a driver_free_cb hook
  * 2106c3bab6b lavapipe: ci updates
  * cf5c32a4b2d lavapipe: run nir_opt_copy_prop_vars during optimization
    loop
  * c94c8a70292 lavapipe: ci updates
  * 6a4c7ef7286 lavapipe: skip format checks for EXTENDED_USAGE
  * c40dc39b5a8 lavapipe: use the correct value for dynamic render
    resolve attachment indexing
  * 938488f4398 lavapipe: remove broken workaround for zink depth
    texturing.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Mar 2022 15:18:01 +0100

mesa (22.1.0~git2203060344.c82dcdf598f~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * c82dcdf598f gallivm: avoid division by zero when computing cube face
  * cf9454bb2a1 gallivm: fix debug prints for halfs
  * ba18799ca12 pan/bi: Don't assign slots for the blend second source
  * 66a604efb52 pan/bi: Skip psuedo sources in ISA.xml
  * 9d4441c71aa panfrost: Fix ubo_mask calculation
  * 0b232b86598 panfrost: Improve comment for emit_fragment_job
  * 24101d944b7 pan/bi: Add documentation for
    bifrost_nir_lower_store_component
  * 42caddcf6ba pan/bi: Make disassembler build reproducibly
  * d6c431c2e3e panfrost: Re-emit descriptors after resource shadowing
  * b164ee0d7b1 panfrost: Set dirty state in set_shader_buffers
  * cb8c47b15e4 pan/bi: Check dependencies of both destinations of
    instructions
  * 9e714f7455d pan/bi: Add interference between destinations
  * 198cb4a77ad panfrost: Disable point size upper limit clamping
  * 66684339d5f panfrost: Update point size limits to match hardware
    behaviour
  * d54efebf043 panfrost: Set
    PIPE_CAP_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
  * 948300da279 pan/mdg: Use util_logbase2 instead of C99 log2
  * e42a8a5b92a a4xx: add emission of compute state, and compute
    dispatch
  * 63bba1dc6c4 a4xx: add logic to emit image/ssbo state
  * aac7028b583 freedreno/ir3: support a4xx compute differences
  * 6fb5e64eadb freedreno/ir3: support a4xx in load/store buffer/image
    emission
  * e9cd4fba6f9 freedreno/perfetto+fdperf: Set SYSPROF param
  * af4b7f74b2c freedreno/drm: Add SYSPROF param
  * f925794b16d freedreno: Update uapi header
  * d2e498b6a5d egl+libsync: Add helper to complain about invalid fence
    fd's
  * 1e25f3b2825 android: Push in-fence-fd down to driver
  * dfac374220d gallium/dri: Extend image extension to support in-fence
  * af2951dde84 radv/ci: update list of expected failures
  * 51c6fdf708f radv/ci: skip dEQP-
    VK.renderpass2.depth_stencil_resolve.*_samplemask

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 07 Mar 2022 02:38:26 +0100

mesa (22.1.0~git2203041820.7ffee7f1ab3~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 7ffee7f1ab3 v3d: rebind sampler view if resource changed the BO
  * 7bda838c561 panfrost: Push twice as many uniforms
  * e7cfe18099a pan/bi: Run CSE after lowering FAU
  * c8f644ec443 frontends/va: ignore incoming frame_num from VA picture
    parameters
  * d28b6b68568 aco: rework removal of jumps over branches
  * 059f870d74e ac/nir: implement nir_op_pack_{uint,sint}_2x16
  * 9b113f1b6ce aco: implement nir_op_pack_{uint,sint}_2x16
  * 65323075557 nir: introduce nir_pack_{sint,uint}_2x16 instructions
  * 4d81c60e11e iris: Mark a dirty update when vs_needs_sgvs_element
    value changed
  * aaa25cda0b9 venus: add VK_EXT_image_robustness support
  * ba212bf8882 venus: add VK_EXT_provoking_vertex support
  * 33ba61b059b venus: add VK_EXT_line_rasterization support
  * 58182eb096e venus: update to latest venus protocol
  * 20efd9eff30 venus: group extensions promoted to 1.3
  * fe3815b7faa venus: clean up physical device features and properties
  * ca4595e01ab nir/opt_shrink_vectors: update docstring
  * 405829cd859 nir/opt_shrink_vectors: remove duplicate components from
    vecN
  * e5963478c2f nir/opt_shrink_vectors: shrink load_const properly
  * a10b5d7086b crocus: change the line width workaround for gfx4/5
  * bbbbf395594 venus: abort when stuck
  * ccf4bcd162c aco/ra: don't immediately assign a register for p_branch
  * c3070773f88 aco/tests: add test for branch definition RA
  * 32d0bae8ec3 aco: fix branch definition validation
  * bed5a310053 aco: add validate_instr_defs()
  * d5349a99c20 aco/ra: fix register allocation of branch definitions
  * 608d48b7872 aco/ra: add get_reg_phi() helper
  * ceca5e68c4d aco: remove vcc hint from branch definitions
  * 558f6329676 r300: schedule TEX instructions before OUT instructions
  * aff1a85c091 r300: remove some dead logic in tex pair scheduling
  * 688b23885be Venus: Add `vn_physical_device_{features, properties}`
    for better organization

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Mar 2022 19:35:42 +0100

mesa (22.1.0~git2203022053.221ce1b35ae~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 221ce1b35ae ci/freedreno: Consolidate some information about an a630
    flake.
  * a64408dcd51 ir3: Don't assert on not finding the VS output for an FS
    input.
  * feb7e30e2d4 radv: include disable_aniso_single_level and
    adjust_frag_coord_z in key
  * 2de15273d5b freedreno: Improve robustness behavior for VBs with
    offset > size.
  * 92945825f5f freedreno: Fix start_slot handling in
    set_vertex_buffers.
  * 35ddb65ea6b freedreno: Use the resource size rather than BO size for
    VFD_FETCH[].SIZE.
  * b21e7e1ef7b docs: match build-flags markup with meson docs
  * 23d3fb6da26 docs: fix a broken link
  * 96c8880900e intel/fs: fix total_scratch computation
  * 5b430758886 v3d: enable texture filtering anisotropic
  * dc77542ed22 intel/compiler: Use pass helper in
    brw_nir_adjust_offset_for_arrayed_indices
  * f761f8fd9e2 broadcom/compiler: simplify node/temp translation during
    register allocation
  * 871b0a7f6a3 broadcom/compiler: don't sort nodes for register
    allocation
  * 4483cd24af5 broadcom/compiler: sink uniform loads
  * e228642cf50 broadcom/compiler: move constants before their first
    user
  * a1998a9f43e broadcom/compiler: disallow TMU spills if max tmu spills
    is 0
  * cbb4d0dded2 broadcom/compiler: increase cost of TMU spills to 10
  * a02dd17cb36 radeonsi: fix an assertion failure with register
    shadowing
  * 0f96948dfab radeonsi: fix register shadowing after the pm4 state
    size was decreased
  * 66e20d2bf70 ac: add an environment variable that parses IBs in files
  * 3394f0ae14e ac: define PKT3_ATOMIC_MEM
  * ff9e4409c13 ac: parse SET_SH_REG_INDEX packet
  * 0cae7a59c08 ac/llvm: update LLVM processor names for gfx10.3
  * 87d83f4103b ci: add point coord failures to d3d12
  * 5ca7c20cf7b st/mesa: do nir_lower_io() for inputs & outputs with
    transform feedback info
  * ee4c5b16993 gallium/aux: add helper nir_gather_stream_output_info
  * 2a708efec33 gallium/util: add util_dump_stream_output_info
  * 1dcd1eac6a5 nir: pass nir_shader into nir_recompute_io_bases instead
    of func_impl
  * 606811bded2 nir: add nir_print_xfb_info
  * ad68a1ee5a5 nir: add nir_gather_xfb_info_from_intrinsics for lowered
    IO

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 02 Mar 2022 21:33:00 +0100

mesa (22.1.0~git2202272126.114e48e923d~b~mesaaco1) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 27 Feb 2022 22:51:44 +0100

mesa (22.1.0~git2202272126.114e48e923d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 114e48e923d CI: Disable panfrost-t760
  * f2dee2ea555 docs: update irc channel
  * 5558f7de59d docs: mark virgl gles2 renderer as done
  * 5cce0d1d9d3 docs: update virgl description
  * ca4ad9c2cb3 docs: link to gitlab instead of cgit
  * 32de503b022 docs: master -> main
  * 76ee3eeae95 docs: Virgl -> VirGL
  * 4ebd3b041bb docs: qemu -> QEMU
  * 5494b686947 docs: add missing get
  * 2015d458b6e docs: remove a few repeated words
  * 6897266ce01 docs: import virgl docs
  * e1964e1dde7 zink: don't free non-fbfetch dsl structs when switching
    to fbfetch
  * 03a80490a47 zink: free push descriptor pools on deinit
  * 698ae34844b zink: fix cached descriptor set invalidation for array
    bindings
  * 62b8daa889d zink: set shader key size to 0 for non-generated tcs
  * 861fc10bfc7 zink: skip extra descriptor lookups for images during
    barrier updates
  * cd7ea80e70f zink: add layout to sampler descriptor hash
  * 7431c309998 zink: fix typo for image descriptor rebinds
  * a179977b8e3 zink: update descriptor refs after starting renderpass
  * f0398180a59 radv: use MAJOR_IN_SYSMACROS for sysmacros.h include
  * afece589dc6 util: fix util_cpu_detect_once() build on OpenBSD
  * 623ff4ec429 util: fix u_print.cpp build on OpenBSD
  * 7d609431d4f util: unbreak non-linux mips64 build
  * e5c39bc427f intel/compiler: optimize flat inputs mask calculation
  * e2cb562dd1b intel/compiler: ignore per-primitive attrs when
    calculating flat input mask
  * 216da26b3f3 pan/va: Add TEX_FETCH assembler case
  * 794836daf06 pan/va: Handle sr_write_count in the disassembler
  * eee6dad0c97 pan/va: Fix definitions of TEX_SINGLE and TEX_FETCH
  * a58807fa955 pan/va: Don't use staging index as a sideband
  * 49a4cc6af86 pan/va: Handle extended staging counts in assembler

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 27 Feb 2022 22:18:01 +0100

mesa (22.1.0~git2202250025.834db3aa8d0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 834db3aa8d0 docs: remove incorrect drivers from extension
  * 988d5aae74d panfrost: Flush resources when shadowing
  * 5536852d60e panfrost: Handle NULL samplers
  * 53ef20f08d4 panfrost: Handle NULL sampler views
  * 304851422a4 panfrost: Fix set_sampler_views for big GL
  * 4b2769493ed panfrost/ci: Update xfails list
  * 97f18d29292 blorp: Add blorp_measure hooks to the blitter codepaths
  * e6b7e743083 iris: Set MI_FLUSH_DW::PostSyncOperation correctly
  * c393753daa4 r300: add predicate instructions to statistics of vertex
    shaders
  * 8eb9bffdfc1 r300: report number of loops in shader statistics
  * 517b37a08c3 r300: use %u specifiers when printing unsigned stats
    values
  * e7978412c3f r300: only print shader statistics when compilation
    succeeds
  * b124f83bc27 zink: add a flake channel
  * cd2a4cc47c3 pan/bi: Unit test message preloading optimization
  * eb1479bda22 pan/bi: Support message preloading
  * c8437cd415c pan/bi: Account for message preloading in shaderdb
  * 19541dc8c86 pan/bi: Add bi_before_nonempty_block helper
  * 6618697e0e7 panfrost: Pack message preloads from compiler
  * bd06a266623 panfrost: Add an unpacked message preload struct
  * 2d0c4973dc1 panfrost: Remove Message Preload Descriptor from v6.xml
  * b130f8f4cfc venus: add macros to help with future extensions
  * 43bbe367ea5 panfrost/ci: Move T860 flake to skip
  * 5c07f7c427c panfrost/ci: Move T720 flakes to skips
  * eecc62ccbd8 Revert "ci: Disable jobs to the Collabora lab"
  * cf99584f510 broadcom/compiler: move uniforms right before their
    first use after scheduling
  * f1d20ec67c3 nir/nir_opt_move: handle non-SSA defs
  * fe2249eac50 nir: add a nir_instr_def_is_register helper
  * 0a044687040 nir/nir_opt_move: allow to move uniform loads
  * f692bda4843 ci: Disable jobs to the Collabora lab
  * c0695bb4733 ci: Allow disabling the whole of the Collabora farm

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 25 Feb 2022 00:51:46 +0100

mesa (22.1.0~git2202221902.c063d8ff649~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * c063d8ff649 zink: prune ci lists
  * 59bc17d57ae turnip: Request no implicit sync when we have no
    implicit-sync WSI BOs.
  * 83ee08f6d1a radv: fix build on BSD
  * 2e867673709 pan/bi: Add BIFROST_MESA_DEBUG=nosb option
  * c81c022e666 pan/bi: Implement basic scoreboarding pass
  * 8f25d88d907 pan/bi: Print scoreboarding state
  * 6ad9a7f6501 pan/bi: Add scoreboard state to IR
  * 91c02893d87 pan/bi: Clean up nits in liveness analysis
  * 734a8bdc5d6 pan/bi: Use bi_exit_block
  * 75406a561fa pan/bi: Add bi_{start, exit}_block helpers
  * e5423bb1295 pan/bi: Do not cull post-RA staging writes
  * 87d46f40c87 pan/bi: Cull DTSEL_IMM dests in post-RA DCE
  * 956b969616b pan/bi: Clarify requirement for barriers
  * 9a14ddc22dd docs: add license to the redirects script
  * 2eb644e470e mesa: Enable GL_NV_pack_subimage
  * 606ac8d61e4 pan/bi: Enable nir_opt_shrink_vectors
  * e0e63c2a8e6 pan/bi: Specialize IDVS in NIR
  * 3c1021cd1ed panvk: Use more reliable assert for UBO pushing
  * d223b7f096e radv, aco: Add u_foreach_bit to .clang-format.
  * a6be12fdadc gbm: improve documentation about the lifetime of
    resources
  * 62074cb4ace ac: update shadowed registers
  * e74929bfef8 radeonsi: move Arcturus code outside the gfx9 branch
  * c740fd18ba4 ac/llvm: replace structured by vindex != NULL in
    ac_build_buffer_store_common
  * 1038382baf9 ac/llvm: replace structured by vindex != NULL in
    ac_build_tbuffer_store
  * c8e2c6faf64 radeonsi: use SET_SH_REG_INDEX with index=3 for
    registers containing CU_EN
  * 79a7ab642ac ac/surface: add more elements to meta equations because
    HTILE can use them
  * 9a28f79f7bf ac/surface/tests: fix missing NUM_PKRS extraction in
    test_modifier
  * 12e00be09b9 radeonsi: apply the LLVM discard bug workaround to LLVM
    13 only
  * 21f169b2fb3 ac,radeonsi: rework and optimize how TMPRING_SIZE is set
  * 3c7df183a37 radeonsi: prepare clamp, alpha test before mrtz prepare

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 22 Feb 2022 19:18:26 +0100

mesa (22.1.0~git2202161620.108e6eaa83e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 108e6eaa83e tegra: Use private reference count for resources
  * e8ce0a33570 tegra: Use private reference count for sampler views
  * 4e252cbc7df aux/trace: fix dumping of pipe_texture_target
  * 1912503224d radv: Don't disturb dynamic primitive topology with mesh
    shading.
  * da719792ad2 radv: Disable IB2 on compute queues.
  * 3fad6325cd4 radeonsi: use SI_PROFILE_CLAMP_DIV_BY_ZERO for viewperf
  * 9685b5785b0 radeonsi: add SI_PROFILE_CLAMP_DIV_BY_ZERO
  * 13674245011 ci: Uprev virglrenderer and crosvm
  * 3ef858a6f67 ir3/spill: Fix simplify_phi_nodes with multiple loop
    nesting
  * d3b4202b63c mesa/st: always use DXT5 when transcoding ASTC format
  * 103699677bd radv: allow to force per-vertex VRS if the config file
    is present
  * c50557d9612 radv: allow applications to dynamically change
    RADV_FORCE_VRS
  * 5e2d9202e28 radv: add RADV_FORCE_VRS_CONFIG_FILE to configure per-
    vertex VRS
  * a862e15ee7c radv: rename RADV_FORCE_VRS_NONE to RADV_FORCE_VRS_1x1
    and accept 1x1
  * b4f526cc191 radv: only re-emit the per-vertex VRS rates if necessary
  * 99d7c130510 radv: rework RADV_FORCE_VRS to make it more dynamic
  * cbd5724a6df aco: implement nir_intrinsic_load_vrs_rates_amd
  * 772aeff2c4c ac/llvm: implement nir_intrinsic_load_vrs_rates_amd
  * 85436896c43 radv: declare a new shader argument for loading the VRS
    rates
  * 74b932f8d34 nir: add nir_intrinsic_load_vrs_rates_amd
  * 9cbcdfb514e anv: use vk_image_view::format for creating dynamic
    renderpasses
  * 818c5dedf46 vulkan: Add back vk_image_view::format
  * 05e9e7767d7 vulkan: Rename vk_image_view::format to view_format
  * 9dd15295e30 venus: properly destroy deferred ahb image before real
    image creation
  * 3652ff2fa1d draw: Don't look at .nir if !IR_NIR.
  * 780949c62bc i915g: Initialize the rest of the "from_nir" temporary
    VS struct.
  * a6a651b96ac r300: Delete the loop unrolling.
  * 4f3f245b784 zink: radv ci updates
  * ffdac8bfa78 vulkan/wsi/wayland: ensure added formats have flags
  * 5617d5c8854 vulkan/wsi/wayland: de-duplicate
    wsi_wl_display_add_wl_shm_format

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Feb 2022 18:09:42 +0100

mesa (22.1.0~git2202142018.b6557b80a50~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b6557b80a50 intel/compiler: fix array & struct IO lowering in mesh
    shaders
  * e6cfd1ed642 spirv: Create PRIMITIVE_INDICES for NV_mesh_shader on-
    demand.
  * 0445802ab2e compiler: Extract num_mesh_vertices_per_primitive
    function.
  * 32155851f10 radv: remove set but unused radv_buffer::shareable
  * af420833f0d radv: remove useless NULL checks in
    vkBind{Buffer,Image}Memory2()
  * 2dcd12f38be radv: fix finding shaders by PC
  * 306e153c188 radv: make the trap handler shader BO resident
  * a224b7a057a radv: fix allocating/uploading the trap handler shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 14 Feb 2022 21:35:50 +0100

mesa (22.1.0~git2202130118.da8c2f5ed30~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * da8c2f5ed30 docs/features: Mark VK_KHR_ray_query in progress
  * 3d41414d26a freedreno/ir3: split up load/store/atomic by generation
  * b91b036322f isaspec: add gen-based leaf bitset separation
  * 40468430a42 isaspec: fix gen_max to be 2^32-1
  * 9dc30f99ae5 panfrost: Flesh out the Shader Program Descriptor
  * 60b37424d91 panfrost: Simplify Valhall preload descriptor
  * 1e9a35648a1 panfrost: Clarify unknowns in z/stencil descriptor
  * 733d5f061d3 panfrost: Add more fields to Attribute Descriptor
  * b31f6a821dc panfrost: Update primitive descriptor for Valhall
  * d8d32cf7734 radv: Only wait on CS/PS to finish if we wait on a
    semaphore.
  * 79131b6ee6c radv: Fix preamble argument order.
  * 7adb3c0f7f9 radv: Use larger arena sizes.
  * 0f9756f4808 lima/ppir: refactor bitcopy to use unsigned char
  * 7297f931f04 lima/ppir: initialize slots array for dummy/undef
  * 5b158493663 lima/gpir: avoid invalid write in regalloc
  * 58c619c3d6d lima: remove an unneeded lima_job_get assignment
  * 116f01c8535 lima: add some checks for potential null pointer
    dereference
  * 60888c95bdf lima: fix warning of garbage value access
  * 2d807979c95 lima/ppir: initialize spill_costs array in regalloc
  * 8a8f34c3206 lima/ppir: avoid ppir_codegen_outmod implicit conversion
  * 3d77950b8b7 lima/ppir: clean up override-init warnings
  * 823be63216a lima/gpir: clean up override-init warnings
  * 8a30b1541c6 venus: use 64KB alignment for suballocations
  * 05a2cea14c4 venus: no roundtrip needed for shmem backed by
    BLOB_MEM_HOST3D
  * a76d1e0e741 venus: init renderer_info at renderer creation (part 2)
  * ddba7337c75 venus: init renderer_info at renderer creation (part 1)
  * 1bbbabedb7a aco/insert_exec_mask: refactor and remove some
    unnecessary WQM handling code
  * d7d7b9974ab aco/insert_exec_mask: refactor and simplify
    get_block_needs()
  * fcc5dec8d69 aco/insert_exec_mask: remove ever_again_needs and
    Exact_Branch
  * cbb1b095ca9 aco/insert_exec_mask: remove some unnecessary WQM loop
    handling code

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 13 Feb 2022 16:35:21 +0100

mesa (22.1.0~git2202100611.f93059b19f0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * f93059b19f0 venus: fix two VN_TRACE_SCOPE's in the same scope
  * 987bc449548 iris: Drop the iris_resource aux usage bit fields
  * ae763940e8c iris: Compute aux.possible_usages from aux.usage
  * d905018a2c8 iris: Use iris_sample_with_depth_aux more often
  * 85a7fb1e197 intel/isl: Add format assertions for surfaces using CCS
  * 05b8b08ef49 iris: Avoid making some invalid CCS surface states
  * a9beb87dce3 iris: Inline some surface_state.cpu references
  * d705faad6cb iris: Add and use fill_surface_states
  * eb51fd04147 iris: Add and use use_surface_state
  * 89ebdd67c49 iris: Add and use iris_surface_state::aux_usages
  * b60af618a0e iris: Drop res param from surf_state_offset_for_aux
  * ce37e176f1d iris: Drop format param from fast_clear_color
  * 6778b3a379d iris: Don't fast clear with the view format
  * 68c1b50e48e aux/draw: fix llvm tcs lane vec generation
  * 8d5be0a2b3f radv: Add submit locking with trace bo.
  * e3cbc328e0d gallivm/nir: Call nir_lower_bool_to_int32 after
    nir_opt_algebraic_late
  * d633eace3fd ci/freedreno: Try to detect a wedged MMU that's happened
    recently.
  * b7278b2281f ci/lvp: Add a flake that's shown up a couple of times
    since VKCTS 1.3.1.
  * 2d15f9e3c21 ci/r300: Drop xfails that were fixed with the VK-GL-CTS
    1.3.1.0 uprev.
  * 20469009c71 nir: Delete the per-instr SSA liveness impl.
  * 74c02d99b22 nir_to_tgsi: Replace the NIR SSA liveness with TGSI reg-
    level liveness.
  * f4ce3178d99 nir_to_tgsi: Track our TGSI insns in blocks before
    emitting tokens.
  * 3f84c67af85 tgsi: Refactor out a tgsi_util_get_src_usage_mask().
  * e92209f2990 i915g: Report the temps usage
  * bfcc7c20c8c docs: update calendar and link releases notes for 21.3.6
  * d66a22a02b4 docs: add release notes for 21.3.6
  * aabc7034d7e docs: update calendar for 22.0.0-rc2
  * 97c90c514fd turnip: Depth/stencil formats should not expose any
    bufferFeatures
  * 53dc5f774d4 radv: only emit the per-vertex VRS state if the pipeline
    forced it
  * d0171dffe18 radv: do not force per-vertex VRS if there is no pixel
    shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 10 Feb 2022 10:14:58 +0100

mesa (22.1.0~git2202091513.5d7bae5ab35~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5d7bae5ab35 zink: ci updates
  * 63fa2ab978c zink: add Sample decorations to fragment shader inputs
    with sample shading
  * 0cb5333a148 iris/ci: Enable Whiskey Lake boards by default
  * fe560aeb125 radeonsi: workaround Specviewperf13 Catia hang on GFX9
  * e2cd0c3a3c2 intel/fs: Assert that old pull-const code is not used if
    devinfo->has_lsc
  * 562f7eef5b4 iris: invalidate L3 read only cache when VF cache is
    invalidated
  * 7a6ea047954 anv: invalidate L3 read only cache when VF cache is
    invalidated
  * 442628b7024 intel/genxml: add PIPE_CONTROL field for L3 read only
    cache invalidation
  * 03e1e19246d anv: Refactor descriptor copy
  * 6fba52cfd2b radv: allow RADV_FORCE_VRS with pipeline VRS declared as
    dynamic
  * 413ea503bae iris: Disable PIPE_CAP_PREFER_BACK_BUFFER_REUSE
  * e3cb620b559 iris: Use the hardware blitter for DRI PRIME blits
  * f9eba6e2b52 iris: Allow IRIS_BATCH_BLITTER in iris_copy_region()
  * 70a219d4a35 broadcom/simulator: enable multisync in the simulator
  * 5200e1c2120 translate: improve sse2 32-bit unsigned -> float
    conversion
  * 0b69f7b15d5 rtasm: add pcmpgtd operation
  * 55b735c51ae rtasm: fix printf specifier for ptrdiff_t
  * 7d1727079c3 zink: ci updates
  * 883017b67ec zink: do not copy colors through floats
  * 745fc95659b zink: Re-interpret formats when using
    vkCmdClearColorImage()
  * 86eaff29c0b st/mesa: only enable ARB_enhanced_layouts if there are
    xfb buffers
  * 13c6f401ccb glsl: only validate xfb_buffer values when we have
    enhanced layouts
  * c17a3392c4c glsl: simplify conditions for setting various allowed
    flags
  * 2883e8f33db nir_to_tgsi: Add a flag for lowering fabs, and use it in
    r300/i915.
  * f4ee7146f9f nir: Split the flag for lowering of fabs and fneg to
    source modifiers.
  * bd24f418c3c r300: Throw a compile error instead of an assert in r300
    swizzle rewrites.
  * 4968f8c0663 r300: Demote a compiler assert(0) to a compile failure.
  * 97d13b2debb d3d12: Fix take_ownership semantic for constant buffers
  * d52d500f17a r300: Request that nir-to-tgsi avoid generating
    TGSI_OPCODE_CMP.
  * 4a1ba7914a0 ci/lavapipe: update lvp asan results after leak fixes.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 09 Feb 2022 15:38:09 +0100

mesa (22.1.0~git2202080622.a52e4871fe9~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a52e4871fe9 meson: add radv to meson devenv
  * 8335fdfeafb vk/sync: add asserts for timeline semaphore count
    matching
  * 388f23eabe5 zink: min/max blit region in coverage functions
  * b656ab75a68 zink: reject invalid draws
  * e38c13830fc zink: fix PIPE_CAP_TGSI_BALLOT export conditional
  * 8907964dcd5 zink: export PIPE_SHADER_CAP_TGSI_CONT_SUPPORTED
  * 413bf889e70 radeonsi/blit: relax conditions to use sdma copy for
    prime buffers
  * 3b27ad15046 radeonsi: create prime buffers as uncached
  * 18c38bf78fc gallium: rename PIPE_BIND_DRI_PRIME
  * 42c149e36b3 gallium/dri: add missing PIPE_BIND_DRI_PRIME handling
  * 3926be368e8 ci/iris: Mark qbo tests as flakes
  * df1751a2bbd crocus: Enable compat profile the same way as core
    profile
  * 604d97671b6 iris: Add support for flushing the blitter (hackily)
  * 9c5dc4985b2 blorp: Assert that blorp_copy() on the blitter can
    handle it
  * d2646e147ba intel/genxml: Add missing MI_FLUSH_DW::Flush CCS field
  * 7ddad1b93a1 radv: fix R_02881C_PA_CL_VS_OUT_CNTL with mixed
    cull/clip distances
  * 44bdac98499 tu: Implement VK_AMD_buffer_marker to support Graphics
    Flight Recorder
  * b5619464970 egl/wayland: Don't replace existing backbuffer in
    get_buffers
  * 3da8300562e egl/wayland: Reset buffer age when destroying buffers
  * fa4390f7bf6 ci/iris: Add skips and flakes notes for recent #intel-ci
    logs.
  * 0cf32b5079f ci/crocus: Add recent flakes from #intel-ci
  * 64230459579 ci/softpipe,llvmpipe: Disable Xvfb server reset on
    piglit runs.
  * 9ea4029f9fe Revert "radv: re-apply "Do not access set layout during
    vkCmdBindDescriptorSets.""
  * 66f7289d568 radv: add reference counting for descriptor set layouts
  * 37c3be6947b crocus: find correct relocation target for the bo.
  * d774059a0c6 crocus: enable GL46 tests for HSW in ci
  * 0299600efb9 asahi: Fix memory unsafety in delete_sampler_state
  * 786871c87e8 agx: Don't kill helper threads in ld_var
  * 367d93bcd43 agx: Handle texture array indices
  * b459473bb97 agx: Implement nir_op_txb

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 08 Feb 2022 07:34:04 +0100

mesa (22.1.0~git2202041116.3abe9ccbd4c~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 3abe9ccbd4c vulkan/util: simplify multialloc init
  * 0d0ecbd987e vulkan/util: Add explicit casts to make c++ happy
  * 676c65d8d56 vulkan/util: Add extern "C" to allow inclusion from c++
  * fded7a95c55 turnip: Expose VK_KHR_shader_non_semantic_info
  * ff059605aaa turnip: Implement
    VK_KHR_zero_initialize_workgroup_memory
  * c6d1cac6e51 turnip: Expose VK_EXT_image_robustness
  * 03f9deecb8b turnip: Use the shared helpers to expose 1.3 core
    extensions/limits
  * 679713d5f93 turnip/doc: Update turnip extension list
  * fd0e4aedeb2 iris: Make an iris_foreach_batch macro that skips
    unsupported batches
  * c4b400285ac llvmpipe/triangle: don't store area in fixed_position.
  * cd4d2e920cb llvmpipe: just move opaque alpha lookup closer to use.
  * a448695eee1 llvmpipe: refactor lp_rast_shader_inputs.
  * fb17da6c504 llvmpipe/setup: remove opaque from setup triangle
  * 66188e86931 llvmpipe: inline retry_triangle_ccw
  * 086a9b78698 llvmpipe: optimise triangle setup a bit.
  * 5e4bf6d100b turnip: Do not use hw binning if tiles per pipe are over
    the limit
  * c6e8198f1be turnip: Add TU_GMEM envvar to test different gmem sizes
  * dac3e6f3727 venus: Advertise VK_EXT_extended_dynamic_state support
  * 19e313e1c84 venus: Implement VK_EXT_extended_dynamic_state commands
  * 3affb69eaaa docs: Update d3d12 features
  * 7430742b164 d3d12: ARB_gpu_shader_fp64
  * b8ecb8be799 d3d12: Handle structs in TCS variants
  * c448931d232 d3d12: Handle structs in GS variants
  * 252a89a2c9c d3d12: Set lower full fp64 compiler options flag when
    needed
  * 204102099a2 d3d12: Lower [de]construction of doubles via math ops
    into pack/unpack ops
  * 4daa3eac2ce d3d12: Add int64 support
  * 397e117e960 d3d12: Get OPTIONS1
  * 0144e7b18da d3d12: Add a driver version to the screen to be used for
    workarounds
  * 944832d3d72 d3d12: Cache a modifyable copy of the nir options in
    d3d12_screen
  * 2529a0df89c d3d12: Use the right constant for GS varying limits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Feb 2022 18:50:05 +0100

mesa (22.0.0~git2202011630.bf289e3123c~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * bf289e3123c turnip: Store the computed iova in the tu_image.
  * f460fb3f917 turnip: Store the computed iova in the tu_buffer.
  * ba44634e4dd aco: fix v_mac_legacy_f32
  * d1e46d34f75 radeonsi: enable ARB_sparse_texture_clamp
  * 95d36179092 glsl/nir: convert ir_texture->clamp to nir
  * 10a71c61065 glsl: add ARB_sparse_texture_clamp builtin functions
  * 391f2dffaad glsl: _textureCubeArrayShadow support clamp
  * de37146c712 glsl: _texture support clamp parameter
  * 92d6b2735b7 glsl: ir_texture add clamp field
  * 13ffd46a0fb glsl: add ARB_sparse_texture_clamp extension
  * 3729c3fa30e mesa: add ARB_sparse_texture_clamp extension
  * d68087a1d97 gallium: add PIPE_CAP_CLAMP_SPARSE_TEXTURE_LOD
  * d014efa33e7 util/utrace: make generated code a tiny bit nicer to
    look at
  * d0363baefdb util/u_trace: make mako conditional code easier to read
  * 928156bc9dc intel/tracepoint: simplify tracepoint descriptions
  * 713a4363e5f vulkan/wsi/wayland: remove format switch from
    wl_shm_format_for_vk_format
  * 5a82232e5cb vulkan/wsi/wayland: use DRM_FORMAT_INVALID
  * fda2aecb8b8 vulkan/wsi/wayland: use enum wl_shm_format
  * bbe97c38714 docs: update INTEL_DEBUG environment variable
    documentation
  * ce99b1a7467 v3dv: don't submit noop job if there is nothing to wait
    on or signal
  * 4fa24747b90 glthread: call _mesa_glthread_BindBuffer unconditionally
  * 061bf72a4fd mesa: stop truncating MESA_GLSL=dump
  * b1b8b712c1d aux/vbuf: add fastpath for skipping identical vbuf
    updates
  * b733a226360 aux/vbuf: move mask-clearing for vbuf updates after
    buffer scanning
  * cf6a6161222 aux/vbuf: use local var for modifying unaligned_vb_mask
    during update
  * 28f677e6dc9 iris: implement inter-context busy-tracking
  * 06b279ccb25 iris: save some iris_syncobj_reference() calls at
    update_bo_syncobjs()
  * db475c81b7c iris: Return non-zero stride for clear color plane
  * 2407a7e6c1f iris: Pick the right BO in iris_resource_get_param
  * ea5ffa01287 iris: Refactor a ternary in iris_resource_get_param

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 01 Feb 2022 17:48:01 +0100

mesa (22.0.0~git2201271516.cad053db615~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cad053db615 panvk: Fix pointer corruption in
    panvk_add_wait_event_syncobjs
  * ece10a54679 zink: unify some context casts in
    zink_create_sampler_view
  * fe3984b8cde anv: silence wsi debug logging
  * 6018d5c44aa vulkan/wsi/x11: document implementation
  * 978ea32acfb radv/ci: mark the dEQP fails related to a missing VKCTS
    1.3 as expected
  * 764c8867b04 v3dv: document why we don't expose
    VK_EXT_scalar_block_layout
  * 06220a28e7a v3dv: rework Vulkan 1.2 feature queries
  * 692e0dfe272 v3dv: implement VK_KHR_imageless_framebuffer
  * 2ee9487ad7f v3dv: drop signature of undefined function
  * af957d4a17e ci/traces: Always generate the junit XML.
  * 60f7bd3c095 ci/traces: Drop PIGLIT_REPLAY_UPLOAD_TO_MINIO.
  * d0af517a14c ci/traces: Drop the baseline file creation for trace
    results.
  * d562b83a844 ci/traces: Clean up the failure report message.
  * 7d6cd4a5cd3 ci/traces: Drop the PIGLIT_PROFILES setting for traces
    replay.
  * ccbf16124e9 ci/traces: Rename the piglit/run.sh script to piglit-
    traces.sh.
  * d041630a379 ci/llvmpipe,softpipe: Switch piglit testing to piglit-
    runner.
  * 87c3651674f ci/llvmpipe: Drop the skip of piglit edgeflag test.
  * 6ce7a6e7258 Revert "ci: freedreno: Update a530 dEQP fail expectation
    list"
  * ae32c6229e5 freedreno: Add missing generated header dependency
  * 6c984b14694 dri_interface: Remove the remaining DRI1 API definitions
  * 57445adc891 anv: Re-enable CCS_E on TGL+
  * c48401404c1 anv: Use ANV_FAST_CLEAR_DEFAULT_VALUE for CCS on TGL+
  * d68b2db89ca anv: Disable CCS_E for some 8/16bpp copies on TGL+
  * 09ca0891444 anv: Drop assert against modifier with aux on gfx12
  * f07f4d5ec55 docs: use http-redirect when possible
  * 53426d26c37 softpipe: Dispatch 4 CS invocations per tgsi_exec
    thread.
  * 62dc4be470f softpipe: Initialize the CS dispatch mask at machine
    setup time.
  * 2fe2a2b0808 softpipe: Improve some local var naming in compute
    shaders.
  * 13b57a8cad6 tgsi_exec: Fix shared var stores for >1 real invocation,
    and overflow checks.
  * 8a5b949a3ef turnip: fix leaks of submit requests.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 27 Jan 2022 17:12:05 +0100

mesa (22.0.0~git2201220024.4198ca4b3f6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 4198ca4b3f6 iris/xehp: Implement workaround for 3D
    texturing+anisotropic filtering.
  * bbb12b5550b docs: Update d3d12 features
  * 75e1948b238 d3d12: Set sample-rate shading and GLSL 400 caps
  * 23918d933e2 d3d12: When mapping a non-directly-mappable resource for
    write, readback first
  * 7f9ac5bba23 d3d12: Support dynamic UBO/SSBO indexing
  * ce93f114b66 d3d12: Run point sprite lowering pass on multi-stream GS
    when safe
  * 2a81bd9397e d3d12: Apply GS point sprite lowering to fixed-function
    point size too
  * bcbfbb8efd7 d3d12: Report number of GS streams
  * 223a05dc53e d3d12: Temp resources for same-resource copies can be
    MSAA too
  * 2da7db759bf d3d12: Relax multisampling direct copy requirements
  * e5cf19fced6 d3d12: Modify shaders when MSAA is disabled
  * aef777c95dd d3d12: Report sample positions
  * 173e3738034 d3d12: Lower load_sample_pos to load_sample_pos_at_id
  * 7ad089c66e3 d3d12: Sample mask output needs to be uint-typed
  * f915bc56a48 microsoft/compiler: Lower helper invocations
  * 1022435845d microsoft/compiler: Handle msb/lsb/bfrev
  * ac94bcf0464 microsoft/compiler: Use ibfe/ubfe for bitfield extract
    instead of lowering to shifts
  * 80e782d5ed5 microsoft/compiler: Handle bitfield_insert
  * 8938c6e0321 microsoft/compiler: Emit samplers as array types
  * 7502b089001 microsoft/compiler: Handle load_invocation_id for GS and
    HS
  * fe6f7b52656 microsoft/compiler: Handle tex texture/sampler offset
    srcs
  * 7748e4799d2 microsoft/compiler: Handle input coverage
  * 777a42e309c microsoft/compiler: Handle textureGatherCmp
  * 30a44e4c3dc microsoft/compiler: Handle 'pull model' explicit
    interpolation intrinsics
  * 5b51842b58a microsoft/compiler: Always have at least one GS active
    stream
  * a8373ca8de6 microsoft/compiler: Handle load_sample_pos_at_id
  * 852e243caeb microsoft/compiler: Handle variables declared per-sample
  * 413f398cff6 ci/windows: Use 2 container stages
  * 4d2937ff92c mesa: OpenGL ES 1.1 is not optional
  * b04a1862962 mesa: OpenGL 1.4 feature GL_EXT_point_parameters is not
    optional

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 22 Jan 2022 13:37:42 +0100

mesa (22.0.0~git2201211038.b8c518f0fbf~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b8c518f0fbf radv: fix computing the number of color samples if no
    attachments
  * 4e4a2d0f97f driconf: enable vs_position_always_invariant for Dirt
    Rally
  * b5b105df96d r300: properly initialize new_vs in
    r300_draw_init_vertex_shader
  * 5decf569fc8 mesa/st: move perf query test to st_context, drop files.
  * 3f8e7b87354 mesa/st: drop lots of perfquery wrappers
  * 78d13fdbb25 mesa/st: drop some bindless wrappers
  * 8467047f6da mesa/st: move memory query into mesa.
  * 6e99b10632e mesa/st: move shader completion into mesa
  * 03f180d88b3 mesa/st: inline st_max_shader_compiler_threads
  * 74d40c68dc3 mesa/ctx: store screen pointer in ctx as well
  * df9d5795c1e mesa/st: move evaluate depth values into mesa
  * a64e5c02bda mesa/st/vdpau: direct call the vdpau functions.
  * 0f8a3a71754 mesa/st: drop release all sampler views wrapper
  * 31d3e3ebeba mesa/st: move st_TexParameter into mesa
  * 96b57faf357 mesa/st: drop useless tex parameter calls.
  * 9244c792f9a mesa/dd: drop GetProgramBinaryDriverSHA1
  * 4a055c19408 mesa/st: move pin l3 cache to direct check/call.
  * 10ac88b72fa mesa/st: drop emit string marker device table entry.
  * 5618fac7860 mesa/st: directly call the uuid get funcs.
  * ec0d62ceb5f mesa/st: drop last user of st_Enable.
  * 84fe99b2a0e mesa/st: migrate debug callback code into mesa
  * bc122e07690 mesa/st: remove st_context from debug callback
  * e344a117af8 mesa/st: move intel blackhole noop enable to frontend
  * 129e31cd4f7 zink: hook up planar image format creation
  * bff042fd43f zink: link with vulkan utils
  * 926d78a645b ntt: Extend ntt_compile::addr_declared and
    ntt_compile::addr_reg
  * 495debebad2 nir/algebraic: optimize expressions using fmulz/ffmaz
  * 14b82270837 nir: add some missing nir_alu_type_get_base_type
  * f2fbba79209 nir/algebraic: optimize open-coded fmulz/ffmaz
  * 312a2849807 nir/algebraic: add ignore_exact() wrapper

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 21 Jan 2022 10:58:11 +0100

mesa (22.0.0~git2201192045.19f88eb858e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 19f88eb858e meson: tlsdesc: minor reformatting, add comments

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Jan 2022 21:31:18 +0100

mesa (22.0.0~git2201191747.96cc3007461~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 96cc3007461 radv: fix missing destroy for the overallocation mutex
  * 6619f855d97 vulkan/runtime: fix accessing NULL pointers detected by
    UBSAN
  * 44ddc28fa8d Add new rules to .gitattributes
  * a4b8f69bb50 radv/ci: add line endings exception for files generated
    with wine
  * 745af887830 ci/windows: normalize line endings
  * f5471227724 microsoft/compiler: normalize line endings
  * ed0edcc3388 freedreno/rnn: normalize line endings in rules-ng.xsd
  * b59764a9fcb aco: use p_extract for SGPR
    nir_op_unpack_half_2x16_split_y
  * bbc4ca5d7d5 aux/trace: cosmetic cleanup
  * 85a75e42db7 aux/trace: implement missing trace calls
  * 32d40f7c80c aux/trace: print enum names instead of integer values in
    gallium traces
  * 51f6288a2d2 genxml: reduce amount of generated code
  * acebea9cf1f anv: fix missing descriptor copy of
    bufferview/surfacestate content
  * 2c875e6ad78 intel/dev: fix ppipe_mask computation
  * 9e839620daa meson: add check kwarg to run_command
  * 71673cd2d4d zink: add deqp ci baseline for nv
  * f9892b0f4f9 zink: update nv ci baseline
  * 806946b0947 lavapipe: replace hard pointer calcs in push descriptors
    with ptralloc
  * 48fde98b79f lavapipe: replace hard pointer calcs in dynamic render
    with ptralloc
  * 171ccdbf1c4 util: add ptralloc
  * 0bc7562466c iris: Do primitive ID overrides in 3DSTATE_SBE not
    SBE_SWIZ
  * 223edb1ec11 iris: Use prog_data->inputs rather than shader info in
    SBE code.
  * d475e839daf intel/fs: Reuse the same FS input slot for VUE header
    fields.
  * 5f0bf2113ef r300: Add consts (uniforms) count to the shader-db
    output.
  * cd7b260eeb9 r300: Drop unused r300_get_stats() call.
  * 695ba644abe intel/gem: Return length from intel_i915_query_alloc
  * 83da7dc487e intel/dev: Recalculate max_cs_threads after applying
    hwconfig changes
  * ab22fb488bd intel/dev: Apply settings from hwconfig if
    devinfo::apply_hwconfig is set
  * 59f32c62c73 intel/dev: Set intel_device_info::apply_hwconfig for DG2
  * a15f18c8860 intel/dev: Add intel_device_info::apply_hwconfig

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Jan 2022 18:44:02 +0100

mesa (22.0.0~git2201161923.9645fa91079~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 9645fa91079 agx: Handle discard intrinsics
  * f248f6623c4 agx: Add sample_mask instruction
  * dcc12656e3b asahi: Route sample mask from shader
  * 9b57600502a asahi: Rectify confusing XML comment
  * 3341abc5d79 asahi: Break out Fragment Parameters word
  * fc5a72be2fd asahi: Add XML for unknown 0x4a packet
  * 054c5be1021 asahi: Warn when hacks mode is enabled
  * 011106640fb asahi: Fake more CAPs with dEQP hacks mode
  * 13b79266e47 frontend/va: Setting the size of
    VADRMPRIMESurfaceDescriptor
  * 76b7e393542 frontends/va: use un-padded width/height in
    ExportSurfaceHandle
  * b6cc240db1c bin/gen_calendar_entries: fix newlines on windows
  * 493f6883312 ensure csv-files are crlf on disk
  * b8d37eb1bb9 pan/bi: Schedule around blend shader register clobbering
  * 77a1514a378 pan/decode: Disassemble Bifrost quietly
  * 58accc995bf pan/decode: Don't print Preload twice
  * 330bb2c58b0 panfrost: Remove FBD pointer on Bifrost XML
  * ae9316f8128 pan/decode: Decode Valhall surface descriptor
  * c947a52df44 pan/decode: Add pandecode_dump_mappings
  * 861fa2baec1 pan/decode: Add hexdump helper
  * 6752fcf1797 pan/decode: Track mmaps with a red-black tree
  * a07473b79d7 pan/decode: Include addresses for jobs
  * 4af20895c52 pan/decode: Remove hierarchy mask check

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 16 Jan 2022 20:23:51 +0100

mesa (22.0.0~git2201150414.01f5fffbc63~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 01f5fffbc63 mesa: Remove unused src/mesa/x86-64
  * a686946553e mesa: Remove unused
    _mesa_set_sampler_{filters,srgb_decode,wrap}
  * 2db87ad3444 mesa: Remove unused _mesa_is_front_buffer_{draw,read}ing
  * 203df8c2640 mesa: Remove unused _mesa_is_alpha_to_coverage_enabled
  * c630408945d mesa/math: Remove unused m_translate.c
  * c828490b26c mesa: Remove unused _mesa_delete_nameless_texture
  * c1fa6bbecf9 mesa: Remove unused _mesa_all_varyings_in_vbos
  * 6e3cd058708 mesa: Remove unused _mesa_convert_colors
  * fcb3b875539 freedreno/decode: Handle chip-id
  * d15021435ed driconf: Fix unhandled tags in static conf
  * fe0a6b96061 anv: Don't fill lowered_storage_image_param on SKL+
  * 10276558106 pps: increase intel.cfg buffer size
  * 2e3490dd0f2 iris: utrace/perfetto support
  * 1d2fea6eae2 tools/pps: limit intel cfg to 250ms of sampling
  * b462dafbd68 pps: enable anv source in example config file
  * e760c5b37be anv: add perfetto source
  * b70143f4e39 util/u_process: protect entrypoints for c++
  * cf9956a8c57 intel/ds: use a per GPU clock ID
  * 61766f9f90a intel/ds: use the right i915_drm.h include location
  * e35a65ae454 intel/ds: don't forget to reset upper dword timestamp
    read
  * 6eb554a9c7e intel/ds: allow user to select metric set at start time
  * 69df00b33b3 intel/ds: reuse intel_ioctl()
  * cc5843a573b anv: implement u_trace support
  * bb541d11593 intel/blorp: add measure_end entry point
  * d3724de8948 intel/dev,perf: Use a single timescale function
  * 02a4d622ed0 anv: expose a couple of emit helper to build utrace
    buffer copies
  * 246e2c74d39 isl: add helpers to printout ops
  * e8ea6a899f0 blorp: add description & helpers to printout ops
  * 30a8b8d2df4 intel/fs: disable VRS when omask is written
  * 37fa59fa6c1 anv,lavapipe,v3dv: use wsi_common_get_image

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 15 Jan 2022 11:04:30 +0100

mesa (22.0.0~git2201130709.01709464a4c~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 01709464a4c aux/trace: copy over stream_output_target_offset method
    from context
  * d0bba3dfbf8 zink: add flake
  * 4dc406c7482 freedreno: Update chip-ids
  * 785a324debb freedreno: Handle wildcard fuse-id in device matching
  * 6b8e3aeeb71 freedreno: Rearrange dev_id_compare() logic
  * 9176e27dd27 freedreno: Small dev_id_compare() cleanup
  * 0a82a26a185 turnip: Porting to common implementation for timeline
    semaphore
  * 479a1c405e4 turnip: Porting to common vulkan implementation for
    synchronization.
  * 58aa920706c vulkan: fix typo
  * f976f71fb08 turnip: Use the new common device lost tracking
  * 14a4600b62d intel: add swizzle flag into driver uuid
  * f43c7185e0a intel: remove chipset_id
  * ddfa3924b3a intel: dump PCI info in intel_dev_info
  * 3414ba9a814 anv: remove private pci fields
  * d86989bf73e intel: use PCI info to compute device uuid
  * db8405670a7 intel: provide pci bus and dev info in base device
    struct
  * 17b753459ec venus: VkExternalImageFormatProperties is optional
  * cd6377741d0 docs: update calendar and link releases notes for 21.3.4
  * 7240b379485 docs: add release notes for 21.3.4
  * 79a987ad2a1 nir/opt_if: also merge break statements with ones after
    the branch
  * dad609d1521 nir/opt_if: merge two break statements from both branch
    legs
  * 64a51293c8f vulkan/overlay: support Vulkan 1.2
  * 20db89b7c7c virgl: disable texture uploads with copy transfers
  * d3398a8e03e docs: move the release for 22.0 out
  * c638d6f3bf6 ci: Add paraview traces to several drivers.
  * ec29a9391eb ci/llvmpipe: Add a trace for the game JVGS, which got
    regressed recently.
  * e46fa37cf46 ci/llvmpipe: Sort the list of traces.
  * 9675cef53b5 radv: set radv_split_fma=true for Proton SotTR
  * cc802cab7c0 radv: add RADV_DEBUG=splitfma
  * b2ae4b2ac4b lima: remove not needed lie about
    PIPE_CAP_OCCLUSION_QUERY

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 13 Jan 2022 08:40:41 +0100

mesa (22.0.0~git2201121441.8a78706643e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 8a78706643e nir: refactor nir_opt_move
  * 8ef9350ff0c intel/devinfo: drop num_eus_per_subslice field
  * 5d5a1b660b8 intel/devinfo: add a helper to check for slice
    availability
  * 1c5b206366c intel/devinfo: printout devinfo struct size
  * 574ba30fb44 intel/devinfo: printout pixel pipes in info printout
  * d8ba48e4473 radeonsi/tests: add expected results for vega20
  * d299d819195 radeonsi/tests: update expected results
  * 86262b6eac0 radeonsi,radv: fix usages of surf_pitch
  * 2f8982df0e7 radeonsi/gfx10: fix si_texture_get_offset for mipmapped
    tex
  * 9cd8908c030 radv: fix computing the fb size in presence of dynamic
    VRS attachment
  * 9c746157ae4 radv: reset VRS if the current subpass doesn't have a
    VRS attachment
  * ec4dcd53dbb radv: stop checking if dynamic states changed
  * 567a9550d78 ci: disable vs2019 windows build
  * 912acbf963e anv,iris: Flush HDC before color fast clears
  * f3c629733fd anv,iris: PSS Stall Sync around color fast clears
  * 8ec8298ce4f intel: Rename the PSD bit in PIPE_CONTROL for XeHP
  * de5f1cdd31a anv,iris: Depth stall around color fast clears
  * 34c8371e2a9 anv,iris: Flush tile cache after color fast clears
  * 38b3661b8fb radv: 256 byte push constants.
  * 43f8e07765f radv: Use 16-bits to store push constant indices.
  * 3a36d0b7874 radv: Use MAX_PUSH_CONSTANTS_SIZE for saved push
    constants.
  * b6499dff37d zink: use device-local heap for sparse backing
    allocations
  * f286ecf906c nir: handle per-view clip/cull distances
  * 70a9710eee8 spirv: mark [Clip|Cull]DistancePerViewNV variables as
    compact
  * 0d6f83cbf11 nir: remove invalid assert affecting per-view variables
  * ce5a8bff77e spirv: handle multiview bits of SPV_NV_mesh_shader
  * 4fed440724a nir: add load_mesh_view_count and load_mesh_view_indices
    intrinsics
  * e4ff7fd76ad spirv: add MeshViewCountNV/MeshViewIndidcesNV builtins
    from SPV_NV_mesh_shader
  * 561de760fd6 compiler: add new MESH_VIEW_COUNT/MESH_VIEW_INDICES
    system values
  * 4cb7dcb0974 spirv: handle ViewportMaskNV builtin/cap from
    SPV_NV_mesh_shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 12 Jan 2022 17:53:25 +0100

mesa (22.0.0~git2201091443.b8f0459d6f4~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b8f0459d6f4 iris: unref syncobjs and free r/w dependencies array for
    slab entries
  * 9cb91010ab0 iris/ci: update piglit fails
  * 4d624f189eb i915g/ci: update piglit fails
  * a2dbdc645f0 ci: Shrink container/rootfs sizes.
  * 48712b8cc59 venus: subtract appended header size in
    vn_CreatePipelineCache
  * 3792fbfcf60 ir3: Assert that we cannot have enough concurrent waves
    for CS with barrier
  * 9ed4d49c977 ir3: Be able to reduce register limit for RA when CS has
    barriers
  * 9323d2ea6d1 zink/codegen: remove bogus print statement
  * 37f01832eb9 zink/codegen: remove core_since in constructor
  * 029e871239a zink/codegen: support platform tags
  * 1d40d53e03d anv: don't leave anv_batch fields undefined
  * 8685a505e74 ntt: Set the output invariant flag according to the
    semantics
  * 6f348d9c990 nir_lower_io: propagate the "invariant" flag to outputs
  * 5bfe2927081 util/primconvert: map only index buffer part that is
    needed
  * 86b19db459d etnaviv/ci: update piglit fails
  * 1756930a79d radv: increase maxTaskOutputCount to 65535
  * cb451205569 ir3: Use (ss) for instructions writing shared regs
  * d45678cac46 ir3/postsched: Rename tex/sfu to sy/ss
  * e6b35d606de ir3/sched: Rename tex/sfu to sy/ss
  * 0cc4aca3455 ir3: Use new (sy)/(ss) stall helpers in the compiler
  * 7e60978d30a ir3: Introduce systall metric and new helper functions
  * 603791bdebd ir3: Bump type mismatch penalty to 3
  * d371d807eb8 ir3/ra: Fix logic bug in compress_regs_left
  * c9adcb60510 anv/tests: Free BO cache and device mutex
  * 8a7659a7a23 anv/ci: Test with deqp-vk on Tiger Lake
  * ef27036b4cf shader_info: tess.spacing needs to be unsigned
  * 1b808f1dea1 etnaviv: fix emit_if in case the else block ends in a
    jump
  * af131199931 intel/fs: OpImageQueryLod does not support arrayed
    images as an operand
  * 558a6006299 nir_to_tgsi: Enable fdot_replicates flag.
  * 85d7d520b99 panfrost/ci: update piglit fails

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 10 Jan 2022 08:48:16 +0100

mesa (22.0.0~git2201061844.05a5e5a2bce~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 05a5e5a2bce radv: fix xfb query copy param ordering
  * f43b0d5cdcd radv/winsys: remove unused syncobj functions
  * da0c708d79c radv: remove remaining dead code related to the old sync
    code
  * dcbf2423d28 vbo/dlist: add vertices to incomplete primitives
  * 7a1d3d3abc5 vbo/dlist: fix loopback crash
  * d84e0096a5d radeonsi/gfx8: use the proper dcc clear size
  * 21047a4a06b isaspec: Remove duplicate return statement.
  * d57b10ab98a intel/compiler: Adjust TCS instance-id for dg2+
  * 9f58275f98f ci: skqp: Add documentation on how to maintain skqp jobs
  * a6d05e68634 ci: Add a630_skqp jobs
  * 8992cf5ab8b ci: Build skqp on ARM64 images
  * a255f6f8230 radv: do not use the common entrypoint for the Metro
    Exodus layer
  * c1f8bc67e29 etnaviv: initialize vertex attributes on context reset
  * 105b48c85c2 r300: Fix omod failing to increase the number of
    channels stored.
  * 946fe209d90 ci/r300: Update xfails from a full dEQP run.
  * 7b7530a85a0 r300: Use uif() instead of pointer aliasing in program
    printing.
  * ca1d0333dba v3dv: Use the common QueueSignalReleaseImageANDROID from
    RADV
  * a9321b13098 anv: Use the common QueueSignalReleaseImageANDROID from
    RADV
  * b2073f5e5d6 radv: Move QueueSignalReleaseImageANDROID to common code
  * dfb1e1777c8 anv,radv,v3dv: Move AcquireImageANDROID to common code
  * 9caf110d4f3 frontends/va/enc: default motion estimation parameters
    for performance
  * 4ff57e5aba0 zink: fix -Warray-bounds warning
  * 43d57189ddb radeonsi: print the number of param exports for shader-
    db
  * d96a346120e radeonsi: print all streamout info
  * 3c471c0eb5a ac/nir: move ac_are_tessfactors_def_in_all_invocs into
    radeonsi
  * 116a05c7215 ac: move ac_exp_param.h to ac_nir.h
  * d4a1766a5a9 radeonsi: move the GS copy shader into shader variants
  * 1caa94f2a5f radeonsi: add into the disk cache key whether cached
    shaders contain LLVM IR
  * 8ed9d38e73d radeonsi: move si_nir_scan_shader into si_shader_info.c
  * 70919f30c1f radeonsi: change si_shader_output_values::vertex_stream
    to a bitmask

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 Jan 2022 23:06:14 +0100

mesa (22.0.0~git2112312156.31d839aacc6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 31d839aacc6 aco: lower masked swizzle to DPP8
  * da0412e55b1 aco: support DPP8
  * 5c3dfb4ef51 gallium/aux: Move index offsetting from prim restart to
    primconvert
  * 46c59e8fd69 radv: Remove dependencies on vk_common entrypoints.
  * 8c4c63a6ed1 radv: Rename submit2->submit.
  * 84ec547f69e radv: Remove syncobj reset mechanism.
  * 91fe0b5629d radv: Delete lots of sync code.
  * 967fc415fc4 radv: Add new submission path for use by the common sync
    framework.
  * 93cde57f7a5 radv: Add new cs_submit2 winsys call.
  * 9d75f23350e radv: Use vk_command_buffer for preambles.
  * 31da5c41b6b radv: Set horizontal sync types.
  * 1965872b417 radv: Add function to allow WSI signalling
    fences/semaphores.
  * 3055d2f9dfe radv: Initialize vk device drm fd.
  * 101a366e579 meson: Bump libdrm_amdgpu version req to 2.4.109.
  * 1a84dd6358c radv: Use vulkan runtime for device lost.
  * 085f99b729b radv: Use dispatch table for wsi_display.c
  * 40558dbe91d radv: Use dispatch table for QueueWaitIdle in the SQTT
    layer.
  * 7a84314c12a vulkan/runtime: Add sparse bind support.
  * 73cdc302ab9 vulkan/runtime: Refactor queue submit to take an
    argument struct.
  * 16a527deefb aco: don't split VOP3P definitions
  * 7e02787a544 aco: use p_create_vector(v2b,v2b) in get_alu_src_vop3p()
  * e56d8b0b2e0 aco: use explicit zero-padding for 64bit image loads in
    expand_vector()
  * 91f17e1c731 aco/optimizer: apply extract from subdword
    p_split_vector
  * fb622775b5e aco/optimizer: optimize extract(extract())
  * 5ad9c20d4ad aco/optimizer: apply extract from p_extract_vector
  * 11712729eb8 aco/optimizer: keep instr_mod_labels after applying
    extract
  * 1502c22e2c3 aco: don't allow SDWA on VOP3P instructions
  * 90994e4db70 radv: add drirc radv_disable_htile_layers and enable it
    for F1 2021
  * ce5d7bf5085 radv: fix copying mutable descriptors to sampler
    descriptors
  * 6fee84bc2e7 radv: Enable NV_mesh_shader with a perftest flag.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 02 Jan 2022 01:47:13 +0100

mesa (22.0.0~git2112300831.94351c94dba~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 94351c94dba r600/sfn: Remove unused AluInstruction members.
  * 9130e4564b8 crocus: set max clip planes to 6 for gen4.
  * af3cbc53794 gallium/mesa: enhance PIPE_CAP_CLIP_PLANES to support
    override number
  * f1c1fcfdce4 crocus: don't create staging resources > half aperture
  * d8a38edc48e crocus: fail resource allocation properly.
  * a2293e33fd1 intel/genxml/gen4-5: fix more Raster Operation in BLT to
    be a uint
  * c2217acaa57 ci/i915g: Add a couple more recent regressions.
  * 177bf24569d ci: Enable reporting to the flakes IRC channel for i915g
    and crocus.
  * d1a59c4077f ci/crocus: Add manual CI for the new HSW box I have at
    home.
  * e573f544732 docs: update calendar and link releases notes for 21.3.3
  * e4135c265d4 docs: add release notes for 21.3.3
  * 2ddfb9c256b r300: fix handling swizzle in transform_source_conflicts
  * 6f7421f50dd r300: Replace RADEON_NO_TCL with RADEON_DEBUG=notcl
  * 44f134bc219 r300: Document the RADEON_DEBUG options
  * b249e700ac6 radv: print number of levels with RADV_DEBUG=img
  * 4942e108909 radv: stop checking buffer size in vkCreateBuffer()
  * 05818bf7a49 Revert "gitlab-ci: disable radv-fossils"
  * 0357a2e0129 dri_drawable: missing header
  * cafca76fa2c zink: Fix building on macOS

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 30 Dec 2021 09:17:10 +0100

mesa (22.0.0~git2112282322.eca7b24e74d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * eca7b24e74d intel/devinfo: adjust subslice array size
  * cd182a31c3d iris: Use util packing fns in convert_clear_color
  * 34151f9be94 radv: fix clears with value of "1" and different DCC
    signedness
  * 554e1c20007 radv: Increase maxFragmentCombinedOutputResources.
  * 50658ed8da2 radv/amdgpu: Use VkResult for wait_timeline_syncobj.
  * 20b51cdabe7 radv: Skip wait timeline ioctl with 0 handles.
  * afff9dd0f04 radv: Use correct buffer size for query pool result
    copies.
  * b775aaff1ec radv: re-apply "Do not access set layout during
    vkCmdBindDescriptorSets."
  * 01f1bd4dfdb radv: re-enable fast clears for images that support comp-
    to-single
  * 311077c4832 panfrost: Make pan_merge macro more robust
  * 36f8f9b882a Fix typo
  * 7b7debe8f9b radv: fix restoring subpass during hw/fs color resolves
  * 030daf80b5f radv/winsys: remove radv_amdgpu_winsys_bo::is_shared
  * 847048fa241 radv/winsys: stop zeroing few structs in
    buffer_from_fd()
  * 3368e522b41 radv: remove unnecessary NULL checks in
    vkMapMemory()/vkUnmapMemory()
  * ff7aee2ac98 tu/clear_blit: use || when working with bools
  * 5c69c44a997 d3d12: Avoid a debug warning trying to unmap a not-
    mapped resource
  * 0c5fde39e48 d3d12: Set SSBO support caps
  * 416a8078544 d3d12: Use DXIL load/store lowering pass
  * 32375789e56 d3d12: Support setting SSBOs on the context and turning
    them into descriptors
  * 49cf325d821 d3d12: Always create buffers as UAV-capable
  * de4c38c3a7c d3d12: Support SSBOs in root signatures
  * c375b05bfe9 microsoft/compiler: Handle write masks in SSBO lowering
    pass
  * efc47571d4f microsoft/compiler: Hook up uavs-at-every-stage flag
  * 72b0d0cda06 microsoft/compiler: Emit SSBOs from 0 -> count for GL
    (non-kernel, non-Vulkan) shaders
  * 7b8ea338483 gitlab-ci: disable radv-fossils
  * 01821a26015 CI: Trigger Windows build on softpipe changes
  * d87a0895799 softpipe: Add a dummy field to
    sp_fragment_shader_variant_key
  * 79af19ab9e9 softpipe: Drop duplicate decl of
    softpipe_find_fs_variant
  * 0b7a0d1a495 softpipe: Use the draw module's poly stipple handling,
    like llvmpipe.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 29 Dec 2021 03:37:52 +0100

mesa (22.0.0~git2112240915.222487fabee~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 222487fabee radv: Fix memory leak on error path.
  * d2148af2cab mesa/st: remove conditionals for driver state bits that
    are always set.
  * 86a7a36164d mesa/st: drop multisample mask/locations state drivers
    bits
  * ddade693d00 mesa/st: drop new framebuffer srgb driver state bit
  * cbaf0729719 mesa/st: drop clip plane driver state bits
  * 33991f0743e mesa/st: drop scissor/window rect driver state bits
  * 42c7570eed2 mesa/st: drop ssbo, image and sampler driver state flags
    bits
  * 75255a1d069 mesa: drop unused transform feedback state driver flags
  * 6e15cc69ec2 mesa/st: drop new uniform driver state bit
  * f35d22b2ee9 mesa/st: drop new tess state driver bit
  * 562f01fbc7a mesa/st: drop poly stipple driver state bit
  * 784ced98f09 mesa/st: drop new depth/stencil state bits
  * 14e1f9cb980 mesa/st: drop NewBlend driver state flags
  * 4f0316613f0 mesa/st: remove the viewport driver state flags
  * c5af853cb92 mesa/st: drop the rasterizer driver flags
  * b2175609baa mesa/st: drop the new array driver state bit
  * df4f0672d3f mesa/st: merge NewDepthClamp state flag
  * 535a9d42030 mesa: drop optional tex/tnl maintains mode.
  * 1adff0d0db0 mesa/st: move default enabled extensions into mesa.
  * 87cc3ee964c mesa/draw: drop the multi draw with indices fallback.
  * d17f45df1a6 mesa: remove StripTextureBorder option.
  * 424941f0e48 ci: debian-clang: build more drivers
  * 08f7d37fb97 panvk: cast negative value to unint8_t
  * cea1df7d34f panvk: use FALLTHROUGH to stop a warning
  * bc19893f5dd i915g: avoid left shifting a negative number
  * 107c63aee88 lavapipe: fix string-plus-int warning
  * 944c8907ba8 pan/bi: Don't call useless NIR passes
  * f0f6aec5459 glcpp: Disable the valgrind tests.
  * 059b71b58de ci: Enable a build with MSan.
  * 6e6e16b3178 isaspec: Sort field names to generate deterministic
    output.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 25 Dec 2021 15:30:54 +0100

mesa (22.0.0~git2112161043.f7e63ec5d87~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * f7e63ec5d87 nir/print: compact printing of intrinsic indices
  * d8fa625bb34 nir/print: expand printing of io semantics.gs_streams
  * be25db9f0f3 nir/print: simplify printing of IO semantics
  * 7325179bcb0 intel/compiler: Use uppercase enum values in
    brw_ir_performance.cpp
  * d3f4f23ca34 intel/vec4: Inline emit_texture and move helpers to
    brw_vec4_nir.cpp
  * 92d194427da intel/vec4: Use nir_texop in emit_texture instead of
    translating
  * 2729a741fc3 intel/vec4: Use ir_texture_opcode less in emit_texture()
  * 5ce4017a2bf radv,aco: do not disable anisotropy filtering for non-
    mipmap images
  * 8a327722d54 ac/nir: add an option to disable anisotropic filtering
    for single level images
  * 1cb5c1775b0 glx: fix querying GLX_FBCONFIG_ID for Window
  * 6c5b3c6bb56 dri: Remove unused driGetRendererString
  * 7cc42a8dd43 dri: Remove unused driUpdateFramebufferSize
  * 7e1e3722fb3 dri: Remove unused driContextSetFlags
  * 69aad977880 mesa: Remove unused _mesa_initialize_visual
  * cd38b6e2e85 anv, iris: Implement Wa_14014890652 for DG2
  * 40b66a44998 anv, iris: Add Wa_22011440098 for DG2
  * 17a1df79bab anv, iris: Add Wa_16011773973 for DG2
  * b1156f23a2a Revert "nir: disable a NIR test due to undebuggable &
    locally unreproducible CI failures"
  * 49c356a3356 meson: Bump version required for gtest protocol
  * dcc7b19cae9 nir: Initialize nir_register::divergent
  * 3ffd6f3fa62 nir_to_tgsi: Set the TGSI Precise flag for exact ALU
    instructions.
  * af4d277cccb mesa: OpenGL 1.3 and OpenGL ES 1.0 are not optional
  * 5f14e987808 mesa: OpenGL 1.3 feature GL_ARB_texture_env_dot3 is not
    optional
  * 61a3e68767b mesa: OpenGL 1.3 feature GL_ARB_texture_env_combine is
    not optional
  * 7649ab1f03f mesa: OpenGL 1.3 feature GL_ARB_texture_cube_map is not
    optional
  * c11641ab241 mesa: OpenGL 1.3 feature GL_ARB_texture_border_clamp is
    not optional
  * 2ca13abcceb intel/fs: Use HF as destination type for F32TOF16 in
    fquantize2f16
  * 9c81de7df29 venus: cache shmems
  * 7bec2a0b239 venus: add VN_CS_ENCODER_STORAGE_SHMEM_POOL for
    VkCommandBuffer
  * 487926aa865 venus: add vn_cs_encoder_storage_type

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 16 Dec 2021 17:19:48 +0100

mesa (22.0.0~git2112090152.c50bdacbda6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * c50bdacbda6 glx: fix regression for drawable type detection
  * ff74d5dd1b8 intel/compiler: Don't store "scalar stage" bits on Gfx8
    or Gfx9
  * 4563261ad18 intel/compiler: Don't predicate a WHILE if there is a
    CONT
  * d051854ccaa treewide: drop mtypes/macros includes from main
  * 72db15913f6 v3dv: Fix dEQP-VK.info#instance_extensions test
  * b14dd3a8661 venus: prefer VIRTGPU_BLOB_MEM_HOST3D for shmems
  * fe3a800ad3d d3d12: Use overall resource format + plane format to get
    format info
  * 0312142d964 d3d12: Allow creating planar resources
  * a6db8054694 d3d12: Handle opening planar resources
  * fb6479544bd d3d12: Force emulation of all YUV formats using per-
    plane formats
  * 7f34b70474f radv: Use the winsys 0 cmdbuffer submission support.
  * 7675d066caa radv/amdgpu: Add support for submitting 0
    commandbuffers.
  * 6eb08213159 radv/winsys: Add queue family param to submit.
  * c03d258046c radv/amdgpu: Add a syncobj per queue.
  * 6d1a15f7faf mesa/st: drop Draw from dd function table.
  * 5312511ea54 mesa/st: move draw indirect and xfb to direct calls.
  * 132ffc46dcc mesa/st: move compute to direct call
  * 28bd406f508 mesa/st: move msaa functions to direct call
  * d16f514f192 mesa/st: convert DrawTex to direct call
  * 601c30c8c1e mesa/st: convert the non-optional egl image to direct
    calls
  * 7b066ebfb38 mesa/st: move blit function to direct call
  * c9fec99c4a2 mesa/st: replace most of buffer funcs with direct calls.
  * f60add48ee4 mesa/st: move program calls to direct call
  * 878cf8cae95 mesa/st: move copy image sub data to direct call
  * 81eae719363 mesa/st: move viewport to direct call
  * ce9a50e6f80 mesa/st: move some context functions to direct calls
  * cb400f368a7 mesa/st: move clear/flush/finish to direct call
  * 37fb8058fb8 mesa/st: move pixel/bitmap functions to direct call
  * 4e13c7d46ae mesa/st: move Clear to new direct call
  * 889ac0f1b98 mesa/st: move texture APIs to direct st calls

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 09 Dec 2021 16:59:36 +0100

mesa (22.0.0~git2112042028.6e7ffa760f3~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 6e7ffa760f3 vulkan: Open registry XML files as UTF-8
  * 8665910a632 venus: move bo allocation for mappable memory to
    vn_MapMemory
  * 19d6b497fbf venus: track memory type property flags in
    vn_device_memory
  * 86b3a4e6aa9 venus: defer roundtrip waiting to vkFreeMemory time
  * 9fa3e3df9e9 venus: simplify device memory pool alloc and refcount
  * e019780626a venus: refactor vn_device_memory_simple_alloc
  * eb28ac0f883 nv50: don't claim support for format-less stores
  * 03acfa4aac3 nv50,nvc0: add new caps to list
  * bd2c11dfa80 intel/compiler: Load draw_id from XP0 in Task/Mesh
    shaders
  * b717872e085 intel/compiler: Get mesh_global_addr from the Inline
    Parameter for Task/Mesh
  * 28e0c63a4cb intel/compiler: extract brw_nir_load_global_const out of
    rt code
  * 1f438eb0337 intel/compiler: Implement Mesh Output
  * 70ace2bbcd5 intel/compiler: Implement Task Output and Mesh Input
  * 171bdd2ec66 intel/compiler: Lower Task/Mesh
    local_invocation_{id,index}
  * db23c41537e intel/compiler: Add backend compiler basics for
    Task/Mesh
  * 827cf65a26e intel/compiler: Export brw_nir_lower_simd
  * 09dd05a2199 intel/compiler: Make MUE available when setting up FS
    URB access
  * 79e5e353e4a intel/compiler: Add structs to hold TUE/MUE
  * fcc1ccf5417 intel/compiler: Don't lower Mesh/Task I/O to temporaries
  * 18e1c9c5423 intel/compiler: Don't stage Task/Mesh outputs in
    registers
  * be89ea3231c intel/compiler: Handle per-primitive inputs in FS
  * 7938c38778c intel/compiler: Properly lower WorkgroupId for Task/Mesh
  * 76f55d7556e intel: Add INTEL_DEBUG=task,mesh
  * ea8fa10edd1 mesa: move common/dri into gallium
  * 01b44d66b12 mesa: Merge libmesa_gallium and libmesa_common
  * e030d5ba8ac mesa: Delete libmesa_classic
  * bc2d3e7b5fd mesa/main/tests: remove dispatch sanity
  * a63760f01a5 include/pci_ids: Move PCI ids supported by both i965 and
    iris to iris
  * bf97868062a mesa/dri: remove mega driver stub
  * cdde031ac2c classic/i965: Remove driver

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 05 Dec 2021 10:01:21 +0100

mesa (22.0.0~git2112011926.70dd119abd4~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 70dd119abd4 CI/d3d12: Add a quick_shader run
  * 7afb4aba3f1 CI/windows: Move reference files to relevant ci
    subdirectories
  * c70e31c4d52 CI/windows: Move SPIRV-to-DXIL test YML to microsoft
    folder
  * 214168621d4 CI/windows: Move D3D12 test YML to D3D12 driver folder
  * 145b0711fcb freedreno/crashdec: Basing GMU log decoding
  * 8c654d02a3b freedreno/crashdec: Fallback to chip_id for GPU id
  * f33d5256dd1 freedreno/crashdec: HFI queue decoding
  * 2133d34b11a freedreno/crashdec: Split out mempool decoding
  * b234c538e8a turnip: Move CP_SET_SUBDRAW_SIZE to vkCmdBindPipeline()
    time.
  * fd11d992546 turnip: use SUBDRAW_SIZE and constant sized tess bos
  * 3748b8afce9 freedreno/ir3: Make a shared helper for the tess factor
    stride.
  * 17de0841ae7 nouveau/nir: Use natural alignment for scalars
  * 698343edc57 util/u_trace/perfetto: add new env variable to enable
    perfetto
  * 65697d6141b util/u_trace: add end_of_pipe property to tracepoints
  * 6f54ebe44f7 glsl: fix for unused variable in glsl_types.cpp
  * 4f58cc82e2f spirv: handle SpvOpMemberName
  * 8e568d3f00b nir/opt_deref: don't try to cast empty structures
  * 69ec384bbad gallium/d3d12: Don't use designated initializers
  * 83280b8e23e microsoft/compiler: Fix dxil_nir_create_bare_samplers()
  * c868bff36a5 freedreno/ci: add piglit runs for a306
  * 1ba231fb75b android: define cpp_rtti=false because libLLVM is built
    w/o RTTI (v2)
  * be7a0b23c8b Revert "android: define cpp_rtti=false because libLLVM
    is built w/o RTTI"
  * 6afba805349 aco: don't create DPP instructions with SGPR operands
  * 8d2be391e34 panfrost: Add empty tile flags to GenXML
  * 8f00f19da5b radv: fix resetting the entire vertex input dynamic
    state
  * 18cd0a5409e anv: Drop code from get_blorp_surf_for_anv_buffer
  * 355f3188438 anv: Allow transfer-only linear ASTC images
  * bdf8b36c4cf anv: Require transfer features for transfer usages
  * 8171535c457 iris: Allow GPU-based uploads of ASTC textures
  * caa998ca8ff intel/isl: Allow creating non-Y-tiled ASTC surfaces

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 01 Dec 2021 21:08:18 +0100

mesa (22.0.0~git2111261706.b5848b2dac1~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b5848b2dac1 egl/wayland: use surface dma-buf feedback to allocate
    surface buffers
  * 5b56fc748a7 egl/wayland: move loader_dri_create_image() calls to
    separate functions
  * 83916ae0b9b egl/wayland: add initial dma-buf feedback support
  * a25d4dd2761 loader: add function to get render node from dev_t
  * cd39180cfab egl/wayland: remove unused constant EGL_DRI2_NUM_FORMATS
  * aa6c900625d egl/wayland: move formats and modifiers to a separate
    struct
  * 6c37784400f egl/wayland: do not try to access memory if allocation
    failed
  * af1ee8e0104 egl/wayland: deprecate drm_handle_format() and
    drm_handle_capabilities()
  * 3022ad7e158 egl/wayland: replace EGL_DRI2_MAX_FORMATS by
    EGL_DRI2_NUM_FORMATS
  * 42a0e5caa9f egl/wayland: Remove unused wayland enum
  * c53733b004a egl: remove unnecessary spaces after types
  * be1acac84c3 ci: Upgrade to libdrm 2.4.109
  * a2fd507973d ci: Consistently build Wayland and protocols
  * 9bab991be09 ci: Use common build script for libwayland
  * db3d76c42d7 radv: advertise VK_KHR_synchronization2
  * 52b41850125 radv: switch the remaining stages/access to
    VK_PIPELINE_STAGE_2/VK_ACCESS_2
  * ad3cd581f41 radv: add support for
    VK_IMAGE_LAYOUT_ATTACHMENT_OPTIMAL_KHR
  * 936ac58b779 radv: add support for new pipeline stages and access
    masks
  * 3f29ae2d31c radv: add support for creating device-only events
  * e99c66ad196 radv: add support for VkMemoryBarrier2KHR
  * 3da7d10d9bb radv: implement vkQueueSubmit2KHR()
  * 8df17163c78 radv: implement
    vkCmdWaitEvents2KHR()/vkCmdPipelineBarrier2KHR()
  * 57575974fd4 radv: implement vkCmdWriteBufferMarker2AMD()
  * cff81c863bc radv: implement vkCmd{Reset,Set}Event2KHR()
  * a0ac03676fb radv: implement vkCmdWriteTimestamp2KHR()
  * 1df7c0ce7e0 radeonsi: print the shader stage for shader-db dumps
  * 59926f25fab radeonsi: print source_sha1 as part of shader dumps
  * e54264c84f8 nir: add shader_info::source_sha1, its initialization
    and printing
  * ba8075031a2 util: add SHA1 printing and comparison functions
  * 0b196b40a3a mesa: don't compute the same SHA1 twice in
    glShaderSource

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 27 Nov 2021 11:06:55 +0100

mesa (22.0.0~git2111200245.df005c2a65f~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * df005c2a65f mesa: move around current texture object fetching
  * d814539c2b6 mesa: check target/format for Tex(ture)StorageMem*
  * f659d00000a android: define cpp_rtti=false because libLLVM is built
    w/o RTTI
  * cdeecadcb6e radeonsi: deduplicate min_esverts code in
    gfx10_ngg_calculate_subgroup_info
  * 9d7ac70ffb3 radeonsi: implement shader culling in GS
  * 492a61fe725 radeonsi: don't use ctx.stage outside of
    si_llvm_translate_nir
  * 1c5899900dc radeonsi: simplify si_get_vs_key_outputs for GS
  * a368385b23e radeonsi: add is_gs parameter into si_vs_needs_prolog
  * f96d1757bba radeonsi: restructure code that declares merged VS-GS
    and TES-GS SGPRs
  * 2418da2d4af radeonsi: separate culling code from VS/TES (to be
    reused by GS)
  * 37c3e16d356 mesa/get: allow NV_pixel_buffer_object constants in
    GLES2
  * b8f41c5c4ee d3d12: Validate opened D3D12 resource matches pipe
    template
  * 9740141b2ef d3d12: Generate a pipe format -> typeless mapping table
    too
  * ca7d4fcb3fc d3d12: Generate format table using a macro list
  * 25bcc56027e d3d12: Make format list all use macros
  * 96012b686ed d3d12: Handle import/export of fd shared handles
  * 31c7a04b472 winsys/d3d12: Populate winsys handle format
  * 2771fd4a3fb gallium, windows: Use HANDLE instead of FD for external
    objects
  * 5bfbf4bec99 microsoft/compiler: Handle GLES external textures
  * 21886070149 d3d12: Support RGBX formats mapped to RGBA
  * ab9948997ac d3d12: Support PIPE_CAP_MIXED_COLOR_DEPTH_BITS
  * e0576ec148c d3d12: Support BGRA 555 and 565 formats
  * d0bc4974fa7 android: Allow forcing softpipe
  * 33e5a4378ef android,d3d12: Support using DirectX-Headers dependency
    from AOSP
  * 6138b047e29 mesa/main, android: Log errors to logcat
  * 9e82a56745c android: Add a BOARD CFlags option so build can be
    customized
  * 81cc94b8f0f zink: be consistent about waiting on context queue on
    context destroy
  * e92b8956c79 zink: set batch state queue on creation
  * b8ffd7a8886 freedreno/a5xx: Emit MSAA state for sysmem rendering,
    too.
  * 5071d39cb27 freedreno/a5xx: Document the sRGB bit on RB_2D_SRC/DST
    info.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 20 Nov 2021 13:05:06 +0100

mesa (22.0.0~git2111172022.b1a32d1432f~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b1a32d1432f zink: implement multiplanar modifier handling
  * b1675608c3a dri2: set dimensions on dmabuf import planes
  * 943f6a038db zink: always set matching resource export type for
    dmabuf creation
  * 11c79a8bd79 zink: stop using VK_IMAGE_LAYOUT_PREINITIALIZED for
    dmabuf
  * 63baeffc2db vulkan/sync: Rework asserts a bit
  * 0c74f806453 glsl: fix trivial strict aliasing warning
  * 58a0d8d0ded llvmpipe: page-align memory allocations
  * 23a5f1a5acb ir3: Stop inserting nops during scheduling
  * e0eeba6cbb0 ir3/postsched: Only prefer tex/sfu if they are soft-
    ready
  * 6f5c0d209c3 ir3/postsched: Rewrite delay handling
  * 140e117f2b0 ir3/delay: Ignore earlier definitions to the same
    register
  * a54e7baa65a ir3/postsched: Handle sync dependencies better
  * b9f61d72877 ir3/postsched: Fix copy-paste mistake
  * d9a91318b1c ir3/sched: Rewrite delay handling
  * b8fc7a08f9f util/dag: Add dag_add_edge_max_data
  * 508f917d8c5 util/dag: Make edge data a uintptr_t
  * ee2e14b352b ci: temporarily disable lima CI
  * 3b78f175323 iris: Tidy code in iris_use_pinned_bo a bit
  * 6e909849349 iris: Check for cross-batch flushing whenever a buffer
    is newly written.
  * 76030964a65 iris: Make a helper function for cross-batch dependency
    flushing
  * cbf0d83eace v3d,v3dv: move TFU register definition to a common
    header
  * ffbad81305b radv: simplify re-using cache entries in
    radv_pipeline_cache_insert_shaders()
  * 836a4b58363 v3dv: fix internal bpp of D/S formats
  * 8ee7309e577 llvmpipe: enable PIPE_CAP_FBFETCH_COHERENT
  * e403c1c23ea llvmpipe: remove dead args from load_unswizzled_block
  * ea6eeb70e67 llvmpipe: fix FB fetch with non 32-bit render target
    formats
  * 2b3a0209280 llvmpipe: protect from doing FB fetch of missing buffers
  * 3ebd6498c4f llvmpipe: fix gl_FragColor and gl_LastFragData[0]
    combination
  * b1de61dd385 llvmpipe: fix wrong assumption on FB fetch shader
    opacity
  * 86eb1549efd zink: implement pipe_context::draw_vertex_state

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 17 Nov 2021 22:02:20 +0100

mesa (22.0.0~git2111122126.01d36149cdd~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 01d36149cdd ci/freedreno: Add a link to the issue for
    color_depth_attachments.
  * 1847700d3c7 ci/freedreno: Add notes explaining the KHR-GL* failures.
  * 32b51d5e607 freedreno/a6xx: Do sparse setup of the TFB program.
  * 943449fb8ea ci/freedreno: Enable the tes-input/tcs-input tests.
  * 2ce44a02984 freedreno/ir3: Fix an off-by-one in so->outputs_count
    safety assert.
  * 02079cbb77c freedreno/a6xx: Add some notes about piglit failures.
  * 11b533cb198 aco: optimize load_local_invocation_index with single-
    wave workgroups
  * 2d07bcad661 radv: lower load_local_invocation_index with 1D
    workgroups
  * 719b48f85d6 nir/lower_system_values: replace local_invocation_id
    components with zero
  * a9b4a507fe5 tu: Expose Vulkan 1.2
  * c6216c941ca tu: Add VK_KHR_buffer_device_address stubs
  * 952ab4f64f9 tu: Enable subgroupBroadcastDynamicId
  * 170e1aa6478 freedreno/a[345]xx: add R8/RG8 SRGB formats
  * 8db29109beb freedreno: prefer float immediates when float values are
    involved
  * 4e83584092f pan/mdg: Remove duplicate compiler option
  * a4d3a296477 pan/bi: Enable dual texture fusing pass
  * 0c215813f7d pan/bi: Test dual texture fusing
  * 9146bafbb42 pan/bi: Add dual texture fusing pass
  * e6c6a1afb46 pan/bi: Fix up dual texturing registers
  * ce8d2b96c1b pan/bi: Add bi_dual_tex_as_u32 helper
  * 9b2a383af8a pan/bi: Support dual texture scheduling
  * 98c1b3e7e14 pan/bi: Use BIFROST_TEXTURE_OPERATION_SINGLE enum
  * 9245b39ccf1 pan/bi: Add bifrost_dual_texture_operation struct
  * 3612880ea3e pan/bi: Add bifrost_texture_operation_mode enum
  * 7dc90b68d9d pan/bi: Add second destination to TEXC
  * 8e027316243 pan/bi: Add secondary staging count
  * 238f6d80a70 pan/bi: Make bi_index padding explicit
  * b0022f1c6b9 pan/bi: Fix typo in helper invocation analysis
  * a315d043089 mesa: add just a tiny bit of debug info to some
    _mesa_problem calls
  * 269b4dec9e9 nv50,nvc0: expose R8/RG8_SRGB formats for texturing

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 13 Nov 2021 08:12:56 +0100

mesa (22.0.0~git2111102007.5451bb03c7b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5451bb03c7b mesa/main: Fix use of alloca() without #include
    "c99_alloca.h"
  * 549924d53e3 freedreno: Fix constant-index assumptions in IBO loads.
  * 9e04f97d8e9 freedreno: Fix the uniform/nonuniform handling for cat5
    bindful modes.
  * 46c37c8600e anv: don't forget to add scratch buffer to BO list
  * e0de7aa4d77 aco: Work around MSVC restrict in c99_compat.h
  * a697dde5535 wsi/x11: support depth 30 visuals
  * 794a9cf3d6e vulkan/wsi: Unlock before return on error path.
  * 3a95e25e849 v3dv,v3d: don't store swizzle pointer in shader/pipeline
    keys
  * 183e705a15b vulkan, radv: Support backslash in ICD paths
  * 379fab74d21 radv/sqtt: fix GPU hangs when capturing from the compute
    queue
  * 4dfb5818ed7 zink: update gfx pipeline shader module pointer even if
    the program is unchanged
  * bfa81c1e8c8 zink: be more consistent about applying module hash for
    gfx pipeline
  * 937a841b574 zink: ci updates
  * 2ac23b4d583 zink: always inline uniforms when running on a cpu
    driver
  * a8d90c8ed55 zink: implement cs uniform inlining
  * 06f2054cb50 zink: radv ci updates for 1dshadow stuff
  * 64e0ca15d69 zink: add 1DShadow sampler handling for drivers (radv)
    that don't support it
  * 0ae1231879b util/xmlconfig: Allow DT_UNKNOWN files
  * e6147895885 anv: Also disallow CCS_E for multi-LOD images
  * 62983f276ba zink: add another compiler pass to convert 64bit vertex
    attribs
  * 39bdb00d773 zink: simplify 64bit vertex attrib lowering
  * 854fd242faf zink: declare int/float size caps inline with type usage
  * 17aa2be4c9c ci: Add RADV to Android CI.
  * aad80e47d8a util: Add support for clang::fallthrough.
  * 966c171d888 amd/addrlib: Ignore self-assign warnings.
  * 22673a980f3 meson: Check arguments before adding.
  * 5db098c98bd aco: Remove useless sub-expr.
  * bbd091d1fab radv: Always use linker script when possible.
  * 66713d33fe4 radv: Remove android build warning.
  * 7b06b6288c7 amd/addrlib: Use alternative ADDR_C_ASSERT definition.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 10 Nov 2021 21:14:42 +0100

mesa (22.0.0~git2111082002.55e1dc8b648~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 55e1dc8b648 pan/bi: Drop unused test helpers
  * baa405f02a1 pan/bi: Use gtest for test-constant-fold
  * 4554cd03f01 pan/bi: Use gtest for test-optimizer
  * 06b3b537686 pan/bi: Use gtest for test-pack-formats
  * 71cbb9c4f06 pan/bi: Use gtest for test-packing
  * fecb299b81e pan/bi: Use gtest for test-scheduler-predicates
  * 3a9210c93dc pan/bi: Make some headers compilable with C++
  * bee2c9c0819 meson: automatically define `HAVE_{some}_PLATFORM`
  * 5cc9c30aefd meson: always define `HAVE_{X11,XCB}_PLATFORM` when it's
    enabled
  * 448dd106da2 meson: drop impossible `if no platform` branch
  * 2351c0aded8 meson: move `egl_native_platform` definition inside the
    `with_egl` block
  * 9ad375bdcd3 meson: drop duplicate addition of surfaceless & drm to
    the list of platforms
  * 09bb4dbe60b release-calendar: fix date for next 21.3 rc
  * 984091531e7 radv: remove unused parameter in
    radv_emit_subpass_barrier()
  * 75161e6f3d8 util: Change blob_test to use macro from mesa-gtest-
    extras.h
  * 015383d1d78 gtest: Add mesa-gtest-extras.h with array ASSERT/EXPECT
    macros
  * 5358d8a1109 radeonsi/sqtt: reserve a vmid when sqtt is enabled
  * e26dd92957d radeonsi/sqtt: fix FINISH_DONE / BUSY usage
  * 3de072aaecf radeonsi/sqtt: fix shader stage values

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 08 Nov 2021 20:32:45 +0100

mesa (22.0.0~git2111081748.c572adceaa4~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * c572adceaa4 intel/dev: also test crocus & i915 pci-ids
  * 361b3fee3c5 intel: move away from booleans to identify platforms
  * 3b1a5b8f2ba intel: remove 2 preproduction pci-id for ADLS
  * f32dcb6fe17 nir: assert that variables in optimize_atomic are
    initialized
  * fbd61d2b020 zink: set new point/line caps
  * 8bbebc7e9f1 st/mesa: use new point and line CAPs
  * 78337728d1d radeonsi: set correct point and line limits
  * cf9afc7b0cf gallium: add missing point and line CAPs
  * b80dca86c33 gallium: rename PIPE_CAPF_MAX_POINT_WIDTH ->
    MAX_POINT_SIZE
  * 10ee261c38c driconf: disallow 10-bit pbuffers for viewperf2020/maya
    due to X errors
  * f8ea4c9e1df Revert "CI: Disable Windows jobs"
  * 7b44e7d7bb7 CI: Disable Windows jobs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 08 Nov 2021 18:30:55 +0100

mesa (22.0.0~git2111051937.c4d904101c0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * c4d904101c0 aux/trace: add pipe_context::render_condition_mem
  * f5794010999 aux/trace: fix vertex state tracing
  * 810305fbed8 aux/trace: trace pipe_screen::is_format_supported better
  * d2f3aba5f0e aux/trace: support
    pipe_context::get_query_result_resource
  * 58ba18474ba aux/trace: fix PIPE_QUERY_PIPELINE_STATISTICS_SINGLE
    tracing
  * 78b613db23c util/u_trace: Replace Flag with IntEnum to support
    python3.5
  * 349bfb72752 intel/devinfo: fix wrong offset computation
  * 718c97d5253 intel/devinfo: use compatible type for ARRAY_SIZE
  * 67619d81532 intel/perf: fix perf equation subslice mask generation
    for gfx12+
  * a543a944043 intel/dev: fix subslice/eu total computations with some
    fused configurations
  * e10c641f009 intel/dev: reuse internal functions to set mask
  * d7c6a90c267 intel/dev: don't forget to set max_eu_per_subslice in
    generated topology
  * d1db5d562af intel/dev: fix HSW GT3 number of subslices in slice1
  * 12294026d51 nir/algebraic: optimize Cyberpunk 2077's open-coded
    bitfieldReverse()
  * 9b8bc712b2b mesa: remove NEW_COPY_TEX_STATE
  * 1ee3fbd7037 mesa: always call _mesa_update_pixel
  * 6b002d25498 Revert "radv: only enable VK_EXT_display_control for
    vrcompositor (SteamVR)"
  * 0a6f079afe0 build: add sha1_h for lp_texture.c
  * 6ffdcc335ee iris: Use mi_builder in iris_load_indirect_location()
  * 833c0394e01 Revert "gallium/u_blitter: work around broken sample
    shading in llvmpipe and zink"
  * 60a8d682850 gallivm: handle TGSI SampleId sysval
  * 64cee33984f lavapipe: add some asserts for descriptor dynamic
    offsets
  * 8c37cd8860c zink: rework cached fbfetch descriptor fallback
  * 2d1f5e3dcb3 d3d12: Don't accumulate timestamp queries
  * 34739cb6e28 freedreno/ir3: Fix off-by-one in prefetch safety assert.
  * b0f2b0e980b freedreno/a5xx: Clean up a little bit of blitter array
    pitch setup.
  * b26e0cdf440 freedreno/a5xx: Try to fix drawing to z/s miplevel/layer
    offsets.
  * 99f5b7ba1ed freedreno/a5xx: Remove bogus assertion about BO size.
  * 03d8677bcaf freedreno/a6xx: Try to fix drawing to z/s miplevel/layer
    offsets.
  * 35f56ad8567 freedreno/a5xx: Diff reduction in fd5_layout to
    fd6_layout.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 07 Nov 2021 11:47:38 +0100

mesa (22.0.0~git2110282317.2f58a63b2f1~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 2f58a63b2f1 intel/genxml: Add XY_BLOCK_COPY_BLT on Tigerlake and
    later.
  * 9163500aa17 intel/genxml: Allow MI_FLUSH_DW on the blitter
  * d9ffdfc16da intel/genxml: Include blitter commands in gen*_pack.h
  * 7b78b2fcac6 intel/genxml: Assert that all MOCS fields are non-zero
    on Gfx7+
  * ebe2a2b5f6a intel/genxml: Add an field option for nonzero="true"
  * e6ebf5add7f i965: Set MOCS for Bindless Surface/Sampler State base
    addresses
  * 148ea65ee15 i965: Port STATE_BASE_ADDRESS to genxml and fix bugs
  * 0a64007676f i965: Fix MOCS for BLORP buffer copies
  * 75e86afb500 i965: Set MOCS for 3DSTATE_INDEX_BUFFER on Gfx6/7 as
    well.
  * ab44a546461 i965: Set MOCS for 3DSTATE_SO_BUFFERS on Gfx7.x too
  * eaaa3c7e04e i965: Set MOCS on NULL stream output buffers
  * 59f53b07c48 i965: Set MOCS for push constant buffers on Haswell and
    Gfx9+
  * d0e356b3332 i965: Set default MOCS for NULL depth/stencil/HiZ
    buffers
  * f0a5f10b6cc i965: Use ISL for MOCS rather than open coding it
    everywhere
  * d9decdb2c4a crocus: Fix MOCS for buffer copies.
  * dc29e9dbb3a crocus: Set MOCS for 3DSTATE_SO_BUFFERS on Gfx7.x too
  * 72ffcd19653 crocus: Set MOCS for push constant buffers where
    possible
  * 798cc4be1b8 crocus: Set default MOCS for NULL depth/stencil/HiZ
    buffers
  * 737b3fae737 crocus: Set MOCS on NULL stream output buffers
  * de99b5502b1 crocus: Set MOCS for index buffers on Gen6+
  * be0d22a9ce0 crocus: Tidy the ifdefs for emitting STATE_BASE_ADDRESS
  * 51f843ad603 crocus: Set MOCS for most state base addresses on pre-
    Gen8
  * dfe455b6dfb anv: Set MOCS on NULL stream output buffers
  * 818b5d2b9ed anv: Set MOCS on NULL vertex buffers
  * 7ae9f516f03 anv: Set MOCS in 3DSTATE_CONSTANT_XS even if there isn't
    a buffer.
  * 158ad07b3ef anv: Set MOCS for 3DSTATE_CONSTANT_XS on Gfx7.x as well
  * b4310ef8eeb anv: Set default MOCS for NULL depth/stencil/HiZ buffers
  * d8cb76211c5 iris: Fix MOCS for buffer copies
  * 256d48eb8cd iris: Set MOCS on NULL stream output buffers
  * d8e1d0fecc9 iris: Set MOCS on NULL vertex buffers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 29 Oct 2021 00:25:17 +0200

mesa (22.0.0~git2110270845.0bbb32ece45~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 0bbb32ece45 glsl/nir/linker: Also remove image variables
  * 0a277fabce9 broadcom/compiler: fix condition encoding bug
  * 3fbd6662b77 broadcom/compiler: rework simultaneous peripheral access
    checks
  * 2c61d89d362 gbm: add GBM_FORMAT_GR1616 and RG1616
  * 759eaf517a3 gbm: add missing R16 case in gbm_bo_get_bpp
  * 1fe375e7cf8 radv: Add bufferDeviceAddressMultiDevice support.
  * e1619b268a6 glthread: add a trivial thread-safe way to skip display
    list execution
  * c14d755f3d3 glthread: add an option to make glCheckFramebufferStatus
    a no-op
  * f4348ef60d5 glthread: don't sync for glIsEnabled with a few enums
  * 6b370cbe289 glthread: don't execute display lists if they have no
    effect
  * b0c40bc9054 nir/lower_samplers_as_deref: rewrite more image
    intrinsics
  * c9ce151ff97 zink: more accurately update samplemask for fs shader
    keys
  * 8899f6a1985 zink: fix gl_SampleMaskIn spirv generation
  * f42a4f64511 radv: fence->user_ptr and ctx->fence_map are now totally
    unused.
  * 861a35b3bc8 mesa: Require MRT support for GL3/ES3
  * 7e26ea84da9 microsoft/compiler: Use memcpy instead of a union to
    write dxil_features
  * d8b1afdc850 nir/lower_blend: Use correct clamp for SNORM
  * 3b146fb466d panvk: Pass through alpha_zero_nop/one_store flags
  * 77928e45ebb panfrost: Pass through alpha_zero_nop/one_store
  * 169aa9f1777 panfrost: Test alpha_zero_nop/one_store predicates
  * c6b2c1069b5 panfrost: Add alpha_zero_nop/one_store predicate
  * 87b68e77ccd panfrost: Rename depth bias fields
  * 29762ea8975 iris: Drop hint if primitive id is required or not
  * 1ee043e6621 anv: Drop hint if primitive id is required or not
  * 3f332224266 intel/compiler: Track primitive id in domain/evaluation
    shader
  * 2b86cf2850e intel/genxml: Add new Primitive ID Not Required bit
    field to 3DSTATE_DS
  * 90228a80ea2 zink: don't add dynamic vertex pipeline states if no
    attribs are used
  * 3072e6e0da5 intel/compiler: Don't use SIMD larger than needed for
    workgroup
  * 4e7b71e00cb intel/compiler: Use SIMD selection helpers for variable
    workgroup size
  * 7dda0cf2b8e intel/compiler: Use SIMD selection helpers for CS

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 27 Oct 2021 09:36:12 +0200

mesa (22.0.0~git2110250808.ae2881c0f58~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * ae2881c0f58 radv: remove old RADV_TRACE_FILE warning
  * c2d522b07f9 panfrost: Remove duplicated #if
  * baaa88cf9e6 panfrost: Remove ancient TODO
  * 2526f6f2294 panfrost: Enable AFBC on v7
  * 789601a189e panfrost: Decompress for incompatible AFBC formats
  * 93c9123c313 panfrost: Add internal afbc_formats
  * 342ed4909fe panfrost: Workaround ISSUE_TSIX_2033
  * e0335ad8881 panfrost: Fix gl_FragColor lowering
  * be5456e1164 panfrost: Remove unused MIDGARD_NO_AFBC quirk
  * 68a7fafe2a5 panfrost,panvk: Use dev->has_afbc instead of quirks
  * 3e168b97cc7 panfrost: Detect implementations support AFBC
  * ebe9494b61b turnip: Drop the assertion about the temporary bit in
    sync fd imports.
  * 8ccf672fa3c gallium/u_blitter: Read MSAA z/s from sampler's .x
    instead of .y or .z.
  * 785dd68599e iris: also dump bo's imported and exported flags
  * 520300ad220 st/mesa: don't crash when draw indirect buffer has no
    storage

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 25 Oct 2021 08:57:35 +0200

mesa (22.0.0~git2110221325.2822b1345cf~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 2822b1345cf tu: Expose required VK_FORMAT_FEATURE bits for planar
    YUV formats
  * 330a8cfa07b turnip: enable UBWC for NV12
  * 9c895e133bf tu: Emit GRAS_LRZ_MRT_BUF_INFO_0
  * c135c2cdb7f freedreno/a6xx: Rename GRAS_2D_BLIT_INFO
  * 8ea6f17fdf9 freedreno/layout: Fix the UBWC block size for the Y
    plane
  * e0a74c7cad5 util/format: Add PIPE_FORMAT_Y8_UNORM as an "other"
    layout format
  * ceaf56920c5 v3dv: refactor TFU jobs
  * 1465ec8cf35 iris: clear bos_written when resetting a batch
  * b6a69dbb40d radv: re-emit prolog inputs when the nontrivial divisors
    state changed
  * 8ec68243357 radv,aco: decouple shader_info/options from
    radv_shader_args
  * 1429feaf293 crocus: Replace devinfo->ver[x10] checks with
    GFX_VER[x10]
  * 1561d0126a5 broadcom/compiler: fix assert that current instruction
    must be in current block
  * e79e1ca304f intel: Drop Tigerlake revision 0 workarounds
  * 6ef192bddf1 mesa: discard draws with count=0 to decrease overhead
  * 7daff157bb3 iris: Refactor the assignment to possible_usages
  * 114f87c1c70 iris: Set DISABLE_AUX_BIT for AUX_USAGE_NONE modifiers
  * b9d8793646d iris: Disable the MC_CCS modifier with norbc
  * b71264e4656 iris: Convert some mod_info checks to asserts
  * 138be96301b freedreno/ir3: Fix validation of subgroup macros
  * e68d918ffb7 freedreno/ir3: Get req_local_mem from pipe_compute_state
  * f58438320cf freedreno/ir3: Add ihadd/uhadd
  * f5ce806ed73 freedreno/ir3: Add wide load/store lowering
  * 7a7ac8cd409 freedreno/ir3: Fix reg size validation
  * 8a6934dfe8c freedreno/ir3: Fix load/store_global_ir3 type
  * 81eefe0090b freedreno/ir3: 8bit fixes
  * f7b2d613c58 freedreno/ir3: 16b bools
  * 9a2562a545b freedreno/ir3: Deal with zero-source instructions
  * b6e11225a28 freedreno: Fix set_global_binding
  * 0a35ba5c438 freedreno/ir3: Move lower_idiv_options
  * e544a9db16e freedreno/ir3: Add support for load_kernel_input

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 22 Oct 2021 15:25:44 +0200

mesa (22.0.0~git2110211826.272af39be17~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 272af39be17 amd/addrlib: cosmetic addrlib update
  * 69a1b02b688 amd/addrlib: change how the license is formatted to
    match internal tree

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 21 Oct 2021 19:11:33 +0200

mesa (22.0.0~git2110211812.cf0bc4fb55f~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cf0bc4fb55f frontends/va/av1: handle multiple slice params
  * 996e81fb704 aco: fix loading 64-bit inputs with fragment shaders
  * 75bd37dc6a3 broadcom/compiler: disallow tsy barrier in thrsw delay
    slots
  * 9202e8cbafc turnip: Make copy_format() and tu6_plane_format() return
    pipe_format
  * 68f8bbb37ea util: Move freedreno's snorm-to-unorm to util/, adding
    remaining cases.
  * cbdc8e09bf7 turnip: Switch format_to_ifmt() to take a pipe_format.
  * e4e8db01327 turnip: Switch tu6_format_color() to a pipe_format.
  * 3b68fc0c6a6 turnip: Switch tu6_format_texture() to a pipe_format.
  * cfabdbd7d3f tu/clear_blit: Move around
    copy_format()/tu6_plane_format()
  * acb83e1b13d v3dv: enable Vulkan 1.1
  * bd81a236205 ci/piglit-runner: Fix funny indentation of the piglit-
    runner command.
  * 440f207a1f2 ci/deqp-runner: Move more non-suite logic under the non-
    suite 'if'.
  * 92748e40ef0 ci/deqp-runner: Don't start GPU hang detection for
    making junit results.
  * 61ca900b695 ci/deqp-runner: Drop LD_LIBRARY_PATH=/usr/local for
    libkms workaround.
  * 899174c210b ci/deqp-runner: Move remaining asan runs to --env
    LD_PRELOAD=
  * 37c690ad1ae ci/deqp-runner: Drop silly CSV env vars.
  * b978688df64 ci/deqp-runner: Use new deqp-runner's built-in
    renderer/version checks.
  * 9ddfd297e08 ci/deqp-runner: Simplify the --jobs argument setup.
  * 59f3a8e6b4b ci/deqp-runner: Drop SUMMARY_LIMIT env var.
  * 670fd8123be radv: Fix memory leak on error path.
  * b797ecac7a4 ac/rgp: remove useless code related to GFX6-7
  * 8304392c352 radv: add an assertion to prevent GPU hangs when VRS
    isn't supported
  * 9a32a7fdfee util: Move test sources to tests/ directory
  * abf2af64aca util: Convert sparse array multithread test to use gtest
  * 213c9e944c4 util: Convert roundeven_test to use gtest
  * 83449f61ba3 util: Convert rb_tree_test to gtest
  * 0d36ea7d585 util: Convert mesa-sha1_test to use gtest
  * 89eebca0572 util: Convert blob_test to use gtest
  * d4c536d3d9e util: Convert u_atomic_test to use gtest
  * 1d78a31bec9 util: Move tests in single file directories to tests/

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 21 Oct 2021 18:27:41 +0200

mesa (22.0.0~git2110201751.39f25945311~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 39f25945311 anv: Implement VK_EXT_global_priority_query
  * e7599f09a14 ir3: Use stp/ldp base offset for {load,store}_scratch
  * 7deb0d296d8 ir3/cse: Support mov instructions
  * cd3f0683cd2 aco: simplify emit_stream_output()
  * d50be41f8f6 broadcom/compiler: remove unused macro and function
    definition
  * 9bc0fc89c89 aco: disable mul(cndmask(0, 1, b), a) optimization
    sometimes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 20 Oct 2021 18:23:03 +0200

mesa (22.0.0~git2110192143.86b3d8c66ce~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 86b3d8c66ce zink: rescue surfaces/bufferviews for cache hits during
    deletion
  * 80d5e40fd13 freedreno/afuc: Disable the disassembler on 32-bit
    builds.
  * 5afce85f2b6 Revert "iris: add tile cache flush to iris_copy_region"
  * 0523607ebb1 iris: Add missed tile flush flag
  * 8633ce06af4 zink: stop leaking descriptor pool references
  * 7fb8e0b9fb4 zink: don't clear descriptor pool cache on context
    destroy
  * 6a852e4e069 zink: always invalidate descriptor sets on pool free
  * 94fc6b08751 zink: unref descriptor pools in hybrid mode when they
    explode
  * d0652944342 zink: remove descriptor pools from hash table on
    deletion
  * 6d937298818 zink: fix descriptor interface param for program_deinit
  * 7a9e0e4fc02 zink: use ctx params for program ref/destroy functions
  * d29e507adcd radeonsi: don't set inline_uniforms for viewperf because
    it's enabled by default
  * c5f39acb33e winsys/amdgpu: set max_ib_size and max_check_space_size
    later in cs_check_space
  * 6129db68bf8 winsys/amdgpu: remove force_chaining parameter from
    cs_check_space
  * 9d852a46952 radeonsi: properly destroy buffers on failure
  * 0d2dc06761f radeonsi: don't sync before clear_buffer and copy_buffer
    if the buffer is idle
  * d4cf4b3cee9 radeonsi: don't update bind_history for internal buffer
    clears and copies
  * 61ebdcfc299 radeonsi: don't sync PS or CS before (clear|copy)_buffer
    based on bind history
  * 4bc8c2590e5 radeonsi: rebind a buffer only in shader stages where
    it's been bound
  * 13b1424e96f radeonsi: change bind_history to track usage in each
    shader stage
  * 9f2a97e9df7 radeonsi: add an option to use CPU storage uploads for
    threaded context
  * 745ea994846 radeonsi: add SI_MAX_VRAM_MAP_SIZE definition
  * 03186773a6b mesa: fix crashes in the no_error path of glUniform
  * 5948ff48268 freedreno/computerator: Fix mergedregs
  * 22a203aa4c7 freedreno/isa: Fix ldg/stg "halfness"
  * 834e8066c19 freedreno/ir3/tests: Add some 8/16b ldg/stg tests
  * 8657e201d00 freedreno/ir3/tests: Don't skip encode test if decode
    fails
  * 572a9025664 aco: fix emitting stream outputs when the first
    component isn't zero
  * e3cbb0eb6a7 aco: fix invalid IR generated for b2f64 when the dest is
    a VGPR
  * 3df9d8ed807 gallium/u_threaded: implement pipelined partial buffer
    uploads using CPU storage

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 19 Oct 2021 22:42:24 +0200

mesa (22.0.0~git2110172230.17a565e0cfb~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 17a565e0cfb llvmpipe: fix userptr for texture resources.
  * d31ca63527e panfrost: Don't allow rendering/texturing 48-bit
  * 28d12716e8f egl/wayland: Properly clear stale buffers on resize
  * 885f9b3b754 radeonsi: don't memcmp inlined uniform values if uniform
    inlining is disabled
  * 8c5a32b5fe2 radeonsi: split si_shader_key into ps and ge parts to
    minimize memcmp overhead
  * 385c9e1cafb radeonsi: si_state_shaders.c -> cpp
  * 8a42ea69a69 gallium/util: add some extern "C" guards
  * b62b2fa4b9c compiler/types: Add a wrap_in_arrays helper
  * 5818d47ae66 spirv: Use texture types for sampled images
  * 99cda38c816 clover/nir: Don't remove texture variables
  * 3c398139e10 lavapipe: Allow for texture types
  * b8a0bf2343d nir/deref: Also optimize samplerND -> textureND casts
  * 2ab5546a967 nir: Allow texture types
  * 3ace6b968b3 compiler/types: Add a texture type
  * 7558c9cb07e compiler/types: Unify the guts of
    get_sampler/image_count
  * 175f33e88fb compiler/types: Combine image and sampler type
    serialization
  * 2d58e31f10e dri_interface: remove gl header
  * e19d9046dbd dri_interface: remove obsolete interfaces
  * d343aef9423 nir/serialize: Pack deref modes better
  * 9272a952c9b nir: Re-arrange the variable modes
  * 956199e8708 nir: s/nir_var_mem_image/nir_var_image/g
  * e73096bd6d4 meson: use gtest protocol for gtest based tests when
    possible
  * aac47c4b24a microsoft/compiler: Shadow tex instructions always use
    shadow samplers
  * fe2674dd52d aux/pb: more correctly check number of reclaims
  * 58f605e4d48 nir: Drop our attempt at typed-based image mode
    validation
  * d05f7b4a2ca intel: fix INTEL_DEBUG environment variable on 32-bit
    systems
  * 182237e1e89 virgl: remove unused pipebuffer include
  * 3d6c8829f54 aux/pb: add a tolerance for reclaim failure
  * 29177c7ceee intel/compiler: Build all tests in a single binary
  * 35b69907061 intel/compiler: Rename vec4 test fixtures

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 17 Oct 2021 23:41:23 +0200

mesa (22.0.0~git2110140052.c4323dc846d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * c4323dc846d brw/nir: remove unused function prototypes.
  * a98ece61e91 anv: Enable tessellation redistribution
  * 20c0ca75f55 iris: Enable tessellation redistribution
  * 867e2e0716e anv: Enable geometry distribution
  * efa27572a15 iris: Enable geometry distribution
  * 1d224e7f14e genxml/gen125: Update 3DSTATE_TE fields
  * 9a7e54b87f3 intel/genxml: Update genxml to support
    tessellation/geometry distribution
  * 3eadb03db77 ci/lvp: Skip some slow tests under ASan.
  * ec51c8774d0 v3d/clif: add support for dumping GS shader state
  * 19894bec1fd v3dv/pipeline: don't clone the nir shader at
    pipeline_state_create_binning
  * c7c484d7f4a VERSION: bump to 22.0
  * 7d9950e924f docs: reset new_features.txt
  * 91009cbaa84 VERSION: bump to 21.4
  * 02435f1294d iris: Require a 4K alignment for extra clear color BOs.
  * 94e07058ee5 intel/compiler: Remove unused `ret` declaration
  * bd2cc4b9162 intel/compiler: Convert test_eu_compact to use gtest
  * 420e33f5510 radv: move alpha_adjust into conditional during vertex
    input updating
  * 1b8bdecf6e0 radv: add a mask of bound descriptor buffers for dynamic
    vertex input
  * eda5634e257 radv: pre-calc "simple" dynamic vertex input values
  * c335a4d70ed radv: dynamically calculate misaligned_mask for dynamic
    vertex input
  * 90d9c8dc621 radv: don't use invalid stride for triggering vertex
    state change
  * 27054f737a2 egl/dri: Enable FP16 for EGL_EXT_platform_device
  * ea038747df0 dri: Remove the allow_fp16_configs option, always allow
    them
  * b01fe97a39c wsi/x11: Fetch and discard the SYNC extension info
  * ebfbb42e0e5 clover: TargetRegistry.h was moved to another folder
  * cdc009f5aaa Revert "ci: Add osmesa to Windows GitLab CI"
  * 9fb2c84768c isl: only bump the min row pitch for display when not
    specified
  * 47ff6767eae anv: fill correct surface state for lowered storage
    image
  * fd8210f27ed radv: Try to do a better job of dealing with L2 coherent
    images.
  * 64b237436a2 radv: Add hooks after in-renderpass meta operations.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 14 Oct 2021 01:27:41 +0200

mesa (21.3.0~git2110122250.d071a241f43~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * d071a241f43 ci/freedreno: Disable the minetest trace due to flaky
    shader code.
  * d7e836443a5 iris: Tile cache flush for depth before fast clear
  * 10be870c727 anv: Tile cache flush for depth before fast clear
  * 81e9c25c1bf anv: Allow HIZ_CCS_WT with subpass self-dependencies
  * 42185966714 ir3/freedreno: handle non-uniform a1en instructions
  * f0d469e85fe ir3/freedreno: handle non-uniform resinfo
  * ca6ef505ff9 aco/optimizer: Skip SDWA on v_lshlrev when unnecessary
    in apply_extract.
  * 5de91cfc04b ac/nir/nggc: Write undef to variables in non-repacked ES
    threads.
  * 783f8f728ce ac/nir/cull: Accept NaN and +/- Inf in face culling.
  * 33065149c14 amd/common: Add fallback for misreported clocks for RGP.
  * f8e9a503224 ir3: Fold ldc src immediates
  * 470bf75ff86 ir3: Fix handling cat6 immediates
  * bf3c8e37051 ir3: Fix check for immediate range
  * 6dc56f18bcf ir3/legalize: handle WAR for special regs
  * 1ed9a2f50cc ir3: Handle special regs in regmask
  * a37f9602b7a ir3: Remove separate regmask.h
  * 548377bcf3b ir3: Always create barycentrics in the input block
  * 38a84723f16 ir3: Make ir3_create_collect() take a block
  * 8fb99b58dfb ir3: Fix printing branch type
  * b516208a559 nir/lower_ubo_vec4: Fix align_mul=8 special case
  * 751f425c378 ir3/cp: Fix inlining 32->16 const into meta instructions
  * ab0a665615a ir3/cp: Add missing const promotion check
  * 1d9bd8b2623 radv: Do early and late tests for fast clears
  * 49c3a88fadd radv: implement VK_KHR_format_feature_flags2
  * 5dee0d9da96 radv: switch to
    VK_FORMAT_FEATURE_2_XXX/VkFormatProperties3KHR
  * cd4a52b52c6 radv: remove duplicated code about NGG passthrough
    determination
  * 6bfe65d1dc1 radv: do not initialize is_ngg_passthrough for geometry
    shaders
  * b3269444fd6 aco: cleanup setup_vs_output_info()
  * 849832bc892 radv: stop gathering output GS info for vertex shaders
  * 595b16013a2 radv: rename needs_multiview_view_index to
    uses_view_index

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 12 Oct 2021 23:50:06 +0200

mesa (21.3.0~git2110042145.53917ab4036~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 53917ab4036 zink: Disable TC syncs for get_device_reset_status()
  * 5b7c81fd132 freedreno: Disable TC syncs for
    get_device_reset_status()
  * 75808934f8c gallium/u_threaded: Get reset status without sync
  * 1a20cfb7d6a anv: Identify code paths specific to graphics primitive
    pipeline
  * a63aa9ad41b anv: Move together primitive pipeline emit calls
  * 1f1ad5a9b43 anv: Use input assembly state only when pipeline has
    vertex stage
  * d79c518a32b anv: Set graphics pipeline active_stages earlier
  * bc2545fc57a anv: Validate vertex related states only when VS is
    present
  * 82c69c9a9dc compiler/clc: Preserve OCL kernel arg type metadata on
    LLVM13
  * 3a752256f54 compiler/clc: Null extensions should mean all supported,
    not all
  * b8cafaa91df lima: use nir_shader_instructions_pass in
    lima_nir_split_load_input
  * aa30e586003 wsi/x11: Fix a misunderstanding about how
    xcb_get_geometry works
  * ac783acd747 freedreno: Handle PIPE_FORMAT_NONE buffers
  * 9e74f458a8a freedreno: Handle cso==NULL in bind_sampler_states
  * 96b37b9546f freedreno/ir3: Remove used unused
  * 748583d8088 freedreno: Fix some indentation
  * 6223f29a87e freedreno: Optimize no-op submits
  * 383df599871 freedreno: Get shader variant msgs in perf debug output
  * ad60fffd49d pan/mdg: Use the correct swizzle for condition moves
  * d34c1dc93d7 panvk: Support clearing ZS attachments
  * c3ebd8ddaca panvk: Allow clear_attachment of RTs > 0
  * 555e6626c2a panvk: Pass the render target index to
    panvk_meta_clear_attachment()
  * 3ba34f66336 panvk: Fix wls_size retrieval
  * 4692baacfb3 panvk: Don't use panfrost_get_default_swizzle() on v7+
  * 8acc8f6a0e1 panvk: Fix allocation of BOs bigger than the slab size
  * 4e58d30d981 radv: Add force_emulate_rt perftest option
  * 26826a7d607 radv: Enable raytracing extensions on older generations
  * 548382de42f radv: Implement software emulation for intersect_ray
  * a0f51921a64 radv: Implement build_node_to_addr for GFX8 and below
  * ff087dd6011 radv: Do not pass result to insert_traversal_aabb_case

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 04 Oct 2021 22:26:33 +0200

mesa (21.3.0~git2109291600.5c35040da17~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5c35040da17 aco: Don't write m0 register for LDS instructions on
    GFX9+.
  * 3e2a8178bf2 mesa: validate texture format against GL/ES ctx
  * e0efc1eafee radv: remove radv_shader_variant_key completely
  * ac774b73fee radv: stop using vs_common_out.{as_es/as_ls/as_ngg*}
    shader keys
  * 9aaf51639a2 radv: use the pipeline key more when possible
  * 1eb428fa9fd radv: pass the pipeline key to the shader info pass
  * 0753615d101 radv: remove vs_common_out:export_clip_dists
  * d17e7528573 radeonsi: disable PIPE_CAP_PREFER_BACK_BUFFER_REUSE
  * 09dc0fb2eed loader/dri3: avoid reusing the same back buffer with
    DRI_PRIME
  * e67083caf4e gallium: add PIPE_CAP_PREFER_BACK_BUFFER_REUSE
  * d89ba3f2a9a virgl: Set GL_QUADS_FOLLOW_PROVOKING_VERTEX_CONVENTION
    to 1
  * 77d2bdb0a27 pps: Avoid duplicate elements in with_datasources array.
  * fd71ccf4d7e ci: Uprev deqp-runner to 0.9.0
  * 049c3663782 radeonsi: don't set DX10_DIAMOND_TEST_ENA for better
    performance
  * 1898ee54931 v3d/v3dv: add unlikely for any V3D_DEBUG check
  * 0e5601e6f3e broadcom/common: remove unused debug helper
  * 6db14344806 lavapipe: fixup image binding flags.
  * 3010c860944 lavapipe: cleanup image create function.
  * 0793b259b09 panvk: Switch to common GetDeviceQueue and
    DeviceWaitIdle
  * 06ac3b1bea8 lavapipe: Switch to common GetDeviceQueue and
    DeviceWaitIdle
  * f3040c6e057 lavapipe: Simplify DeviceWaitIdle
  * 01622bee5eb v3dv: Use the common GetDeviceQueue implementation
  * c6210d5aa9a turnip: Switch to common GetDeviceQueues2 and
    DeviceWaitIdle
  * 7416c6f0a4a radv: Switch to common GetDeviceQueues2 and
    DeviceWaitIdle
  * cc9f34cdd69 anv: Switch to common GetDeviceQueues2 and
    DeviceWaitIdle
  * 0e4266260ae vulkan/device: Add a common DeviceWaitIdle
    implementation
  * 3b535d28d2f vulkan/device: Add a common GetDeviceQueue2
    implementation
  * 0d80799ccd6 panvk: Drop panvk_queue::flags/queue_family_index
  * 713af72048c v3dv: Drop v3dv_queue::flags
  * 8619c6df62a turnip: Drop
    tu_queue::flags/queue_family_index/queue_idx

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 29 Sep 2021 17:23:28 +0200

mesa (21.3.0~git2109222237.978a5ec5d28~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 978a5ec5d28 turnip: Move to common DEFINE_HANDLE_CASTS casting macro
  * 1a33dca3aeb virgl: Add an option to disable coherent
  * c1e2dfb3655 venus: amend supported extensions list
  * 363ffdaf796 zink: don't use legacy scanout with modifiers
  * 30a9bbe8f64 ci/vc4,i915g: Add links to VK-GL-CTS issues for some of
    our xfails.
  * e470d9fae5d mesa: Fix missing CopyTexImage formats for
    OES_required_internalformat.
  * 705b62d559a docs: update vn extension list
  * 400da4900e2 zink: fix ci skips
  * 0c2f7a16bf7 pan/mdg: Remove use of global variables in disassembler
  * d47a8789f90 pan/decode: Fix DCD size in Pre frame decoding
  * d4174f5f052 iris: Disable I915_FORMAT_MOD_Y_TILED_GEN12* on adl-
    p/display 13
  * c746bf4c5c8 intel/dev: Add display_ver and set adl-p to 13
  * 039ed2de94d zink: always use type size for query result copy stride
  * 13384b96262 mesa: Prioritize checking for GLES2's uniform transpose
    error.
  * 5a39938b000 mesa: Throw an error for compressed glGenerateMipmap on
    GLES2 contexts.
  * 8a3e94c6192 turnip: Move physical device 1.2 properties to a helper
    function.
  * c0c5c0d5579 tu: Support
    VK_STRUCTURE_TYPE_PHYSICAL_DEVICE_PROTECTED_MEMORY_PROPERTIES.
  * fa5cc38f5b1 tu: Move VK 1.1 core properties to a helper function and
    use macros for exts.
  * 24a539e94c7 tu: Add GetPhysicalDeviceFeatures2() support for more VK
    1.2 core features.
  * ab5e77d8547 tu: Deduplicate extension/core feature flags.
  * 14eb5ca3cd9 tu: Move core features definitions to a helper function.
  * 895cfca6413 spirv: Identify non-temporal memory access
  * 47f7b262e1d anv: Refactor subgroup_size_type rules into a single
    function
  * 9add809e7fb anv: Simplify subgroup_size_type rules for compute
    shaders
  * ca0f892191b compiler/isaspec: add alignment support
  * eae96d0c4c4 compiler/isaspec: keep track of written data
  * f0104a6c723 compiler/isaspec: add print(..) helper
  * bc2e806b0f1 freedreno/isa: move isaspec to a new home
  * 6801c300a8e freedreno/isa: add shbang and make executable
  * b63becc4302 freedreno/isa: update documentation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 23 Sep 2021 08:23:34 +0200

mesa (21.3.0~git2109201321.8805509fff8~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 8805509fff8 panfrost: RGB332_UNORM is not a valid texture format on
    v6+
  * b1172540f34 panfrost: Drop the R and T flags on SCALED formats
  * bab84c62d5a panfrost: RGB10_A2_SNORM is not a valid texture format
    on v6+
  * 8651dfbeb48 panfrost: Fix the Z32_S8X24 and X32_S8X24 definitions
  * eed57ada6e0 panfrost: Patch Z32_S8X24 format when creating a sampler
    view
  * 75dbb404393 ac/nir: Remove byte permute from prefix sum of the
    repack sequence.
  * 966cff9cfa4 aco/isel: Fix emit_vop2_instruction to apply 16/24-bit
    flags properly.
  * f2e41eda9ee aco: Add ability to optimize v_lshl + v_sub into
    v_mad_i32_i24.
  * 1a6c01a61b1 mesa: fix timestamp enum with EXT_disjoint_timer_query
  * 90c6eec0c1b bin/khronos-update.py: add upstream for
    vulkan_directfb.h & vulkan_screen.h
  * 8e0b0ce3eb3 bin/khronos-update.py: update the branch name
    (s/master/main/)
  * 6f9f350622b radeonsi: fix ps SI_PARAM_LINE_STIPPLE_TEX arg
  * 2a0a9b189a1 freedreno/computerator/a4xx: Fix enum mismatch warning
  * b308ccf4fb9 freedreno/ir3: Fix generation check
  * 24326f25b91 freedreno/ir3: Cleanup liveness lifetime
  * 344683c932f freedreno/ir3: Fix sched debug msgs
  * 0e15d5af81b fdno/resource: Rewrite layout selection for allocation
  * f8a37832df5 lima: fix leak of the screen hash table
  * e7e762635dc docs/panfrost: Remove obsolete note on Android.mk
  * 6b5e9352ef7 aco: cleanup assignment of unique_ptrs
  * 592aa9375c5 radv: Expose modifiers that support DCC image stores
    with STORAGE_IMAGE_BIT
  * 92ade3df054 ac/surface: Add ac_modifier_supports_dcc_image_stores
    helper
  * fd08758bb15 ac/surface: Add modifiers capable of DCC image stores
  * 897bb9a2225 iris: Add finalize_nir
  * b042c71ac12 iris: Move iris_set_max_shader_compiler_threads and
    iris_is_parallel_shader_compilation_finished
  * aaf2e6a9f5f iris: Eliminate iris_uncompiled_shader::needs_edge_flag
  * d7ba52cce9e nir/edgeflags: Add a flag to indicate the edge flag
    input is needed
  * 3281ccf4b14 iris: Calculate uses_atomic_load_store after all
    lowering
  * e33055874b7 iris: crocus: Use shader_info::is_arb_asm flag
  * bf74d58f219 freedreno/a6xx: Pre-bake SO-disable stateobj

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 20 Sep 2021 13:44:47 +0200

mesa (21.3.0~git2109141953.aed4c0b5a9b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * aed4c0b5a9b nir: Drop the unused instr arg for src/dest copy
    functions.
  * 879a569884b nir: Switch from ralloc to malloc for NIR instructions.
  * feee5e69740 nir/tests: Fix transmuting an SSA dest to be non-SSA
  * 1edff520e2e nir/lower_phis_to_scalar: Use nir_instr_free() to free
    instrs.
  * d1a2870f782 nir: Add all allocated instructions to a GC list.
  * 22788d68eb6 nir: Consistently pass the instr to nir_src_copy().
  * 5e37cfb7fe3 nir: Consistently pass the shader to the shader arg of
    instr creation.
  * 7a4bbe60c12 nir/from_ssa: Use nir_instr_free() to free instrs
    instead of ralloc.
  * b99efb8af06 nir: Pull the instr list free function out to a helper.
  * 36d9bdca0b1 nir: Add a nir_instr_free() to replace
    ralloc_free(instr).
  * 7956a701d83 nir/lower_gs_intrinsics: Make nir_lower_gs_intrinsics be
    idempotent
  * edf357b2330 nir/lower_gs_intrinsics: Return progress if
    append_set_vertex_and_primitive_count makes progress
  * 7b4427b199f radeonsi: enable NGG passthrough when LDS is used,
    document the real constraints
  * 70c975fd136 radeonsi: fix incorrect comments about
    VGT_SHADER_STAGES_EN
  * 0b5c1537aa0 radeonsi: don't set edgeflags for TES and blit VS
  * b330c7cb2a3 radeonsi: use a trick to extract and pack edgeflags
    using fewer instructions
  * 2d8dfb91116 radeonsi: convert gfx10_emit_ge_pc_alloc to
    radeon_opt_set_uconfig_reg
  * edb5fa4d59d radeonsi: eliminate redundant SPI_SHADER_PGM_RSRC3/4_GS
    register writes
  * 3df035d08cc radeonsi: put si_pm4_state at the beginning of si_shader
  * 73c82570cbf radeonsi: move setting one GS shader key field out of
    si_shader_selector_key
  * 99c5e039862 radeonsi: move setting most TCS shader key fields out of
    si_shader_selector_key
  * fb04378e769 radeonsi: set prefer_mono outside of
    si_shader_selector_key
  * 5824ab569e1 radeonsi: precompute more spi_map code
  * dba914de85d radeonsi: unroll loops in si_emit_spi_map using 33 C++
    template instantiations
  * 3264372539a radeonsi: inline si_get_ps_input_cntl because it has
    only one use
  * 5f090891e94 radeonsi: simplify si_emit_spi_map for back-face colors
  * 57f9452b466 radeonsi: precompute num_interp for si_emit_spi_map
  * 46802f7b608 radeonsi: interleave si_shader_info::input_* in memory
    for faster emit_spi_map
  * 11d1309d827 radeonsi: restructure si_get_ps_input_cntl for future
    refactoring
  * b59bb9c07ae radeonsi: force flat for PrimID early in
    si_nir_scan_shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 14 Sep 2021 21:08:53 +0200

mesa (21.3.0~git2109090342.1fd3cf990eb~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 1fd3cf990eb mesa: fix glthread deadlock when EGL multi thread shared
    context
  * be4f5f1c926 mesa: add ValidateEGLImage driver callback
  * 41455326717 gallium/api: add validate_egl_image interface
  * d45d749e8b3 gallium/dri: add dri_screen egl image validate hooks
  * 27d91fec044 gbm/dri: implement image lookup extension version 2
  * dcf38724c74 egl/dri2: seperate EGLImage validate and lookup
  * 5d74c33aaaf docs: update calendar and link releases notes for 21.1.8
  * 996e50a60aa docs: add release notes for 21.1.8
  * 44b9e11ddbb gl.h: Remove dllimport
  * 5ab27ad01e3 aux/trace: dump more pipe_vertex_element members
  * b4cbc47b3c8 mesa/st: use uint for instance_divisor instead of int
  * e38c58c808f venus: raise the ring buffer size to 64KB
  * 79b8498c050 venus: update venus-protocol headers
  * c9eedba75dc venus: make ring buffer size configurable
  * eb88c8e1d45 venus: rework vn_instance_submission
  * 862244ccc6d venus: add and use VN_CS_ENCODER_INITIALIZER
  * 0641a230a0c venus: init experimental features before the ring
  * e5a005dd0c5 venus: support reply shmem without ring
  * 68eb682a238 venus: add vn_renderer_submit_simple_sync
  * 2996c707cfb venus: init roundtrip fields in vn_instance later
  * 3bba38ab71f venus: reorder version fields in vn_instance
  * 076c8f041a6 docs: Update Windows llvmpipe doc for driver split
  * f36921effec wgl: Refactor drivers to a libgallium_wgl.dll
  * e2bb111e02f wgl: Make overridden entrypoints local to
    stw_ext_context
  * 739fb1057d1 wgl: Move wgl* non-extension definitions to libgl-gdi
  * a153c78d6e8 wgl: Move opengl32.def to target instead of frontend
  * 675775b140e wgl: Don't use BUILD_GL32 for wgl frontend
  * 2a76c976d1c static-glapi: Fix MSVC preprocessor definitions
  * 03006926de1 wgl: Fix unit test when using shared glapi
  * 92f515ad6ed mapi: Fix shared-glapi build with MSVC

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 09 Sep 2021 08:57:09 +0200

mesa (21.3.0~git2108300959.1c9b0b853e6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 1c9b0b853e6 panvk/ci: Build-test panvk
  * 23ef0fb2776 radv: do not allocate a clear value for images that
    support comp-to-single
  * df688e6941b radv: do not load/store the clear value for comp-to-
    single images
  * 0c550a5fe69 radv: disable DCC image stores on Navi12-14 for
    displayable DCC corruption
  * a069b4e9b9a vulkan/wsi/sw: add mit-shm support for pixmap allocation
  * 1f55f9a97a5 vulkan/wsi/sw: add support for using host_ptr for shm
    pixmaps.
  * b5c390c113d vulkan/wsi: add support for detecting mit-shm pixmaps.
  * eacf50c27b7 freedreno/ci: Take fd farm offline for moving day
  * 8f784c8fed4 freedreno/ci: Add a status variable for CI farm
  * b34f9740cac spirv: Implement non-Multiview parts of
    SPV_NV_mesh_shader
  * 10a03e30cf7 nir: Allow Task/Mesh to lower compute system values
  * 4f52681a2dd nir: Don't lower Task/Mesh I/O to temporaries
  * 27697d5eb8d nir/divergence_analysis: Handle Task/Mesh shaders
  * bf5f6add01c nir/lower_io: Identify Mesh output as arrayed
  * 9631d24c3f6 compiler: Add Task/Mesh to shader_info
  * 813d41829da compiler: Add new non-Multiview Task/Mesh builtins
  * cd394017c85 nir: Add per-primitive I/O intrinsics
  * f95daad3a2c nir: Add a way to identify per-primitive variables
  * 927584fa67b nir: Update documentation for location to mention
    Task/Mesh
  * 3c3b75a2b7e isl/docs/tiling: Add Tile4 docs
  * cfb0d931f27 aco: Emit zero for the derivatives of uniforms.
  * 1454955e5d5 zink: only update inlinable constants when they change
  * 2eeaaabb8ec aco/optimizer: combine v_pk_mul_u16 + v_pk_add_u16 ->
    v_pk_mad_u16
  * be16ebc5caf aco/optimizer: fuse v_mul_f64 + v_add_f64 -> v_fma_f64
  * 8e27ca9953e aco/optimizer: combine v_mul_lo_u16 + v_add_u16 ->
    v_mad_u16
  * 23d5865f422 aco: refactor nir_op_imul selection
  * d8eef134d84 aco: only apply extract if not used more than 4 times

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 30 Aug 2021 15:27:07 +0200

mesa (21.3.0~git2108272138.b8c26e89fe8~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b8c26e89fe8 freedreno: ci updates
  * 9c6938dbfd4 freedreno: remove primconvert
  * 744ef862b8d freedreno: export supported primtypes
  * 80b5f4ff088 Fix building AMD MM/GL with EL7
  * 4b8f2b99e85 zink: avoid generating nonsensical code
  * a00fccce0c6 zink: reduce scope of version-struct hack
  * 2b82f2b78b1 zink: clean up const-value handling for get_ssbo_size
  * 3e22fc27af9 zink: remove incorrect ASSERTED macro
  * a3092bc7196 zink: remove needless scope
  * f417a4c1ba3 zink: give each major intrinsic it's own emit function
  * 55e8857a80e zink: avoid checking if src is const twice
  * 75b5f12407e zink: avoid memcmping null pointers
  * d3a795b5284 zink: remove needless NULL-check
  * 077a9c74789 zink: return false on failure
  * 40f704f2f30 zink: pctx can't be null here
  * 4cc3554d85b zink: do not dereference null-pointer
  * 3fde1c42422 zink: do not try to dereference null-key
  * e3239dff05c zink: avoid overflow when calculating size
  * c96afa9fc8d zink: initialize pQueueFamilyIndices
  * 64c558ab830 zink: do not warn about rare features until used
  * 28b3563a95a Revert "zink: always init bordercolor value for sampler"
  * bcd9db327d6 i965: Enable RGBX8888_SRGB format.
  * 589ccf3d777 aco: Consider maximum number of workgroups per CU/WGP on
    Navi.
  * c8698199a11 aco: Consider LDS usage by PS inputs in MaxWaves
    calculation.
  * 9bc61108d73 zink: remove extra program ref from cached descriptor
    updates
  * 5c3db42d1d3 zink: avoid pulling in unused push descriptors for
    cached ubo0
  * 9e314a68224 iris/ci: Correctly set freq governors to max
  * 1f1dc495319 freedreno/ci: Correctly set freq governors to max
  * 5a4fcb42f76 panvk: Fix panvk_copy_fb_desc()
  * d84dedc48f3 panvk: Make the per-arch static lib depend on
    panvk_entrypoints.h

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 27 Aug 2021 22:04:48 +0200

mesa (21.3.0~git2108250530.ad786430610~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * ad786430610 crocus: add missing fs dirty on reduced prim change.
  * 6b7a68b7c21 crocus: add missing line smooth bits.
  * 560dc4f7907 zink: fix pipeline caching
  * 712a4d2fd25 zink: fix program init flag
  * 4237aa3a7eb spirv_to_dxil: Run nir_lower_tex during compilation
  * 4c260f017c1 crocus: drop u_primconvert header.
  * ea18b0930bc zink: add better TODO note for surface swizzles
  * 6ff5eaa7d59 zink: make void swizzle clamping util public
  * 52032d5efae zink: make component mapping function a static inline
  * 08bad3b2b87 zink: move void format detection function to zink_format
  * e645e3c523a nine: replace unnecessary dynamic-sized array with
    bitfield
  * 16b49164327 panfrost: Take a ctx when submitting/destroying
  * fe956d0182a spirv: Add support for SPV_KHR_integer_dot_product
  * 652d304ee95 spirv: Update headers and metadata from latest Khronos
    commit
  * a6db40605e8 nir/algebraic: Add some extract optimizations
  * 839495efc67 nir/algebraic: Add lowering for dot_4x8 instructions
  * 0f809dbf404 intel/compiler: Basic support for DP4A instruction
  * 806cd2341c8 nir/algebraic: Basic patterns for dot_4x8
  * 6c18a3b497a nir/opcodes: Add integer dot-product opcodes
  * 7d8bf7c167d nir/lower_bit_size: Support add_sat and sub_sat
  * 8503cab2e00 panfrost: Replace writers pointer with hash table
  * afebbadda8d panfrost: Remove writer = NULL assignments
  * e7eb28fed0a panfrost: Remove rsrc->track.users
  * e98aa554130 panfrost: Prefer batch->resources to rsrc->users
  * 5c4fbae571f panfrost: Add foreach_batch iterator
  * 79dd1a4e634 panfrost: Maintain a bitmap of active batches
  * b8da5b1b7f4 panfrost: Cache number of users of a resource
  * 2f63ccd0803 panfrost: Switch resources from an array to a set
  * 8e2159a57fa zink: stop referencing framebuffers
  * 1af66186941 zink: defer deletion of no-attachment framebuffers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 25 Aug 2021 06:38:54 +0200

mesa (21.3.0~git2108192137.a6a449837b1~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a6a449837b1 anv: Set CONTEXT_PARAM_RECOVERABLE to false
  * 4a7714ab7ba aco/tests: add tests for post-RA DPP combining
  * 12be7c8feb5 aco/tests: add tests for pre-RA DPP combining
  * 4ac47ad1cd7 aco: combine DPP into VALU after RA
  * 2e6834d4f6c aco: combine DPP into VALU before RA
  * b97cfd72afc aco: handle DPP in the optimizer
  * 2e56e234209 aco: make optimize_postRA() work across blocks
  * 1d894a8c850 aco: move a bunch of helpers into aco_ir.h/aco_ir.cpp
  * 3db31963794 aco: add can_use_DPP() and convert_to_DPP()
  * a9562fd0d61 aco: fix validation of DPP v_cndmask_b32/v_addc_co_u32
  * 6494b084075 i915g: clang-format fixup.
  * c38cb5d4d8c i915g: Add comments explaining various xfails.
  * ab2645b54c7 i915g: Clear some xfails that are now skips.
  * e00a749759b i915g: Reduce ARB_fp max tex indirections to match
    i915c.
  * 8ebd0f8317c i915g: Correct PIPE_SHADER_CAP_MAX_TEMPS.
  * da3f20a3ab4 i915g: Fix polygon offset by telling draw the Z format.
  * 8e5e70bb3de frontends/va: add num_temporal_layers check
  * 4081516b3e4 radeon/vcn: set min value for num_temporal_layers
  * 59f2c85845c nir: return false for loops in contains_other_jump()
  * 8de086e12f5 v3d: implement resource_get_param
  * b1fbceac6f8 vc4: implement resource_get_param
  * 99fc6f7271c panfrost: implement resource_get_param
  * b5919b0b106 etnaviv: add stride, offset and modifier to
    resource_get_param
  * 63529782d33 gallium/nir/tgsi: initialize file_max for inputs
  * 46746980081 gallium/nir/tgsi: fixup indentation
  * bb4db22ff43 turnip: apply workaround for depth bounds test without
    depth test
  * 7faee1430a8 freedreno: rename Z_TEST_ENABLE->Z_READ_ENABLE, Z_ENABLE-
    >Z_TEST_ENABLE
  * d37aa08f611 draw: fix stippling of fractional lines
  * a3d400a0164 turnip: use nir_shader_instructions_pass in tu_lower_io
  * 8892d276d2d r600: preserve all metadata when passes don't make
    progress

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 19 Aug 2021 23:17:10 +0200

mesa (21.3.0~git2108162006.441e490f5a1~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 441e490f5a1 v3dv: initialize CL submission structure
  * 795f3b73185 ci: update trace hashes
  * cfc4433015d nir,glsl_to_nir: use nir_fdot()
  * f6f9000f84d spirv: create ffma more often
  * 28acc4120f7 nir: lower fdot to ffma if lower_ffma=false
  * 174a4f36f9c nir: create ffma from builders more often
  * ed70b256cea nir: add ffma creation helpers
  * 4ec4d862c2a nir/algebraic: add is_used_once to dot product
    reassociation optimization
  * f95a16be722 nir/algebraic: reassociate add chains for more MAD/FMA-
    friendly code
  * 110bcb49193 nir/algebraic: add various ffma optimizations
  * b0238191ca2 spirv: swap fadd operands in build_asin() and
    matrix_multiply()
  * 82d0600ba21 nir: swap fadd operands in nir_atan()
  * d42e53c77a2 panfrost: Unit test clear colour packing
  * 8dfbbee0546 panfrost: Mark R5G6B5 as blendable
  * 62e902101b1 panvk: Use pan_pack_color
  * b9c095cc2c6 panfrost: Rewrite the clear colour packing code
  * 0624346a206 panfrost: Only allow colour blit shaders to be killed
  * 76377de99bf panfrost: Fix leak of render node fd
  * dab97fe2277 panfrost: Add nocache debug flag for disabling the BO
    cache
  * e8b97dcdb24 panfrost: Fill tiler job padding again
  * 191824ec8e4 pan/mdg: Reduce size of tex_opcode_props
  * 10a344a857a panfrost: Free NIR when deleting shader state
  * d349448717d panfrost: Free TGSI tokens
  * 98165aa9f2f panfrost: Fix memory leaks for compute state
  * a9ab168e16e pan/bi,pan/mdg: Fix memory leak of hash tables
  * b85ff566960 panfrost: Call primconvert and u_transfer_helper destroy
    functions
  * f378799d9dd CI: Update Windows quick_gl baseline for mysterious new
    passes
  * 1564ff72a01 tu: Fix xfb when there is a hole at the end
  * 86196eff98a AOSP: Add panfrost vulkan library suffix
  * 21de785562b AOSP: Update timestamps of target binaries

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 16 Aug 2021 20:50:53 +0200

mesa (21.3.0~git2108112316.89c22ef230b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 89c22ef230b docs: update calendar and link releases notes for 21.1.7
  * d6cfc971566 docs: add release notes for 21.1.7
  * 8a81d14271a intel/vec4: sel.cond writes the flags on Gfx4 and Gfx5
  * 38807ceeaeb intel/fs: sel.cond writes the flags on Gfx4 and Gfx5
  * 593ad9294be crocus: align staging resource pitch on gen4/5 to allow
    BLT usage.
  * 58e95f99bd5 crocus/blt: add pitch/offset checks to fix blt
    corruption
  * cb2e712b9e4 pan/bi: Unit test DISCARD+FCMP fusing
  * d74ab1e4d9c pan/bi: Fuse DISCARD with conditions
  * 4f347e96b82 pan/bi: Add fclamp unit tests
  * ac636f5adb5 pan/bi: Use FCLAMP pseudo op for clamp prop
  * a98790fa963 pan/bi: Add optimizer unit tests
  * 89e452883a5 pan/bi: Use FABSNEG pseudo ops for modifier prop
  * b2b0dca4ce1 pan/bi: Add shader equality helper for unit tests
  * f3d8ec14842 pan/bi: Fuse abs/neg more on Valhall
  * c27af4ad36a pan/bi: Simplify bi_compose_clamp
  * cfd73b4542d pan/bi: Unit test new constant folding patterns
  * ec76119dfb9 pan/bi: Constant fold texturing lowerings
  * 6fa14794792 pan/va: Document IEEE 754 conformance of clamps
  * cdfb5d37883 panfrost: Test src*dst + dst*src blending
  * 0228ccf8579 panfrost: Leverage Bifrost's 2*src blend factor
  * 95e306dc84c panfrost: Add basic fixed-function blending tests
  * 95187c03f1f panfrost: Simplify blend_factor_constant_mask
  * 01a1b253b43 panfrost: Fix is_opaque when blend_enable=false
  * b7af56f2ad1 panfrost: Add blend helper packing the equation
  * 7eb2559198d panfrost: Use _PU for non-dithered formats
  * 07607c84432 panfrost: Remove unused #defines
  * 3ec5e2b6a70 panfrost: Add LINEAR debug option
  * 3958f00215c pan/bi: Add a noopt debug option
  * ff03f096bfa pan/bi: Make bi_opt_push_ubo optional
  * 01b0935d315 nir/lower_shader_calls: remove empty phis

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 12 Aug 2021 00:29:44 +0200

mesa (21.3.0~git2108081606.3cafe333e99~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 3cafe333e99 frontends/va/postproc: Keep track of deinterlacing
    method being used
  * 5dace8e0fb9 gallium/util: add half texel offset param to
    util_compute_blit
  * 675508dd81d gallium/auxiliary/vl: Add additional deinterlace enum
    and tracking
  * 30a359d633f util/fossilize_db: Add extra flock mutex.
  * 75266ee44a0 util/fossilize_db: Unlock the cache file if the entry
    already exists.
  * 1c4dce1aa75 util/fossilize_db: Use uint64_t for file size.
  * d2d642cc014 util/fossilize_db: Only allocate entries after full
    read.
  * 96bfefe8d12 util/fossilize_db: Be conservative about header length
    check for locking.
  * 3091277052c util/fossilize_db: Flush files after header write.
  * 57ca07455ce util/fossilize_db: Reset file position to parsed_offset
    on cache_offset read failure.
  * 3c51a3aa954 util/fossilize_db: Update parsed_offset correctly.
  * 87efa1ee225 spirv_to_dxil: Fix missing-prototypes build error.
  * e5311eae0c6 ci/freedreno: Add jobs to manually do a full VK on
    freedreno.
  * 2af172e8264 ci/freedreno: Skip the slow dEQP-
    VK.ubo.random.all_shared_buffer.48 in CI.
  * 71b38ef0362 ci/freedreno: Clean up and fill out the tess timeout
    annotations.
  * 9c3b72e1b51 ci/freedreno: Generalize the spirv_ids_abuse skips.
  * fd291175516 ci/freedreno: Organize, fill out, and document our VK
    xfails.
  * da000ea2efc venus: free queues after vkDestroyDevice is emitted
  * 4e28dfe58e8 freedreno: Device matching based on chip_id
  * a1c4f11f4c1 freedreno: Make chip_id 64b
  * 7806843866a freedreno/all: Introduce fd_dev_id
  * 7ba6100c2ae freedreno/ir3/lower_io_offsets: Drop gpu_id param
  * cc72eeb0776 freedreno/ir3: Reduce use of compiler->gpu_id
  * f92877b7b8e freedreno: Reduce use of screen->gpu_id
  * f100acd0c5e freedreno: Drop device_id
  * 7a11cc42e7f freedreno: Move generated device table to .h
  * 2f665e52e1a nine: enable tc
  * 740752d2327 nine: track bound sampler count to optimize unbinds
  * 7a170230f1c nine: update bound sampler mask directly during texture
    updates
  * 9205a45da50 nine: split enabled/dummy texture binds into separate
    iterators

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 08 Aug 2021 21:07:08 +0200

mesa (21.3.0~git2108031605.10541d1fade~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 10541d1fade gallium/hud: initialize query
  * ad83c06a5f8 radv: fix missing cache flushes when clearing HTILE
    levels on GFX10+
  * ebea075feb8 radv: fix selecting the first active CU when profiling
    with SQTT
  * f395057a828 gallivm: remove pointless no_filter_hacks flag
  * 4f56ded3626 ci: Stop disabling filter hacks for llvmpipe.
  * 34423391e02 gallivm: make rho-approximation opt-in instead of opt-
    out
  * 6538b3e5661 nir: add heuristic for instructions in loops with GCM
  * a7f2e683ded nir: move nir_block_ends_in_break() to nir.h
  * a9ed4538abf nir: add indirect loop unrolling to compiler options
  * a654e39f155 intel/compiler: make sure swizzle is applied to if
    condition
  * 4f7043fc0ce v3d/simulator: implement performance counters
  * 685281278eb v3d: implement performance counter queries
  * e928aece508 v3d: add fence wait function
  * c59d8a17983 v3d: move queries to pipe queries
  * 99697035472 v3d: attach performance monitor to jobs
  * 6b9fcb01930 v3d: check if device supports performance monitors
  * ca13868098e drm-uapi: add v3d performance counters
  * a49b3970412 ac/surface: implement CmaskAddrFromCoord in NIR
  * eedc0b59b71 ac/surface: copy the CMASK equation to radeon_surf
  * 1f12c3ccc1d ac/surface: store CMASK pitch and height to radeon_surf
  * 132b2055662 ac/surface: add tests for CmaskAddrFromCoord prototype
    outside of addrlib
  * 96e12644f3a amd/addrlib: expose CMASK address equations to drivers
    on GFX9
  * 501db877793 ac: introduce a structure to store DCC address equations
    for GFX9
  * b705114d9cd iris: mark the workaround_bo as asynchronous
  * b9129496a29 freedreno: Unleash the dragon!
  * 8813dfab830 freedreno: Support per-device driconf overrides
  * 7094cc78a44 driconf: Add force_gl_renderer override
  * 6edf0d8e902 driconfig: Add support for device specific config
  * b080aa94664 gallium/driconf: Allow the driver to parse the driconf
    options.
  * fdf9ebf317d gallium/dri2: Make dri_init_options just init DRI
    options.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 03 Aug 2021 17:20:55 +0200

mesa (21.3.0~git2107290548.86111fdc9c8~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 86111fdc9c8 spirv: set medium precision with RelaxedPrecision
    decorator
  * 476dc3c050d vulkan: add vk_spec_info_to_nir_spirv util method
  * fec1a04c53d microsoft/compiler: Correctly flag when using raw
    buffers
  * 1295c5cb334 microsoft/compiler: Add support for arrays to
    image_store
  * 16ef26ffcb1 nir_lower_readonly_images_to_tex: Fix typeo on image
    arrays
  * 486e236c338 glsl/standalone: Lower COMPUTE shader precision
  * 09d9b8cf9a3 features: mark off timelines for lavapipe
  * 94a49828051 lavapipe: implement timeline semaphores
  * 326253786e0 lavapipe: use consistent semaphore variable naming
  * 032d4a0e7d5 lavapipe: rework queue to use u_queue
  * 461662bf3c9 zink: simplify some dumb code in invalidate_buffer (v2)
  * 2668489cf95 Revert "zink: simplify some dumb code in
    invalidate_buffer"
  * d413fd02190 gallivm: Always take the per-pixel LOD path for
    cubemaps.
  * 371cf5d06af gallivm: Default brilinear filtering to off.
  * 7e3bad0f8ec nir/lower_shader_calls: adding missing stack offset
    alignment
  * a94192f69d1 venus: print warnings when stuck in busy waits
  * 7d0fe5863f2 zink: force threadsafe mapping for query results when
    necessary
  * d972326c458 pan/bi: Teach meson about format pack tests
  * 8a6c214b6a5 pan/bi: Teach meson about Bifrost packing test
  * 9bb731012ef pan/bi: Teach meson about scheduler predicate test
  * ca36943466b pan/bi: Add BIT_ASSERT helper for unit testing
  * 9358d1fca67 pan/bi: Expose unit tested scheduler predicates
  * 0d08ce287bf pan/bi: Remove dated ASSERTED properties
  * 526ae8979e7 pan/bi: Inline away bi_must_last
  * 097cf3952bf freedreno/ir3: Add build id to the disassembler test
  * 5ff0f4a901c zink: never use staging buffer for unsynchronized buffer
    maps
  * 3d64a97cf69 mesa/main: Check for fbo attachments when importing EGL
    images to textures
  * dff0d9911d1 iris: Split iris_upload_shader in two
  * 42c34e1ac8d iris: Enable threaded shader compilation
  * 9011cc74056 iris: add sync_compile option

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 29 Jul 2021 10:57:34 +0200

mesa (21.3.0~git2107221117.2f5cd08ede0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 2f5cd08ede0 llvmpipe: add support for time elapsed queries.
  * d8bfad70dc1 Revert "CI: Disable LAVA devices"
  * e42bb25ee26 zink: fix cached descriptor allocation clamping
  * 8db2d53418c zink: improve lazy descriptor pool handling
  * 849c5208874 zink: add define for descriptor alloc clamping
  * 559e009af19 zink: clamp descriptor allocation bucket sizing to
    defined limit
  * 2736bf4e179 zink: split mem cache per type
  * 7aca74e219c zink: inline mem cache hash table
  * fdfa155f2ba zink: move mem cache to sub-struct
  * d8905446d65 zink: rework oom flushing
  * 0dc77c8aa53 zink: add a param to check_batch_completion for toggling
    lock-taking
  * e7f958d8413 zink: use a local var for draw mode during draw
  * 10e7cb58883 zink: make batch_rp and norp static inlines
  * 2795537d5c2 zink: make zink_end_render_pass public
  * 1ffe73c71a8 zink: split draw_count checking to local variable
  * 49ee703e112 zink: split and move maybe_flush_or_stall mechanic
  * 9823b970fb5 zink: handle vertex buffer offset overflows
  * d5dd1259c56 zink: change vbo_bind_count to a mask of slots
  * ba3c4ce3852 zink: add mechanism for generating VkBuffers for
    rebinding
  * 47946855f19 meson: allow egl_native_platform to be specified
  * 384181921c2 egl/surfaceless: try kms_swrast before swrast
  * 43ccc6c091a llvmpipe: always use draw_regions intersection
  * ba7fd5b5614 llvmpipe/linear: don't try to use tgsi analysis for nir
    shaders
  * f90b6c875a6 llvmpipe: add some extra linear rast checks.
  * fd9cc1d0070 llvmpipe/linear: fix ppc64/s390 build
  * 5a1d3bcf26d llvmpipe: Add a linear rasterizer optimized for 2D
    rendering.
  * 4dc81cc6318 anv: Advertise support for VK_EXT_shader_atomic_float2
  * a3e53495a9d vulkan: Update XML and headers to 1.2.185
  * baefdceeaf8 spirv: Implement SPV_EXT_shader_atomic_float16_add
  * 8c29891fa46 intel/compiler: Remove cube array size lowering in
    compiler backend

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 22 Jul 2021 12:15:04 +0200

mesa (21.3.0~git2107150306.4a3269dff65~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 4a3269dff65 lima: handle fp16 vertex formats
  * 12d18abfe7a venus: refactor vn_EndCommandBuffer
  * f144d914966 lavapipe: fix multi-draw regression in shader parameters
    test
  * bedbe35d6bb pan/gen_pack: Use 1U for unpacking log2 to avoid
    undefined behaviour
  * 04c02418d74 pan/decode: Avoid undefined behaviour on shift in bits()
  * 6642749458b intel/dev: Add a max_cs_workgroup_threads field
  * 915e5a8cc30 intel/dev: Handle BSW naming issues
  * 56d70ba6861 intel/dev: Put the device name in intel_device_info
  * c24ba6cecba intel/dev: Handle CHV CS thread weirdness in
    get_device_info_from_fd
  * 17443727144 lavapipe: Use common Vulkan format helpers
  * 376fb4f55f0 docs: drop duplicate `21.1` branch name from release
    calendar
  * e1fe0bb0ca2 docs: update calendar and link releases notes for 21.1.5
  * cd3d8f0f7ab docs: add release notes for 21.1.5
  * 6689c3917e8 lavapipe: increment drawid for multidraws
  * d08c84ab0c3 zink: improve detection for broken drawids
  * 28c5e88931a docs: update calendar for 21.2.0-rc1
  * a3271b3f73d lvp: fixup multi draw memcpys
  * a18f434d58b panfrost: Warn on transitions to linear
  * d5fc0ceafda panfrost: Warn on get_fresh_batch
  * f2e3ac5c627 panfrost: Warn on get_fresh_batch_for_fbo
  * a266a0fbbb1 panfrost: Log reasons for flushes
  * bcd915622b2 panfrost: Warn on going out of AFBC
  * 5bd91a632bb panfrost: Warn on software conditional rendering
  * 256f4a5b02a panfrost: Add perf_debug macros
  * fae28b0fce7 docs/relnotes/new_features: empty for next release cycle
  * 1a05c595a3a VERSION: bump version for 21.3 development cycle
  * 3cb203303c3 intel/compiler: Update block IPs once in
    opt_cmod_propagation
  * 8f1052938d5 intel/compiler: Update block IPs once in
    register_coalesce
  * f3f3817307c intel/compiler: Update block IPs once in
    dead_code_eliminate
  * 8ca1bc5f947 intel/compiler: Add cfg_t::adjust_block_ips() method

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 15 Jul 2021 06:53:10 +0200

mesa (21.2.0~git2107130112.57da082a203~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 57da082a203 panfrost: Only access blitter from per-gen
  * 88dc4db6be7 panfrost: Init/destroy blitter from per-gen file
  * 345778fa6f3 panfrost: Remove pan_blitter integration
  * eddb81c3268 panfrost: Avoid GenXML enum dependences
  * 7308536f41d panfrost: Remove reference to mali_blend_equation_packed
  * d0b036ff713 panfrost: Use generic delete for ZSA
  * 8db1c0e5091 panfrost: Pin an architecture for blending
  * 86c0073206f panfrost: Give WLS Instances a default
  * c3592498bb2 panfrost: Use smaller sizes in blend table
  * d8eef119fd8 panfrost: Specialize blendable_formats for v6
  * 262d96d3dfb panfrost: Compile format table multiple times
  * e11d0d25c6e panfrost: Add GenXML macros
  * 214d56644f9 panfrost: Remove panfrost_bifrost_swizzle
  * a23603c89d0 panvk: Don't use panfrost_bifrost_swizzle
  * 92d27236723 panfrost: Move arch-independent pan_format code
  * fc49ff9a8c9 panfrost: Inline panfrost_get_z_internal_format
  * 616d7d09052 panfrost: Assert that injected jobs are for blits
  * 583d8aaea7d panfrost: Inline away pan_invocation.c
  * 581bbe1c0e0 panfrost: Express pack_work_groups more concisely
  * 5bff4992c1c panfrost: Inline away pan_pool.c
  * 7494bb0c86f panfrost: Move panfrost_vertex/instance_id to per-gen
  * 840ebf0b93d panfrost: Inline flip_compare_func into pan_encoder.h
  * 1ac29863a94 lavapipe: expose strict-lines feature
  * 29ceb808345 lavapipe: re-expose line-rasterization extension
  * fda906566b8 llvmpipe: respect rectangular_lines
  * 7221f2d6821 draw: respect line_rectangular state
  * 1c2690ec204 gallium: explicitly specify line rasterization mode
  * e0472217b03 lavapipe: fix disable_multisample condition
  * e555e2b0019 lavapipe: do not disable multisampling for smooth lines
  * 7a31567db3d aco/meson: remove inc_gallium from include_directories

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 13 Jul 2021 01:30:58 +0200

mesa (21.2.0~git2107011357.669b6889e4b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 669b6889e4b gallium/u_threaded: do not apply start twice
  * 28e1b02a6f1 radv: disable DCC for DOOM 2016 and Wolfenstein II
  * d9c0687a542 zink: drop getenv hacking now that gallium is fixed.
  * 75a82465631 gallium/sw: add sw_vk bit to avoid having to futz with
    env vars for lavapipe
  * ed123a03be1 radv: enable VK_KHR_shader_subgroup_uniform_control_flow
  * a9c4a31d8d8 aco: handle NIR loops without breaks
  * fd5c787958c ci: update VK-GL-CTS to 1.2.6.2
  * 0c09498fe9e Revert "CI: Disable LAVA devices for maintenance"
  * 9507705693a turnip/kgsl: new flag TU_USE_KGSL
  * 73c71a37f43 venus: fix AHB VkBuffer memory requirement
  * 4f2b98dc400 venus: handle ahb backed VkBuffer creation properly
  * 3527146a26b venus: prepare vn_CreateBuffer for AHB
  * 0ea726b5fdf venus: add more logs for Android WSI debugging
  * 5951d2abacd lavapipe: implement EXT_vertex_input_dynamic_state
  * 87b089c711a lavapipe: hook up some bits for handling dynamic line
    stipple state
  * 85de6302737 anv: remove dead code
  * 4300853edc3 freedreno: Flush the shadowed resource's write batch up
    front.
  * 88161ced8d0 freedreno: Swap needs_ubwc_clear when shadowing.
  * ed1f1dea285 freedreno: Stop manually marking blit dst buffers as
    valid.
  * 514aa018537 freedreno/a5xx: Make sure to mark blit read/write access
    in the BC.
  * f413b30ad48 freedreno: swap ->valid when shadowing resources.
  * 172082f235b freedreno: Update comments about PIPE_BUFFER shadowing.
  * 90071dc47cc docs/release-calendar: add a few more 21.1 releases
  * 830ff5a697d docs: update calendar and link releases notes for 21.1.4
  * f37e4820134 docs: add release notes for 21.1.4
  * c094765a016 aco: remove resource flags
  * fcc41b06314 i915g: Set up the cube map texture wrap modes.
  * 25ce136d23f i915g: Add curly braces for normal mesa style (and helps
    clang-format)
  * afe627ea70a i915g: Delete redundant i915_hw_sampler_views atom.
  * 7e75b1ca495 i915g: Fix FS debug dumping for declarations.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 01 Jul 2021 15:49:08 +0200

mesa (21.2.0~git2106282012.e094f75bd0b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * e094f75bd0b intel: PAGE_SIZE used in allocators shouldn't be defined
    on FreeBSD
  * 49e8b77fd9a intel: struct bitset is renamed to brw_bitset
  * 91b83dce0a0 util: Removed unused statement from FreeBSD build
  * 32b94df23e1 util: replaced ENODATA with ENOATTR for non-Linux
    systems
  * d8bbb9daa20 util/vbuf: flag fallback_always if any prim types are
    missing from restart modes
  * 00272aa4a1b util/vbuf: always claim support for PATCHES in restart
    modes
  * fd5293cc439 turnip: Short-circuit if ladder generation for constant
    index SSBO/UBOs.
  * 0afab39af9b nir: Add a helper for chasing movs with
    nir_ssa_scalar().
  * 9133999430e ir3/sched: Speed up live_effect
  * 56dc84b95cd freedreno/computerator: Fix local_size typo
  * 502b06c4f50 nir/opt_load_store_vectorize: fix check_for_robustness()
    with deref access
  * 86fe8db4aae anv: expose primary node to VK_EXT_physical_device_drm
    even when VK_KHR_display is not enabled
  * 24292cc003a radeonsi: move the accepting code into the bbox cull
    branch in prim discard CS
  * b141e502827 radeonsi: add optimal multi draws and draw-level
    splitting for prim discard CS
  * 81365c86f95 radeonsi: fix issues with draw-level splitting for the
    prim discard CS
  * 9fa0d2cf350 radeonsi: change how the prim discard CS is enabled and
    splitting limits
  * 06da7113508 radeonsi: remove the GDS variants of compute-based
    primitive discard
  * 2cf189cc88e intel/fs: use stack for temporary array
  * 5c66fb7e6e5 intel/blorp: initialize BLEND_STATE using braced
    initializer list
  * 5c5423e6eef intel/tools: fix potential memory leaks
  * 14227b3364c intel/tools: fix invalid type in argument to printf
    format specifier
  * f2a3c9de677 intel/tools: fix int-to-pointer/pointer-to-int cast
    warnings on 32-bit
  * 53c49ce41f3 intel/tools: fix left shift overflow on 32-bit
  * d19cf7d5721 anv: fix potential integer overflows
  * 365c7cc87cb intel/decoder: add assert for register size
  * 11528b621cc mesa/shaderapi: add an optional shader override
    mechanism
  * 5582c52a055 mesa/shaderapi: change construct_name signature
  * 9c25107495a Update libva requirement
  * fb586a8e3c7 mesa: lower GL_CLAMP in texture and sampler functions
    instead of st/mesa
  * 8403e068d42 mesa: add IsBorderColorNonZero to skip border color
    update for st/mesa faster

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 28 Jun 2021 21:32:21 +0200

mesa (21.2.0~git2106181827.977355c6e5e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 977355c6e5e radv: fix dynamic culling and depth/stencil related
    dynamic states
  * 651c6b16ff0 radv: move pipe_misaligned and l2_coherent image checks
    to flags set on init
  * e1af22d9dd7 radeon/vcn: allocate non-tmz context buffer for VCN2+
  * 796358e2f56 radeon/vcn: move calc_dpb_size into create_decoder
  * b97dedd365f docs/isl: Add detailed documentation about CCS
    compression
  * 6b15ce9fa2d docs/isl: Add detailed documentation about tiling on
    Intel GPUs
  * 0f6ebd2b732 docs/isl: Add detailed documentation about isl formats
  * 3894e42590a docs/isl: Document ISL's units
  * d07ec294bb3 isl: Document more members of isl_surf
  * 831750b40b6 docs: Begin documenting ISL
  * d3a63149dad zink: remove inlinable_uniforms_dirty_mask
  * 78f820acd7d zink: remove duplicated bitflag filtering for inline
    uniforms
  * 60348360a2d radv: create only one pipeline for decompressing
    depth/stencil images
  * 213c4c5f44f radv: always decompress both aspects of a depth/stencil
    image
  * 50233d0daa3 radv: reject binding buffer/image when the device memory
    is too small
  * 66dbd16f38e radeonsi: skip instance_count==0 draws on <= GFX9
  * 2624765e66e nvc0/ir: Initialize Limits members in constructor.
  * 5f771134ad0 intel/vec4: Add missing break statement.
  * 2b3fc26da8b i915g: Switch to using nir-to-tgsi.
  * 934d2c8f7f5 i915g: Handle fragment depth being in OUT[1] not OUT[0].
  * 026452fe466 nir_to_tgsi: Support integer sysvals on !CAP_INTEGERS
    hardware.
  * baa8d33908c nir_to_tgsi: Fix internal handling of NIR uints for
    !CAP_INTEGERS
  * 47804f53f99 nir: Do peephole select on other instructions if the
    limit is ~0.
  * aba8b6675ae nir/lower_int_to_float: Make sure the cursor is in the
    right spot.
  * 31ab2735dbc i915g: Allow fragment coord conventions TGSI properties
    to be set.
  * 942f62a9b28 i915: Drop assertion failure about seeing each const
    decled once.
  * 7378c647927 i915: Disable vertex texturing and delete the code.
  * 87f35032a66 anv: enable multi-planar support for drm format modifier
  * ec70092d55c anv: support multi-planar format in
    add_all_surfaces_explicit_layout
  * 345a4e98710 anv: fix some log formats

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 18 Jun 2021 19:17:02 +0200

mesa (21.2.0~git2106140826.42b351370da~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 42b351370da v3dv: handle Vulkan 1.1 feature and property queries
  * 1a773c00097 turnip: add missing VKAPI_ATTR/CALL
  * ce04fd10b88 ci: add crocus to the build tests
  * f3630548f1d crocus: initial gallium driver for Intel gfx 4-7
  * 8da92b5c0a3 intel/compiler: add flag to indicate edge flags vertex
    input is last
  * 5f03570eaa8 intel: reorder base program key.
  * 4de8ba15b47 intel/decode: handle gen4/5 WM state fragment shaders
  * 11d3cebab49 st/mesa: also disable other int textures
  * 0aa6674389f freedreno/a6xx: Improve UBWC demotion logic
  * 0c3079ce2d0 freedreno/a6xx: Handle non-UBWC surface views
  * 2964f32cc9d freedreno/a6xx: Fix r16_snorm blits
  * ed1e729aa08 freedreno/ci: Sort a630 piglit xfails
  * b5d344c3af8 zink: move extension function verification to when it is
    used
  * a0122385f07 anv: fix Android WSI VkFence
  * aa14851340f nv50: use the no-mipmap texture type for 2d ms views
  * 5e4ff4ef1ff venus: add support for external semaphores on Android
  * e2ac01aaac8 venus: add support for external fence on Android
  * 74a0c0c08bd venus: update venus-protocol headers
  * 823d889b21c venus: simplify vn_renderer_sync creation
  * 517828784c4 venus: move vn_renderer_sync_ops to vn_renderer
  * eddbb3193f3 ci/iris: Enable piglit testing on AML-Y.
  * a042211bcbb aux/cso: set flatshade_first onto vbuf when binding
    rasterizer
  * f679ba562c8 util/vbuf: add flatshade_first to vbuf context and api
  * 2432455390a util/primconvert: add function for setting
    flatshade_first
  * ca5131638d9 aux/cso: store flatshade_first state from rasterizer
  * e23b55c3f02 i965: Use nir_lower_passthrough_edgeflags
  * eff418fe577 nir/edgeflags: update outputs written when lowering edge
    flags.
  * 00dc4e0d832 intel/isl: Use a 4D physical total extent for size
    calculations
  * dc764916d9c intel/isl: Make tile logical extents four dimensional
  * a4dafe1fadd intel/isl: Make the offset helpers four dimensional

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 14 Jun 2021 09:14:44 +0200

mesa (21.2.0~git2106070921.cd9be8741ff~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cd9be8741ff radeonsi: dirty msaa_config on rs->multisample_enable
    change
  * 017a1509842 v3dv: expose VK_KHR_storage_buffer_storage_class
  * 71b2ae66c22 v3dv: document VK_KHR_relaxed_block_layout as
    implemented
  * 29e3a11d78f d3d12: Add mechanism for D3D12 Adapter Selection
  * 108f34a165a nv50: expose GL ES 3.1 for nva3+ hardware
  * 73a49c84d79 nv50: expose images/buffers/compute
  * 503d97445a9 st/mesa: allow hardware to claim ES 3.1 without hw
    indirect draws
  * 08fe7d72d14 mesa/get: allow image/buffer/atomic variables to be
    fetched in es3.1
  * a5379ef4a7e st/mesa: properly encode OES_geometry_shader requirement
  * 584799d6a3c mesa: relax ES 3.1 compute shader requirements
  * 00c46fec432 st/mesa: avoid enabling image/buffer/compute extensions
    for weak hardware
  * 7d49a6f23c4 nouveau: improve video limit reporting
  * d50e43c8a17 vdpau: allow state tracker to report a lower number of
    macroblocks
  * c7e877b0bfd nvc0: fix 3d images
  * 729020c7e09 nv50: fix streamout queries
  * c51bdac7420 v3dv: Fix assert.
  * 5bc47c9cc2e venus: unify VkNativeBufferANDROID and AHardwareBuffer
    image create info
  * 3a894d00bc2 venus: refactor gralloc buffer and drm modifier
    properties query
  * 0e2293a52b3 agx: Handle load_back_face_agx
  * c21168a26c2 agx: Lower front face to back face
  * 75cafd84722 agx: Pack SR immediate
  * 307b8f1b2f2 agx: List sr enum in Python
  * cc8fec8b74b agx: Generate enums from Python
  * 223476aff32 agx: Model get_sr
  * f70068583cd asahi: Mark special fragment inputs as sysvals
  * c5098789718 nir: Add nir_intrinsic_load_back_face_agx
  * cac88b5f060 freedreno/regs: split old/not used phy registers to
    separate DB
  * 80b1e042e48 freedreno: Don't return a flushed batch
  * ad375d05797 freedreno: Fix typo
  * db83dc619c9 i915: Implement __DRI2_FLUSH version 4

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 07 Jun 2021 09:45:20 +0200

mesa (21.2.0~git2106041458.cbaba3f1b98~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cbaba3f1b98 docs: add VK_EXT_extended_dynamic_state2 features.txt
    entry
  * 0d031d1da34 anv: toggle on VK_EXT_extended_dynamic_state2
  * 75ad0e4b087 anv: support blending logic op dynamic state
  * e0c60553512 anv: centralize vk_to_intel_logic_op array
  * 1c718952c8d anv: support primitive restart enable dynamic state
  * 496b5084035 anv: support depth bias enable dynamic state
  * 4d531c67dfd anv: support rasterizer discard dynamic state
  * 284290a876a anv: introduce new dynamic states
  * 56714238ba6 radeon/vcn/enc: use surface swizzle mode instead of
    linear
  * 700d4ce68f4 frontends/va: Derive image from interlaced buffers for
    h26[4/5]encode
  * d198e26a1eb broadcom/common: move v3d_tiling to common
  * a2d6a5f8852 zink: Fix MacOS compiling issues
  * 3102892fb8f gallium/dri: Guard DRI driver global variables on MacOS
    if Zink is enabled.
  * 18e8ec5f37f zink: Correct compiler issue with have_moltenvk member
    having been moved.
  * 6add9b2753f v3dv: expose KHR_relaxed_block_layout
  * a9b51a4a3a6 v3dv: increase number of supported SSBOs
  * e4e4b6bc16d android: aco: add aco_optimizer_postRA.cpp to
    Makefile.sources
  * 60e134e83ef android: ac: add include src/util path
  * 2dea82fc073 android: ac: add ac_nir_lower_ngg.c to Makefile.sources
  * 8e10d548048 intel: Rename GFX 12.5 to XE_HP
  * 0e94b17dd13 docs/install: remove one extra when
  * b5bcc490870 swr: fix uninitialized variable warnings
  * 10a3e388a44 zink: fix win32 build
  * ae4ef6491db venus: query experimental features in one call
  * d08930f2fa2 venus: support AHB prop query with host dma_buf size
  * d10d09e7ad4 venus: update to the latest venus protocol
  * 34e4c1d2be7 gitlab-ci: enable testing on Intel Kaby Lake as
    experimental
  * 551d7032dfc venus: silence compiler warnings
  * a8e75bb73c6 Revert "virgl: Cache depth and stencil buffers"
  * aff92f50c6f ac: add ac_thread_trace::data

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Jun 2021 15:23:07 +0200

mesa (21.2.0~git2106031134.e64e5e82ed8~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * e64e5e82ed8 docs: add links to documented drivers
  * db8b1b788d1 docs: clean up freedreno links
  * 2c9bf33737f docs: split out layered driver to its own list
  * b17d504baaf docs: clean up openswr links
  * 8cc0b75e71a docs: clean up software-drivers list
  * 65258457cb3 docs: move swrast to deprecated drivers list
  * 6d2a3e6da2f docs: clean up list of deprecated systems
  * 601a7bd2b2d docs: rename vmware-guest article
  * 54e7353fa60 docs: update llvm requirement
  * d8c46655af9 docs: update list of apis to match website
  * bd68ea37029 docs: do not list all gles major versions
  * 0e856b95c59 loader: allocate VRAM in display GPU in case of prime
  * 55d1b8f929b glx: create DRI screen for display GPU incase of prime
  * dac2c210d64 glx: Keep display fd open for prime
  * 41eaa07823a turnip/kgsl: Fix to build on android.
  * 8baa77c8139 radeonsi: fix encryption check for buffers
  * b377da91225 radeonsi: allow write-only mapping of encrypted textures
  * fcdfe91efa3 frontend/dri: fix bool/int comparison
  * 5e6f92f82cb frontend/dri: set PIPE_BIND_PROTECTED later
  * 736e24bdce3 venus: use vk_default_allocator
  * 567a18dade4 anv: use vk_default_allocator
  * 3ba3681b58f tu: use vk_default_allocator
  * 8615653c0eb v3dv: use vk_default_allocator
  * 7ebd658e283 radv: use vk_default_allocator
  * d3acc734555 vulkan/util: add vk_default_allocator
  * 5054f74ce1f venus: initial AHB support for multi-planar format
  * 380ac288911 ac: import performance counters from RadeonSI
  * 7af915b4a0c radv: enable RADV_DEBUG=invariantgeom for SotTR
    DX11/DX12 versions
  * 06ae2723d10 intel/vec4: Also use MOV_FOR_SCRATCH for swizzle
    resolves
  * 889a8df5bda venus: enable wsi image ownership transfer for common
    wsi

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 03 Jun 2021 13:48:15 +0200

mesa (21.2.0~git2106020814.67af3b6bba6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 67af3b6bba6 ci/lava: Switch LAVA jobs to x86 runners
  * 09935c0ddee freedreno/afuc: Print uintptr_t with PRIxPTR
  * 148723ce641 ci/android: Update to building for SDK 29 by default.
  * 0d8e431871b android: Fix ELF TLS support.
  * 75a9cb1033a util: Add a helper macro for defining initial-exec
    variables.
  * 4a68b16a524 aux/draw: if pipe_draw_info::index_bias_varies is not
    set, ignore index_bias for N>1
  * 2ee09122738 aux/trace: dump resource for samplerview and surface
  * d058ce7e880 docs/gallium: Document the index buffer format
    convention
  * a86deb1e72e si: Use Rn_UINT instead of In_UINT for index buffers
  * 0790bc41ed6 lima: Use Rn_UINT instead of In_UINT for index buffers
  * 3058545d949 freedreno: Use Rn_UINT instead of In_UINT for index
    buffers
  * b92a6edf824 etnaviv: Use Rn_UINT instead of In_UINT for index
    buffers
  * 1560f24da51 v3d: Use Rn_UINT instead of In_UINT for index buffers
  * a0b74bad623 vc4: Use Rn_UINT instead of In_UINT for index buffers
  * 24b03aeecc3 zink: ci updates
  * e3192367ac1 zink: optimize buffer rebinds
  * 31083444032 zink: unify more resource bind count tracking code
  * 91d2fc191f6 zink: unify code for updating res->bind_count values
  * bfdd1d8d890 zink: add a second descriptor manager
  * 80bf7bdcef6 panfrost/ci: Report flakes on IRC
  * 9283875f930 ci: Move the flakes channels to OFTC
  * e414718aef2 ci: Add known-flake handling for the IRC flake reports
  * 5515d3aec5e anv: fix availability for copying timestamp query
    results
  * 478ae974a15 panfrost: Eliminate reserve_* functions
  * ae93796cc0a panfrost: Elucidate thread group split field
  * 71f069bd7ae panfrost: Bubble up errors
  * ff3e54b4322 panfrost: Minor changes to draw_vbo
  * 8b305ce32a0 panfrost: Write translate_index_size better
  * 8f13eb812db panfrost: Dirty track stack sizes
  * e95abff4de4 panfrost: Don't allocate empty varying buffer

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 02 Jun 2021 10:13:40 +0200

mesa (21.2.0~git2105311658.5a4384c2bc4~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5a4384c2bc4 kmsro: Fix confusing comma expression
  * 9ff54d408ba Revert "zink: call tc_driver_internal_flush_notify() on
    flush"
  * 6dd02a5139a zink: stop using util_set_vertex_buffers_mask()
  * f4bae3fe5e1 zink: ref vertex buffers during set_vertex_buffers
  * 962b1627661 zink: update scissor only when necessary
  * dbc59aedb92 zink: only update viewport state when necessary
  * 59b6f5db360 zink: only rebind vertex buffers when necessary
  * 906371153cb zink: handle rebinds for vertex buffers
  * 6d6ef97035a zink: only rebind pipelines when necessary
  * 1a7045acafd zink: mark some draw functions inline
  * c2973213d76 zink: remove barriers/refs from descriptor cache
  * 62ad23239c2 zink: reapply program refs automatically
  * a64ef1cd126 zink: reapply resource/surface refs after app flushes
  * 234e1b7356e v3dv: implement VK_KHR_device_group
  * c672b238574 v3dv: implement interactions of VK_KHR_device_group with
    VK_KHR_swapchain
  * bf60ba6e7f9 v3dv: create a helper for image creation
  * f07c797e939 v3dv: implement vkCmdDispatchBase
  * 816be7d46fc radv: enable RADV_DEBUG=invariantgeom for Monster Hunter
    World
  * f285a1220ea asahi: Implement scissors and scissor to viewport
  * 6fbc1cb52a0 asahi: Update viewport descriptor depth fields
  * f43bb36cacc asahi: Enable depth culling
  * 9392e2b2754 asahi: Add unknown bits seen with the GL driver
  * 5de49375ecd asahi: Expose PIPE_CAP_CLIP_HALFZ
  * acfeba4010f agx: Add scissor upload BO
  * 6d9242e109e asahi: Skip draws if the scissor culls everything
  * 861109e4413 asahi: Mark scissor dirty if rast->scissor changes
  * be5ea29237c asahi: Track scissor states
  * 38a9c59377c asahi: Dirty track viewport descriptor
  * b659c53f95f asahi: Defer viewport pack
  * f99f7e70d7b asahi: Add scissor enable bit

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 31 May 2021 17:35:45 +0200

mesa (21.2.0~git2105272322.a4e15017704~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a4e15017704 mesa/st: Don't assert !unify_interfaces in the
    passthrough edge flags case
  * 9d28bac9d0a turnip: Make sure that SNORM blits don't clamp ambiguous
    -1.0 values.
  * 69df1e8650b turnip: Reorganize copy_format()'s switch statement.
  * 8169d709c4c nv50/ir: don't optimize shl(mul_hi, a) to mul_hi
  * e7485f12949 nv50/ir: when constant folding shl(mul, a) we need to
    copy muls type
  * 5e88a1caca4 panfrost: Performance configuration
  * fece367e9e7 panfrost: Counter definitions
  * ee669227adf st/mesa: fix clearing of 1D array textures
  * e381bc0e671 ci/freedreno: Skip Portal 2 trace on a630, due to
    flakiness
  * 380742b9f32 radv: fix missing default state for DB_DFSM_CONTROL
  * caa99c2064e zink: improve unsupported feature warning message
  * 76138372061 zink: use actual const for const offset
  * 3179daf6139 v3dv: add v3dv_GetImageSparseMemoryRequirements back
  * c289e88809a docs: drop clayton from intel-ci notice
  * e710b9bd7bc docs: update another IRC reference
  * bc1240ce94c docs: update another IRC reference
  * 6cd37e4bf0f Partial revert of "ci: Add a manual job for tracking the
    performance of Freedreno"
  * e531755451b v3dv: trivially handle
    VK_STRUCTURE_TYPE_EXPORT_MEMORY_ALLOCATE_INFO_KHR
  * 597b448967b v3dv: implement VK_KHR_dedicated_allocation
  * e60b009271f v3dv: keep track of whether an image may be backed by
    external memory
  * d87afc1acc3 v3dv: implement VK_KHR_get_memory_requirements2

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 28 May 2021 07:53:45 +0200

mesa (21.2.0~git2105270705.82bd970a0cf~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 82bd970a0cf Revert "util: disable glthread in CSGO"
  * 4a3c715bb46 virgl:Fix the leak of hw_res used as fence
  * b8d59e68beb gallium/u_vbuf: add a fast path to skip refcounting for
    uploaded user buffers
  * bbbcf143118 radeonsi: clamp clear_buffer values using new util
    helper
  * c4d3d210248 zink: clamp clear_buffer values
  * fb2fb0d4fed gallium/aux: add helper for pre-clamping clear_buffer
    value to dword
  * 8418334efe5 lavapipe: also ignore multiple pipeline barriers in
    succession
  * df47ed074d3 lavapipe: skip "pipeline barriers" if they're first or
    last in a cmdbuf
  * 08a7cfce5e7 llvmpipe: stop accessing pipe_resource::screen
    internally
  * 09019fb4560 llvmpipe: store a screen pointer in resource struct
  * 621b8788bbf llvmpipe: only dump tgsi shaders if they're actually
    tgsi shaders
  * 9f5e4ccdb9b llvmpipe: split out scene surface init into separate
    function
  * a2d1b6d14f2 llvmpipe: split out scene surface info into separate
    struct
  * 614fcdc8c7a lavapipe: moar @optimize
  * 5925f2ea399 llvmpipe: remove clamping to [0,1] for tri offset
  * 26677008b9a ci/freedreno: Turn off default a530 quick_gl testing, do
    full quick_shader.
  * 7adb9c42e01 venus: advertise
    VK_ANDROID_external_memory_android_hardware_buffer
  * 47bf8be024d venus: support AHB external format for sampler YCbCr
    conversion
  * 78b30a06961 venus: implement
    vn_GetMemoryAndroidHardwareBufferANDROID
  * 7370f339531 venus: implement AHB allocation and import (part 2/2)
  * 1743892f24f venus: implement AHB allocation and import (part 1/2)
  * 4958ce582cf venus: refactor device memory fd import
  * 910c0602c4a venus: implement image creation for ahb handle type
  * 19b7b09885c venus: prepare image creation helpers for AHB
  * 53e35f716e2 venus: fix AHB image format properties query
  * 7f52544f6f6 venus: fix vn_GetAndroidHardwareBufferPropertiesANDROID
  * 8c06f018a4b venus: complete the format conversion between AHB and
    Vulkan
  * c82e836490c venus: tiny refactor of
    vn_android_get_gralloc_buffer_info
  * b9ff51f7504 radv: move all game workarounds to drirc
  * 25a6c35bbcd util/drirc: use application_name_match for the SotTR
    RADV workaround

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 27 May 2021 08:40:16 +0200

mesa (21.2.0~git2105200930.66935c1d05d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 66935c1d05d aux/trace: pipe_screen::get_dmabuf_modifier_planes
  * bcfcd547d2a aux/trace: propagate pipe_screen::transfer_helper
    pointer
  * ce687c91606 aux/trace: pipe_context::is_dmabuf_modifier_supported
  * 1f97a4ac1fa aux/trace: pipe_screen::query_dmabuf_modifiers
  * b4929c986d8 aux/trace: support pipe_screen::query_memory_info
  * 2e4994526a5 v3d: take TLB blit framebuffer dimensions from smallest
    surface dimensions
  * aa4f132d514 ci/intel: Add test jobs for dEQP.
  * d9e64cb2d72 ci/deqp: Make DEQP_EXPECTED_RENDERER a required regex
    for VK like for GLES.
  * d246c31ec1a nir/algebraic: Add algebraic opt for float comparisons
    with identical operands.
  * 64bcfc3a170 nir/algebraic: Rearrange some logic-joined comparisons
    and reduce
  * adc28356462 nir/algebraic: Mark some more logic-joined comparison
    reductions as exact
  * 23bbf3932bb nir/algebraic: Mark some more comparison reductions
    exact
  * 7d85dc4f350 nir/algebraic: Equality comparison inversions require
    sources be numbers
  * 4246c2869c3 nir/algebraic: Invert comparisons less often
  * 49177b9e2fc nir/algebraic: Tautology replacements require sources be
    numbers
  * d69ba58644d nir/algebraic: Remove some optimizations of comparisons
    with fsat
  * 088c7c61cfa ci: Uprev piglit to 9d87cc3d79e ("framework/replay: send
    backend's subprocess stderr to sys.stderr")
  * 12082905582 d3d12: Sets all SRV descriptors as data-static
  * bb1d0025d89 d3d12: Fixes stale context bindings after copy, resolve,
    and clear
  * 59c22727bbb ci/freedreno: Mark two more recent intermittent a530
    flakes.
  * a8b96930930 iris: Prefer more GPU-based uploads for compression
  * 88903ba64d4 isl: Add isl_aux_usage_has_compression
  * 6dc049fdf48 docs/release-calendar: add the schedule for the 21.1
    branch
  * 59597f59628 docs: update calendar and link releases notes for 21.1.1
  * 072ffbc9593 docs: update calendar and link releases notes for 21.1.0
  * bcf65e656d4 docs: add release notes for 21.1.1
  * 1b46c2efaec docs: add release notes for 21.1.0
  * e894e83e478 ir3/cf: Rewrite pass
  * 17861aff961 radeonsi: enable glsl_correct_derivatives_after_discard
    by default
  * 76404790288 radeonsi/nir: enable nir_opt_move_discards_to_top pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 20 May 2021 11:46:06 +0200

mesa (21.2.0~git2105191638.ebba3cad816~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * ebba3cad816 intel/vec4: Add support for UBO pushing
  * 89fd196f6b5 intel/vec4: Add support for masking pushed data
  * a881f2295f8 intel/vec4: Set up push ranges before we emit any code
  * c35501ffe8f intel/vec4: Update nr_params in pack_uniform_registers
  * 3d1ac996d0c intel/vec4: Add some asserts to move_push_to_pull
  * 2db88679432 intel/vec4: Don't spill fp64 registers more than once
  * 7138249675a anv: Push at most 32 regs for vec4 shaders
  * c01354d5c44 anv: Support pushing shader constants
  * 24b3e71fa90 anv: Plumb the shader into push constant helpers
  * 3013670dfda aco: disallow SGPRs on DPP instructions
  * 4191eb291bf d3d10umd: Avoid duplication in CreateDevice.
  * bd161335722 d3d10sw: Add a sanity test.
  * 54b8137141a d3d10umd,d3d10sw: Initial import.
  * 3927a2d9463 draw: Plug leak when combining tessellation with
    primitive assembly.
  * 790ff1ceac8 anv: fixup physical device properties of fragment
    shading rate
  * 1bbbdfe590d radv: enable DCC stores on RDNA2
  * 7bd88dfaa21 panfrost/ci: Test Panfrost on the Mali G72 GPU
  * e77163295a3 ci: Update kernel to v5.13-rc2
  * 250605c57d8 draw: Allocate extra padding for extra shader outputs.
  * 0df249f542c util/primconvert: add C++ guards to header
  * de40016d8be panfrost: Express viewport in terms of the batch
  * c2d571934d6 panfrost: Simplify panfrost_bind_sampler_states
  * a9a3f55519b panfrost: Mark job_index > 10000 as unlikely
  * 24eccad4a78 panfrost: Remove silly assertion
  * 35dfaaf1c36 panfrost: Pass batch to
    panfrost_get_index_buffer_bounded
  * 7561cd5825b panfrost: Deduplicate some code from indirect/direct
    draws
  * 4b3ac29bb9b panfrost: Move batch_set_requirements to the CSO
  * bfd76ab5019 panfrost: Pack draw-time RSD all-at-once
  * 8f2b2bcff48 panfrost: Hoist part of shader_reads_tilebuffer
  * 876de2831f3 panfrost: Pull erratum workaround into own function

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 May 2021 18:50:32 +0200

mesa (21.2.0~git2105171958.958f11d5373~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 958f11d5373 midgard: Fix type for vertex_builtin_arg() and
    compute_builtin_arg().
  * 54258555627 panfrost: Limit the number of active batch to 32
  * a6af15aa5b6 panfrost: Simplify the dependency tracking logic
  * 82571f977ae panfrost: Avoid duplicate entries in access->readers
  * 3c684d10be8 panfrost: Don't freeze blit batches
  * 3e74bbf631f i915g: fix implicit fallthrough
  * 6d56c16c9ce radv: dump the trap handler shader with
    RADV_DEBUG=metashaders
  * 77d04989135 panfrost: Fix major flaw in BO cache
  * 22a750465d9 ci: Build asahi in meson-gallium job
  * 2a46fcaf025 Revert "CI: Disable all Panfrost/AMD/Iris automatic
    jobs"
  * fb31dda9093 aco/ra: use flags instead of booleans for
    update_renames()
  * 6fd6374e276 aco/ra: fix get_reg_for_operand() with vector operands
  * c08bfa110cc aco/ra: fix get_reg_for_operand() when the blocking var
    is a vector
  * bc95d55e1f4 aco/ra: fix get_reg_for_operand() with no free registers
  * 4e459df0fcb aco/ra: initialize temp_in_scc earlier
  * d517996ae55 zink: add even more validation for linear images before
    creation
  * df6ab67e992 zink: populate images with u_blitter if transfer_dst
    isn't available
  * 6a67315d8a6 zink: don't multiply cube array image layers
  * b960169257e aco/ra: also prevent overflow register for
    p_create_vector operands
  * dc525cbe0c3 ci: remove expected robustness2 fails for Renoir
  * 3828081c929 util: add thread-safe version of idalloc
  * 6fed423ade7 gallium/u_threaded: don't reference resource in
    pipe_transfer
  * 6ac085966bb gallium/u_threaded: always map idle buffers
    unsynchronized
  * e8b27794554 gallium/u_threaded: don't invalidate idle buffers
  * 89bd06f57a1 gallium/u_threaded: add driver-internal flush tracking
    for buffer lists
  * e9c41b32148 gallium/u_threaded: add buffer lists - tracking of
    buffers referenced by tc
  * 88b97567d41 gallium/u_threaded: query shader resource limits
  * 39447cc8944 gallium/u_threaded: track whether TCS, TES, or GS have
    ever been used
  * ec77a2d43a1 gallium/u_threaded: add callbacks and documentation for
    resource busy checking
  * ab58fce7b92 gallium/u_threaded: merge draws in tc_call_draw_single

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 17 May 2021 20:22:40 +0200

mesa (21.2.0~git2105170105.fb7be7870c2~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * fb7be7870c2 vulkan: Support 32-bit "weak" symbols on MSVC
  * a5a86adc231 freedreno/a6xx: Add a few registers
  * 0c30ad402d0 freedreno/regs: split DSI PHY registers to separate xml
    files.
  * 6df187df136 nir/builder: add nir_pad_vector and nir_pad_vec4 util
    functions
  * 6fcf3314d00 venus: Fix zero-initialized fd causing apps to
    hang/crash
  * 855cb78d463 radv: Handle unnormalized samplers in YCbCr lowering
  * fc765d6a8d0 iris: fix assert to reflect correct limit for encoded
    size
  * b3499435ec8 r600/sfn: Ignore precision when linking
  * 4c045ad11ed nir/linker: add option to ignore the IO precisions for
    better varying packing
  * 629e8347ad2 ci: Update VK-GL-CTS to 1.2.6.1
  * 172c719baf6 llvmpipe: fix non-multisampled rendering to multisampled
    framebuffer
  * bcdebf4ff8f iris: Avoid sampling some MCS surfaces with clear
  * eef4c708b3f anv: Avoid sampling some MCS surfaces with clear
  * 608c1316389 anv: Add clear_supported to anv_layout_to_aux_state
  * b3eb87aa654 radv: call nir_copy_prop() after load-store
    vectorization
  * d659ce0d6c5 aco/ra: prevent underflow register for p_create_vector
    operands
  * 341ecb2dfc3 ci/freedreno: Skip refract on a306 now that it
    hangchecks sometimes.
  * 09984fd02f1 nir: Rename nir_is_per_vertex_io to nir_is_arrayed_io
  * e418710f8bd compiler/nir: check whether var is an input in
    lower_fragcoord_wtrans
  * 0f04a90ea33 zink: emit some barriers out of renderpass where
    possible
  * f1ec655e472 zink: add flags for determining whether to update
    framebuffer and renderpass
  * b11b1968eeb zink: add a flag for tracking/validating renderpass
    clears
  * a7d3636d030 zink: split out base renderpass begin into separate
    function
  * a50d5b13be6 util: tune signatures of generated enum operators
  * c0f4bb9a22d util: add support for defining bitwise operators on
    strongly typed enums
  * df5b14969f9 intel: Add 2 ADL-S pci-ids
  * c62d58c80f1 driconf: set vk_x11_strict_image_count for Metro: Exodus
  * 776ddfc8582 util/queue: don't require a fence when adding a job
  * 4da88060d0a panfrost: Skip blit shader labelling if the buffer has
    no space
  * 938e52a6e83 anv: handle spirv parsing failure

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 17 May 2021 01:57:43 +0200

mesa (21.2.0~git2105132344.719e4fb369a~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 719e4fb369a zink: fix DrawParameters shader cap usage
  * 8e2ac24482d zink: stop overwriting buffer map pointers for stream
    uploader
  * c0dc6affdc5 intel/compiler: Clarify why VUE is recomputed by FS
  * 5a133ef1f23 ci/turnip: drop fail annotation for
    image.extend_operands_spirv1p4.*
  * 9a477ccbead ci/turnip: drop fail annotation for float_control tests
  * 2cebb1b5b3e anv: fix perf query pass with command buffer batching
  * 2c2de4d60ef intel/mi_builder: fix resolve call
  * f88dd7ed4d2 i915g: add HW atomic counters as unsupported
  * 80ee9d39471 aco/scheduler: Verify register demand invariants in
    debug mode
  * 50ba919d372 aco/scheduler: Fix register demand computation for
    upwards moves
  * c528af10761 aco/scheduler: Fix register demand computation for
    downwards moves
  * c7d679f0f7e aco: relax validation rules for p_reduce dst RegType
  * 343d90b6ab5 isl: require hiz for depth surface in
    isl_surf_get_ccs_surf
  * 6bb7d3bbc05 wgl: Remove opengl32.mingw.def.
  * 4791738d1d0 zink: always do maybe_flush after draw/compute
  * 9fc2b47870a zink: check for a work_count-based stall in
    zink_maybe_flush_or_stall()
  * afb837523dd zink: flush every 100k draws/computes
  * 5aabc912739 glsl: add missing support for explicit components in
    interface blocks
  * 1a71d6aa6e1 glsl: create validate_component_layout_for_type() helper
  * 2908aba828c Update release notes with mention that x87 is no longer
    used on x86
  * a57d9376546 Switch u_format_test to passed on i386
  * 855ffa7c465 Default enable SSE2 on mesa builds.
  * 57721591dec nv50/ir: Add ConstantFolding constructor.
  * c8924121110 nvc0/ir: Initialize CodeEmitterGK110 member progType in
    constructor.
  * 77d959814c7 venus: get rid of #ifdef's in vn_CreateImage
  * f46aa1b9d7c intel/fs: use the final destination type for regioning
    restrictions
  * e1959f0f599 panfrost: Add GPU IDs for G52 1-Core-2EE (RK3568/RK3566)
  * 01ef56a7e49 pan/mdg: Use smaller LD_UNIFORM instructions
  * df3edfc7299 panfrost: Don't upload empty push uniform table
  * 5c069ff5126 panfrost: Clean up cases for emit_fbd

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 14 May 2021 02:48:12 +0200

mesa (21.2.0~git2105100707.181beece3c0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 181beece3c0 nir: skip assert check with empty structs
  * 15b55731940 agx: Set reads_tib appropriately
  * d0f566a90d8 agx: Implement load_output
  * 1b9b2f90464 agx: Condition writeout ops on already being emitted
  * 41d8db33a22 agx: Assume lower_fragcolor has been called
  * 1164c992cff agx: Add ld_tile opcode
  * 07fdc0015e2 agx: Rename blend -> st_tile
  * 06fe6651b31 agx: Implement blend constant color sysvals
  * 5fd489a6bdb agx: Return agx_instr* from emit_intrinsic
  * dd64463d5f7 asahi: Pass through "reads tilebuffer?" bit
  * e2332dea058 asahi: Fix shader key hash function
  * bedf1019beb asahi: Call nir_lower_fragcolor
  * d76ab2b5d67 asahi: Add blend constant system value
  * 30d1223247f asahi: Implement set_blend_color
  * 6b7cc1fa8f3 asahi: Garbage collect bind_state
  * 91b9839bf70 asahi: Call nir_lower_blend with selected key
  * f2179ed4f33 asahi: Augment Gallium key with blend state
  * 77f1f12000e asahi: Translate blend CSO to lower_blend options
  * 564519dc84c zink: rework memory_barrier hook again (third time's the
    charm)
  * 25ab2347f8f zink: fix texture barriers for real this time
  * 4ebae25e17f zink: break out draw dispatch into separate functions
  * 9e5d927d222 zink: remove compute cruft from resource mapping
  * b0c51cdc9ea zink: add debug assert to verify that
    zink_clear_framebuffer() is accurate
  * 5ac6c70214d zink: break zs clear loop once both bits are set when
    beginning renderpass
  * 94aeb1041f8 zink: handle in-renderpass clears in
    fb_clears_apply_internal()
  * b715aaa5f1e zink: only set layer info for samplerviews if there are
    multiple layers
  * 3c1ecb93d32 zink: simplify samplerview surface creation
  * b243b1d9636 zink: add a target param to create_ivci()
  * 438f0b31e27 zink: clamp 3D surface viewtype to 2D only in the
    create_surface hook
  * 0c2453bb590 zink: make ZINK_INLINE_UNIFORMS more standardized in
    function

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 10 May 2021 09:18:30 +0200

mesa (21.2.0~git2105090034.2736ae0454d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 2736ae0454d android: nir: add nir_lower_fragcolor.c to
    Makefile.sources
  * d81a6e5f1d3 broadcom/compiler: change register allocation policy for
    accumulators
  * 24043d215f6 lavapipe: Fix lvp_pipeline_compile's nir_xfb_info leak.
  * c1609c35311 lavapipe: Fix lvp_execute_cmds'
    pipe_stream_output_target leak.
  * 38de1cd5f00 nv50/ir: Initialize CodeEmitterNV50 member progType.
  * b1f6aa6e488 nv50/ir: Initialize BuildUtil member tail.
  * 9b50ebfb2d8 nvc0: Remove unnecessary bsp_bo NULL check.
  * 2ba50c1a011 nv50/ir: Initialize Graph::Node member tag.
  * edd06995d75 zink: never use LINEAR for VK_EXT_4444_formats
  * 291aff3fcbc gallium: Remove unused st_visual::render_buffer
  * ca3dbecea66 nv50: Fix use of initializers on older compilers
  * daad8f2245a freedreno/a5xx: SP_BLEND_CNTL has per-mrt blend enable
    bit
  * 14da2444a96 turnip,freedreno/a6xx: SP_BLEND_CNTL has per-mrt blend
    enable bit
  * 39a938ecf41 lavapipe: fix fsum with swizzle
  * aa765c54bdd pan/bi: Add divergent intrinsic lowering pass
  * 4055b99de46 pan/bi: Add "lanes per warp" accessor
  * 7e4ee9bd2f6 pan/bi: Map load_subgroup_invocation to FAU
  * 754c192e041 pan/bi: Drop load_sampler_lod_parameters_pan
  * db2f6b87a3f nir/divergence_anlysis: Add intrinsics for Bifrost
  * 54b0cfb061e radv: fix extending the dirty bits to 64-bit
  * e0419c29cc3 panfrost: Use common blend lowering
  * f3de2bd6c2d nir: Add blend lowering pass
  * 0cde5ddc795 pan/lower_framebuffer: Fix bitsize mismatch
  * 91bd4fc6139 zink: add a pipe_context::clear_buffer hook
  * f94f2e1223a mesa: add an extension MESA_bgra
  * 0ab2336f3fe panfrost: Use pan_blit() when PAN_MESA_DEBUG=panblit
  * 6197c3afd1a panfrost: Extend pan_blitter to support blit/resolve
    operations
  * c1df85ded57 panfrost: Stop assuming the viewport will always cover
    the framebuffer
  * 09e65df92e9 panfrost: Don't select the blit shader fragout type
    twice
  * 666072c91f4 panfrost: Shrink the number of args passed to
    prepare_{bifrost,midgard}_rsd()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 09 May 2021 21:47:10 +0200

mesa (21.2.0~git2105052121.a1c56b80915~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * a1c56b80915 mesa: NOTE! Default branch is now main
  * 57897b40953 docs: Rename master branch to main
  * 2ec9cd31042 docs/releasing.rst: Rename master branch to main
  * 26a1ddd2021 issue_templates/Bug Report: Rename master branch to main
  * 3356488c8a8 .gitlab-ci.yml: Use main branch for gitlab ci
  * 6e86d1f503d bin/pick: Rename master branch to main
  * 82f73775efa commit_in_branch_test.py: Rename branch master to main
  * 44a4e34d52e docs: remove doxygen support
  * e20897a8aa6 ci/lavapipe: Add fractional NIR stress test job.
  * f2cb18abd9b ci/llvmpipe: Add testing of gles3/31/gl.
  * 7bcda214410 turnip: Demote API version to 1.1.
  * 0c94b3f55bc venus: populate VK_ERROR_OUT_OF_HOST_MEMORY if applied
  * 13667b157aa freedreno/a5xx: Remove ppgtt hack
  * ace28308bb2 aux/cso_cache: add handling for save/restore of compute
    states
  * f08c14138ae panfrost: Fix format definitions to match gallium
    expectations
  * 9235c2cd8f8 android: pan/bi: add bi_opt_constant_fold.c to
    Makefile.sources
  * b13d0eea127 anv: Allow storage on all formats that support typed
    writes
  * df0580312a1 isl: document format fields
  * 9301b637cfe anv: Check offset instead of alloc_size for freeing
    surface states
  * a2d091694f8 gallium/u_vbuf: avoid dereferencing NULL pointer
  * c05e48308b4 radeon/vcn: Use the correct pitch for chroma surface.
  * d8ab0ec8e4d turnip: implement VK_KHR_vulkan_memory_model
  * a898828a636 ir3: update bar/fence bits in accordance to blob
  * cb8a00791cc ir3: memory_barrier also controls shared memory access
    order
  * 27363702944 docs: do not generate redirects on error
  * 5a1675a0303 zink: only emit ImageBuffer cap if needed
  * dcb9e4ddb4b zink: emit cap early
  * 9e460570f23 zink: emit sample-shading cap early
  * 30eca96a867 zink: remove needless shader-info from context
  * 74f9f3937a0 zink: emit cap early

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 May 2021 11:08:09 +0200

mesa (21.2.0~git2104281834.ce2706fc92e~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * ce2706fc92e docs: update calendar for 21.1.0-rc3
  * c7dd23ff614 docs: update calendar for 21.1.0-rc2
  * 82484b9787b docs: update calendar for 21.1.0-rc1
  * cbd6e5f2e59 freedreno/ci: Skip texsubmimage cube_map_array
  * 1d19325483a freedreno/ci: Disable counterstrike trace on a306 for
    now
  * f92f31455a4 freedreno/drm: Assume explicit fences if in_fence_fd
  * e9a9ac6f77f freedreno/drm: Async submit support
  * 2c9e8db28d3 freedreno/drm: pipe should hold reference to device
  * ad9654a4c15 freedreno/drm: fd_submit should hold ref to fd_pipe
  * 55eb75d3e6d freedreno: Avoid flushing deferred submits for u_trace
  * cccdc513e3e freedreno/drm/sp: Implement deferred submit merging
  * c7dc5cf3cb3 freedreno/drm/sp: Split submit prep and finish
  * 62a6773d804 freedreno/drm: Add pipe tracking for deferred submits
  * aafcd8aacb8 freedreno: Re-work fd_submit fence interface
  * d531c8d22a5 freedreno/drm: Reference count submits
  * 9cb264f966c freedreno: Drop unused create_fence() arg
  * 7f4b85c7cfd freedreno: Move fence struct to header
  * c3f4835b99c freedreno: last_fence optimization for TC async flushes
  * 807bfa6be89 freedreno/batch: Don't create fences for every batch
  * 49852ace2a7 freedreno/drm: Inline the fence-table
  * 7dabd624649 freedreno/drm: Userspace fences
  * df78934cdf9 freedreno/drm: Add locked version fd_{bo,pipe}_del()
  * 8f5c89350f0 freedreno/drm: Move the growable array helper
  * c98ada6ad12 freedreno/drm: Add FD_BO_PREP_FLUSH
  * 8ab227c3738 freedreno/drm: Cleanup bo cpu_prep flags
  * 7f0abd9048b freedreno/drm: Cleanup bo allocation flags
  * ef0c5007f25 freedreno/drm: Move submit->primary to base class
  * c64bc095e71 freedreno: Allow resource shadowing for TC
  * ecd4793d6cb freedreno: Add a couple debug traces
  * a8d43028251 freedreno: Make sure we actually flush if we need a
    fence

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 28 Apr 2021 20:46:39 +0200

mesa (21.2.0~git2104271326.4ec8533f69a~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 4ec8533f69a zink: fix shader-image requirements
  * 0b5c898c226 docs: remove out-of-date versions doc
  * d93153a5643 glsl: ignore interface precision qualifier on desktop GL
  * bc3625f5a2e zink: fixup bad indentation
  * bef99f8caa4 zink: remove stray semicolons
  * fd73a2ec04e zink: make zink_binding private
  * 1bc43492b60 radv: implement VK_EXT_provoking_vertex
  * 4c2add8cbab aco: adjust NGG if provoking vertex mode is last
  * 937a18a6af7 radv/llvm: adjust NGG if provoking vertex mode is last
  * d21ffa9c7db radv: add the provoking vertex mode to the
    pipeline/shader keys
  * 337957956e2 pan/mdg: improve tex opcode decoding and add missing ops
  * 6a12ea02fee pan/mdg: properly encode/decode ldst instructions
  * 4b933260d94 pan/mdg: print names of non-work registers
  * d2119073de1 pan/mdg: improve ldst opcode names and add missing ops
  * a567f60b3ee pan/mdg: add helpers for load/store special read regs
  * 733d25cfcee pan/mdg: misc cleanups
  * 291df07edba pan/mdg: print special alu arg outmods
  * cefa2e27da3 pan/mdg: remove register prefixes
  * 0ef3efb7fa8 pan/mdg: improve mask decoding
  * 7abeee1effc pan/mdg: fix midgard.h indentation
  * cb7527a9ef8 pan/mdg: stop using size disambiguation suffixes
  * ce445c0e472 pan/mdg: print input data type for ALU opcodes
  * 5d8301977b4 pan/mdg: stop querying datatype by reading opcode name
  * fdae70b8070 pan/mdg: fix/change ALU opcodes descriptions and add
    some missing ops
  * 94c03264d89 pan/mdg: improve swizzle decoding
  * 7f0bf3d82d8 pan/mdg: improve input modifier printing
  * baea01816a6 pan/mdg: add midgard_src_expand_mode validation
  * b6c7da98bec pan/mdg: encode/decode expand_mode properly
  * f8a8dc16450 pan/mdg: add proper expand_mode enum
  * 77e05b6a86a pan/mdg: refactor mir_pack_swizzle

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 27 Apr 2021 16:39:25 +0200

mesa (21.2.0~git2104212226.57603866540~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 57603866540 radv: only set robust_modes if robustBufferAccess2 is
    enabled
  * 8408d0312fa radv: improve vectorization callback for small bit sizes
  * 89b759c4f95 nir/opt_load_store_vectorize: loop internally
  * 447820d0037 nir/opt_load_store_vectorize: ignore
    load_vulkan_descriptor
  * 6ca11b4a66e nir/opt_load_store_vectorize: improve handling of
    swizzles
  * 4df3654c791 nir/load_store_vectorize: assume CAN_REORDER ops don't
    alias with stores
  * 839af6545bf mesa: Replace _mesa_pack_ubyte_rgba_row() with
    pack_ubyte_rgba_8unorm().
  * 1a36b11a66a mesa: Remove dead _mesa_pack_ubyte_rgba_rect().
  * 580a1ba7065 mesa: Move per-pixel Z pack functions to swrast.
  * 84db6255331 msea: Move z24s8-to-z24s8 packing fastpath to swrast.
  * 698c8b5022d mesa: Remove dead _mesa_get_pack_float_z_func().
  * 90f98b56f85 mesa: Deduplicate _mesa_pack_uint_z_row().
  * 8a773d770e0 mesa: Deduplicate _mesa_pack_float_z_row().
  * 0e20f6a1e99 mesa: Deduplicate _mesa_pack_ubyte_stencil_row()
  * 8bd91d13688 util: Fix big-endian handling of z/s formats.
  * 3ccd0891d34 nir/lower_fragcolor: set outputs_written for fragdata
    members
  * 577c9de659d docs: update calendar and link releases notes for 21.0.3
  * 8e821001c55 docs: update sha256 sum for mesa 21.0.3
  * 2655ccc30e7 docs: add release notes for 21.0.3
  * 4f12a42841f docs: write basic meta-documentation
  * bbeee415eeb zink: Learn about VK_KHR_swapchain
  * fcb5ba58165 Revert "ci/radeonsi: Add expected failures due to #4674
    having slipped in"
  * 58ee3347a8e Revert "st/pbo: use
    cso_set_vertex_buffers_and_elements() for st_pbo_draw"
  * 8acf361db41 intel: Fix GEN_GEN macro checks
  * 9967dabe919 freedreno/regs: add 5nm DSI PHY/PLL regs
  * 1de393fec53 panfrost: Fix ZS reloading on Bifrost v6
  * 52d3f6b1230 gallium: when tracing is enabled for threaded drivers,
    trace the driver thread
  * 04241e826ea zink: add clear-on-flush mechanic deeper into flush
    codepath
  * be6532ecdfa zink: directly set batch->state->flush_res from
    flush_resource hook
  * 7af40bb5958 zink: move wsi flush info conditional to queue
    submission

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 21 Apr 2021 23:22:49 +0200

mesa (21.2.0~git2104201629.874535752b4~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 874535752b4 zink: force scanout sync when mapping scanout resource
  * 2138aef7c92 zink: merge copy-to-scanout path into non-deferred flush
    path
  * 05cf1e7f36c iris: enable GL_EXT_memory_object feature
  * 772dc50d162 iris: hook up resource creation from memory object
  * cdb5a727644 iris: hook up memory object creation from handle
  * 58e93711412 anv: do not support image export with stencil aspect set
  * 4b2c7f286ff panfrost: Fix RSD emission on Bifrost v6
  * 6aaa325f89d radv: remove radv_image_iview::multiplane_planes
  * 8198aeac8d9 radv: remove radv_image_iview::bo
  * 9da4590df8b amd/common: Use cap to test kernel modifier support.
  * 8d9b52f45a6 panfrost: Reserve thread storage descriptor in
    panfrost_launch_grid()
  * 57ff43499bb ci/softpipe: run KHR-GLESxx tests
  * fbc0c05c53a ci/llvmpipe: run KHR-GLES2.* tests
  * 0dde87457e6 ci/v3d: add KHR-GLES test jobs
  * 01debec88b1 ci: support KHR-GLES testing
  * b2a60c157e4 turnip: add LRZ early-z support
  * af049b6668f turnip: fix setting dynamic state mask for
    VK_DYNAMIC_STATE_STENCIL_OP_EXT case
  * 88c7aa0b3e0 turnip: group all geometry constant draw states in one
  * 2c0c696f163 turnip: update LRZ state based on stencil test state
  * ff8e3547b3c turnip: implement LRZ direction
  * 1d3542694bd radv: fix emitting depth bias when beginning a command
    buffer
  * e4c0724dc6e radv: fix fast clearing depth-only or stencil-only
    aspects with HTILE
  * 00ff60f799c gallivm: add 16-bit integer support
  * 1c82c05d585 gallivm: run nir_opt_algebraic_late
  * da5f346e6c6 gallivm: handle 16-bit input in i2b32
  * 106da39b19b ci/radeonsi: Add expected failures due to #4674 having
    slipped in
  * 9fc5da54b4d ci: Drop hack to disable all modules from defconfig
  * a47e4016c10 ci: Use a single kernel+rootfs for both baremetal and
    LAVA jobs
  * 79c65217a19 ci: Test RadeonSI with piglit's quick_gl
  * f475b9fd514 ci/lava: Start Xorg on request, for Piglit

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 20 Apr 2021 17:07:49 +0200

mesa (21.2.0~git2104192207.899dd8e60a5~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 899dd8e60a5 nir: Update some comments referring to imov
  * 44f744be423 zink: Enable PIPE_CAP_PACKED_UNIFORMS.
  * 24d7c413fe7 panfrost: Enable packed uniforms.
  * ff007afce25 zink: document requirement of VK_EXT_custom_border_color
  * a144fa608d6 radv: Fix memory leak on descriptor pool reset with
    layout_size=0.
  * 63c2dfe1324 android: panfrost/lib: add pan_cs.c to Makefile.sources
  * 588a52869e1 venus: refactor vn_queue_submission_count_semaphores
  * 9c689ef3957 gallium: Define PIPE_ARCH_AARCH64 for MSVC arm64 builds
  * 80923e8d58c util/format: Add some NEON intrinsics-based
    u_format_unpack.
  * 2b5178ee482 util: Switch the non-block formats to unpacking rgba
    rows instead of rects.
  * 921b05f5828 mesa: Remove dead _mesa_unpack_rgba_block().
  * 9b7814779b2 radeonsi: Report multi-plane formats as unsupported
  * 64367f2359e turnip: implement VK_KHR_shader_terminate_invocation
  * 9dd9424a85f turnip: implement
    VK_EXT_shader_demote_to_helper_invocation
  * f17b41ab4f0 nir: add lowering pass for helperInvocationEXT()
  * 360df6fbfe1 ci/lava: Point the shader cache at tmpfs.
  * 09a23851aec ci/piglit: Always include the HTML summary in a run.
  * 7f9f3455798 ci/lava: Return the run's results/ artifacts from the
    DUTs.
  * 95b9ea85f56 ci/lavapipe: Don't include deqp's shader_cache in the
    artifacts.
  * 9434675d607 aco: fix opquantize2f16 on GFX6-7
  * 08499369d01 ir3: Assemble and disassemble swz/gat/sct
  * d48d43039af ir3: Improve cat1 modifier disassembly
  * 4c5b696cc3a ir3/parser: Fix oob write with immediates array
  * 8c140006e2a microsoft/clc: If local size isn't specified either in
    the shader or at runtime, set it to (1,1,1)
  * b460d4da607 virgl: resources without any binding can be cached
  * 78869838352 nir/lower_tex: do not stumble on 16-bit inputs
  * bd1b0c32662 lavapipe: implement VK_EXT_custom_border_color
  * a20e0b8a977 lavapipe: resolve border-color when creating sampler
  * 33e117ed7f3 st/pbo: use cso_set_vertex_buffers_and_elements() for
    st_pbo_draw
  * 001c6f82016 zink: fix tcs input reservation for user vars

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 19 Apr 2021 22:38:03 +0200

mesa (21.2.0~git2104171738.c74d93cf018~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * c74d93cf018 freedreno/fdl: Re-indent
  * 60509762329 freedreno/perfcntrs: Re-indent
  * d26a224ca90 freedreno/ir2: Re-indent
  * 2dbf09c2b4f freedreno/drm-shim: Re-indent
  * 45856c5fbc6 freedreno/decode: Re-indent
  * 3894bc96642 freedreno/computerator: Re-indent
  * ccd68b672aa freedreno/common: Re-indent
  * f5918f750f5 freedreno/afuc: Re-indent
  * b94db11708c freedreno/drm: Re-indent
  * a1653854f50 radeonsi: fix automatic DCC retiling after compute image
    stores
  * 4d7dd094e36 radeonsi: fix automatic DCC retiling after DCC clear and
    DCC decompression
  * a0771e6b27e radeonsi: fix incorrect comments in culling code and NIR
    lowering
  * e0ffd1f9281 radeonsi: don't decompress DCC for float formats in
    si_compute_copy_image
  * ec1ddb976a1 amd/registers: rename IMG_FORMAT to GFX10_FORMAT to
    disambiguate the meaning
  * 3e0ce4af4f6 amd/registers: clean up gfx103.json
  * a142925b7a0 amd/registers: fix the kernel header parser with latest
    headers
  * 418da19f910 venus: add vn_wsi_create_scanout_image
  * b7db6598df1 venus: add vn_image_create
  * e1787ec77dc venus: add vn_image_init_memory_requirements
  * 5de3cbbb2e6 nir: Generate load_ubo_vec4 directly for
    !PIPE_CAP_NATIVE_INTEGERS
  * 71d6d1b1ab9 nir_to_tgsi: Use ARL instead of UARL in the
    !native_integers case.
  * 5b9c3cb7b9d zink: compare against screen batch id when determining
    which semaphore to use
  * 20e2c7308f6 iris/gen12: Work around push constant corruption on
    context switch.
  * aea6f8effc2 microsoft/compiler: Propagate access when lowering SSBO
    loads
  * 474824bf3d8 microsoft/compiler: Support raw SRVs in addition to
    typed SRVs
  * a5f402f002f microsoft/compiler: Store nir_shader in the ntd_context
  * 50d7e97c1d6 microsoft/compiler: Better support UBO/SSBO references
    to descriptors
  * d6b5aaaff8b microsoft/compiler: Split Vulkan resource_index /
    descriptor processing
  * 8a821e2b8bc microsoft/compiler: Emit SSBO variables
  * 15de7122706 microsoft/compiler: Emit CBVs via variables for Vulkan

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 17 Apr 2021 20:57:15 +0200

mesa (21.1.0~git2104080613.6528cd762d0~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 6528cd762d0 zink: support ARB_fragment_shader_interlock
  * 7580a698444 zink: hook up EXT_fragment_shader_interlock
  * 91148636090 zink: use explicit subpass deps
  * 6536d5a947b zink: use set_foreach_remove()
  * c7e4f28a162 zink: simplify clear-apply on fb state change
  * f19946ca6ec zink: stop unmapping resources
  * eab985d070c zink: fix conditional when assigning tess variable io
  * 8ebdb8c687d zink: bypass separate stencil path in
    resource_reference_rw when not a zs image
  * 40e8328ce5f zink: remove atomic usage from batch tracking
    comparisons
  * 15f2c1f6612 zink: add env var to force uniform inlining
  * 7f28775edcc zink: implement uniform inlining
  * b47815c772e zink: add a pipe_screen::finalize_nir hook
  * 193c02e0cfc aux/trace: add GALLIUM_TRACE_TRIGGER mode
  * ad88e2f959d microsoft/spirv_to_dxil: Use non-zero exit code on
    failed compilations
  * 5756f2cd2c9 microsoft/spirv_to_dxil: Add support for
    load_vulkan_descriptor
  * 31e546a762b util/hash_table: add macro for destructively iterating
    entries
  * 759cc914501 util/set: add macro for destructively iterating set
    entries
  * 539c7ca5084 aux/trace: add a bunch of methods for lavapipe
  * c1270d4845d aux/trace: add screen deduplication for zink+lavapipe
    tracing
  * f89c8ba4101 docs: update lavapipe bits for 1.1
  * e1ba6158c06 zink: export PIPE_CAP_PREFER_BLIT_BASED_TEXTURE_TRANSFER
  * e1eb72ae3cf lavapipe: enable Vulkan 1.1 support
  * 7b79db11c2e lavapipe: enable correct workgroup sizing
  * 34525bb088d lavapipe: enable subgroups features
  * 50049bd241c gallivm: add compute shader subgroup system values
    support
  * bf6fd9a2eb7 gallivm: add subgroup lowering support
  * 8dc398848a4 gallivm: add subgroup read invocation support
  * 2d6a0a8620b gallivm: add subgroup ballot support
  * 7b3073ad44a gallivm: add subgroup reduction + in/ex scan support
  * 2e1266d1fe9 gallivm: add subgroup elect intrinsic support.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 08 Apr 2021 06:32:01 +0200

mesa (21.1.0~git2104062221.33b2daab1a1~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 33b2daab1a1 intel/compiler: lower bit sizes in NIR postprocessing

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 07 Apr 2021 00:51:28 +0200

mesa (21.1.0~git2104062135.d01628d24d0~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * d01628d24d0 pan/bi: Remove conversion lowering
  * 266de379c24 pan/bi: Generalize f2i16, f2u16
  * be74b84e6f8 pan/bi: Fill in some more conversions
  * 435800e7502 pan/bi: Lower swizzles
  * e3e2c5b5945 pan/bi: Optimize MKVEC.v2i16 generation
  * f9bc168bd3f pan/bi: Add bi_swz_16 helper
  * 6bc7a0b3668 radeonsi: fix si_compute_copy_image if DCC decompression
    happens before a copy
  * fc7ce9b636d zink: drop VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT
    from compute path
  * 84d6ee0920b mesa: Remove unused gl_config::mutableRenderBuffer
  * fa425511ed7 mesa: Make _mesa_initialize_visual return void
  * 9dd0d68d268 mesa: Remove unused _mesa_create_framebuffer
  * a6f1d56b7b1 radeon: Exchange one curious idiom for another in
    radeonMakeCurrent
  * 6d81b9c9722 gallium: Remove curious st_visual::no_config
  * 421fbb5f5e9 zink: flag DYNAMIC resources as coherent
  * 6ff6d01c377 zink: don't use cached mem for staging resources
  * 7499f84956f radv: fix format feature reporting for modifiers
  * 292ac71a4a8 nir/lower_tex: handle deref casts
  * 00fc85a0119 zink: reset queries when suspending if >50% of total
    pool is used
  * f5dc4db35f4 zink: defer timestamp query pool resets to end_query
  * 24923b4640b zink: check last_finished first in fence_finish early
    out case
  * d3734ae2ddc zink: relax maybe_flush batch count threshold
  * 1ba6dcb40f8 zink: relax maybe_flush mem threshold
  * e4426d78285 zink: split total_mem off to total_video_mem, use
    total_mem for tc
  * c6244899689 zink: move cmdpool reset to batch state reset
  * a565ead64a2 zink: only use host mem for staging resources with
    linear tiling
  * 6433661cdad zink: use 2 variant to check image format props during
    create
  * 733e07565f8 zink: use vkGetPhysicalDeviceFormatProperties2 when
    available
  * 3fa7ce4d46d zink: use better usage flags for staging resources
  * 12f93a73779 zink: hook up cs push constant for
    nir_intrinsic_load_work_dim
  * 796e95d6a70 util/threaded_context: support
    pipe_context::set_sample_locations

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 06 Apr 2021 22:44:07 +0200

mesa (21.1.0~git2104032118.11010b932b2~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 11010b932b2 pan/bi: Lower large arrays to scratch
  * f5d1a8bf6f6 pan/bi: Split writemasks for memory stores
  * 52863f2e60f pan/bi: Enable all nir_opt_move/sink optimizations
  * 0bd01e86f32 ci/bare-metal: no need to use tee
  * 06ebbde6304 vulkan: Deduplicate mesa stage conversion
  * 7ace3f3ef0d panfrost: Only check blend work count on midgard
  * 5cef39acbeb panfrost: Deduplicate Bifrost fau_count
  * 3fdd3be8d6c panfrost: Deduplicate UBO count assignment
  * 6a9936f5b51 pan/bi: Remove stale todo/assert
  * 10b736f1604 pan/bi: Remove TODO: RA warnings
  * 93cdb072a82 pan/bi: Only run DCE once
  * b7a339bc972 pan/bi: Only run copyprop once
  * 69666723f81 pan/bi: Handle 16-bit blend sr_count
  * d91bf7257d9 pan/bi: Add bi_foreach_block_rev
  * 8fde30925d9 pan/bi: Document register conventions
  * 0ec495e3c96 turnip: handle format list for compressed formats
  * e4e476c9a5c gallium: Fix broken trace XML output
  * 004ca762382 r600/sfn: Only fetch the constants that are needed in
    fdd*
  * dee89af505d ci: Uprev piglit to 6a4be9e9946d ("piglit: NOTE! Default
    branch is now main")
  * 1b35cc29dd2 ci: Uprev deqp runner to 0.6.5.
  * f67b6f9c477 ci/freedreno: Fix up the a5xx border color flake
    annotation.
  * 051b7e19259 intel: Rename WA_### to Wa_###
  * f96c3b8b63a intel: Rename GEN:BUG:### to Wa_###
  * 69c3578c8b0 intel: Rename GEN_{ALL, LT, ..} macros to GFX_{ALL, LT,
    ..}
  * ddb04b31fdc intel: Remove unused MAKE_GEN macro
  * 81e85f9434d intel: Make line wrapping changes due to
    IS_GFX_VER_BETWEEN
  * efc863f9a10 intel: Rename IS_GEN* macros to IS_GFX_VER*
  * e7e55af4d62 intel: Rename GENx keyword to GFXx
  * 1d296484b4f intel: Rename Genx keyword to Gfxx
  * b75f095bc73 intel: Rename genx keyword to gfxx in source files

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 04 Apr 2021 13:34:52 +0200

mesa (21.1.0~git2103312018.a442e3ff551~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * a442e3ff551 gallivm: increase size of texture target enum bitfield
  * 0be9a40225b ci/freedreno: Demote a630-asan to a manual test for now.
  * d448bf8cdd4 docs: fix incorrect possessive form
  * 807d86718f7 docs: dfsm -> DFSM
  * ece806d07a6 docs: lex / yacc -> Lex / Yacc
  * bd6dbbecb47 docs: lod -> LOD
  * 2988729d1bd docs: nops -> NOPs
  * 2f42c21221c docs: Xorg -> X.Org
  * 9c1b8ce7aaa docs: opencl -> OpenCL
  * 35bf5c4dca5 docs: optimisation -> optimization
  * 5c8a7fa6318 radv: only set WRITE_COMPRESS_ENABLE for storage image
    descriptors
  * 00d6ccebf95 ir3/isa: account for randomly set by blob lowest bit of
    ibo atomics
  * f181e613750 ci: Bump the llvmpipe test timeout to 240 seconds
  * 70066fb036b zink: do not request scoped memory barriers
  * 71e39c79fda radv: don't reset vertex state params on pipeline bind
    if reg layout matches
  * df1c45890d4 radv: don't emit baseinstance and drawid if neither is
    used
  * d67c1bc74d2 radv: reorder vertex shader params
  * da7ffc3b976 radv: make vertex param sgpr count more explicit
  * 4e0a3c25274 radv: break out vertex shader param emission into
    separate function
  * 0a8b0919225 radv: track whether baseinstance is used on the pipeline
    struct
  * b1b867033e7 radv: track whether drawid is used on the pipeline
    struct
  * eed676c42ad radv: set gfx pipeline vtx_emit_num to the number of
    sgprs
  * 65626eba295 radv: simplify vs draw param counting during setup
  * 1ffa6154444 radv: track whether gl_BaseInstance is used
  * 75a2476dfb6 radv: refactor draw dispatch
  * d0ef28d85ea radv: stop zeroing radv_draw_info during draw
  * 049f56fc4e3 freedreno/a6xx: fix primitive counters debug output
  * 4ce7d2138ab freedreno/a6xx: copy full 64bit of primitive counter
  * 70813c1c13b meson: Remove kmsro from gallium-drivers
  * 43232799846 broadcom/cle: do not leak spec

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 31 Mar 2021 20:54:40 +0200

mesa (21.1.0~git2103221958.a30d091a10f~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * a30d091a10f iris: Delete stale comment in iris_lost_context_state
  * 05fb5e85f2a .mailmap: fix email for Daniel Schürmann
  * a5b37c64d18 turnip: expose several already implemented extensions
  * d8a2abe3481 freedreno/computerator: Add script for finding reg file
    size
  * 50d5ed1e5e8 freedreno: Report max_waves in shaderdb output
  * d274649799b freedreno/computerator: Use threadsize calculated by ir3
  * 2ecb9700e84 freedreno: Use threadsize calculated by ir3
  * 7ecc70b31cb turnip: Use threadsize calculated by ir3
  * fd7960e1915 ir3: Calcuate max_waves and threadsize
  * cbc68c79a51 freedreno: Add local_size to ir3_shader_variant
  * 74785346b42 v3dv: Add support for the on-disk shader cache
  * cf71280d74d v3dv/device: avoid unused-result warning with asprintf
  * 2bee6ffec3f v3dv/pipeline: compute sha1 for no-op fragment shaders
    correctly
  * 9a4099858bc v3dv/pipeline: don't create a variant if compilation
    failed
  * e354c528015 v3dv/pipeline: try to get the shader variant directly
    from the cache
  * 6afb8a9fecc v3dv/pipeline: use broadcom_shader_stage as
    pipeline/variant stage type
  * 0b98f203106 v3dv: define broadcom shader stages
  * d7f40383744 v3dv/pipeline: remove v3d_key from shader_variant and
    pipeline stage
  * b8c73c512a3 v3dv/pipeline: remove compiled_variant_count field
  * ebb2297a910 v3dv/pipeline: move topology to pipeline
  * dd72c99d774 v3dv/pipeline: use driver_location_map instead of nir
    utilities
  * b71fd5587e0 broadcom/compiler: add driver_location_map at vs prog
    data
  * 2be0c367750 broadcom/compiler: add local_size in
    v3d_compute_prog_data
  * ab252d73a9c v3dv/pipeline: remove pipeline->use_push_constants
  * f276efb2f8e v3dv/pipeline: remove pregenerate_variant
  * 098816fc9a4 v3dv/pipeline_cache: add more details when dumping debug
    info
  * ad241b15a9e vk: consolidate dynamic descriptor binding sorting
  * b992b38de6d docs: Add calendar entries for 21.1 release candidates.
  * 4a2d123aafc docs: Extend calendar entries for 21.0 by 1 releases.
  * 97e2d96e224 docs: missing lvp win32surface ext in features.txt

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 22 Mar 2021 20:30:27 +0100

mesa (21.1.0~git2103180520.cc314361e3a~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * cc314361e3a nir_to_tgsi: Fix indices for CMP in nir_to_tgsi for
    nir_op_fcsel
  * 4258ab45b75 nir_to_tgsi: Respect
    PIPE_SHADER_CAP_TGSI_SQRT_SUPPORTED.
  * 5d031d8f31a zink: clear framebuffer state on context destroy
  * 321a5696562 zink: move fence reset to zink_fence_init()
  * bb90c8b926f zink: remove query batch-tracking init from
    begin_query()
  * cb701327789 zink: use macro to streamline batch struct member init
  * 89dce254d80 zink: move other batch-tracking implementations to
    unified codepath
  * 57021b1d4a5 zink: also move batch destructor into zink_batch.c
  * 56452230abb zink: move batch init into zink_batch.c
  * fc27594943f zink: move active query pruning to batch reset
  * 6aa791f626d zink: split out batch resource-set clearing into
    separate function
  * ecb50b37a98 zink: return enum zink_queue from
    zink_batch_reference_resource_rw()
  * 870e0e73d70 zink: abstract zink_get_resource_usage() and move it to
    be internal
  * 62b10ad1b8b zink: convert ZINK_RESOURCE_ACCESS defines to enum
  * c5390b2ef78 zink: refactor resource_sync_writes_from_batch_usage()
    to manage batch id internally
  * 304ee56cabf zink: add enum for different queues
  * 49efef9d554 zink: add a pipe_context::fence_server_sync hook
  * 6d005ba3fc1 zink: more consolidation for null sampler/image view
    hashing
  * c22e56f454c zink: ci updates
  * e02d1eb9507 zink: always use requested format for sampler view
    creation
  * c6c532faa8c gallium/u_vbuf: use updated pipe_draw_start_count while
    using draw_vbo
  * 1b9d8d7fdfa android: util: create some standalone compression
    helpers
  * edbbf4537bf mesa: set states in fast path for restoring light
    attributes
  * df5607d2efc anv: Use fallback paths if DRM_I915_QUERY_ENGINE_INFO
    fails
  * 91192696e66 intel/fs: Add support for 16-bit A64 float and integer
    atomics
  * a572471edc6 spirv: Add support for
    SPV_EXT_shader_atomic_float_min_max
  * 1ba9c262fd9 nir: Add image atomic_fmin/fmax intrinsics
  * 302183d6354 nir: Handle deref_atomic_fadd in a couple of passes
  * ba8ef1df9b4 spirv: Update headers and metadata from latest Khronos
    commit
  * 23100f3b653 lavapipe: bump maxMemoryAllocationCount

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 18 Mar 2021 08:35:33 +0100

mesa (21.1.0~git2103121837.862671369d9~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 862671369d9 vulkan: fix CreateRenderPass prototype
  * bf0c5988b26 zink: ci updates
  * 980a8b3fc0e zink: implement an extremely dumb resource memory cache
  * 6205400612a st/nine: Fix compilation issue in nine_debug
  * 378bb07110d zink: optimize pipeline hashing
  * da08d673645 zink: move vertex_buffers_enabled_mask to non-hashed
    part of pipeline state
  * 1aabfc77d3d radv: fix initialization of disable_compression when
    clearing color image
  * 0f7d32073da zink: ci updates
  * a5984bdf78a zink: fix arrays of texel buffer descriptors
  * 929a748401f zink: avoid hashing states without descriptors
  * 72a06746bfc zink: remove image layouts from descriptor states
  * 5700cbfa1a4 zink: always use
    VK_IMAGE_LAYOUT_SHADER_READ_ONLY_OPTIMAL for sampler bindings
  * e4421c4b829 zink: don't create descriptor barrier hash tables for
    cached descriptor set
  * 38e6e442624 zink: remove struct zink_descriptor_resource from
    descriptor updating
  * 4a3b344b235 zink: directly use resource count from pool instead of
    accumulating every time
  * 201cd1a8c02 zink: track resource count on descriptor pool object
  * d9793a8a606 zink: reuse descriptor barriers across draws
  * c55e2fb59c1 zink: move descriptor binding out of the update codepath
  * dc020db7239 zink: pre-size descriptor transition hash table
  * 80d9f3aa347 zink: simplify check for knowing whether descriptor
    updating is needed
  * fe31566fbbe zink: remove intermediate func for descriptor set
    getting
  * 141ff0e0911 zink: allow reuse of zink_descriptor_pools between
    programs
  * ee40550b87b zink: move descriptor type to pool object from set
  * 58500979a85 zink: track number of sets currently allocated per
    descriptor pool
  * 871022dc84a zink: change program pointer on struct
    zink_descriptor_set to pool pointer
  * 817de3c7769 zink: break out all the descriptor pool/layout stuff
    into a new struct
  * 3d4e6c641be zink: break out descriptor stuff into new files
  * eee488abadf zink: deduplicate VkWriteDescriptorSet setup
  * ce0524f0096 zink: break out image descriptor updating
  * eb375dc9391 zink: break out sampler descriptor updating

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 12 Mar 2021 19:14:40 +0100

mesa (21.1.0~git2103091136.1399ee5cf93~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 1399ee5cf93 anv: Drop anv_extensions.py
  * 6905122999b intel/tools: Show unknown instructions in decoded state.
  * f532202f2d5 etnaviv: use nir_lower_idiv(..) before opt loop
  * 279ef45db55 zink: unref ctx->framebuffer on context destroy
  * 8937b5f2685 zink: don't pass so_info to ntv at all unless it's
    necessary
  * 7ed57e60fcb zink: only export necessary xfb outputs to ntv
  * 1f42ff77dff zink: use slightly stricter check for update_so_info()
    callsite
  * 0fb7680b266 zink: pass so_info directly to update_so_info()
  * 0d741b8dfe3 zink: use info.has_transform_feedback_varyings to
    determine xfb enablement
  * eebd00329f3 zink: rename variable in update_so_info()
  * 5c5e1abea24 zink: evaluate existing slot map during program init and
    force new map as needed
  * 6d40db84c9d zink: handle direct xfb output from output variables
  * 7cef91dd436 zink: stop allocating xfb slot map
  * 086262fc53a zink: run more nir passes for tess shaders
  * 6d8b5e7f09c zink: fix location usage for explicit xfb outputs
  * 96024a8dc96 zink: fix slot mapping for fat io variables
  * 1b25e3a7019 zink: fix streamout emission for super-enhanced layouts
  * 9ff01d724a0 zink: remove ntv streamout assert
  * fe90bcf11ae microsoft/compiler: Don't separate phis while inserting
    upcasts
  * ef0d2a5b4b9 nir: Add a nir_after_instr_and_phis helper
  * 25020c125a9 intel/mi_builder: Fix a couple of #ifs
  * 62c64e7b9d6 intel/mi_builder: Fix some indentation
  * 45e5c6b6411 anv: Add mem heap/type support for local-mem
  * 7c41ae0a810 anv: Put cache memory type first on non-llc platforms
  * fd98721cbaf anv: Restructure mem heap/type init code
  * 835c257f645 anv: Add anv_memregion structure
  * a41c3ed3849 spirv: Update a couple of comments in variable handling
  * 3a7bb38b70d spirv: Explicitly break when finished handling
    SpvDecorationBuiltIn
  * 94d2a51453d spirv: Reuse nir_is_per_vertex_io()
  * f301eec9a39 nir-to-tgsi: Fix handling of partial writemasks on
    SSA/REG decls.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 09 Mar 2021 13:42:22 +0100

mesa (21.1.0~git2103060132.efd7711e0e1~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * efd7711e0e1 st/mesa: Update constants on alpha test change if it's
    lowered
  * 24ce0862fe0 zink/ci: update results after layer extensions enabled
    in lavapipe
  * d061e21b7e8 lavapipe: enable EXT_shader_viewport_index_layer
  * dad5d5099a7 llvmpipe: add support for shader viewport layer
  * 4cf898b988b draw/prim_assembler: write correct decomposed primitive
    lengths
  * 52dc22055f9 draw: fix uses viewport index for tess eval shader
  * cdffa3e1140 vbo: Fix vbo_sw_primitive_restart for start > 0
  * cf468b7ad89 zink: more and better debug printfs
  * f3aa2f15c20 r600/sfn: eliminate loading unused component loads from
    shared memory
  * 9f8a0b797ed radv: cache pipeline statistics
  * 7c7e8942f82 radv,aco: remove aco_compiler_statistics
  * b4d1764b465 .mailmap: resolve duplicates for Yogesh Mohan Marimuthu
  * 4752ef50390 .mailmap: resolve duplicates for Satyeshwar Singh
  * 8481d5f4d02 .mailmap: resolve duplicates for Mun Gwan-gyeong
  * cc1da67fd13 .mailmap: resolve duplicates for Maya Rashish
  * a3d4c485979 .mailmap: resolve duplicates for Matthias Lorenz
  * abd9b0d7d81 .mailmap: resolve duplicates for Matthias Hopf
  * 4fd9f4beb63 .mailmap: resolve duplicates for Mark Menzynski
  * 00aefdfea6d .mailmap: resolve duplicates for Lin Johnson
  * 028ae10694e .mailmap: resolve duplicates for Jan Zielinski
  * 6c9660e4242 .mailmap: resolve duplicates for James Xiong
  * 64b415d96c4 .mailmap: resolve duplicates for Indrajit Das
  * 75f5fc3435b .mailmap: resolve duplicates for Emmanuel Vadot
  * cd4dfc157b2 .mailmap: resolve duplicates for Christopher Li
  * 9e34049e46e .mailmap: resolve duplicates for Icecream95
  * bd8193fb4ca .mailmap: colapse duplicates for Timothy Arceri
  * 8955d179d3e anv: fix MI_PREDICATE_RESULT write
  * 718bfdb3dad pan/bi: Implement fsin/fcos
  * 253b7954516 pan/bi: Allow negating constants
  * 362756ad094 pan/bi: Use replace_index in more places

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 06 Mar 2021 12:51:37 +0100

mesa (21.1.0~git2102231901.c80ddf9d740~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * c80ddf9d740 zink: Remove NULL checks after GET_PROC_ADDR_INSTANCE().
  * c43e8da5350 zink: Use mesa_loge() for should-never-be-reached
    initialization errors.
  * d53fa9d9ff3 ci/zink: Add tests of gles2, gles3, and gl33 on
    lavapipe.
  * a77eedd6bb6 docs: Document USE_ELF_TLS can work on Windows too
  * ba141b95a79 glapi: Support "ELF" TLS on Windows
  * d7e1f492bc4 radv: Disable displayable DCC for GFX8 properly.
  * 5edbc6148d7 zink: disable some builtin-gl-sample-mask sample shading
    tests on ci
  * e346f61a912 mesa: update vao _EnabledWithMapMode in
    copy_array_object
  * b0b1bf99573 anv: Fix wait_count missing increment
  * 97ff5160d19 ac/rgp: define EM_AMDGPU if missing for compatibility
  * ec35c4b57c7 ac: prefer system EM_AMDGPU definition
  * dba692c6187 etnaviv: use nir_lower_uniforms_to_ubo(..)
  * 1837135f7ca etnaviv: nir: add ubo lowering pass
  * ffebe480133 aco: don't rematerialize exec
  * 337ba88293e vc4: let st lower rect tex
  * 9c673245421 etnaviv: let st lower rect tex
  * 06f409a8c1f etnaviv: nir: support
    nir_intrinsic_load_texture_rect_scaling
  * 7c40e9a3229 ttn: lower rectangle textures if not supported
  * 08e072015a3 gallium/st: lower rectangle textures if not supported
  * 758a2d5343c gallium: add PIPE_CAP_TEXRECT
  * 8cb52f67351 nir/lower_tex: wider usage of
    nir_tex_instr_src_index(..)
  * a403ff4d703 nir/lower_tex: 'txs free' tex_rect lowering
  * 3fbde2fd936 nir: add has_txs flag
  * b0e23c92b30 nir: add load_texture_rect_scaling
  * 765097eac46 radv: add support for instruction timing with RGP
  * a72b7a9b6c6 radv: add support for exporting pipelines with RGP
  * 884e14d7845 radv: store a pointer to the code in radv_shader_variant
  * 7acb30de8ac radv: Enable displayable DCC.
  * f848f2adfae radv: Use ac_surface DCC settings for shareable images.
  * 0e189dd3fde radv: Add DCC info to the metadata.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 23 Feb 2021 19:21:35 +0100

mesa (21.1.0~git2102200231.3250e04d25e~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 3250e04d25e nir/algebraic: Add some max/min optimizations with 3
    variables
  * d9b5bce85ad nir/algebraic: Remove some redundant b2f logic-op
    reduction patterns
  * 7e127c1fca6 nir/algebraic: Fix some min/max of b2f replacements
  * a983a87a5f1 freedreno/ir3/print: Improve branch printing
  * 03762a956ea freedreno/ir3/print: More sane ssa src/dst display
  * 1516b6bd9a5 st/mesa: fix PBO download for TEXTURE_1D_ARRAY textures
  * 4c4a91abe59 iris: Reference the shader variant for last_vue_map as
    well
  * 0fa7ec14734 turnip,freedreno/a6xx: tell hw the size of shared mem
    used by CS
  * dab845d457e ci: Move specific driver testing to separate files in
    separate dirs.
  * 8a3dbf1ca6b microsoft/clc: Add a test with an unused kernel arg
  * 11061c4e286 microsoft/clc: Re-order dead variable removal after
    uniform vars_to_explicit_types
  * 14a00042326 turnip: consider tile_max_h when calculating tiling
    config
  * c763d238c6c xlib: Fix build regression since 99e25d183d9
  * 455ca9226ae ac/rgp: set gfxip in elf_hdr.e_flags
  * 9ce8b5024ae ac/rgp: dump co, col, pso database to rgp profile file
  * 5d51ccd7d16 ac/rgp,radeonsi,radv: pass struct thread_trace_data to
    ac_sqtt_dump_data()
  * c544e56fb50 ac/rgp: expose data structure to populate co, col, pso
    database
  * 110bb2c77dd ac/rgp: add helper function to write rgp elf oject
  * 12515d6b59f ac/rgp: add rgp co, col, pso data structures
  * 27ff46bde66 ac/rgp: add ac_msgpack.h/c
  * 34d6ce28e38 util: fix gcc vsnprintf overflow
  * b6b3b38434a turnip: consider HW limit on number of views when apply
    multipos opt
  * 88f42ea93e0 radv: emit the trap handler registers earlier
  * 2c6104d3d1f radv: make the TMA/TBA BOs resident buffers
  * 918838cd24e radv: make the trace BO a resident buffer
  * d96c0a22639 radv: make the border color BO a resident buffer
  * 834b69d1ef4 zink: fix win32 build
  * e3bdf815b79 radv: set correct value for OFFCHIP_BUFFERING on GFX10+
  * bf535c082bf nv50/ir: Initialize Instruction members.
  * 31dd0a4a1e5 zink: use vkGetFenceStatus when we're obviously checking
    for status

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 20 Feb 2021 18:12:15 +0100

mesa (21.1.0~git2102171823.2104135f38c~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 2104135f38c nir: Fix grammar error
  * 8e97fc3a291 radv: do not allow to capture SQTT on the compute queue
  * 6d8516bd748 radv: stop emitting pipeline bind markers
  * de542784f8c radv: make sure to allocate enough space when emitting
    SQTT userdata
  * 80709d11d29 radv: remove an outdated TODO about SQTT cache flushes
  * 09b23c42f9c radv: move SQTT parameters initialization to
    radv_thread_trace_init()
  * 388bde7e824 radv: create the start/stop CS for SQTT dynamically
  * 0f7379e3089 ci: tracie dashboard URLs only in the failure after the
    testcase
  * 73933036373 ci: correct artifacts location for piglit's runner
    messages
  * 87153b8f1c1 ci: make sure piglit's artifacts are not overwritten
  * 4ae5b84a676 ci: correct piglit's HTML summary location for artifacts
    upload
  * 88a6c6a4385 ci: clean paths used in the piglit runner
  * 90d6365ad4a radeonsi: force dcc clear to use compute clear
  * 1d64a1045ea radeonsi: enable dcc image stores on gfx10+
  * f18bceac72b radeonsi: replace force_cp_dma arg of si_clear_buffer by
    enum
  * 1a0b0e8460c radv,aco: allow unaligned LDS access on GFX9+
  * c2d57f55a83 radv: relax shared alignment requirements in
    mem_vectorize_callback
  * 4feca7ecde9 gallium/trace: add a pipe_screen::get_compiler_options
    method
  * c59fd3acb9e glthread: ignore the return value of glUnmapBuffer,
    don't sync, and return true
  * 638a1848490 glthread: don't sync when using pixel buffer objects
  * 0b6739ef807 glthread: don't declare pointers with const in unmarshal
    functions
  * 2804d489e37 glthread: assume all parameters are fixed if
    marshal_sync is present
  * 8288882965b radeonsi: set MEM_ORDERED optimally
  * e9e385b084f radeonsi: gather shader info about VMEM usage for
    MEM_ORDERED
  * 27e22f025ca radeonsi: gather shader info about indirect
    UBO/SSBO/samplers/images
  * d47c44add80 radeonsi: gather info about bindless images and memory
    stores with strstr(intr)
  * 5e47d6fc73a radeonsi: fix the value of uses_bindless_samplers
  * 19e6601413a radeonsi: do late NIR optimizations after uniform
    inlining
  * 33ac9dec91d radeonsi: allocate filled_size for streamout targets in
    set_streamout_buffers
  * 9db4b331f9f radeonsi: improve comments in si_emit_derived_tess_state

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 17 Feb 2021 18:48:28 +0100

mesa (21.1.0~git2102130025.3fc8da13f62~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * 3fc8da13f62 zink: flag exact alu op results in ntv with
    NoContraction
  * 8b793f95671 aco: remove dead code for the handling of exec
    temporaries
  * a56ddca4e80 aco: make all exec accesses non-temporaries
  * 5d7b3bf1a73 aco: handle non-temp phi definitions and operands
  * e663a15098f aco: don't create unnecessary exec phi on merge blocks
  * 3f614c6f7cb v3dv/meta_copy: get tlb compatible BC compressed formats
    for copies
  * 6fdf375a909 v3dv/formats: expose support for BC1-3 compressed
    formats
  * fcb229cbe07 v3dv/device: clarify that we can't expose
    textureCompressionBC
  * 643873a94f6 docs/features: gl_HelperInvocation on Panfrost
  * 2f70317e0d9 docs/features: Mark sample shading done on Panfrost
  * 2193d768bd7 docs/features: Mark some ES3.1 done on Panfrost
  * 0308095af7d docs/features: Mark more TBO exts done on panfrost
  * 2e33dfafbe6 panfrost: Advertise OES_standard_derivatives
  * f21e13301a5 panfrost: Bump advertised ESSL feature level
  * ea289ee1db3 panfrost: Bump max SSBO count
  * 6bba718027e panfrost: Advertise SAMPLE_SHADING
  * 9aede94711b panfrost: Assert on indirect compute shaders
  * 4b00d311e7f panfrost: Remove stale TODOs
  * 5d83442f8ea panfrost: Simplify bind_compute_state
  * 856f0abd2b7 pan/{mdg, bi}: Lower load_sample_pos
  * 00c1d5da347 pan/{mdg, bi}: Lower load_helper_invocation
  * 00df2745863 pan/bi: Implement coverage mask updates
  * ae8b1fa7db0 pan/bi: Decouple sysval loading from NIR
  * 1e7b5f38263 pan/bi: Implement
    nir_intrinsic_load_sample_positions_pan
  * ca0f50ec6aa pan/bi: Implement load_sample_mask_in
  * 92569f5d6ec pan/bi: Fix gl_SampleID read
  * 56240f6e85a pan/bi: Lower ifind_msb
  * ad06e0592aa pan/bi: Implement ufind_msb
  * 2ef97a079aa pan/bi: Implement bitfield_reverse
  * 06d6dd1b405 pan/bi: Support bit_count()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 13 Feb 2021 01:08:39 +0100

mesa (21.1.0~git2102101325.ed7e6eb54bd~b~mesaaco9) bionic; urgency=medium

  * New snapshot:
  * ed7e6eb54bd radv: fix memory leaks if a submission fails
  * bf5713d7368 zink: handle vote intrinsics in ntv
  * e35612e45f0 zink: add spirv_builder wrapper for vote intrinsics
  * cf6901809e8 ci: Add trailing slash to path for documentation preview
  * f758b1a25bf v3dv: support for depthBiasClamp
  * f7575fa71fb aco: fix adjust_vertex_fetch_alpha
  * 19711b0f44a radv: stop allocating useless ESGS scratch BO on GFX10+
  * caafedf38f1 radv: fix double free when creating a fence failed
  * cd03f1c6f6d gallium: Document behavior of more lowering pipe caps.
  * bcb5f9f94ac v3d: Stop advertising support for flat shading.
  * ff805f8ac79 v3d: Stop advertising support for
    PIPE_CAP_*_COLOR_CLAMPED.
  * 2992dc7386d v3d: Stop advertising support for
    PIPE_CAP_TWO_SIDED_COLOR.
  * 5ddc2f916fb v3d: Clean up vestiges of alpha test lowering.
  * b9a9cd59ff8 vc4: Stop advertising support for VS color clamping.
  * e584d4f6dd8 vc4: Stop advertising support for
    PIPE_CAP_TWO_SIDED_COLOR.
  * cc0841c82ae vc4: Remove vestiges of alpha test lowering.
  * 9aa7a2d10ce mesa/st: Assume that the default variant is always first
    in the list.
  * 1d5ce66b020 mesa/st: Always precompile the first shader variant.
  * 659916d6742 freedreno/a5xx: Don't forget to count our custom blits
    against queries.
  * 881ce0f0a4f freedreno: Remove FD_STAGE_* in favor of a "disable_all"
    flag.
  * 4cc3956193d freedreno: Force updating active queries on batch
    reordering.
  * 1bab56e1ba5 ci/virgl: Fix GLES31 testing on desktop GL.
  * 697fb11cfc0 features: mark off GL 4.3 for zink
  * cb80609bb06 zink: GLSL 430
  * 7909c642b16 zink: enable compute
  * c5cf5ad6f09 zink: export compute-specific shader/compute caps
  * a2771967cbc zink: add launch_grid pipe_context hook for compute
    handling
  * ce6d08a0e76 zink: flush gfx/compute batches when the other pipeline
    needs resource sync
  * dac99517ff2 zink: handle descriptor set updates for compute
    operations
  * e20a43ec354 zink: handle memory barriers for compute batch

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 10 Feb 2021 13:45:35 +0100

mesa (21.1.0~git2102071844.a4c11385b71~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * a4c11385b71 nouveau/nv50: fix linear buffer alignment for scan-
    out/cursors
  * 6650c53e641 nouveau/nvc0: fix linear buffer alignment for scan-
    out/cursors
  * 92f12952f32 nouveau: reinstate fencing on screen destroy
  * 0464117ad9b ci: remove nouveau from shader-db runs
  * 862b6a9a97a radv: Improve spilling on discrete GPUs.
  * 8a9162c85a7 android: iris: implement iris layer of INTEL_MEASURE
  * 5445e287493 android: anv: implement anv layer of INTEL_MEASURE
  * 9664bb1f3bb android: intel: Print GPU timing data based on
    INTEL_MEASURE
  * e5fc8a28dc7 winsys/amdgpu: try not to skip any code with
    RADEON_NOOP=1 to test CPU perf
  * ccaad7d8442 winsys/amdgpu: don't set unused usage for backing BOs of
    sparse BOs
  * 7d76b912bc3 winsys/amdgpu: don't inc/dec num_active_ioctls for
    backing BOs of sparse BOs
  * 77d111fcbf8 winsys/amdgpu: move amdgpu_winsys_bo::use_reusable_pool
    to the u.real union
  * 04f02e573ce winsys/amdgpu: move amdgpu_winsys_bo::is_user_ptr to the
    u.real union
  * 96c188d023f winsys/amdgpu: move amdgpu_winsys_bo::is_shared to the
    u.real union
  * 4bb9df366a7 winsys/amdgpu: move amdgpu_winsys_bo::cpu_ptr into the
    u.real union
  * c3778b8fe14 winsys/amdgpu: pack amdgpu_winsys_bo::is_shared and
    protect it by a mutex
  * ff311df6b54 winsys/amdgpu: remove
    amdgpu_winsys_bo::num_cs_references to remove atomics
  * 06b9dedfd91 winsys/amdgpu: optimize out conditionals in
    amdgpu_lookup_buffer
  * c9bc23d27ac targets/libgl-xlib: add support for virgl
  * 75c7e4b2f8b virgl: Convert errno to string.
  * 09ce403b2d7 radv: zero the bo descriptor array when allocating a new
    set
  * 2f534c2e2ee radv: null bo list pointer for null descriptors on
    update
  * 021bc4f8683 nv50,nvc0: clear internal vbo masks based on the
    trailing slots
  * eff837c7c2d pan/bi: Implement ACMPXCHG
  * d400d5e150f pan/bi: Implement AXCHG
  * b0a2a0af757 pan/bi: Respect side effects in DCE
  * f5709f17a27 pan/bi: Add side_effects helper
  * 836c1c6fb10 pan/bi: Fix NULL deref with empty shader
  * 855e29cd78f pan/bi: Make sure we never branch to an non-existing
    clause
  * dbce99a809d pan/bi: Add an is_terminal_block() helper

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 07 Feb 2021 21:02:33 +0100

mesa (21.1.0~git2101300514.205e737f51b~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 205e737f51b docs: update calendar for 21.0.0-rc3
  * 41997bb8602 docs: update calendar for 21.0.0-rc2
  * ea6f5ef779a docs: update calendar and link releases notes for 20.3.4
  * 98d21ee5e1f docs: Add sha256sum for 20.3.4
  * ea26354ce79 docs: add release notes for 20.3.4
  * 1869072c80d spirv: Store SPIR-V version of the module
  * a0d73ca65c0 spirv: Don't remove dead variables in `create_library`
    mode
  * fd44bcf9a84 spirv: Don't bother counting num_images/num_textures
  * 55e853d823e mesa/st: Allocate the gl_context with 16-byte alignment.
  * 25c70a9a1ef lavapipe: add missing loader interface negoitation
  * f026345b34a microsoft/compiler: Make resource_state_manager only
    build with_gallium_d3d12
  * 8deca5a72ea CI: windows: Force using LLVM 12
  * a69ab2ae369 CI: windows: split the layers to meet new registry
    requirements
  * 0ef1f418bb9 CI: windows: augment the timeout of building the windows
    container
  * d76f51d6fd6 glsl: support 64bit integer loop iterators
  * 234ba13f100 pan/bi: Add packing format tests
  * 9497d8025f4 pan/bi: Test pack_sync
  * e0a5e5eb157 pan/bi: Test pack_tuple_bits
  * 7898decbd32 pan/bi: Test pack_upper
  * e383af639a9 pan/bi: Test pack_literal
  * 80157fac68b pan/bi: Add packing unit test group
  * 4379f7bad27 pan/bi: Pack multiple tuples per clause
  * 9362a139821 pan/bi: Calculate pos for constant packing
  * 51f13185c84 pan/bi: Add pack_format helper
  * 0e9a05c0041 pan/bi: Add subword 4 or 7 pack
  * 1adb996acc3 pan/bi: Add subword 5/6 pack
  * 038bb8eabe6 pan/bi: Add tuple/embedded constant pack
  * 2258acf5caf pan/bi: Add bi_pack_sync
  * 5f523c60fc6 pan/bi: Add bi_pack_tuple_bits
  * 0812a5204ba pan/bi: Add bi_pack_upper

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 30 Jan 2021 18:52:00 +0100

mesa (21.1.0~git2101290944.5dc823304b1~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 5dc823304b1 radeonsi/sqtt: forward string markers to sqtt
  * 3bd5120a57c radeonsi/sqtt: allow AMD_THREAD_TRACE_TRIGGER to be a
    frame number
  * 80c3ed147bb radeonsi/sqtt: fix SQTT bo size overflow
  * f2d57d28ed6 radeonsi/sqtt: use more event identifier
  * a77834cecf2 ci: split src/mesa/**/* matching rule
  * 84a38ec1336 iris: Enable PIPE_CAP_SHAREABLE_SHADERS.
  * 1afed51445c iris: Store a list of shader variants in the shader
    itself
  * 578cd00d936 iris: Refcount shader variants
  * bef0af3f216 microsoft: Fix comma in variadic macro for MSVC
  * 3c7062417be gallium/tessellator: Fix warning suppression
  * 4fec6c94481 panfrost: Add the tiler heap to fragment jobs
  * d860b61f091 glapi: guard against invalid XML definitions for
    glthread
  * b5a0714aaeb glthread: fix glVertexAttribDivisor calls not being
    tracked by non-VBO uploads
  * 76c322a48de glthread: fix interpreting vertex size == GL_BGRA for
    vertex attribs
  * b308d56e207 ci: Update baremetal kernel to 5.11-rc5 plus patches.
  * 97fbe2d45f9 iris: Move VS draw parameter dirty flagging to
    iris_bind_vs_state
  * fdbb5d4dd9a iris: Minor code restyling in iris_bind_vs_state
  * ddfdd944688 iris: Use shader_info rather than vs_prog_data for draw
    parameter checks
  * d938fcefb96 radv: Expose VK_KHR_workgroup_memory_explicit_layout.
  * 7d0c940d703 freedreno: Remove duplicate bc invalidate on
    flush_write_batch().
  * f179594cf9a freedreno: Early-out from the resource write path when
    we're the writer.
  * d1a0eba2417 freedreno: Use a real type instead of void * for the
    fd_batch->key.
  * 695d3bcb12d mapi: Undefine MemoryBarrier
  * 92f1b6bad58 glapi: Undefine MemoryBarrier
  * 4656be70dd7 anv: Support multiple engines with
    DRM_IOCTL_I915_GEM_CONTEXT_CREATE_EXT
  * c5e7c91487b anv: Add anv_gem_count_engines
  * 5d84c764fde anv: Gather engine info from i915 if available
  * c0d07c838a9 anv: Support i915 query (DRM_IOCTL_I915_QUERY) from
    Linux v4.17
  * 8d07f719181 anv: Print queue number with INTEL_DEBUG=bat
  * 9fd08066215 anv: Turn device->queue into an array

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 29 Jan 2021 10:44:24 +0100

mesa (21.1.0~git2101261627.4099cdc97f2~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 4099cdc97f2 compiler/nir: Add support for lowering stores with
    nir_lower_instruction
  * e3f56601e0c radv: fix divide by zero with no tesselation params
  * 9a49760e820 aco: fix VCC hint on boolean subgroup operations
  * b729cd58d76 nir/algebraic: eliminate exact a*0.0 if float execution
    mode allow it
  * 614ab26afd0 nir/algebraic: optimize out exact a+0.0 if it's used
    only as a float
  * 2f0d480c73b aco: optimize out a*1.0 if it's used as a float
  * 54a09545ec6 aco: optimize a*0.0
  * 2849f0b5aac nir/algebraic: optimize out exact a*1.0 if it's used
    only as a float
  * 0c3d8e8e2e8 aco: disable a*1.0 optimization if the instruction is
    precise
  * 8da467f4fef ci: make piglit runner less noisy and show a better
    failure message
  * be330831411 ci/vc4: Add piglit job
  * a825919dc6c ci/vc4: rename stage to Broadcom
  * ea88e1c820c ci/vc4: allow custom timeout values for activity
  * 23461897fe1 radv: add support for emitting PS_DONE/CS_DONE on GFX6-8
  * cbcb9e7e1b5 radv: Fix struct initialization for MSVC
  * 28c4960ca57 radv: Use typed outarray API
  * 6992f5419a5 radv: Disable calibrated timestamps on Windows
  * 2e81ed2a471 radv: Pointer arithmetic on char/uint8_t, not void
  * 879b5f41f4c radv: Modify radv_descriptor_set for MSVC legality
  * c0b4b8fc748 radv: Stub sections that don't have _WIN32 support
  * 146e3262757 radv: Remove unnecessary headers
  * b7db6ceb9a7 radv: Use linker pragma to simulate weak functions
  * 10b3eecd361 spirv: Don't remove variables used by resource indexing
    intrinsics
  * cb7352ae95a nir: Add a data pointer to the callback in
    nir_remove_dead_variables
  * f1cffe23940 clover: Add constructor for global_argument.
  * 001722b3a30 anv: Skip CCS ambiguate which preceed fast-clears
  * e2c5ef6cd65 intel/gen12: Fix memory corruption issues in fused Gen12
    parts.
  * 1d967132f3c panfrost: Use normal malloc/free instead of ralloc for
    surfaces
  * 46e98004084 freedreno/a6xx: Fix 3dmark misrendering with unwritten
    MRTs
  * aa1ddb6fe3c freedreno: Skip some batch dependency tracking if !ctx-
    >dirty.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 26 Jan 2021 17:16:44 +0100

mesa (21.1.0~git2101230047.53d9beb9b88~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 53d9beb9b88 gallium/u_inlines: add helper for simplifying
    pipe_context::resource_copy_region
  * cacb3e18267 zink: enable PIPE_CAP_SAMPLER_VIEW_TARGET
  * d37124b065c virgl: add support for VIRGL_CAP_V2_UNTYPED_RESOURCE
  * 41366ba4942 virgl: update headers
  * fb65285629c docs/zink: add GL 4.2 requirements
  * d0e7a7d58de docs/zink: add GL 4.1 requirements
  * c3d7de47cd6 docs/zink: add GL 4.0 requirements
  * 4374e8e99f1 docs/zink: fix phrasing of GL 3.3 requirements
  * 02c43eb975d docs/zink: document the independentBlend requirement for
    GL3
  * fb5d7d60e7e docs/zink: add two missing required features
  * a640588a416 docs/zink: add missing colon
  * 9565c1d83c9 nv50/ir: Initialize RegAlloc member func in constructor.
  * 92ec7b577c8 zink: clone shader before lowering clip_halfz
  * 5282210c0b9 zink: check correct caps for
    PIPE_CAP_IMAGE_LOAD_FORMATTED
  * d31f2200b35 ci: Enable process isolation for softpipe & freedreno
    piglit jobs
  * cca257d5961 anv: Advertise shaderInt64 on Gen11+
  * 8c2543d0377 intel/fs: Implement umin/umax shuffle
  * a6500236e39 intel/fs: Refactor our shuffle emit code
  * 44571c6a68a intel/fs: Properly lower 64-bit MUL on 64-bit-incapable
    platforms
  * c80db6611aa intel/fs: Support 64-bit CLUSTER_BROADCAST on Gen11+
  * b90921ec0c4 intel/fs: Support 64-bit SHUFFLE on Gen11+
  * cdedc82329c intel/fs: Support 64-bit SEL_EXEC on Gen11+
  * 58bcb5401d8 intel/fs: QUAD_SWIZZLE requires packed data
  * 69a3559efd6 intel/reg,fs: Handle immediates properly in subscript()
  * e797daba538 intel/compiler: Move brw_reg_type_for_bit_size to
    brw_reg_type.h
  * 4c8cbe9b134 intel/compiler: Return 1 for immediates in regs_read
  * 178820212b7 nir/lower_int64: Lower 64-bit vote_ieq
  * 731adf1e17a nir/lower_int64: Add lowering for 64-bit iadd
    shuffle/reduce
  * bf7a1142465 nir/lower_int64: Add lowering for some 64-bit subgroup
    ops
  * da331f814fd nir/lower_int64: Fix lowering of f2[ui]64 for 16-bit
    float

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 23 Jan 2021 01:52:16 +0100

mesa (21.1.0~git2101202253.bc0508ad38d~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * bc0508ad38d radeonsi: allow instance_count == 0 on chips that handle
    it correctly
  * 76d6351dab7 radeonsi: don't validate inlinable uniforms at draw time
  * 185a2472a4c radeonsi: move variables closer to their use in most
    draw state functions
  * ae5df516f1e radeonsi: clear dirty_atoms and dirty_states only if we
    entered the emit loop
  * 2206840f6c1 radeonsi: enable the GS tri strip adj workaround with
    primitive_restart
  * 888a45a3621 radeonsi: evaluate si_get_vs in si_draw_vbo at compile
    time
  * c5d3341b6e1 radeonsi: inline the last use of si_get_vs_state
  * 5f7715083bf radeonsi: evaluate sh_base in si_emit_vs_state at
    compile time
  * e8ccb6f0f39 radeonsi: add si_get_user_data_base selecting user data
    registers
  * 88a02d80deb radeonsi: don't set context_roll for non-gfx9 in
    templated functions
  * 581a96bc449 radeonsi: don't pass pipe_draw_info into
    si_emit_draw_registers
  * ac2b4aa08f5 radeonsi: unify uploaders on APUs too
  * facd34431b7 docs/freedreno: Fix a few typos
  * 13b21156e47 nir: Work around MSVC x86 internal compiler error
  * 28207669d03 anv: Fix stencil layout in render passes
  * f79f382c81f nir_to_tgsi: Store directly to TGSI outputs when
    possible.
  * f6e35e5fd08 ci/freedreno: Fix xfail setup for
    sampler3d_float_vertex.
  * 914c61d6c09 radv,aco: don't use MUBUF for multi-channel loads on
    GFX8 with robustness2
  * 4eec0fb55c1 radv: remove redundant check in
    depth_view_can_fast_clear()
  * 27d4a155289 radv: remove unnecessary radv_image::tc_compatible_htile
  * c30f010e8fa radv: remove redundant check in
    radv_process_depth_stencil()
  * d245d7b6b8b virgl: Cache depth and stencil buffers
  * af9977a3d5f aco: add affinity for non-sequential MIMG operands
  * 4015b3651ac aco: only require texture coordinates to be in WQM if
    NSA is used
  * c353895c922 aco: use non-sequential addressing
  * faf3e9a27f4 aco: move VADDR to the end of the operand list
  * cd29210fcee aco: add emit_mimg() helper
  * 9890dabb1b2 aco: have emit_wqm() take Builder instead of
    isel_context
  * 489aa8c7cb7 aco: fix num_waves on GFX10+
  * 12ea0143de6 radv: fix max_waves estimation on GFX10.3

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 20 Jan 2021 23:39:19 +0100

mesa (21.1.0~git2101181851.087ef91c85c~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 087ef91c85c nvc0: index_bias is now only set for indexed draws
  * 111c0733eae cso: set index_bounds_valid = true for arrays draws
  * 333730405de zink: handle NULL views in zink_set_sampler_views
  * b50b28cd33f turnip: disable UBWC on Z24_S8 MSAA images on A630
  * 63a431b81c8 anv: Add a trivial implementation of
    VK_KHR_deferred_host_operation
  * af1aef10f9a radv: Do not use a pipe offset for aliased sparse
    images.
  * 23f2e777105 wsi/x11: Use get_screen_resources_current in
    wsi_x11_detect_xwayland
  * b06f3c52bfb radeonsi: trim the size of si_vgt_param_key and
    si_vgt_stages_key
  * f1e34f125d9 radeonsi: don't use si_get_vs_state in most places
  * 4088b6f2936 radeonsi: rearrange condition for streamout workaround
    on gfx7 and gfx8
  * eb22bd2072f radeonsi: get out of si_emit_vs_state early for blit
    vertex shaders
  * 73709143d22 radeonsi: remove MRT-draw-calls, spill-draw-calls, spill-
    compute-calls
  * f2a51487015 radeonsi: make sctx->vertex_elements always non-NULL
  * 961aa67adf6 radeonsi: add a specialized function for CP DMA L2
    prefetch
  * 0eca4660a55 radeonsi: make cik_emit_prefetch_L2 templated and move
    it to si_state_draw.cpp
  * c43d00dc915 radeonsi: fix si_num_prims_for_vertices for
    PIPE_PRIM_POLYGON
  * 6682c1603ce radeonsi: don't compute average vertex count in
    si_draw_vbo
  * 295106c3e74 radeonsi: don't pass pipe_draw_info into
    si_emit_derived_tess_state
  * 6f74105a343 radeonsi: translate pipe_prim_type only when it changes
  * d0d4c4ba1d7 radeonsi: don't pass pipe_draw_info into
    si_emit_ia_multi_vgt_param
  * 53f9bb860b2 radeonsi: don't pass pipe_draw_info into
    si_emit_vs_state
  * 4056e953fe4 radeonsi: move emit_cache_flush functions into
    si_gfx_cs.c
  * 1ceec51b128 radeonsi: don't clear unaligned bits when unbinding
    vertex buffers
  * df456312c2a radeonsi: constant buffer cleanups
  * b53d404aa73 android: freedreno/ir3: Switch over to new
    encoder/decoder
  * 7c0298e2fe4 android: freedreno/hw/isa: Add description of ir3 ISA
  * a183ee2ed7f zink: remove excessive checks for loader version
  * c85902d60d4 zink/codegen: find promotion version using vulkan
    registry
  * 833b6ab4432 zink/codegen: adding/fixing comments and copyright
    notice
  * a454c562d67 zink/codegen: codegen-ize load_instance_extensions()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 18 Jan 2021 19:51:59 +0100

mesa (21.0.0~git2101120251.f7527f7f652~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * f7527f7f652 glcpp: disable 'windows' tests
  * c53a886ba86 frontends/omx: fix build warning
  * 059ae7cb923 nouveau: add drm-shim support
  * 28a781323fb nouveau: change fence destruction logic on screen
    destroy
  * c7e1ef7c0c5 panfrost: Advertise ES3.0 on Bifrost
  * bb1b3cc9b03 panfrost: Test GLES3 on Bifrost
  * abca80cf308 panfrost: Disable AFBC of 3D, 2D arrays
  * 0b590c2e8ca panfrost: Promote 8b to 16b for blend descriptors
  * bef3fedc814 pan/bi: Lower 8bit fragment outputs to 16bit
  * 455cde2562b pan/bi: Assert immediate indices fit
  * 77209e05001 pan/bi: Parametrize intrinsic immediate limits
  * b15f3a1107f pan/bi: Use TEXC for indices >= 8
  * 3705ad96aa9 pan/bi: Implement scalar i2i8/u2u8
  * 6b4f2d85296 pan/bi: Allow passing thorugh 8-bit scalars
  * fc3ac6fe557 pan/bi: Don't suppress Inf/NaN
  * d0c35f46afc pan/bi: Fix ATEST with pure integers
  * bf7fe304364 pan/bi: Pull out bi_dontcare helper
  * 231c27adaf4 intel/common: Build mi_builder_test for gen 12.5
  * aa7a86c78aa r600: Support TGSI_OPCODE_I64NEG
  * e012161aeef pan/bi: Allow non-terminal BLEND operations
  * 4439757db23 pan/bi: Use the interference mechanism to describe blend
    shader reg use
  * f61be082d32 pan/bi: Restrict registers to r0-r15 when compiling
    blend shaders
  * de0fa4de5fd pan/bi: Port bi_collect_blend_ret_addr() to the new
    compiler infra
  * 424c22fc326 pan/bi: Pass bundle pointers to bi_pack_tuple()
  * a6f1500bedd pan/bi: Workaround BLEND precolour with explicit moves
  * 372a3a14104 panfrost: Set the RT index when emitting a Bifrost blend
    descriptor
  * 20853814329 vulkan/overay: fix violation of VUID-VkDeviceCreateInfo-
    pNext-00373
  * 14e6f541b16 nv50: use 2d blit when m2mf doesn't support the copy
  * ec668e2fd14 nv50,nvc0: serialize between before/after using a zeta
    surface as color
  * f763d0f1952 nv50: fix instancing of client-side vertex buffers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 12 Jan 2021 04:21:31 +0100

mesa (21.0.0~git2101081603.317ec8b5011~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 317ec8b5011 zink: disable render_condition_enable during blit
  * 7ef2046065f radv: only set BO metadata for the first plane
  * 4e3e7f35f7e zink: clamp shader input/output max values
  * d95fe8a25e7 radv: support SpvCapabilitySparseResidency
  * 4c67423e99d radv: implement is_sparse_texels_resident and
    sparse_residency_code_and
  * 6d5e26752c6 ac/nir: implement sparse image/texture loads
  * 55aeac7af46 ac/nir: implement nir_op_vec5
  * a502aa7b043 aco: form sparse load clauses
  * 0bd14be962c aco: implement sparse image loads
  * 382f50ad2ca aco: implement sparse texture fetches
  * 5a4f6313b10 aco: implement nir_op_vec5
  * 962c917cea9 aco: move MIMG VDATA to its own operand
  * 2aaf52bb85b aco: fix MIMG_instruction::lwe comment
  * 816b7fb5cb6 aco: fix unreachable() for uniform 8/16-bit nir_op_mov
    from VGPR
  * 10431c89647 ci: Add *ignore_scheduled_pipelines to mesa/gallium
    rules templates
  * 6bde5cf276e ci: Rule out scheduled pipelines in .windows-build-rules
  * 3fb4755d48d util: Disable memstream for Apple builds
  * f40a7d3c93d radv: fix performance regression by restoring TC-compat
    HTILE in GENERAL
  * 0ae1cf46a6c radv: fix enabling TC-compat HTILE in GENERAL for writes
    on GFX10+
  * 20683461e3c radv: configure the texture descriptor for TC-compat
    CMASK on GFX10+
  * e248119a82e r300: Fix typos.
  * f1b51d472a7 gallium/ntt: lower uniforms to ubo
  * 28a141e3250 iris: Blit stencil according to aspect_mask
  * 1148da34364 iris: Use single-aspect formats more in iris_blit
  * db2cdc4277b iris: Blit non-stencil according to aspect_mask
  * b73e903f961 iris: Loop through an aspect mask in iris_blit
  * 776074d66c8 iris: Increase use of pipe_resources in iris_blit
  * 51d26e2edf8 iris: Use texture preparation helper in iris_blit
  * 04d73e2dc20 iris: Move depth-format assertion out of iris_blit
  * ce3a6dfa795 iris: Don't prepare depth for stencil-aspect blits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 08 Jan 2021 16:11:39 +0100

mesa (21.0.0~git2101050447.a0314083be5~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * a0314083be5 mesa: fix a second bug in merging light state parameters
    with unpacked uniforms
  * 45acf9b49ad mesa: fix a bug in merging light state parameters with
    unpacked uniforms
  * 4db8b171a51 mesa: add STATIC_ASSERTs to the STATE_LIGHT_ATTRIBS case
  * 6549caf2c23 st/mesa: fix a defect when st_validate_state was invoked
    for unused states
  * 1f17f8bb6de st/mesa: simplify checking whether to pin threads to L3
  * a0467b7fa16 util: replace UTIL_MAX_CPUS by
    util_cpu_caps.num_cpu_mask_bits
  * c7486c996e1 glsl/builtin_functions: Rename int64 function to
    int64_avail
  * cd2f3627a6c meson: Add _GNU_SOURCE for Haiku to activate non-posix
    functions
  * 76eb3478cf9 radeonsi: take color interpolation into account for
    shader variants
  * 31240a875c0 radeonsi: add driconf options to enable/disable Smart
    Access Memory
  * b94626d3eea ac,radeonsi: limit Smart Access Memory to Zen 3 and
    GFX10.3 due to perf issues
  * e4fa7c440d2 util: add AMD CPU family enums and enable L3 cache
    pinning on Zen3
  * 8457be14972 radeonsi: Fix typos.
  * 539c25c2daf nir/algebraic: Move the flrp -> bcsel rule earlier
  * ec16f935fe3 nir/algebraic: Mark comparisons generated from lowered
    fsign precise
  * 9771af5ddec nir/algebraic: Fix broken NaN and -0.0 behavior
  * 010e663cc34 spir-v: Mark floating point comparisons exact
  * 55621c6d1c0 nir/algebraic: Add some compare-with-zero optimizations
    that are exact
  * 9167324a86b nir/algebraic: Mark some logic-joined comparison
    reductions as exact
  * 71961c73a94 nir: Correctly constant fold fsign(NaN) and fsign(-0)
  * fe3c5182775 nir/algebraic: Don't add reordered version of patterns
    for commutative instructions
  * 314a40c902c Revert "nir: Replace an odd comparison involving fmin of
    -b2f"
  * aec0547838f nir/algebraic: Make some notes about comparison
    rearrangements versus infinity
  * 363efc28234 nir: Make some notes about fsign versus NaN
  * 5ae7d40648c st/mesa: don't affect original st_CompressedTexSubImage
    parameters
  * 0cf5d1f2262 gallium: remove PIPE_CAP_INFO_START_WITH_USER_INDICES
    and fix all drivers
  * 85b6ba136bd st/mesa: implement Driver.DrawGallium callbacks
  * 8ebabfe2b3b virgl: fix handling draw info
  * a36d1b1c6e6 v3d: don't use index_bias if not indexed
  * dca8a71ff0e vc4: don't use index_bias if indexed

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 05 Jan 2021 08:41:40 +0100

mesa (21.0.0~git2012290958.accc2222174~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * accc2222174 virgl: fix BGRA emulation artifacts during window resize
  * 46d2f4b75e3 svga: Fix typos in comments.
  * 4dbcf24f682 microsoft/clc: Hook up printf
  * 76788353b2b clover/nir: hookup printf (v3)
  * 3f779013423 nir: Add an algebraic optimization for float->double-
    >float
  * 24669a672f3 nir: Add a printf lowering pass (v5)
  * 9524e9dbd08 nir/vtn: Implement printf opcode in terms of intrinsic
    (v9)
  * 2a3fe68c332 nir: Add intrinsic and string ptrs
  * 0a6e1cf383d clover: add core clover printf support (v12)
  * 95527fe2292 clover/module: add a printf support to module (v5)
  * 77b70fa35d4 util: add printf specifier shared helper code.
  * 9ef23e428bd panfrost: Fix discard behaviour on Bifrost
  * 5a1518e86b4 zink: add support for VK_EXT_4444_formats
  * 0f5726c5035 zink: fix more instance detection stuff
  * 122da9bd2da freedreno/ir3: remap FRAG_RESULT_COLOR to _DATA* for
    dual-src blending
  * 174070942b8 ci/deqp: Fix inverted meaning of DEQP_NO_SAVE_RESULTS.
  * 017edcd63dd android: pan/bi: Generate bi_opcodes.{c,h}
  * c0bae8d67fa android: pan/bi: Add explicit dependency on the ISA
    helpers
  * 2e7f35a8bcb r600/sfn: merge SpecialValue and InlineConstValue
  * a7be48bdae9 mesa: glProgramBinary add resource_hash
  * 72390f063f2 virgl: next_handle variable modify to atomic inc in
    virgl_object_assign_handle
  * 746a0f502ae gallium/ntt: Fix check for "is there anything in the
    else block?"
  * 358d5a270d9 ci/softpipe: Include a piglit run.
  * cb5ee80ee80 ci/piglit: Include the updated piglit results list in
    the job results.
  * 829e9105a62 softpipe: Enable GLSL 400 for compat contexts too.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 29 Dec 2020 16:53:11 +0100

mesa (21.0.0~git2012250008.7d8d99ea129~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 7d8d99ea129 turnip: Remove unsigned nonnegative check.
  * 512ca3464dd d3d12: Initialize TransitionableResourceState
    m_SupportsSimultaneousAccess.
  * 28a9c9e573f d3d12: Fix memory leak if state is NULL.
  * 671e1571d9f nir/tests: Initialize nir_serialize_test member dup.
  * 2472f52e738 zink: handle 0 as valid pipeline hash value
  * fc34f684d6c zink: handle null ubos
  * 9c176a7e63d Revert "radv: use 32-bit predication for skipping FCE on
    GFX10.3+"
  * 7da33b68b0f v3d: Fix typos.
  * 2f8237754b8 zink: fix debug utils init
  * 0ce7c4a7c98 gallivm: Use the proper enum for the texture target
    bitfield.
  * 0a179bb6e26 st/mesa: Generate NIR for ATI_fragment_shader instead of
    TGSI.
  * 5875cfcc2ff mesa/ati_fs: Clean up writemask handling.
  * 06a081c6319 mesa/prog_to_nir: Factor out the texture-target-to-
    sampler-dim helper.
  * f0606cafe83 mesa/st: Update FP state when textures change with an
    ATI_fs bound.
  * 69487c754c4 radeon/vcn: fix hevc 10bit profile error

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 27 Dec 2020 19:37:00 +0100

mesa (21.0.0~git2012232310.6af87193c4f~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * 6af87193c4f lavapipe: add basic vulkan device group support.
  * 7de0d93fcd6 llvmpipe: enable lower device id to zero
  * de10428770e llvmpipe: add support for grid base
  * c16239b4a66 gallium: add grid base to dispatch info
  * d0684c1914e zink: zero VkMemoryRequirements on init
  * 16fb5044023 ci/deqp: Move the load reporting to a quiet block.
  * 302b4f77244 ci/deqp: Upgrade the runner, enable junit output.
  * 35e91434283 ci/deqp: Move .shader_cache artifacts exclusion to the
    yml.
  * 872cfe2beb6 ci: Disable the now flaky Portals.trace on a630.
  * 2f41afeac1a mesa/st: Fix use-after-free of the draw VS.
  * 5dd5fb1926c softpipe: count CS invocations for pipeline stats
    queries.
  * eb7e20b378b pan/bi: Add builder data structure
  * e8c687b15b8 pan/bi: Add cursor data structures
  * dd11e5076e6 pan/bi: Add new bi_instr data structure
  * e364e110208 pan/bi: Add bi_{abs, neg} helpers
  * 7e6be656d34 pan/bi: Add bi_imm_u{8, 16} helpers
  * f4b1c12bab1 pan/bi: Add imm_f32 helper
  * 372787020d4 pan/bi: Add bi_half and bi_byte selectors
  * 06f52fe0b1a pan/bi: Add node_to_index helper
  * b85f317017d pan/bi: Add a helper to convert to old-style nodes
  * 2d9147dae45 pan/bi: Add helpers to generate bi_index from NIR
  * fc760e7d66b pan/bi: Add bi_temp{_reg} for new-style bi_index
  * 903a818f33e pan/bi: Add helper to extract a word from an index
  * 3a63b5d7cf3 pan/bi: Add nullity/equality helpers for bi_index
  * 5dd756afede pan/bi: Add bi_index constructors
  * 99152b60457 pan/bi: Add bi_index data structure
  * f9cd6f0500c pan/bi: Add bi_swizzle enum
  * d93995fd2bc pan/bi: Make BIR_INDEX_ZERO less special
  * 0f0bb87e9d4 pan/bi: Remove BIR_INDEX_UNIFORM
  * 98fabee2139 pan/bi: Merge BIR_INDEX_FAU and BIR_INDEX_BLEND

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 23 Dec 2020 23:57:00 +0100

mesa (21.0.0~git2012170207.daf339a4795~b~mesaaco8) bionic; urgency=medium

  * New snapshot:
  * daf339a4795 docs: Add a stub page for Panfrost
  * 434da21a7c8 meson: add missing dependency on generated git_sha1.h
  * 818031afd1c docs: update calendar and link releases notes for 20.2.6
  * 5c164e361b7 docs: Add sha256 sums for 20.2.6
  * aade49f9567 docs: add release notes for 20.2.6
  * 2a627e7a03d pan/decode: Fix "Access to unknown memory" message
    formatting
  * 1baddfcff6f panfrost: Fix negative LOD bias support on Bifrost
  * 3a2a0054046 pan/gen_pack: Fix signed integer packing
  * e541aa76e29 panfrost: Split up batches with many jobs
  * 720a2d8f29e zink: map some more formats
  * 74132b761cd zink: add format test
  * d788a1d6f4e zink: fix format-mapping
  * 123f3d0d647 zink: make zink_format all about raw format-translation
  * d66df61bf78 zink: convert x8-formats in zink_get_format

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 17 Dec 2020 04:36:16 +0100

mesa (21.0.0~git2012162000.96f1c542667~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * 96f1c542667 docs: update calendar and link releases notes for 20.3.1
  * 066689cb590 docs: Add sha256 sums for 20.3.1
  * 245145f3c38 docs: add release notes for 20.3.1
  * e8360051946 docs: update calendar and link releases notes for 20.2.5
  * b8005592bdc docs: add sha256 sums for 20.2.5
  * 8c12442ba39 docs: add release notes for 20.2.5
  * 2d78e28ba70 d3d12: Flush and wait in flush_frontbuffer
  * 0507da62c47 gallium/dri: Add D3D12 software driver option
  * eb4353838d7 d3d12: Don't require DXIL for WSL
  * 0b60d6a24d4 d3d12: Support Linux eventfds for fences
  * ee4c80f77df d3d12: Only support DXGI and GDI APIs on Windows
  * ed286325a0e d3d12: Only play DLL path tricks on Windows
  * dfeb5ecd4ac d3d12: Use u_dl instead of Windows DLL APIs
  * 29ccbd9b1e5 d3d12: Add forward declaration for LUID
  * 738564a7531 d3d12: Scope down wrl includes to just client.h
  * af2e212c598 d3d12: Use IID_PPV_ARGS instead of __uuidof
  * e1e05ad772e d3d12: Include dxguids/dxguids.h in files that need
    __uuidof
  * da9b6a21f4d d3d12: Include wsl/winadapter.h when not compiling for
    Windows
  * 8fc2676e47d winsys_handle: Change D3D12 resource handle type to
    void*
  * 4ee55769d6d microsoft/compiler: Pick up new dxcapi.h
  * f6736480035 d3d12: Add DXCore screen variation
  * 50fab5da93a d3d12: Refactor screen to abstract DXGI details
  * bc5f69faee9 d3d12: Use DirectX-Headers wrap for d3d12.h
  * c37d8ae82b9 egl/wayland: add a NULL guard for the authenticate
    callback
  * a709d99bfd7 st/mesa: set drawpixels swizzle before creating sampler
    view
  * ba74e1be22f zink: fix 8 bit index handling code
  * 008bf6ca610 zink: ralloc spirv_shader
  * 03ccd3c4687 zink: use emit_bitcast helper
  * 134df0069fb zink: use shader-read-only-optimal for samplers
  * 1a4c4cd1103 driconf: add workaround for Enter The Gungeon

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 16 Dec 2020 20:53:15 +0100

mesa (21.0.0~git2012150031.9ac8f8f490d~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * 9ac8f8f490d gallium: Add optional pipe_context to flush_frontbuffer
  * 23488c35152 aco: allow divergent mbcnt_amd masks
  * feee375db99 aco: fix mbcnt_amd with wave32
  * 2ffae5a439b xmlconfig: Disable WITH_XMLCONFIG on Windows
  * a7fb3954a13 glx: fix spelling issues
  * 618e480f385 glx: lets compare drawing command sizes using MIN3
  * ef4101d6d73 aco/spill: only prevent rematerializable vars from being
    DCE'd if they haven't been renamed
  * 0bccfd86f6e aco: fix DCE of rematerializable phi operands
  * a791c1f3a71 radv: advertise VK_KHR_fragment_shading_rate on GFX10.3+
  * 77343576ebd aco: implement a workaround for gl_FragCoord.z with VRS
    on GFX10.3
  * 45524afe95d radv/llvm: implement a workaround for gl_FragCoord.z
    with VRS on GFX10.3
  * 7a464f4296a radv: track if VRS is enabled to apply a workaround on
    GFX10.3
  * c587eaadf6f aco: implement fragment shading rate
  * 0bac0b7f19b radv/llvm: implement fragment shading rate
  * bf69d89b5a7 radv: implement VK_KHR_fragment_shading_rate
  * d8c1931ca93 radv: add VK_KHR_fragment_shading_rate but leave it
    disabled
  * 9770ffb07cc amd/registers: add missing VRS registers
  * c4217ef2fc7 aco: don't create dead exec mask phis on merge blocks
  * a5f4be4fcd5 etnaviv: remove imm_ prefix from
    etna_shader_uniform_info members
  * fefbafb6ff3 etnaviv: rename from immedaite to uniform in some places
  * ad19b0714a8 radv: fix access to uninitialized radeon_bo_metadata
  * 614c77772ac st/pbo: fix pbo uploads without
    PIPE_CAP_TGSI_VS_LAYER_VIEWPORT
  * dfd0f042e0d zink: really fix direct image mapping offset (I mean it
    this time)
  * ab79e6b8e33 ci: skip failing test on lavapipe
  * 6a34a686ea9 zink: fix property detection
  * d7911f9c6b0 mesa: Remove cmd_size < 0 check.
  * 56cb5cf34e8 intel/genxml: Avoid generating identical 12.5 and 12
    branches.
  * 73c33803359 mesa: Remove extra texObj.
  * d3d28f6c2d1 nir: Redefine start/end_ip of blocks to fix NIR-to-TGSI
    liveness bugs.
  * 6916d1d9247 gallium/ntt: Drop reindexing of SSA defs and regs.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 15 Dec 2020 05:48:47 +0100

mesa (21.0.0~git2012111444.fd49ba59a38~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * fd49ba59a38 aco/ra: use get_reg_specified() for p_extract_vector
  * 731f8fc9dd5 aco: Use program->num_waves as maximum in scheduler.
  * b5485128135 nir/opt_access: don't ignore infer_non_readable
  * fe669ff4a02 zink: replace old code with generated zink_instance
  * 52138ea9b38 zink: hook zink_instance to build
  * 2b4fcf0a063 zink: generate instance creation code with a python
    script
  * 12656de341a zink: factor out GET_PROC_ADDR and friends to
    zink_screen.h
  * 2f58d933ea8 zink: allow Extension/Version to be shared across files
  * 4ad7541cf07 mesa: check for extension instead of desktop GL
  * 47eb9b865d0 mesa: do not allow es2-extension enums for es1
  * 4eaff8dba72 .gitlab-ci: verify that Get-Content worked
  * 9eea5213910 gitlab-ci: copy piglit expected results to artifacts
  * 83d1e2efd0e android: fix build failure with libbacktrace
  * 42fd7e3457b v3d: extend the list of formats supported by the TFU
    unit
  * 4117f08226f panfrost: Fix several depth/stencil format mappings
  * 7ca72f17267 gallium/util: Fix depth/stencil blit shaders
  * e15fd6c36ee panfrost: Reload depth/stencil when they are read
  * 94009cbebc7 panfrost: Force ->s_writeback_base to -
    >zs_writeback_base for Z24S8 buffers
  * 27d622cffe3 panfost: Fix depth/stencil writeback on Bifrost v7
  * 27af1352803 panfrost: Allow 2DMS arrays
  * 727cc80fe3e pan/mdg: Fix texture handling for 2DMS arrays
  * 77b67a747ef vulkan: Enable VK_KHR_performance_query on android
  * 574429f9528 intel/blorp: Drop support for STC_CCS resolves
  * 0f369e14724 iris: Stop using blorp_hiz_stencil_op
  * ac0d393eb18 CI: add lavapipe vulkan testing
  * cf3fc79cd0a st/mesa: Replace mesa_to_tgsi() with prog_to_nir() and
    nir_to_tgsi().
  * e11513b7409 ci: Make sure that osmesa stays warnings-clean in
    release builds.
  * ee802372180 mesa: Retire classic OSMesa.
  * 6ffc5611c8a docs: Fix the documentation of the OSMesa path.
  * 7497917cfd8 osmesa/test: Clear the stencil bits in the depth test.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Dec 2020 15:16:09 +0100

mesa (21.0.0~git2012092328.04c7fce799a~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * 04c7fce799a iris: Drop res variable in resolve_sampler_views
  * 1f7427f9721 iris: Fix resource ptr in resolve_sampler_views
  * 4ba884b8140 softpipe: Fix swizzled texture gather of int textures.
  * 2b09bde1f54 radeonsi: use a C++ template to decrease draw_vbo
    overhead by 13 %
  * 6347b0b5c4d radeonsi: rename si_state_draw.c to .cpp
  * 639b1366d02 radeonsi: resolve a tricky C++ failure with goto jumping
    over initializations
  * fe839baf6af radeonsi: fix future C++ compile failures and warnings
  * 85af48b0ee9 radeonsi: allow including a few files from C++
  * fc212dcaa58 amd/llvm: fix C++ compile failures
  * f95fb3ab9c2 gallium/util: allow including a few files in C++
  * ea23ca8869a compiler: fix glsl_types.h compile failures when
    including as C++ in drivers
  * 3d417121937 ac/llvm: handle no_(un)signed_wrap NIR flags
  * 3b67c6451f2 ac: unify shader arguments that are duplicated
  * 248268fb7d3 radeonsi: move si_llvm_compiler_shader and deps into
    si_shader_llvm.c
  * 8cd15226221 radeonsi: move si_build_main_function into
    si_shader_llvm.c
  * 273be1686ef radeonsi: move si_create_function into si_shader_llvm.c
  * d9c1a47d48e radeonsi: split ac_shader_args initialization from LLVM
    code
  * 4a50096ab47 ac: add shader return values into ac_shader_args
  * 2cf44ad30ae ac: correct ac_shader_args types, remove sgpr_count
  * 50dad7366ee radeonsi: fix a crash in si_fence_server_sync
  * b08343c404b aco: rename s_subb_u32 operands to borrow
  * f4e649a205b aco: fix various s_subb_u32 operands to SCC
  * 1a535722d31 v3d: use job's nr_cbufs field
  * e95465ae0ef panfrost: Fix provoking vertex selection for lines
  * 6b9f943df67 panfrost: Preload SampleID when reloading multisample
    FBs
  * dec4d15e677 panfrost: Take the number of samples into account in
    blend shaders
  * e27052281aa pan/mdg: Add support for multi sample iteration writeout
  * 29f938a0ece panfrost: Fix fencing
  * 387221e4f2b panfrost: Make sure we always add a reader -> write
    dependency when needed
  * c30af744b1f st/mesa: enable compute shader derivatives in SPIR-V

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 10 Dec 2020 01:06:11 +0100

mesa (21.0.0~git2012041733.f66236617cd~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * f66236617cd clover/core: Fix x86 build
  * e476c181963 .mailmap: add and update aliases for Danylo Piliaiev
  * 76106301248 aco: coalesce constant copies
  * f53d4e5f608 aco: use v_lshrrev_b64 for 64-bit VGPR copies on GFX10+
  * 8c02a8e2d20 aco: add get_const/is_constant_representable helpers
  * b10de4c1d8f aco: allow 64-bit literals if they can be sign/zero-
    extended from 32-bit
  * 24ee0f55f2d aco: remove sign-extension in constantValue64()
  * 8451911156c aco: test self-intersecting copies when src=higher
  * 2c40846ab6f aco: don't assume src=lower when splitting self-
    intersecting copies
  * 741921e2ffa panfrost: Update the resource layout before calling
    util_copy_rect()
  * 90515f90c85 iris: store copy of the border color in the border color
    hash table
  * 055aff2613a radv: reduce maxTransformFeedbackBufferDataSize to 512
  * da164256907 util: Add os_get_page_size support for macOS.
  * ba42de95da4 radeon/vcn: support hevc SAO enc for VCN2+
  * c56a1898d73 radeon/vcn: use cdw to calculate slice header index
  * e37cd34ea6b radeon/vcn: add 0x02 to enc emulation prevention
  * cf7bf7fadeb amd/addrlib: Initialize Lib members in constructors.
  * df0157dc697 meson: Make the glvnd vendor name configurable
  * 9a3aaffeb80 radv: Don't invalidate the SCACHE for image barriers.
  * 6d751860083 st/mesa: move cso_context next to the other pointers
  * a07cb9a1ef7 st/mesa: put pipe_screen * into st_context and use it
  * d23f45577ee cso: inline struct cso_cache to remove dereferences
  * 8904fcca6db gallium: inline struct u_suballocator to remove
    dereferences
  * 0b22def5f84 cso: remove unused code
  * d0bc10affb3 vbo: remove gl_context dereferences when we can just
    subtract the pointer
  * 03e7c93b828 freedreno: Remove fd_log()
  * d5bc39c9d0e freedreno: Add trace-parser.py
  * a02dcb970ff freedreno: Add GPU tracepoints
  * 7a70f28de2b freedreno: Don't emit log/trace points in gmem for
    nondraw
  * 552dbd4470d freedreno: Remove unused fxn

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Dec 2020 19:09:51 +0100

mesa (21.0.0~git2011301342.b14679ab226~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * b14679ab226 v3dv: check return value of drmGetMagic
  * 124ea8debf9 v3dv: expand format coverage in TFU path for buffer to
    image copies
  * b3f212c52e2 v3dv: fix base layer for 3D blits in the TFU path
  * ece8dbe68f0 v3dv: add a TFU path for image copies
  * f9e53c6e514 v3dv: add a format parameter to emit_tfu_job
  * d60a3ccf52b v3dv: support compressed formats with TFU unit
  * 14e7361c4a7 v3dv: remove obsolete disabled code
  * 04ea3d65018 radv: disable WGP_MODE for NGG on GFX10.3
  * bf36cfced18 radv: only mask 1 CU for GS/VS waves on GFX10.3
  * 7729ea3d677 radv: only disable CU2 & CU3 when NGG is enabled
  * 750591f4cbc radv: enable NGG on GFX10.3 APUs by default
  * b9ee0cd69a0 ci: Make test-docs job depend on sanity job
  * 94f4497a790 ci: Squash "check mr/commits" jobs into a single sanity
    job
  * 988dfc944dc ci: Move sanity stage to the beginning of the pipeline
  * 8749fc42614 ci: Use ci-fairy docker image instead of local
    git_archive one
  * cfe45f3bd50 ci: Update to current ci-templates
  * cc80415a41b ci: Drop ci-templates-sha anchor
  * 4e074a6d527 vulkan: Portable wsi_common_get_current_time()
  * 142d7b0f360 vulkan: Replace pthread mutex with mtx_t
  * 440952f152a vulkan: Remove GCC pragmas by fixing warnings
  * d1768b23b50 radv: save and dump vertex descriptors during GPU hang
    detection
  * 9f3e7a6502f radv: fix using bitfields for debug/perftest options
  * 3a90641b0d6 mesa/st_vdpau: set surface winsys handle modifier
  * b3504f41733 amd/common: Check with_tests before adding test
  * 40ede410358 r600/sfn: remove leftover debug message
  * 09313506734 r600/sfn: remove unused file
  * 166657a736c r600/sfn: Fix a few warnings in release builds
  * 261f42f0c87 r600/sfn: fix definition of priority queue
  * feaecbeeabb r600/sfn: correct error signalling in switch default
    case
  * de353c1fbe2 amd: Fix declaration mismatch

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 30 Nov 2020 16:31:00 +0100

mesa (21.0.0~git2011262038.85647152535~b~mesaaco7) bionic; urgency=medium

  * New snapshot:
  * 85647152535 docs: document new zink-flag
  * 313db572b7a nir: make intrinsic order in nir_print consistent
  * fb0385b57cc radv: use intrinsic builders
  * 9b040737d30 nir: use intrinsic builders
  * ddb81f5da32 glsl_to_nir: use intrinsic builders
  * eafc7eee579 spirv: use intrinsic builders
  * c9bcad25737 nir: add generated intrinsic builders
  * b3c65f97ad1 nir: move nir_load_system_value() to nir_builder.h
  * f8ee599dfb1 nir: remove useless nir_builder_opcodes.h include
  * a2b9e3f715f nir: add destination bit-size information to more
    intrinsics
  * 3ec217a8498 nir: add bit_size_src for when the destination bit size
    matches a source
  * 898d7c1f493 nir: use a single canonical list of intrinsic indices
  * f6407b9b7d3 nir: fix sampler_lod_parameters_pan indices
  * a569ffeb83d freedreno/a6xx: Fix typo in height alignment calculation
    in a6xx layout
  * f7b2165b19c freedreno/a6xx: add support for dual-source blending
  * efba865c4c9 nir/lower_non_uniform: improve code with the same
    texture, sampler indices
  * 5d55ca9c300 anv: fix descriptor pool leak in VMA object
  * df940760f9d aco/optimizer: Propagate scc_needed label through p_wqm.
  * 8bd3fefb74b aco/optimizer: Only set scc_needed when it is actually
    needed.
  * a941618a1fc glsl: avoid an out-of-bound access while setting up a
    location for variable
  * df143fa1ef6 glsl: Drop mingw -O1 workaround for GCC>=7.3
  * bf2bcfe4457 scons: Fix build with llvm-12.
  * 954739fd18e radv/winsys: fix the sysmem submission path for GFX6
  * 05799844df5 radv: Const aco_compiler_statistic_info usage
  * bb9b7d0a687 radv: fix missing initialization of the predication
    value
  * d1ff00cb768 v3dv: remove non-conformant warning
  * 4adb643a0ad docs/features: update list of v3dv supported features
  * e5ff2a357ea ac: use bigger storage for ac_arg::arg_index /
    ac_shader_args::arg_count
  * 0b3bd7c5167 radeonsi/gfx10: flush gfx cs on ngg -> legacy transition
  * 33a78948283 util,radv: Cross-platform monotonic condition variable

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 26 Nov 2020 21:09:25 +0100

mesa (21.0.0~git2011251044.ecebc263f5b~b~mesaaco7) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 25 Nov 2020 11:57:26 +0100

mesa (21.0.0~git2011251044.ecebc263f5b~b~mesaaco6) bionic; urgency=medium

  * New snapshot:
  * ecebc263f5b Revert "util: Add helpers for various one-time-init
    patters"
  * 86662655ece Revert "nir: Use get_once() helper for one-time init's"
  * 5461e212456 Revert "freedreno/ir3: Use get_once() for one-time init"
  * b8fb95ce01c Revert "gallium/hud: Use do_once for one-time init"
  * f20192f7c33 Revert "mesa/st: Use do_once for one-time init"
  * 410b6518593 Revert "util: Fix helgrind complaint about one-time
    init"
  * 8fffcbce9bc Revert "mesa: Fix helgrind complaint about one-time
    init"
  * 1f6e03c3bf5 Revert "gallium/trace: Fix helgrind complaint about one-
    time init"
  * f57f040f13c Revert "tgsi: Fix helgrind complaint about one-time
    init"
  * 8da98beb5d6 radv: always use 32-bit predication on compute queues
  * 62d9ca696e0 radv: use 32-bit predication for conditional rendering
    on GFX10.3+
  * b1558ec3ec9 ac: add gpu_info::has_32bit_predication
  * 472e81ed805 v3dv: Wayland WSI support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 25 Nov 2020 11:24:05 +0100

mesa (21.0.0~git2011250637.9fa1cdfe7ff~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 9fa1cdfe7ff intel/rt: Implement push constants as global memory
    reads
  * f7e24e559fb intel/rt: Add support for hit attributes
  * 96fde5518b5 intel/rt: Add a helper to create the raygen trampoline
    shader
  * 303378e1dd4 intel/rt: Add lowering for combined intersection/any-hit
    shaders
  * cb261b03e5a intel/rt: Add lowering for ray-walk intrinsics in any-
    hit shaders
  * c3ddefa000e intel/rt: Add support for shader buffer record memory
  * 9ba7d459a3a intel/rt: Implement the new ray-tracing system values
  * 7ce7c93755f intel/rt: Implement traceRay()
  * 75209d5bd1f intel/fs: Add and implement intel-specific ray-tracing
    intrinsics
  * 1f6ae809ef0 intel/rt: Implement support for shader call payloads
  * 72354b0e9dd intel/rt: Add a helper to create a trivial return shader
  * fad81a39681 intel/rt: Add a pass to lower shader call instructions
  * ca88cd8e5a6 intel/rt: Add return instructions at the end of ray-
    tracing shaders
  * 49778a7253d intel/rt: Add support for scratch in ray-tracing shaders
  * 2b3f6cdc6cf intel/rt: Add lowering functions for each ray-tracing
    stage
  * c7660918d77 intel/rt: Add a pass to lower the new ray-tracing
    intrinsics
  * 6e50db4edac intel/rt: Add builder helpers for accessing RT data
    structures
  * 1f6e70c85a8 intel/fs: Add and implement a load_global_const_block
    intrinsic
  * 6d5b57aeb7d intel/rt: Add a brw_rt.h header with #defines for basic
    RT data structures
  * 7280b0911d8 intel/compiler: Add support for bindless shaders
  * 27f44116fe0 intel/debug: Add a debug flag for ray-tracing shaders
  * a7dd172aaa1 nir/lower_io: Support shader_call_data in
    vars_to_explicit_types
  * 477d2f03794 nir/lower_io: Allow ray_hit_attrib in
    lower_vars_to_explicit_types
  * bbbb0600f64 nir: Add a helper to get the live set at a cursor
  * c7eccb9ca2a intel/genxml: Add BVH data structures
  * 980950c5210 intel/genxml: Add RT_DISPATCH_GLOBALS and
    RT_*_SBT_HANDLE structs
  * 858d565eea4 intel/genxml: Support truncated addresses
  * ba9c714cacd intel/genxml/pack: Stash the cloned address field
  * 9d16d973a70 intel/genxml: Add the BINDLESS_SHADER_RECORD data
    structure
  * 5faf859ebbe intel/dev: Add a gen_device_info::has_ray_tracing bit

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 25 Nov 2020 07:30:29 +0100

mesa (21.0.0~git2011210255.ba9906fc8f2~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * ba9906fc8f2 clover: Initialize command_queue member _props.
  * f8dc22bf61c meson: drop deprecated EGL platform build options
  * 4da8323a14b gitlab-ci: drop deprecated platforms that snuck in when
    nobody was watching
  * 14186a1b845 aco/tests: add Builder::v_mul_imm() tests
  * aab507c6b05 aco: use v_mul_imm() for some nir_op_imul
  * 02c5519e6c6 aco: try harder to not create v_mul_lo_u32
  * 8ca23bcf396 aco: copy constant to sgpr in Builder::v_mul_imm()
  * 756bb29391b aco: create vgpr constant copies using v_bfrev_b32
  * 4d93fc25f06 aco: count v_mul_lo_u32 as 16 cycles
  * 70d665d981b aco: don't create v_mov_b32 in v_mul_imm()
  * 35613c752f5 radeon/vce: Bitrate not updated when changing framerate
  * a59b1b18a95 glx, egl: Add LIBGL_DRI2_DISABLE environment variable
  * 27612984a4d gallium/vl: Set modifier field for winsys handle.
  * 8c3abcab6d8 nir/copy_prop_vars: avoid a duplicate lookup if src ==
    vec_src
  * 33eeb994be1 nir/copy_prop_vars: use nir_deref_and_path
  * abc32259274 nir/deref: add helpers to lazily create paths
  * 7d8c06d484f nir/search: check for changes before adding uses to
    worklist
  * 556a20afe6a nir/search: check instr type before adding to worklist
  * 4832262560d nir/loop_analyze: initialize loop variables on demand
  * be7b20135e5 nir/copy_prop_vars,nir/dead_write_vars: ignore read-only
    loads
  * 276e241b579 nir: add nir_var_vec_indexable_modes
  * fb01882ddbb nir: add nir_phi_get_src_from_block() helper
  * 8d477baa4f9 nir: allow for cheap intrinsics in
    nir_opt_peephole_select()
  * 5cc29fccbeb radv/winsys: Fix use of nonexisting struct type in
    sizeof
  * 9eda7f475cf radv/query: Avoid hardcoding array size constants
  * b4d6131c156 radv,aco: Compile with -Wshadow when available
  * cba6ec309ab radv: Fix -Wshadow warnings
  * a978602d1f2 aco/tests: Fix -Wunused warnings in release mode
  * 5231c788ff0 aco/tests: Fix -Wshadow warnings
  * 2bb88743203 aco: Fix -Wshadow warnings

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 21 Nov 2020 05:33:36 +0100

mesa (21.0.0~git2011181826.17ebce2f130~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 17ebce2f130 d3d12: transition the right planes
  * 968e360e470 zink: track custom border color samplers and verify
    against device limits
  * 4d498f5eaca zink: handle arbitrary border colors using
    VK_EXT_custom_border_color
  * f493fc5fa2b spirv: workaround setjmp/longjmp crash on MinGW
  * 9e4f588318f llvmpipe: fix arith-test build on msvc
  * 03cfc93ab5e winsys/d3d12: Use MakeWindowAssociation to remove DXGI's
    alt+enter handling
  * 81adf127016 d3d12: also reject GDI-supporting pixel-formats
  * 8bbc31aba2f d3d12: Release swapchain buffers before resizing them
  * be4475c4a73 d3d12: Implement winsys framebuffer
  * e74b3e570a6 wgl: Wrap stw_pixelformat.h into extern C
  * 584061bdcdb wgl: Create third buffer when drawing to front buffer
  * ece2cc3352f wgl: Wait for fence when not using winsys framebuffer
  * f49ff1548be wgl: Call flush_resource() before presenting
  * 0e79ee3741d wgl: Flush in-between resolving buffer and presenting
  * d60913e3925 wgl: Use winsys framebuffer interface if present
  * 23bfe035674 wgl: Add winsys framebuffer object
  * acf8af458f5 wgl: Add PFD flags based on stw_winsys callback response
  * c28eb3c6aac wgl: Add stw_winsys callback to check which PFD flags
    should be added
  * bb9cc7ede4d d3d12: Add D3D12 WGL winsys
  * 3b034e97716 wgl: Implement get_adapter_luid callback
  * f6d2d3cb580 wgl: Marshal HDC into screen creation and LUID querying
  * 494bd9cfa66 d3d12: Pipe adapter LUID from callbacks to D3D12 screen
    init
  * 29996b88c2b d3d12: Add glon12 target which only includes d3d12
    driver
  * fd361dde655 d3d12: Support WINSYS_HANDLE_TYPE_D3D12_RES
  * 7145cd6e735 mesa/st: Introduce WINSYS_HANDLE_TYPE_D3D12_RES
  * 5c305c8e36a v3dv: use VkSurface to retrieve an authenticated display
    fd
  * 0fcd379184d aco: fix combining max(-min(a, b), c) if a or b uses the
    neg modifier
  * ff22fcf4500 radeonsi: fix scan_instruction for bindless
    inc_wrap/dec_wrap atomics
  * d0657ee8379 radeonsi: fix NGG streamout regression
  * be905b74f74 radeonsi: don't add num_vbos_in_user_sgprs to the shader
    cache key for non-VS

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 18 Nov 2020 19:11:59 +0100

mesa (21.0.0~git2011171936.87dc3106b07~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 87dc3106b07 anv/image: Define anv_image_get_aux_addr (v3)
  * 5fa0e5b87df anv/image: Check surface offsets after adding each
    surface
  * 9f0abc2a224 anv/image: Rewrite check_surfaces() [v2]
  * 15642a52ce2 anv/image: Further split add_*_surface funcs (v2)
  * 9f2073c76ef anv/image: Define add_all_surfaces()
  * 2bfd43ba0bf anv/image: Add more asserts to choose_isl_tiling_flags
  * 8636adf856e anv/image: Move some DRM code in
    anv_get_image_format_properties()
  * 40ac4c9cdc3 anv/image: Emit error message for non-2D DRM images
  * c892e242589 anv/image: Drop redundant rejection of YCbCr formats
    with modifiers
  * c9f2a74b5a5 anv/image: Respect VkImageFormatListCreateInfo for
    VkImageFormatProperties (v2)
  * ce4f6bda66e anv/image: Fail earlier in
    anv_get_image_format_properties
  * 8c5b4b1e1db anv/image: Minor refactor of
    VkImageFormatProperties::sampleCounts
  * 2b3ec91326b anv/image: Rename
    get_wsi_format_modifier_properties_list()
  * 57d416d4236 anv/image: Fix VkExternalMemoryProperties for images
    (v5)
  * a2aa56905c6 anv/image: Delete the list of modifier-compatible
    formats
  * 146f41e608c anv/image: Refactor iteration over modifiers
  * 6835cb7f862 isl: Make public the list of modifiers
  * 51eefbaae6d anv/image: Fill drmFormatModifierTilingFeatures (v2)
  * 1f39b3e48da anv/image: Teach anv_get_image_format_features() about
    modifiers (v3)
  * 486ae7c655e isl: Add isl_format_layout::uniform_channel_type
  * f665bae4eb3 anv/image: Use isl_drm_modifier_get_score()
  * 01bad67a940 isl: Define isl_drm_modifier_get_score() [v3]
  * b50275a4b63 anv/image: Fix isl_surf_usage_flags for stencil images
  * 51a19c83b00 anv/image: Check DISJOINT in
    vkGetPhysicalDeviceImageFormatProperties2 (v2)
  * 19906022e22 zink: more accurately track supported blits
  * 465a48a048c zink: always insert barriers for general-layout
  * 11ebe2a572f zink: mark general layout as transfer-read/write
  * 249aed1ff06 v3dv: rename playout and dslayout fields to use
    underscores.
  * ba2e979b5ce v3dv: blit shader clean-ups
  * 840ba2513a2 v3dv: initialize pipeline layouts for meta operations at
    driver initialization

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 17 Nov 2020 19:44:03 +0100

mesa (21.0.0~git2011130427.3fa3bc19a28~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 3fa3bc19a28 radeonsi: Add auxiliary plane support.
  * 605140e4016 radeonsi: Do not try to disable displayable DCC with
    modifiers.
  * 23b59b6f87c radeonsi: Do not disable DCC when we have it as a
    modifier.
  * c786150dfa5 radeonsi: Add modifier support.
  * f7a4051b836 radeonsi: Check pitch and offset for validity.
  * 395dac7bf98 amd/common: Add modifier tests.
  * 0833dd7d124 amd/common: Add support for modifiers.
  * 2cc2b456889 drm-uapi: Add AMD modifiers.
  * d4f7962d48b radeonsi: Add displayable DCC flushing without explicit
    flushes.
  * 3e2dcb3c076 amd/addrlib: Use signed char for INT_8.
  * 9acfbe30226 radv: Do the sample check for tiling earlier.
  * dad6b625768 turnip: Fix file descriptor return.
  * fe3b5241a48 radeonsi: enable GL_EXT_demote_to_helper_invocation
  * aa757f4f8c3 ac/llvm: fix demote inside conditional branches
  * cb20d58f45c nir: optimize nir_lower_discard_to_demote to lower
    discard/demote both ways
  * d5039f99b4f nir: gather shader_info::needs_all_helper_invocations
  * baa5807e363 nir: rename needs_helper_invocations to
    needs_quad_helper_invocations
  * 96c12b7dc20 nir: optionally shuffle local invocation IDs for compute
    quad derivatives
  * 99e17b0c4ad radeon: fix license in header
  * 0b4825c8725 gallium/draw: Fix rasterizer_discard for wide
    points/lines.
  * 9edb6e1be0f mesa: Fix vertex_format_to_pipe_format index.
  * 6e6dab47990 nir: handle float atomics in copy propagation pass
  * 8de279f8dbc freedreno/drm: Add some locking asserts
  * 9eb2ae5d21f radv/winsys: set has_dedicated_vram in the null winsys
  * f6359d2dc32 nir: Fix nir_validate fail after nir_lower_tex
  * 53660e4c4ed Add EGL xcb platform
  * 8bb1a75b4f0 anv: fix a build race between generating a header and
    using it
  * 5d2e9d76c1d d3d12: fix code after simple-shader helper changes
  * 5f999625407 zink: fix build on windows
  * db9d13b4ffd aco: optimize v_add_u32(v_mul_lo_u16) -> v_mad_u32_u16

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 13 Nov 2020 07:59:50 +0100

mesa (20.3.0~git2011092051.1c5271346af~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 1c5271346af nir/algebraic: optimize bitfield_select(a, b, 0) to
    iand(a, b)
  * d47969eb5ed pan/bi: Add support for load_instance_id
  * 5cd1d8c1ed9 pan/bi: Add support for load_vertex_id
  * 255f7842c7c panfrost: Allow linear ZS resources on Bifrost
  * 4995a4c03aa pan/bi: Add support for ushr
  * af70987b363 pan/bi: Add support for ishr
  * 3257ad21f34 pan/bi: Fix ARSHIFT definitions
  * 2a80b2d0cd1 pan/bi: Move bitwise op packing out of bi_pack_fma()
  * cc0950722c0 pan/bi: Get rid of bi_emit_ld_uniform()
  * fd265fa0206 pan/bi: Lower uniforms to UBO
  * 09da82cbdc3 pan/bi: Add support for load_ubo
  * 87e2169cb90 pan/bi: Fix swizzle handling in bi_copy_src()
  * 2522f509a3d pan/bi: Support centroid and sample interpolations
  * ca5a00a70ca pan/bi: Extract LD_VAR sample field from ins-
    >load_vary.interp_mode
  * 1692088d053 panfrost: Expose GLES3 features on Bifrost when
    PAN_MESA_DEBUG=deqp
  * 23dbf7964b7 panfrost: Force late pixel kill when depth/stencil is
    written from the FS
  * 956228da3a1 radeon/vcn : Corrected dpb_size calculation for VP9_2
  * 68092df8d88 intel/nir: Lower 8-bit ops to 16-bit in NIR on Gen11+
  * b98f0d3d7c3 intel/nir: Lower 8-bit scan/reduce ops to 16-bit
  * 3ad2d85995e intel/nir: Refactor lower_bit_size_callback
  * f95665cfebb nir/lower_bit_size: Add support for lowering subgroup
    ops
  * 2c4b47184da nir/lower_bit_size: Pass a nir_instr to the callback
  * 15c6e05a725 nir/lower_bit_size: Don't cast comparison results
  * 86ef139bf46 radv: implement VK_EXT_shader_image_atomic_int64
  * 9f432687726 ac/nir: implement 64-bit images
  * 5b81e80fb6c aco: implement 64-bit images
  * 8570de72f51 amd/common: add PIPE_FORMAT_R64_{UINT,SINT} to GFX10
    format table
  * cff195087f5 util: add mapping from Vulkan to Gallium R64 integer
    formats
  * bcc3d53587a gallium: Fix NIR validation when lowering polygon
    stipple
  * 441feda0bb3 gallium/util: do not pass undefined sample-count

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 09 Nov 2020 21:13:27 +0100

mesa (20.3.0~git2011060328.041e3147c05~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 041e3147c05 docs: Add MESA_pack_invert and
    ANGLE_pack_reverse_row_order
  * fd104096c61 mesa: Implement GL_ANGLE_pack_reverse_row_order
  * 4506e4db4d6 mesa: Enable GL_MESA_pack_invert unconditionally
  * 923577c0662 v3dv: Remove unsigned comparison to zero.
  * 03683b9b2e6 nir: Handle ray-tracing intrinsics and storage classes
    in copy-prop etc.
  * 5a288932797 spirv,nir: Add ray-tracing intrinsics
  * 21b1b915498 nir,spirv: Add support for the ShaderCallKHR scope
  * 6b8fd65e840 spirv: Implement the new ray-tracing storage classes
  * 84a8ca1db88 nir: Add new variable modes for ray-tracing
  * aa4ea9c7ea6 nir: Add intrinsics for object to/from world RT sysvals
  * 07635a3284c nir/builder: Add a select_from_ssa_def_array helper
  * 46cd91bb45a spirv,nir: Add support for ray-tracing built-ins
  * ed907e5d84c spirv: Add support for OpTypeAccelerationStructureKHR
  * 2df055ab47f spirv: Pass the deref type to storage_class_to_mode for
    non-forward pointers
  * 2bef02696d4 spirv: Add a guard for OpTypeForwardPointer storage
    classes
  * aabe37b9694 spirv: Remove a redundant vtn_fail_if
  * 3bcebe1b271 spirv: Add Ray Tracing execution models
  * d8dbdf20de8 spirv: Add basic plumbing for ray-tracing capabilities
  * f65182931db compiler: Add new Vulkan shader stages
  * 1882a02d83b tu: Make sure spirv_to_nir knows we support
    imageStorageWithoutFormat.
  * 0b0f152c54e nir/clip_disable: handle 2x vec4 case
  * 5e43ba39e11 nir/clip_disable: try for better no-op
  * 1d23a88c6eb nir/clip_disable: write 0s instead of undefs for
    disabled clip planes
  * c84ae1523e0 iris: Move blit scissoring earlier.
  * 0f96a9ab3b0 anv: restrict number of subgroups per group
  * b2c719308c5 turnip: enable VK_EXT_image_drm_format_modifier
  * f624692a57d turnip: don't always fallback to linear for mutable
    formats
  * 8c4426f519c turnip: remove unnecessary/redundant tu_image fields
  * c64cd6988f1 turnip: remove useless tu_image asserts
  * dfaa8b9ae72 turnip: LAYOUT_PREINITIALIZED is not different for
    optimal tiling

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 06 Nov 2020 04:24:02 +0100

mesa (20.3.0~git2010301434.e54c7f4b1ac~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * e54c7f4b1ac android: aco: add aco_form_hard_clauses.cpp to
    Makefile.sources
  * a1d6c03e2f3 etnaviv: don't import allocated scanout resources via
    from_handle
  * 3862cec314d etnaviv: pass correct layout to etna_resource_alloc for
    scanout resources
  * ec21148311f etnaviv: simplify etna_screen_bo_from_handle
  * 94ec412b268 etnaviv: do proper cpu prep/fini when clearing allocated
    buffer
  * 181790117bd etnaviv: cosmetic etna_resource_alloc fixes
  * 98db7c4841c etnaviv: free tgsi tokens when shader state is deleted
  * 3fd512440bf etnaviv: tex_desc: fix TS compression enable
  * cf871e92327 etnaviv: update headers from rnndb
  * 3ba753d9f58 etnaviv: blt: properly program surface TS offset for
    clears
  * 866bb22d6b9 etnaviv: drm: fix BO refcount race
  * 8b0218beb59 etnaviv: drop etna_pipe_wait(..)
  * b7501184b90 radeonsi: implement inlinable uniforms
  * 6d058ac6c99 aco: Fix accidental copies, attempt two
  * b03c86a71f3 intel/dev: Bump Max EU per subslice/dualsubslice
  * 5957b0c1622 glthread: pin driver threads to the same L3 as the main
    thread regularly
  * d8ea5099658 util: completely rewrite and do AMD Zen L3 cache pinning
    correctly
  * 4f2c2307f9e util: add util_get_current_cpu using sched_getcpu and
    Windows equivalent
  * 9758b1d416a util: add util_set_thread_affinity helpers including
    Windows support
  * 3433d193e7c st/mesa: remove random L3 pinning heuristic for glthread
  * 96d9f7761d4 util: consolidate thread_get_time functions
  * 53a15925da5 util: remove unused util_get_L3_for_pinned_thread
  * cc161132027 android: fix libsync dependencies (v2)
  * a09717c4de0 glsl: add extra pp tokens workaround and enable for CoR
  * ce0b72a13a2 intel/fs: Don't emit_uniformize when getting a constant
    SSBO index
  * 0fe5490724e v3d/format: use XYZ1 swizzle for three-component formats
  * f7d1460418f gallivm: zero init the temporary register storage.
  * 17613794815 aco: handle SDWA in the optimizer
  * ecc5b59a706 aco: don't allow destination opsel for v_cvt_pknorm
  * bb890f2e7c1 aco: fix combine_inverse_comparison()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 30 Oct 2020 18:16:27 +0100

mesa (20.3.0~git2010291349.daec83c7d61~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * daec83c7d61 intel/genxml: don't generate identical code for
    different branches
  * e96f33cd300 intel/tools: fix invalid type in argument to printf
  * 13859c769f0 gallium/dri: fix dri2_from_planar for multiplanar images
  * 6c118aebb11 gallium/dri: fix dri2_query_image for multiplanar images
  * 0f3594cd7b0 gallium/dri: allow create image for formats that only
    support SV or RT binding
  * 25f984812be nv50/ir/nir: don't use designated initializers
  * e07c5467633 v3dv/format: use XYZ1 swizzle for three-component
    formats
  * d8562b742ea virgl: Correctly align size of blobs
  * 7dc17ae5abc glsl: Update loop_terminator constructor to accept
    parameters.
  * f74ef158798 aco/ngg: Incorporate GS invocations into workgroup size
    calculation.
  * 09b9e52c0d8 aco/ngg: Export a zero-area triangle when primitive
    count is 0.
  * 73449f9a623 aco: Add a few assertions about LDS usage.
  * b6654adc0ea aco: Make emitting reduction instructions a bit more
    convenient.
  * 8d6246205ad aco: Add some validation for PSEUDO_REDUCTION
    instructions.
  * 260f9c503ad aco/ngg: Put shader query reduction operand into a VGPR.
  * 9757c3cb6b8 aco: Assert that workgroup barriers are not used
    inappropriately.
  * 915f2919f64 ci/bare-metal: suppress 'No such file or directory'
  * ecdcf22d5d8 aco: switch aco_print_asm to a FILE *
  * a293fad4ef7 aco: refactor repeated instruction disassembly
  * ed2449d55be aco: move individual instruction disassembly to its own
    helper
  * 7ded846ba92 docs/features: Update extensions for swr
  * 2088f359ff8 docs/features: Update extensions for softpipe
  * 483657de323 aco: use mubuf helper in select_gs_copy_shader
  * ec7ecfe9cbf aco: use control flow creation helpers in
    select_gs_copy_shader
  * 57d977a23fb aco: round bytes_written to dwords if larger than 4
    bytes
  * 41839d38cf3 aco: default to a definition size of 32
  * 768186e2af3 docs: s3tc -> S3TC
  * d30470e999b docs: clang -> Clang
  * f3095f9b40c docs: gcc -> GCC
  * 4aded097346 docs: fbo -> FBO

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 29 Oct 2020 14:44:17 +0100

mesa (20.3.0~git2010231934.f21dd3bc5a0~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * f21dd3bc5a0 scons: gallium/auxiliary: Unconditionally compile NIR
    regardless of LLVM
  * 3ba786f6243 spirv: Fix OpCopyMemorySized
  * a071590b1d1 frontends/omx/h265: Check the pps set before the scaling
    data
  * 08762d5171b frontends/omx/dec: Use the known codec profile when
    allocating buffers
  * 56f90a6ac19 pan/bi: Account for bool32 ld_ubo reads
  * 3cdca1514f6 panfrost: Don't advertise MSAA on Bifrost
  * f0e65805cb8 panfrost: Drop PIPE_CAP_GLSL_FEATURE_LEVEL for Bifrost
  * b9a136cdd1e panfrost: Implement BGRA textures
  * 048e4315426 panfrost: Fix component order XML
  * 25b66e61f73 panfrost: Calculate thread count on Bifrost
  * fb32406e566 panfrost: Don't export queries
  * f4ecc432bf7 panfrost: Record architecture major version
  * 81b28ebcb5a pan/bi: Use nir_undef_to_zero
  * 86b2b4eb768 panfrost: Move nir_undef_to_zero to common util/
  * f0421099efc pan/bi: Pipe through tls_size
  * b43b1535e25 pan/bi: Implement spilling
  * e33b2976f3a pan/bi: Pack LOAD/STORE
  * 74be83d876f pan/bi: Add bi_foreach_clause_in_block_safe helper
  * 2ff54cacf0e pan/bi: Factor out singleton construction from scheduler
  * 2d0f46a181b pan/bi: Implement bi_spill_register
  * 82dbc4ea782 pan/bi: Add helpers for working with singletons
  * 1db83fc75d9 pan/bi: Add bi_rewrite_index_src_single helper
  * 9e915fd5f74 pan/bi: Add bi_fill
  * 486a820bc67 pan/bi: Add bi_spill helper
  * 171bf199171 pan/bi: Add spills/fills parameters
  * 7246dd88cda pan/bi: Implement bi_choose_spill_node
  * ab9abc9052f pan/bi: Add no_spill flag to IR
  * ad8a8499c9b pan/bi: Stub spilling
  * 8477678cfeb pan/bi: Fix handling of small constants in
    bi_lookup_constant
  * 82a62a6f331 pan/bi: Drop 64-bit constant support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 24 Oct 2020 01:21:46 +0200

mesa (20.3.0~git2010221544.6694b4276b8~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 6694b4276b8 ac/nir: abort when an unknown intrinsic is reached
  * fa490cb6ac3 ac/nir: ignore set_vertex_and_primitive_count intrinsic
  * b739bb71680 compile/nir: Correct printing dest_type
  * 4e2fe34aa99 aco: fix determining if LOD is zero for
    nir_texop_txf/nir_texop_txs
  * 4735c8a522c nir/loop_analyze: adjust force unrolling to only include
    interesting modes
  * 542feb9ab6f ci: disable check commits job for now
  * 8f9c5964ab3 v3dv: handle buffer to linear depth/stencil image copies
    in blit path
  * 61b8a49e86d v3dv: handle compressed image to buffer copies on the
    blit path
  * 462429b4b8b v3dv: fix Z coordinate for 3D blits
  * a18411d9c60 v3dv: do not attempt to blit from a linear image source
  * 2118c9b562d v3dv: fix multi-layered buffer to image copies on the
    blit path
  * 0a4fc196058 v3dv: skip unnecessary tile loads when blitting
  * c83d6ffa322 gallivm/nir: handle nir_op_flt in lp_build_nir_llvm
  * 91b64da3de5 driconf: allow higher compat version for Brink
  * edd0b00c2be driconf: disable GLX_OML_swap_method by default on Brink
  * d2cb3f862f2 driconf: add a way to override indirect-GL extensions
  * 7eedc79658d driconf: add a way to override GLX extensions
  * 97f6d5e3a99 glx: let users force-enable/disable indirect GL
    extensions
  * e19644967f2 glx: initial plumbing to let users force-enable/disable
    extensions
  * 74722c3ab91 glx: rework __glXCalculateUsableExtensions to be more
    readable
  * 1331b86299b glx: stop using hardcoded array sizes for bitfields
  * af25f47bdce glx/extensions: split set_glx_extension into find_ and
    set_
  * 4ba255dfaaf dri/DRI2ConfigQueryExtension: add support for string
    options
  * f9763b20542 driconf: initialize the option value before using it
  * 0e3a424f002 driconf: bump the maximum string size from 25 to 1024
  * 81797fc863c android: util,ac,aco,radv: Cross-platform memstream API
  * 025050bae73 glsl: Initialize ir_if_to_cond_assign_visitor members in
    constructor.
  * 8cf00244328 nir: Use a switch in nir_lower_explicit_io_instr
  * 8033200560f docs/v3d: Add a little stub of v3d documentation.
  * 97dd039191d docs/vc4: Add information on the hw documentation
    available.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 22 Oct 2020 17:47:29 +0200

mesa (20.3.0~git2010140056.77586647880~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 77586647880 radv: Only close local_fd when valid
  * 4ca6faa933a util: Hide timespec_passed on Windows
  * 1026e2ac0f7 radv: Increased const usage
  * 1b551857f98 amd/addrlib: Fix warning list for msvc
  * 5abac85177d intel/fs: Rework scratch handling on Gen9+
  * e557af97811 intel/fs/ra: Use a set to track added spill/fill
    instructions
  * f650c4c0c6b intel/fs/ra: Sanity-check our IP counts
  * d80d0a6ced9 intel/fs/ra: Store the last non-spill VGRF node
  * 2af6528c334 intel/fs/ra: Refactor handling of Gen7 scratch reads
  * 74a1843ca0f intel/fs/ra: Increment spill_offset as part of the
    emit_spill loop
  * 06ebf23283e intel/fs: Add a SCRATCH_HEADER opcode
  * 24b64c8408b intel/fs: Copy the PTSS from g0 for scratch reads/writes
  * f103012fad7 intel/batch_decoder: Don't clame vec4 vs/gs/tcs shaders
    on Gen11+
  * e1efc534e6c v3dv/device: Support loader interface version 3.
  * 866f9493f4f v3dv: fix buffer copies to compressed images on the blit
    path
  * 82b9789f173 v3dv: drop a couple of obsolete comments
  * ec78ee0342e v3dv: limit blit framebuffer dimensions to max
    coordinates
  * 43063d8de8f v3dv: generate proper UUIDs for device and driver
  * c7814bcde3e v3dv: fix blit path for copies from 3D compressed images
  * 24e46f70b9a v3dv: fixes for barriers in secondary command buffers
  * 376b009104c v3dv: implement workaround for GFXH-1918
  * 1e81bb05aeb v3dv: implement workaround for GFXH-1461
  * 6fb45a04ab3 v3dv: flag tmu_dirty_rcl in primaries when linking
    secondaries that have it set
  * 30534fcb29c v3dv: only advertise one memory type
  * 49549f43c7c v3dv: always program a reasonable internal depth type
    for copies/clears
  * 1ed8252514e v3dv/pipeline_cache: extend pipeline cache envvar
  * 93e3b001c65 v3dv/pipeline_cache: set a max size for the pipeline
    cache
  * 7eb8eb10f6b v3d/compiler: allow to batch spills
  * f7af9eb2118 v3dv: free noop job if needed when finishing the queue
  * cec3d5e7660 v3dv: clean-up after obtaining an XCB connection

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 14 Oct 2020 07:52:57 +0200

mesa (20.3.0~git2010050409.961a8d71cdc~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 961a8d71cdc vc4: Avoid negative scissor caused by no intersection

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 05 Oct 2020 06:22:18 +0200

mesa (20.3.0~git2010041529.9a899e579a6~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 9a899e579a6 v3d: Update the TEXTURE_SHADER_STATE when there’s a new
    buf for a tex
  * e2f037e96cb v3d: Split the creating of TEXTURE_SHADER_STATE into a
    helper function
  * d25504dae01 v3d: Make the function to set tex dirty state for a
    stage global
  * ef918f0e335 turnip: remove pre-emption marker
  * 3b3a3af9c76 glsl: Initialize ast_node member field location.path in
    constructor.
  * 81cd4c8f596 intel/vec4: Remove leftover code from Gen8+ removal.
  * 0a7bd14dbb8 freedreno: Move rsc NULL check to before rsc
    dereferences.
  * 1b0fec444fd iris: Fix the constant data address calculation
  * 23ff2a0e634 nv50/ir: Initialize Source members.
  * 7e862670efb radv: Fix asserts using assign instead of compare.
  * 9660427ab7b lima: Print usage if --help is any of the arguments.
  * 2fb27499378 android: Disable the user XML config parsing.
  * 7edb2aed551 util/xmlconfig: Drop use of XML_Char in parsing.
  * 6f3352b6a76 driconf: Stop quoting true/false in boolean option
    definitions.
  * 8a05d6ffc65 driconf: Make the driver's declarations be structs
    instead of XML.
  * 9fbf206a137 driconf: Use DRI_CONF_OPT_I for remaining int options
  * 23c3eb1fe16 driconf: Delete disjoint range support.
  * 4f37161a8f2 util/xmlconfig: Indent to Mesa style.
  * 91ccbb399f0 util/xmlconfig: Drop silly open-coded strdup.
  * df3d3ea33e7 driconf: Make a DRI_CONF_OPT_S() for string options.
  * 4a573849593 r200: Reuse DRI_CONF_OPT_F for texture_blend_quality.
  * c47c08fa72b driconf: Fix extra quoting on "Jimenez'".
  * b1e730b3b43 driconf: Eliminate the DRI_CONF_OPT_BEGIN_B macro.
  * 8427e560672 intel/fs: Don't use NoDDClk/NoDDClr for split SHUFFLEs
  * b23541c4d3a android: util: add log.c to Makefile.sources
  * f9977f87296 panfrost: decode: Flag pandecode_log_typed() as
    PRINTFLIKE
  * 12b00b77c6f panfrost: decode: Fix decode_bifrost_constant()
    prototype
  * 7568c97df14 radv: Use atomics to read query results.
  * 7cc55df938b pan/bi: Fix assert when writing vertex outputs
  * 447cef4a71d zink: use sizeof(vec4) multiplier for
    nir_lower_uniforms_to_ubo

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 05 Oct 2020 02:57:00 +0200

mesa (20.3.0~git2009301129.636f7702335~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 636f7702335 bin/gen_release_notes.py: escape special rST characters
  * ae7975ecd43 docs: cpu -> CPU
  * 5fe6124661d docs: Sandybridge -> Sandy Bridge
  * 302fc318473 docs: vmware -> VMWare
  * 37bb6ddcc25 docs: ubuntu -> Ubuntu
  * 0c90662dfba docs: scons -> SCons
  * 7f4f441465a docs: quote "git log"
  * 50e26e5376e docs: git -> Git
  * 24e8e53bac3 docs: android -> Android
  * ca613a5a7ef docs: drm -> DRM
  * 9f59b19ad04 docs: wayland -> Wayland
  * 8d2090e79d0 docs: x11 -> X11
  * 0db015294ea docs: cmake -> CMake
  * b8b0e5ece02 docs: gpu -> GPU
  * 12d925dc8d6 docs: visual studio -> Visual Studio
  * 0e9d87eacc5 docs: windows -> Windows
  * 0df19e3c6bf docs: linux -> Linux
  * 557ee09c2ea docs: microsoft -> Microsoft
  * d84420f5136 docs: mingw -> MinGW
  * a14d64757b3 docs: ninja -> Ninja
  * eb1e7e61e52 docs: chocolatey -> Chocolatey
  * 0732efbda91 docs: mako -> Mako
  * fafd1f44257 docs: bison -> Bison
  * 1e75294e827 docs: flex -> Flex
  * d95e2e48a9b docs: python3 -> Python 3
  * e198fb64e10 docs: meson -> Meson
  * 0835ee9e8da docs: correct reference to meson.build
  * 5ed6432eebb docs: llvm -> LLVM
  * a1904c96f3b docs: bpp -> BPP
  * 647a8283674 docs: webservice -> web service

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 30 Sep 2020 13:22:28 +0200

mesa (20.3.0~git2009180952.090fc593b44~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 090fc593b44 mesa: fix glUniform* when a struct contains a bindless
    sampler
  * 77af1ca690f etnaviv: add disk cache
  * 6a0d7f6316c etnaviv: shuffle some variant fields
  * 12b8ad8f21f swr: fix _BitScanForward64 on unix
  * 82c49a66c07 swr: missing _BitScanForward64 on 32 bits win
  * 5805f5ab016 glsl: take EXT_gpu_shader4 in to account when adding
    round
  * cde5b86a88c turnip: Release bo_mutex lock before potential error
    path.
  * ffbdbd631ad panfrost: Delete debug allocated syncobj.
  * fcc506e5206 radesonsi: Remove unsigned comparison to zero.
  * 1b862716ddf disk_cache: Fix filename leak on error path.
  * 183ca88a91d android: pan/bi: Use new packing
  * 792b51713bf android: pan/bi: Use new disassembler
  * d74fe471019 glx: Allow depth-30 pbuffers to work without a depth-30
    pixmap format
  * a163cba1e3a anv: Fix the target_bo assertion in anv_reloc_list_add
  * 85cc2950a04 radv: initialize with expanded cmask if the destination
    layout needs it
  * 6f2b6952bef nir: remove ubo_r600 instrinsic since ubo_vec4 is used
    now
  * 18e97817148 r600/sfn: Use load_ubo_vec4 lowering pass
  * 98eb00face9 r600: enable lowering uniforms to UBO
  * 4ac4cdb5bfe aco: fix incorrect assertion in emit_vop3a_instruction()
  * 207219d4356 turnip: Add support for a615.
  * 45bff4e9890 util: Makefile.sources: Add disk_cache_os.{c,h}
  * 2aaa1564ad0 nir/lower_io: don't reduce range if parent length is
    zero
  * a51aa6feb4d pan/bi: Drop *FMIN reference
  * 865e252dd01 pan/bi: Remove unused packing data structures
  * ec43629e8c0 pan/bi: Remove unused prints
  * 2ff53879f21 pan/bi: Use new packing
  * 3fadd823461 pan/bi: Move packing helpers to dedicated file
  * d2158a5b301 pan/bi: Use src1/dest_invert instead of src_invert[]
  * 08b105d7825 pan/bi: Use 8-bit shifts
  * 3d63a476f7a pan/bi: Pass blend descriptor explicitly in IR

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 18 Sep 2020 11:47:20 +0200

mesa (20.3.0~git2009111447.ef980ac0c1c~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * ef980ac0c1c radeonsi: fix max syncobj wait timeout
  * 3182209673f v3d/compiler: fix V3D double-rounding of .8 fixed-point
    XY coordinates
  * 367ac07efcc disk_cache: move cache item loading code into
    disk_cache_load_item() helper
  * 8598dc1a758 disk_cache: add new OS specific helper
    disk_cache_evict_item()
  * 7893dc405cd disk_cache: move get_cache_file() to an OS specific
    helper
  * 593ef166aed disk_cache: create new helper for writing cache items to
    disk
  * b4a3a80403e disk_cache: move evict_lru_item() to an OS specific
    helper
  * e1236470dc6 disk_cache: move munmap into an OS specific helper
  * 889356e731e disk_cache: move index mmap into OS specific helper
  * 62c43391183 disk_cache: add disk_cache_enabled() helper
  * 4339ecde35c disk_cache: move cache dir generation into OS specific
    helper file
  * 65d0fa0852e nv50/ir: Remove duplicate mask assignment.
  * a2a330a4eda nv50/ir: Add fallthrough statement.
  * 50d335804fb nir/algebraic: add late optimizations that optimize out
    mediump conversions (v3)
  * b86305bb573 nir/algebraic: collapse conversion opcodes (many
    patterns)
  * cdd498bbe88 nir: add new mediump opcodes f2[ui]mp, i2fmp, u2fmp
  * 385b4dbc394 nir: enforce 32-bit src type requirement for f2fmp and
    i2imp
  * 3d3df8dbffd nir: remove redundant opcode u2ump
  * 26fc5e1f4a8 nir/algebraic: expand existing 32-bit patterns to all
    bit sizes using loops
  * 3c8934a644b nir/algebraic: add flrp patterns for 16 and 64 bits
  * 3064feb2350 pan/mdg: Obey f2fmp size restriction in fuse_io_16
  * 5cd62359586 blorp: Drop trailing whitespace in blorp_clear.c
  * 1eff389bd3e blorp: Fix alignment test for HIZ_CCS_WT fast-clears
  * 40f7afc1e97 nir: fix lower_mediump_outputs to not require variables
  * c2ae39e0cea nir: add mediump flag to IO semantics
  * 5e9e4573835 glx/dri3: Implement GLX_EXT_swap_control_tear
  * 60ebeb4608a glx: Implement GLX_EXT_swap_control for DRI2 and DRI3
  * b8239abdf86 glx: Reject glXSwapIntervalMESA greater than INT_MAX
  * e648442ceb3 glx: Collect all the non-applegl extensions in the
    GetProcAddress table
  * 72a0f7496a7 glx: Use GLX_FUNCTION2 only for actually aliased
    function names

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Sep 2020 18:08:53 +0200

mesa (20.3.0~git2009080706.171e94fe629~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 171e94fe629 mesa/st: enable EXT_color_buffer_half_float when formats
    supported
  * 8447b0f6518 mesa: add EXT_color_buffer_half_float plumbing
  * 331e5f105eb mesa: refactor floating point texture fbo completeness
    check on gles
  * bb42deee362 egl/android: HAVE_DRM_GRALLOC path fixes (v2)
  * 9d02d65f464 android: freedreno/common: add libmesa_git_sha1 static
    dependency
  * cc86a13b36e android: freedreno: Implement pipe screen's
    get_device/driver_uuid()
  * 9b3491870fc radeonsi: Work around Wasteland 2 bug.
  * e4d75c22beb nir/opt_shrink_vectors: shrink image stores using the
    format
  * bd428162b6d nir/lower_io: Fix the unknown-array-index case in
    get_deref_align
  * 11bd64bdecd ci: Remove any existing results directory before running
    piglit
  * 013a2b123d7 spirv2nir: Rework argument handling
  * a5e427fe644 spirv: Improve the "Entry point not found" error message
  * 2c94a9788e7 swr: fix build with mingw
  * c56fbed99b4 radeonsi: kill point size VS output if it's not used by
    the rasterizer
  * 234505162c1 radeonsi: deduplicate setting
    key.mono.u.vs_export_prim_id
  * 1dd243d4f50 radeonsi: use shader_info::cs::local_size_variable to
    clean up some code
  * 757f790ad84 radeonsi: remove redundant
    si_shader_info::uses_derivatives
  * f3f08bca238 radeonsi: remove redundant
    si_shader_selector::max_gs_stream
  * 2b4fa688089 radeonsi: remove redundant GS variables in
    si_shader_selector
  * 7960668dc95 radeonsi: remove redundant si_shader_info::writes_memory
  * 83cdffd4358 radeonsi: rename num_memory_instructions ->
    num_memory_stores
  * c8ab5899c1b radeonsi: reduce type sizes in si_shader_selector
  * 99c4e610840 radeonsi: remove redundant si_shader_info::uses_kill
  * 8df349a31ec radeonsi: merge
    uses_persp_opcode_interp_sample/uses_linear_opcode_interp_sample
  * 7b3e24c2d87 radeonsi: remove unused
    si_shader_info::uses_(vertexid|basevertex)
  * f02cd0e0270 radeonsi: remove redundant si_shader_info:*(clip|cull)*
    fields
  * d15a7d16d6a radeonsi: remove redundant
    si_shader_info::const_buffers_declared
  * 0dabcb9e53f radeonsi: remove redundant
    si_shader_info::images_declared
  * c1af2f4bee1 radeonsi: remove redundant
    si_shader_info::shader_buffers_declared
  * cb63e4afc96 radeonsi: remove info::samplers_declared, image_buffers,
    msaa_images_declared

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 08 Sep 2020 09:56:38 +0200

mesa (20.3.0~git2009041519.73eb24ab31a~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 73eb24ab31a aco: handle unaligned loads on GFX10.3
  * a083560b09c nir/load_store_vectorizer: Add unit tests for alignment
    handling.
  * c6f72196620 nir/load_store_vectorizer: Use more imm helpers in the
    tests.
  * 91a8a07a5f0 nir/load_store_vectorize: rework alignment calculation
  * 8faf85f6877 aco: fix byte_align_scalar for 3 dword vectors
  * 663c4d53771 intel/fs: add hint how to get more info when shader
    validation fails
  * ab079260572 intel: add INTEL_DEBUG=shaders
  * 7acc7ec33b3 ac/llvm: fix unaligned VS input loads on gfx10.3
  * aaa492e6c6a nir: fix const-cast warning on MSVC
  * 0f4d09443eb meson: drop leftover PTHREAD_SETAFFINITY_IN_NP_HEADER
  * ebf2576862c radv,aco: disable opts if
    VK_PIPELINE_CREATE_DISABLE_OPTIMIZATION_BIT
  * bb80ed88737 panfrost: Fix gnu-empty-initializer errors.
  * 3cf6325e724 iris: Fix aux assertion in resource_get_handle
  * fd2ee49b216 ci/bare-metal: Use python for handling fastboot booting
    and parsing
  * 0453a46f668 ci/bare-metal: Fix capturing of serial output as job
    artifacts.
  * 24f5f117197 ci/bare-metal: Log why our run restarts when it does.
  * 785d3cace47 ci/bare-metal: Include a timestamp in our serial reads.
  * ff42b7e8041 ci/bare-metal: Fix detection of "POWER_GOOD not seen in
    time" fails
  * b7787ce18df ci/bare-metal: Use re.search() instead re.match() for
    our line matching.
  * 93c8777ace8 amd/common: Fix various non-critical integer overflows
  * 2182bbf84f0 aco: Fix integer overflows when emitting parallel copies
    during RA
  * f18fc34c4d5 radv: Fix various non-critical integer overflows
  * a99ae1943d8 aco: remove omod_success/clamp_success
  * dc79152be97 aco: fix mad splitting after applying output modifiers
  * fdadbdb513e radv: remove descriptor_indexing fails from expected
    fails
  * 21fbffc5425 anv: Set alignments on UBO/SSBO root derefs
  * c7dec0548af spirv: Drop the OpenCL type layout code
  * 796d3fe9e0f clover/nir: Use lower_vars_to_explicit for uniform and
    global
  * e1ed5a12c51 spirv: Stop counting inputs in entry_point_wrapper
  * 8bea5aaa149 clover: Use args.size() to compute new var locations

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 04 Sep 2020 16:31:47 +0200

mesa (20.3.0~git2009011710.a6291b1b117~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * a6291b1b117 freedreno/ir3: rework setup_{input,output} to make
    struct varyings work
  * c694af40bf3 freedreno/ir3: improve handling of aliased inputs
  * acb6163d5e6 freedreno/ir3: remove indirect input load
  * 00973542ffe radv: Allow triggering thread traces by file.
  * 0d862da1706 radv: Centralize enabling thread trace.
  * b7a6333ee40 amd/registers: switch to new generated register
    definitions
  * e492a3195c2 amd/registers: add non-gfx10 register files generated
    from kernel headers
  * 48a7a24a69f amd/registers: add a script that generates json from
    kernel headers
  * b2f23afe668 amd/registers: sort registers by offset in json
  * 843b4e631f0 amd/registers: expose the canonicalize.py program as a
    function
  * ec5e918ef49 vulkan/wsi/x11: wait for acquirable images in FIFO mode
  * d0bc1ad3776 vulkan/wsi/x11: add sent image counter
  * 68957a82562 aco: Add README which explains about what ACO is and how
    it works.
  * b4d4c548eb5 aco: Fixup markdown formatting of the README-ISA.
  * 086fafc4e00 aco: Move README to README-ISA
  * bc123c396a9 nir/algebraic: mark some optimizations with fsat(NaN) as
    inexact
  * a6c4db9798b ci: Restrict "success" job to pipelines for MRs
  * d383133ce1d docs: Stop claiming to implement OpenVG
  * 0308e639cf7 ci: Don't exclude "success" job from mesa/mesa pipelines
    for MRs
  * f13f32f83f3 ci: Create test-docs job in mesa/mesa pipelines for MRs
  * 52cac068621 gallivm: fix build on LLVM 12 due to
    LLVMAddConstantPropagationPass removal
  * 8b1ab78985b radv: dump GPU info into the hang report
  * aa675cdc91f radv: improve reporting faulty pipelines when a GPU hang
    is detected
  * dd1f035f6e7 radv: force RADV_DEBUG=syncshaders when RADV_TRACE_FILE
    is used
  * 004119d5b7d vulkan: Fix memory leaks.
  * 50e14c3d258 radv/winsys: Fix memory leak.
  * b778e7bd6c1 nir/vtn: Convert constant samplers to variables with
    data
  * 397730edd5b nir/vtn: Add intrinsics for CL image format/order
    queries
  * 5ce6821900f nir/vtn: ImageSizeLod op can be applied to images
  * 701cb9d60c0 nir/vtn: Handle integer sampling coordinates

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 01 Sep 2020 17:46:52 +0200

mesa (20.3.0~git2008311502.7059708dcdb~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 7059708dcdb broadcom/qpu_instr: wait is not a read or write vpm
    instruction
  * efd29d429ea docs/features: Add missing Panfrost extensions
  * 8ff6e7c7399 panfrost: Set PIPE_CAP_MAX_TEXTURE_GATHER_COMPONENTS
  * 7dab5749c89 pan/mdg: Implement texture gathers
  * 661123bb19d pan/mdg: Add disassembly for shadow gathers
  * f6e19dd3f45 pan/mdg: Refactor texture op/mode handling
  * 80ebf110aed pan/mdg: Implement nir_intrinsic_load_sample_mask_in
  * 41184f89eb9 pan/mdg: Bounds check swizzle writing globals
  * 2486fe6761d pan/mdg: Scalarize 64-bit
  * 3e2cb21e53c pan/mdg: Implement i/umul_high
  * fd41dece39c panfrost: Emit texture/sampler points for compute
  * 55765f80b9c util/u_thread: include pthread_np.h if found
  * c66c5b38e0a util: futex fixes for OpenBSD
  * 0398caa97fa meson: conditionally include -ldl in gbm pkg-config file
  * c97af23b13c meson: don't build with USE_ELF_TLS on OpenBSD
  * 9ac16864227 meson: don't advertise TLS support if glx wasn't build
    with it
  * f9a7e6e854d meson: build with _ISOC11_SOURCE on OpenBSD
  * 6e9c0661f85 util/anon_file: add OpenBSD shm_mkstemp() path
  * 7eab6845e9d util: unbreak endian detection on OpenBSD
  * 8301a43f272 radv: dump shader stats with
    VK_KHR_pipeline_executable_properties
  * 35a42ff9c59 vallium: disable VK_KHR_shader_float16_int8.
  * 8f6eb35e097 gallivm/nir: add some f16 support
  * b31e8460a6b gallivm/nir: allow 64-bit arit ops
  * dc6313b0982 llvmpipe/fs: multisample depth/stencil bad ir generated
  * 6d60cd44f3f llvmpipe: add array/3d clearing support
  * 2d6385715da llvmpipe: blend has effects even if no colorbuffers.
  * 727bb217be6 gallivm: use common code to select texel type
  * 6596957641f gallivm/nir: add subpass sampler type support
  * 21324c40366 gallivm/nir: lower frexp/ldexp
  * d7aed02bcca gallivm/nir: fix const compact

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 31 Aug 2020 15:38:52 +0200

mesa (20.3.0~git2008290045.373e25e6b53~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 373e25e6b53 ci: Add a release build with -Werror enabled.
  * 60fb460f9d7 virgl: Fix unused var warnings in release build from
    assertions.
  * c24f792c8b4 lima: Fix uninitialized var warning from using assert()
    as unreachable().
  * f6456d74ed0 lima: Fix unused var/function warnings in release build
    from assertions.
  * 65f484198a3 etnaviv: Fix unused var warning in release build from
    assertions.
  * ab6a09f25b9 zink: Fix unused var warnings in release build from
    assertions.
  * ca73c3bc596 nv50: Fix uninitialized var warnings from using assert()
    as unreachable().
  * 689e36ebfe4 vc4: Fix unused var warnings in release builds from
    assertions.
  * 26471264bf7 nvc0: Fix compiler warning about unused var that gets
    asserted.
  * b9972fb6f58 gallium/tests: Fix compiler warning about unused vars in
    trivial tests.
  * 4c24c8239a5 panfrost: Fix remaining release-build warnings.
  * ecab580d48f panfrost: Fix OOB array access compiler warning.
  * ccb5e0b02b2 drm-shim: Fix unused variable warnings from asserts in
    release build.
  * 8d1d0c126fd freedreno/a6xx: move ubwc clear to blitter
  * 8d9ab0a33bb freedreno/a5xx+a6xx: use sysmem path for nondraw batches
  * 21b90708a4c freedreno/batch: replace lrz_clear with prologue
  * 28079970f2c freedreno/batch: split out helper for rb alloc
  * 9522eb7be14 panfrost: Store transient BOs in a dynamic array
  * d87ab72ce95 panfrost: Avoid accessing pan_pool fields directly
  * 4047c691bff panfrost: Rename panfrost_create_pool() into
    panfrost_pool_init()
  * b8f2d71c404 CI: Disable Windows again
  * 7fbded8b582 pan/decode: Drop prefix braces
  * eb261a80187 panfrost: Remove mali_vertex_tiler_postfix
  * 760289174b8 pan/decode: Use unpack for vertex_tiler_postfix_pre
  * 2425bac8fee pan/decode: Use generation for vertex_tiler_postfix
  * 80049069265 pan/decode: Fix awkward syntax
  * c088a3b5542 pan/decode: Print shader-db even for compute
  * 68552287261 pan/decode: Drop mali_vertex_tiler_postfix arg
  * 38ae0885654 pan/decode: Drop scratchpad size dump
  * c92be29a477 panfrost: Use nir_builder_init_simple_shader for blits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 29 Aug 2020 11:25:46 +0200

mesa (20.3.0~git2008280101.31f75aaeefe~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 31f75aaeefe nir/lower_discard_to_demote: Use
    nir_shader_instructions_pass().
  * 265dcb38367 nir/nir_lower_wrmasks: Use the
    nir_lower_instructions_pass() helper.
  * c5e64c041fd nir/lower_io_to_scalar: Convert to use
    nir_shader_instructions_pass().
  * dfb84653417 nir/opt_undef: Convert to use
    nir_shader_instructions_pass().
  * e5d4bbd8406 nir/lower_vec_to_movs: Convert to use
    nir_shader_instructions_pass().
  * a62098fff20 nir: Add a helper for general instruction-modifying
    passes.
  * a82f664d0a4 nir/opt_copy_prop_vars: Quiet valgrind warning about
    overlapping memcpy.
  * 98222db0da5 egl: document which driver hooks are only required by
    extensions
  * cf663d0d11c egl: move extension driver functions after core
    functions
  * 12c941808ff docs/egl: correct/update DRI2 mention with the shiny new
    DRI3
  * ab2e59750f2 docs/egl: add some more documentation
  * 7897c315d4f docs/egl: add haiku driver
  * c84d3049b01 docs/egl: complete list of dri2 platforms
  * 3909e9d1ac9 docs/egl: move section around
  * 3704b0250c9 docs/egl: fix typo
  * 608c87afddd nir/vtn: SPIR-V bit count opcodes (core and extension)
    dest size mismatches nir
  * a54695ddcb2 nir: Add bit_count to lower_int64 pass
  * d91f85f16e0 nir: Remove 32bit restriction for uadd_carry
    optimization
  * 9232887c699 nir: Implement mul_high lowering for bit sizes other
    than 32
  * ea715741b5b nir_lower_bit_size: Support lowering ops with differing
    source/dest sizes
  * 0d595f72b2c nir: Relax opt_if logic to prevent re-merging 64bit phis
    for loop headers
  * 43d22c8f201 nir: Add a lowering pass to split 64bit phis
  * 6b1a56b908e iris: Drop stale syncobj references in fence_server_sync
  * e98c7a66347 iris: Reorder the loops in iris_fence_await() for
    clarity.
  * 45793c00d29 ci: Fix up rules for post-merge / main project branch
    pipelines
  * 502b9daa7aa aco: add ACO_DEBUG=novn,noopt,nosched for debugging
    purposes
  * 4d40a719b07 radv: Fix 3d blits.
  * 003ea78b774 st/mesa: remove useless code for lowered IO in
    st_nir_assign_vs_in_locations
  * 86840619758 ci: Test the KHR-GL* CTS cases with softpipe.
  * d2cf6a8399e aco: sink get_alu_src() in bfe lowering

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 28 Aug 2020 03:23:08 +0200

mesa (20.3.0~git2008251315.0fd33207b77~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 0fd33207b77 radv: allocate the TMA BO into 32-bit addr space
  * d243d21ffc9 radv: align the TMA BO size to 256
  * 2dbb87282fe gitlab-ci: Test the traces from bgfx
  * 88b935bb0c0 mesa: fix formatting of messages printed using _mesa_log

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 25 Aug 2020 16:20:11 +0200

mesa (20.3.0~git2008250913.fd10cb8cfcc~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * fd10cb8cfcc anv: fix transform feedback surface size
  * 5e4d69ec786 st/mesa: Fix EGLImageTargetTexture2D for GL_TEXTURE_2D
  * 855afe01449 meson: Fix lmsensors warning message.
  * c6861b9f755 freedreno: Drop UNIFORM_BUFFER_OFFSET_ALIGNMENT to 32
  * a79dad950b1 nir,amd: remove trinary_minmax opcodes
  * 1fa43a4a8ec freedreno: handle case of shadowing current render
    target
  * 743ad7bf6b8 freedreno: add debug helper to dump buffers
  * 6f9bb6c26ac freedreno/a6xx: refactor debug logging
  * 440aab95c3d gallium/tgsi: add helper tgsi_get_interp_mode
  * 2519472845a st/mesa: handle lowered IO in
    st_nir_assign_vs_in_locations
  * 2424485fb43 st/mesa: don't generate NIR for ARB_vp/fp if NIR is not
    preferred
  * 493fdcf4464 st/mesa: don't pass NIR to draw module if IO is lowered
  * 484a60d5474 nir: generate lowered IO in
    nir_lower_passthrough_edgeflags
  * 7980f3e519f nir: add interpolation qualifiers for color sysvals into
    shader_info
  * 4d36dceeabc nir: add shader_info::io_lowered
  * 844167d1009 nir: properly identify texcoords for lowered IO in
    nir_lower_drawpixels
  * 2b1ef5df4ea nir: print IO semantics (v2)
  * 01ab308edc7 nir: update IO semantics in
    nir_io_add_const_offset_to_base
  * 17af07024df nir: gather all IO info from IO intrinsics
  * 502abfce7f5 nir: save IO semantics in lowered IO intrinsics
  * ec1fa1d51ff intel/perf: fix raw query kernel metric selection
  * f1da3bb3d5e intel/perf: store query symbol name
  * a9019d14aed nir/load_store_vectorizer: Clean up unit test swizzle
    assertions.
  * 2b252409937 freedreno/ir3: Replace our custom vec4 UBO intrinsic
    with the shared lowering.
  * 73616598bd2 nir: Add a lowering pass for backends wanting load_ubo
    with vec4 offsets.
  * d84a16e4817 nir: Add nir_[iu]shr_imm and nir_udiv_imm helpers and
    use them.
  * e78b887f767 nir: Make the nir_builder *_imm helpers consistently
    handle bit size.
  * f820dde201f aco: Fix convert_to_SDWA when instruction has 3
    operands.
  * 0d194a70c64 aco: Fix unused variable warning by adding ASSERTED.
  * 089bc22de53 r300: Use util_blend_factor_uses_dest

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 25 Aug 2020 10:14:19 +0200

mesa (20.3.0~git2008160827.a76423e481a~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * a76423e481a spirv/vtn_cfg.c: Include util/debug.h for
    env_var_as_boolean.
  * 430e3310e2a llvmpipe: only read 0 for channels being read
  * f1001a38275 CI: temp disable t720/t760 jobs.
  * 031f9e17d2c anv: don't fail userspace relocation with perf queries
  * dc667b1f192 nv50/ir/nir: fix smem size
  * 384c4df23da clover/nir: fix mem_shared by using
    address_format_32bit_offset
  * aa8661141a0 android: util/format: fix generated sources rules
  * b41e74ae4a7 spirv: Add a MESA_SPIRV_FORCE_UNSTRUCTURED environment
    variable
  * 217def3ac67 spirv: parse unstructured CFG
  * 467b90fcc46 spirv: extract switch parsing into its own function
  * 96dff31bc8f spirv: Move the emit a 'return value' store logic into
    own function
  * 4638de8b1b3 nir/lower_goto_if: Add some debug prints
  * d57573dcd4a nir/lower_goto_if: Add a route::outside set
  * d2bf850672b nir/lower_goto_if: Replace a tripple loop with a double
    loop
  * b892d473b4e nir/lower_goto_if: Add a block_for_singular_set helper
  * 193765e26ba nir/lower_goto_if: Sort blocks in select_fork
  * 0fad20f21b3 nir/lower_goto_if: Rework some set union logic
  * d1617985896 nir/lower_goto_if: Rework handling of skip targets
  * 2455d03c311 nir/lower_goto_if: Use util/list instead of exec_list
  * f69d732fcab nir/lower_goto_if: Clean up ralloc usage
  * 202b4df4aee nir/lower_goto_if: Document some data structures
  * b273611bb17 nir: Add a structurizer
  * 025bdbac3e0 nir: Add goto_if jump instruction
  * 92db942fc6a nir: Add and use nir_foreach_block_unstructured helpers
  * 4768ea1a77a nir: Add a structured flag to nir_shader
  * 19f35735a09 spirv: rename vtn_emit_cf_list to
    vtn_emit_cf_list_structured
  * 16f858968f2 util/set: add _mesa_set_intersects
  * acf756a64fe android: panfrost: Redirect cmdstream includes through
    GenXML (v2)
  * 92f65e28fee turnip: add missing tu_bo_list_add in CmdWriteTimestamp
  * ddac5933f8f turnip: call packing functions directly for
    pack_gmem_clear_value

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 16 Aug 2020 10:18:00 +0200

mesa (20.3.0~git2008081715.dd003abd2fc~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * dd003abd2fc meson: bump required glvnd version
  * 7fbadfc385c driconf: fix force_gl_vendor description
  * 800816d70be egl/entrypoint-check: add check that GLVND and plain EGL
    have the same entrypoints
  * 351d513e30b egl/entrypoint-check: split sort-check into a function
  * 04bd58ff79e Correct a typo in threads_win32.h
  * e3069c42577 pick-ui: specify git commands in "resolve cherry pick"
    message
  * b238d17a02f zink: Fix 32-bit compilation
  * 08f3dcf2f6e i965: add support for force_gl_vendor
  * ab92c117809 freedreno/ir3: don't install ir3_compiler cmdline tool
  * 3b6e8670f81 freedreno/registers: add some missing regs to build
  * 1e28745bc0d meson/freedreno: Fix lua requirement
  * 0cdd411b6d7 radeonsi: various fixes for gfx10.3
  * e2e700f6053 radeonsi: remove the NGG hack decreasing LDS usage to
    deal with overflows
  * 97456e847e0 radeonsi: add a common function for getting the size of
    gs_ngg_scratch
  * 68b3e92fef0 radeonsi: don't count unusable vertices to the NGG LDS
    size
  * 64c741ffb7a radeonsi: fix applying the NGG minimum vertex count
    requirement
  * 7a468fc0f6a radeonsi: increase minimum NGG vertex count requirement
    per workgroup on gfx 10.3
  * 633d2aa9157 radeonsi: use the same units for esgs_ring_size and
    ngg_emit_size
  * b6fb09fd843 radeonsi: use correct wave size in
    gfx10_ngg_calculate_subgroup_info
  * 61c671c97e8 Revert "radeonsi: honor a user-specified pitch on
    gfx10.3"
  * 15bd3f3712a ac/gpu_info: set num_tiles_pipes on gfx10+ too
  * 9333a8570d2 radeonsi: enable ETC2 hw acceleration on Raven2
  * 1185b3f32d9 zink: pre-hash gfx-pipeline-state
  * 7be12df5e62 zink: rename zink_gfx_program::stages to 'modules'
  * 6196f2aa937 zink: always compile shaders in pipeline order
  * c312299316c zink: start using per-stage flags for new shaders,
    refcount shader modules
  * 76d3645dd2e zink: use ZINK_SHADER_COUNT instead of PIPE_SHADER_TYPES
    - 1 everywhere
  * 0f059d550bd zink: split up creating zink_shader objects and
    VkShaderModule objects
  * a03d17ede77 zink: refcount zink_gfx_program objects
  * 8772c693c5a zink: adjust zink_shader struct to contain full
    streamout info

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 09 Aug 2020 12:48:41 +0200

mesa (20.3.0~git2008061853.782ba8d3ae5~b~mesaaco3) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 07 Aug 2020 00:22:32 +0200

mesa (20.3.0~git2008061853.782ba8d3ae5~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 782ba8d3ae5 st/mesa: Treat vertex outputs absent in outputMapping as
    zero in mesa_to_tgsi
  * a92cfa66b4e Bump development version and clear new_features
  * 7f06d194fd3 anv: Advertise shaderIntegerFunctions2
  * 9e397956b09 panfrost: signal syncobj if nothing is going to be
    flushed

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 Aug 2020 23:56:04 +0200

mesa (20.2.0~git2008061250.c6aadbae715~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * c6aadbae715 radv: Don't use both DCC and CMASK for single sample
    images.
  * e2c614a415b appveyor: Use Python3.
  * 0f9fb7ffaae appveyor: Upgrade pip.
  * 2e665458a90 util: Fix SCons build.
  * 56ab105182e freedreno: Add more asserts for DST_OFF/NUM_UNIT in
    indirect const uploads.
  * 3e970de3603 freedreno: Increase the NUM_UNIT on compute's consts in
    indirect dispatch.
  * f07e25bc6d8 freedreno/ir3: Clean up instrlen setup.
  * 8f637d66cc1 freedreno: Split ir3_const's user buffer and indirect
    upload APIs.
  * 154299934d8 freedreno: Rename emit_const_bo() to emit_const_ptrs().
  * 51acfe22306 freedreno/ir3: Simpify the immediates from an array of
    vec4 to array of dwords.
  * e873c4da08d freedreno/ir3: Merge the redundant
    immediate_idx/immediates_count fields
  * 5e922fbc160 glsl_to_nir: fix bitfield_extract with 16-bit operands
  * 92f5e94a937 glsl: improve precision determination for calls
  * 282a1e6288f glsl: don't lower to mediump for desktop OpenGL
  * 01e00856375 glsl: don't create conversion opcodes for array types
  * 5020403c703 glsl: don't lower atomic functions to mediump
  * 93076f60d3a glsl: don't inline intrinsics for mediump
  * 48a6255186d glsl: fix constant expression evaluation for 16-bit
    types
  * f2d5f4851ab glsl: lower_precision - fix assertion failure with
    dereferences of constants
  * a88fd7bfdc6 docs: update calendar and link releases notes for 20.1.5
  * 2d3f81f3207 docs: add release notes for 20.1.5
  * a4c4e0103a5 glsl: remove LowerPrecisionTemporaries
  * c4e0cae90c5 gallium: replace 16BIT_TEMPS cap with 16BIT_CONSTS
  * 0a763c0c86b glsl/lower_precision: split out const lowering
  * 4f060549be4 freedreno/ir3: lower local_index using local_id
  * e0947903fc7 freedreno/ir3: ir3_cmdline updates
  * 283ad85944b radeonsi: call
    nir_split_array_vars/shrink_vec_array_vars/opt_find_array_copies
  * 47beee2eb3f radeonsi: reorder NIR optimizations
  * 0294eaed809 radeonsi: extend workaround for KHR-
    GL45.texture_view.view_classes on gfx9
  * caa98246a0e st/mesa: optimize DEPTH_STENCIL copies using fragment
    shader

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 06 Aug 2020 14:39:21 +0200

mesa (20.2.0~git2008041558.9a9b35a3bb4~b~mesaaco1) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 04 Aug 2020 17:18:30 +0200

mesa (20.2.0~git2008041558.9a9b35a3bb4~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 9a9b35a3bb4 lima: Fix lima_screen_query_dmabuf_modifiers()
  * ee2c58dde46 tu: Implement VK_EXT_conditional_rendering
  * f226b198f5b tu: Reset has_tess after renderpass
  * 06332ef60e8 freedreno: Document draw predication packets
  * 9e48e31fa54 tu: Fix DST_INCOHERENT_FLUSH copy/paste error
  * 95db96d75b4 turnip: implement VK_EXT_4444_formats
  * 036ff531439 util/format: translate A4R4G4B4_UNORM and A4B4G4R4_UNORM
    vulkan formats
  * 35f8f355f31 turnip: rework extended formats to allow more extended
    formats
  * 0b2478381f1 ci: Actually upload trace artifacts to MinIO for
    baremetal
  * 67b1163f9fb turnip: add support for D32_SFLOAT_S8_UINT
  * a133f7d2885 ci: Remove kernel module build that slipped in
  * 76330374413 ci: Download traces from MinIO in baremetal runs
  * d4ca45eca2a ci: Upload traces' reference and actual images to MinIO
  * 4816f6f8d88 spirv: Do more complex unwrapping in get_nir_type
  * 140a5492e04 compiler/types: Add a struct_type_is_packed wrapper
  * 66d8bbd8229 freedreno: Fix "Offset of packed bitfield changed"
    warnings:
  * ba6cdb275c3 turnip: delete tu_clear_sysmem_attachments_2d
  * 9b6486bd3d9 turnip: fix sysmem CmdClearAttachments 3D fallback
    breaking GMEM path flush
  * 611f654fcf7 nir/deref: Don't try to compare derefs containing casts
  * ee2f21b10dc nir: Remove the old nir_opt_shrink_load.
  * d8c2f896dba amd: Swap from nir_opt_shrink_load() to
    nir_opt_shrink_vectors().
  * 023e6669cc1 i965: Enable vector shrinking in the vec4 backend.
  * 1c9906d5ff2 nir: Add a pass to cut the trailing ends of vectors.
  * 5afaec37413 turnip: workaround for a630 d24_unorm_s8_uint fails
  * 6fc52739bb4 etnaviv: fix nir validation problem
  * caa107cb8db freedreno/decode: move dependencies up a level
  * 9c33c538981 freedreno/registers: install gzip'd register database
  * 62ebd342e67 freedreno/registers: split header build into subdirs
  * e59b2412135 freedreno/registers: add .gitignore
  * 24f55eb6e80 freedreno/rnn: rework RNN_DEF_PATH construction

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 04 Aug 2020 17:16:46 +0200

mesa (20.2.0~git2007311414.cf8a8b764e5~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * cf8a8b764e5 ci: Set date in LAVA DUTs from NTP servers
  * 7f40db42a2d docs: Explain how to set up a personal gitlab runner.
  * 8e626879ddd freedreno/a6xx: Fix CP_BIN_SIZE_ADDRESS name
  * 6c11a7994dd i965/i915: Add colorspace support to YUV sampling
  * d8fdb8dab46 nir: Add colorspace support to YUV lowering pass
  * f3509c07663 zink: add extension loading framework for spirv builder
  * a91011c9eca pan/mdg: emit REGISTER_UNUSED on unused ALU src2
  * a2065917cc8 mapi: Return NULL function pointers for
    GL_EXT_debug_marker
  * 258165bed4d egl: drop left-over function prototype
  * ed3f1e04c7d egl: rename _eglMatchDriver() to _eglInitializeDisplay()
  * 6d6b82a159c egl: inline _eglMatchAndInitialize() and refactor
    _eglMatchDriver()
  * a77050c0345 egl: fix _eglMatchDriver() return type
  * f91851e6159 egl: drop unnecessary _eglGetDriver()
  * d24e3ea8cb2 egl: replace _eglInitDriver() with a simple variable
  * 3d4deb659e1 pan/mdg: remove ins->br_compact and ins->branch_extended
  * 8150c1d6320 pan/mdg: defer branch packing
  * 140185eb047 pan/mdg: refactor emit_alu_bundle
  * 0f0f9ee710f pan/mdg: remove ins->alu
  * 5299239c2ea pan/mdg: externalize mir_pack_mod
  * 1a4d165683a pan/mdg: defer register packing
  * bea6a652db5 pan/mdg: eliminate references to ins->load_store.op
  * 92c808cd475 pan/mdg: eliminate references to ins->texture.op
  * 83592de7ad2 pan/mdg: apply float outmods to textures
  * 5011373e2b4 pan/mdg: eliminate references to ins->alu.outmod
  * f34815c6bef pan/mdg: fix comment
  * 5f7e0185cd9 pan/mdg: eliminate references to ins->alu.reg_mode
  * f4c89bf9bdf pan/mdg: eliminate references to ins->alu.op
  * 598527f2feb pan/mdg: prepare effective_writemask()
  * b1b0ce04b3e pan/mdg: fix src_type in instructions that need a
    implicit zero
  * 75b1f3d39df drm-shim: Return -EINVAL instead of abort()ing on
    unknown ioctls.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 31 Jul 2020 15:51:22 +0200

mesa (20.2.0~git2007232055.1610c69f34d~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 1610c69f34d tu: Enable VK_EXT_depth_clip_enable
  * 1b3be07b5fa aco: ensure readfirstlane subdword operands are always
    dword aligned
  * 4c89bfc4ec0 aco: prevent infinite recursion in RA for subdword
    variables
  * 626081fe4bf aco: don't split store data if it was already split into
    more elements
  * bd75e992330 aco: ensure to not extract more components than have
    been fetched
  * 6bc5ce7a91d radv: Add timeline syncobj for timeline semaphores.
  * 55d8022878f radv: Add winsys functions for timeline syncobj.
  * 66e598d0a6f radv: Add winsys support for submitting timeline
    syncobj.
  * fb6b38d7800 radv: Add thread for timeline syncobj submission.
  * fa97061a823 radv/winsys: Add binary syncobj ABI changes for timeline
    semaphores.
  * fb5237910b2 amd: Add detection of timeline semaphore support.
  * ce4064fe2fe nir/ lower_int_to_float: Handle umax and umin
  * 589d8665f01 ci: Use half as many parallel softpipe / virgl test jobs
  * d9693c6620d ci: Do not mark container / pages jobs as interruptible
  * e74933e8ab3 ci: Use FDO_CI_CONCURRENT in run-shader-db.sh as well
  * 429ec827d4a ci: Namespace trace artifacts to the job number
  * 772ed657a27 nir_ allow nir_lower_clip_halfz to run in tess eval
    shader
  * 09ecfd95ee1 nir: allow lower_psiz_mov to run in tessellation stages
  * fced3c43e7a Revert "llvmpipe: Use the default behavior of
    ALLOW_MAPPED_BUFFERS."
  * be6c53bb9d3 llvmpipe/ms: fix sign extension bug in rasterizer.
  * 4d73988f6fe intel/ir/gen12+: Work around FS performance regressions
    due to SIMD32 discard divergence.
  * 45d159cb410 glx: Fix build and warnings with -Dglx=dri -Dglx-
    direct=false
  * ba22f014f9d softpipe: Enable PIPE_CAP_TGSI_ANY_REG_AS_ADDRESS;
  * 8e61fd92d4a softpipe: Enable PIPE_CAP_TGSI_TEXCOORD.
  * 259a03b4f0b softpipe: Add support for reporting shader-db output.
  * 991def0edc8 softpipe: Convert to comma-separated SOFTPIPE_DEBUG for
    debug options.
  * 86cfb62b87e softpipe: Refactor pipe_shader_state setup.
  * e67da8d25fa llvmpipe: enable robust buffer access + GL 4.3, GLES 3.2
    and robust buffer access behaviour
  * 6d3cefe727f llvmpipe: add device reset query context hook.
  * 3cb3d17312f glx/drisw: add robustness support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 24 Jul 2020 01:08:11 +0200

mesa (20.2.0~git2007200714.41c7bb6ec04~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 41c7bb6ec04 llvmpipe: add framebuffer fetching support (v1.1)
  * 0e0b6d477b9 llvmpipe/cs: respect render condition

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 20 Jul 2020 10:59:23 +0200

mesa (20.2.0~git2007181821.912ad091125~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 912ad091125 freedreno/ir3/ra: fix array conflicts for split/merged
  * b1465c382b5 freedreno/ir3/ra: assign vreg names to all array
    elements
  * 6317f7d574a freedreno/ir3/ra: debug msgs tweak
  * c2d94aa365d freedreno/ir3: fix half-reg array stores
  * 5be171b8886 freedreno/ir3: set array precision on creation
  * 0472ca2aa5c freedreno/ir3/parser: half-precision relative regs
  * 79b0651c245 freedreno: whitespace fix
  * 835201dd76f freedreno: small comment re-word
  * 2b343238a1f zink: free all ntv allocations after creating shader
    module
  * adc4f3896ae zink: free pipeline cache during program destroy
  * 1ff2d195b04 zink: destroy descriptor pools on context destroy
  * 7116decfce3 zink: destroy gfx program when a shader is freed
  * 9e9c8e2f794 android: panfrost/encoder: add libmesa_nir static
    dependency
  * 0ef168d5130 panfrost: Fix calls to
    panfrost_flush_batches_accessing_bo
  * 858cc13eb28 panfrost: Make panfrost_bo_wait take a wait_readers bool
  * 5b380483476 freedreno/ir3: Add unit tests for derivatives disasm.
  * 3d7d5d220b5 freedreno/ir3: Fix duplicated fine derivatives
    instructions.
  * 862d85a63ff amd/addrlib: Clean up unused colorFlags argument
  * a37aeb128d5 amd/common: Cache intra-tile addresses for retile map.
  * f302ef3853b aco: use s_waitcnt_depctr to mitigate
    VMEMtoScalarWriteHazard
  * bcf94bb933e aco: properly recognize that s_waitcnt mitigates
    VMEMtoScalarWriteHazard
  * 33f33bb7d69 meson: Enable GCing of functions and data from
    compilation units by default.
  * 610af7e1acc panfrost: Enable FP16 by default
  * e5169b1ca1a gitlab-ci: re-enable all a630 jobs
  * 4080f8bf2b0 freedreno/a2xx: Fix compiler warning in disasm.
  * cf55abe750f gitlab-ci: Re-add kernels for bare-metal
  * 2aa507f87a6 nir: Set the alignment for SSBO lowering
  * d735f075a6a intel/perf: Move perf query register programming to
    static tables.
  * d4e56930c25 intel/perf: Fix unused var warning in release builds.
  * afe07c7fa7c intel: Fix release-build warnings about sf_entry_size.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 19 Jul 2020 02:54:51 +0200

mesa (20.2.0~git2007141134.f95637f01a7~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * f95637f01a7 meson: fix android vulkan build
  * 3ed104b2aa1 gitlab-ci: Drop dependencies:
  * aa2457fc130 gitlab-ci: Remove indirect dependencies from needs:
  * bf1376aba0e tu: Don't invalidate irrelevant state when changing
    pipeline
  * a16136796ff freedreno/a6xx: Add some documentation for shared consts
  * e1fa740c4c1 freedreno/a6xx: Rename and document HLSQ_UPDATE_CNTL
  * dad042b15a9 clover: implements clEnqueueFillBuffer
  * fea109d40ff clover: add more cl_mem_object_type to
    pipe_texture_target mapping
  * ac642d8e6d4 radv: add the custom border color BO to the list of
    buffers
  * 684cfca7489 freedreno/registers: Rename SP_2D_SRC_FORMAT
  * d5c82c3c5f2 freedreno/a6xx: Split clear and blit texture into
    different functions
  * f383b2c18ac freedreno/a6xx: Don't take pipe_blit_info in
    emit_blit_dst
  * 3158b8ba0ab freedreno/a6xx: Program RB_UNKNOWN_8C01 in setup helper
  * 3ee89e6d03b freedreno/a6xx: Move CP_SET_MARKER to setup helper
  * 3961fb7e28b freedreno/a6xx: Move REG_A6XX_SP_2D_SRC_FORMAT
    programming to helper
  * 03ad130bc9c freedreno/a6xx: Program
    A6XX_SP_2D_SRC_FORMAT_COLOR_FORMAT based on dst format
  * 5c3c0c5c7b4 freedreno/a6xx: Make blit_control helper a little more
    helpful
  * 77d4aa76876 freedreno/a6xx: Enable FMT6_10_10_10_2_UNORM blitting
  * 1a58596258b freedreno/a6xx: Separate stencil sysmem clear fix
  * ab61393bc75 freedreno/a6xx: Don't emit src state when clearing
  * 416513d915b freedreno/a6xx: Consolidate computing blit_cntl
  * b36c675858f freedreno/a6xx: Program SP_2D_SRC_FORMAT outside blit
    loop
  * 556cd8f3e18 freedreno/a6xx: Set src and dst rects outside blit loop
  * 25bfc3b0494 freedreno/a6xx: Don't set unknown bit when tiling
    differs
  * def7e7426de freedreno/a6xx: Split out src and dst setup helpers for
    blit
  * bf0cf4c181f freedreno/a6xx: Move fd6_ifmt into fd6_blitter.c
  * 094b68fa728 freedreno/a6xx: Don't blit with R2D_RAW
  * 53e36cf062f turnip: drop GS clear path
  * a1a80c38ea2 turnip: clean up primitive output state
  * 7748afbb1ed freedreno/regs: update primitive output related
    registers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 14 Jul 2020 12:49:38 +0200

mesa (20.2.0~git2007091654.c8d848b2782~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * c8d848b2782 panfrost: Move pool routines to common code
  * 1d88f078201 panfrost: Drop Gallium-local pan_bo_create wrapper
  * ed1910dc68e panfrost: Move debug flags into the device
  * 8958fbd29e2 panfrost: Expose pool-based allocation API
  * 34e0954f1d2 panfrost: Track the device through the pool
  * 6ef7c05746f panfrost: Allocate pool BOs against the pool
  * 8882d6aad63 panfrost: Introduce pan_pool struct
  * 5d1bff290af docs/features: Track Panfrost
  * 9497a1fbe72 docs: fix a bunch of typos
  * 49d35f3d882 glsl: declare gl_Layer/gl_ViewportIndex/gl_ViewportMask
    as vs builtins
  * 26b75daef57 turnip: fix active_desc_sets not being set for compute
    pipeline
  * ee99a7a1cfb docs: add some missing stuff to sourcetree.rst
  * 27b09d293ba docs: update calendar and link releases notes for 20.1.3
  * 6b4aee78aed docs: add release notes for 20.1.3
  * 1e3aeda5281 glsl: only allow 32 bits atomic operations on images
  * 233af4a412d glsl: don't expose imageAtomicIncWrap for signed image
  * 438392243fb ac/llvm: remove the -1 hack from ac_atomic_inc_wrap
  * 0c8873d85db glsl: reject size1x8 for image variable with floating-
    point data types
  * 315ac941071 gitlab-ci: Remove left-behind rules:
  * 40526451ca5 radv: compute prim_vertex_count at draw time
  * 972081c6887 radv: adjust IA_MULTI_VGT_PARAM.PARTIAL_VS_WAVE at draw
    time
  * 5f1b0f4b48a radv: adjust IA_MULTI_VGT_PARAM.WD_SWITCH_ON_EOP at draw
    time
  * 9f561feecc7 radv: store the primitive topology hardware value in the
    pipeline
  * 6f734324a5e radv: implement missing
    VK_ACCESS_MEMORY_{READ,WRITE}_BIT
  * 02a57896f66 nv50/ir: fix memset on non trivial types warning
  * cd67e2c280a nine: remove unused var
  * 8f6d66d5094 zink: fix missing fallthrough comment
  * 20dff7dc6b0 v3d: remove redefine of VG(x)
  * 03a5b3f6d5a freedreno: fix missing fallthrough comments
  * 40e00c800cf amd/llvm: Mark pointer function arguments as 32-byte
    aligned.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 09 Jul 2020 18:38:56 +0200

mesa (20.2.0~git2007050624.ef11d5fc8bb~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * ef11d5fc8bb st/mesa: allow R8 to not be exposed as renderable by
    driver
  * 9e2afe4f05a mesa/glformats: make
    _mesa_gles_error_check_format_and_type() more consistent
  * a573c8cd47c drirc: Add picom to adaptive_sync exclusion list
  * 19f3c79c7ed turnip: fix tess param bo size calculation
  * 395511d1691 nir: Add nir_lower_clip_disable.c to SCons build.
  * a1b89dbc8f4 gitlab-ci: Enable -Werror in `meson-classic` job
  * ec8fdf8579d nouveau: fix pointer-sign warning
  * b9e163fa67e util: Avoid strict aliasing bugs in xxhash.
  * 29ce8060eb0 draw/clip: fix viewport index for geometry shaders
  * 3366171d0ac draw/clip: cleanup viewport index handling code.
  * 0e7b7c30870 turnip: vsc improvements
  * 4ac851ea253 turnip: rework render_tiles loop
  * 8898ebce1a1 turnip: make tiling config part of framebuffer state
  * 31392f83711 Revert "loader/dri3: Check for window destruction in
    dri3_wait_for_event_locked"
  * 02d0b2d5604 meson: Add versioning for xvmc tracker
  * a79ca675f3d st/program: use nir_lower_clip_disable instead of
    nir_lower_clip_vs conditionally
  * fb2fe802f63 nir: add lowering pass for clip plane enabling
  * f8946bd705c v3d/tex: handle correctly coordinates for
    cube/cubearrays images
  * 0b6e03b8481 CI: reduce bandwidth for git pull
  * 9190cc9b151 tu,radv: fix potentially wrong offset of flexible array.
  * e2209e869a5 meson: turn on Wimplicit-fallthrough project wide
  * 26aa02b5ab9 nv30: add missing fallthrough comment
  * 651441c16fd mesa: update fallthrough comment so gcc can see it
  * 9549443a8f0 svga: add missing fallthrough comments
  * 7579414db24 r300: add and fix up fallthrough comments
  * dfb9be6994f mesa: fix unintended fallthrough in glIsEnabled()
  * 8b90310b401 mesa: add missing fallthrough comment to teximage.c
  * d88447d5ce4 mesa/vbo: add some missing fallthrough comments
  * cb8cd644113 spirv: add missing fallthrough comments
  * 580fe899581 radeon: add missing fallthrough comments

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 05 Jul 2020 12:20:24 +0200

mesa (20.2.0~git2007021904.64cdc1311b9~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 64cdc1311b9 etnaviv: move ra into own file
  * 027e9e8da37 etnaviv: move nir compiler related stuff into .c file
  * f1df033fccd etnaviv: move functions that generate asm to own file
  * 79427a01909 etnaviv: drop emit macro
  * 624b8b4a928 etnaviv: merge struct etna_compile and etna_state
  * 0f025e8b810 etnaviv: move liveness related stuff into own file
  * 9ae96d32dd8 etnaviv: make more use of compile_error(..)
  * 96670c81502 etnaviv: drop OPT_V define
  * 1636e14cfd4 etnaviv: move etna_lower_alu(..) to etnaviv_nir.c
  * 7460d4863df etnaviv: get rid of etna_compile dependency
  * 12b15cbcbfa etnaviv: move etna_lower_io(..) to etnaviv_nir.c
  * ea17cbf16fa etnaviv: convert enums
  * 34f776386ca etnaviv: delete not used struct
  * 3cdc0d50981 ci: Move deploy stage between container & build stages
  * fc41ec16c8b ci: Use "when: always" for pages job
  * ab9ecb607b8 radv,vulkan: add a new x11 wsi drirc workaround for DOOM
    Eternal
  * 311b9f25834 Revert "vulkan/wsi/x11: Ensure we create at least
    minImageCount images."
  * 11a6a96f8a5 radv: fix wide lines with multisample enabled
  * efec833a188 CI: Disable Windows build due to unstable infrastructure
  * f2f57ef9f78 zink: implement Vk_EXT_index_type_uint8
  * 53372175c9b radv: fix wide points and lines
  * 8b8ffb12b40 docs: update llvmpipe GL 4.0 status
  * af7a7f6ce7b ci: fixup tests after all indirect images fixes.
  * 0ecae0ac0b5 llvmpipe: handle indirect images properly
  * b7b22b735d1 draw/sample: add support for indirect images
  * e6f7fe33244 gallivm/nir: add support for indirect image loading
  * bc1ac7dc3f3 gallivm/img: refactor out the texel return type (v2)
  * 6e25a5a3756 gallivm/nir: refactor image operations for indirect
    support.
  * 3ca3b07fc1b gallivm/nir: support passing image index into image
    code.
  * f75c1e83e2e llvmpipe: pass number of images into image soa create

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 02 Jul 2020 20:58:51 +0200

mesa (20.2.0~git2006290051.237d7284180~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 237d7284180 gallivm/nir: fix const loading on big endian systems
  * 7d31bc9a34c freedreno/ir3: fix resinfo wrmask
  * b1c16e52514 docs: use ref-links for internal references
  * 5ee55b206af docs: fix internal references
  * 1d250bf2916 docs: restore accidentally dropped labels
  * 05e61a91573 docs: remove non-existent reference
  * 3b74e6fa280 meson: Do not require shader cache for radv.
  * c0c03f4772f rbug: Fix rbug_delete_vs_state lock acquisition.
  * 583d7d3d8d0 v3d: moving v3d simulator to src/broadcom
  * 4fccbd0ea60 turnip: Put VK_KHR_external_fence_fd stubs back
  * 39f06e28485 iris: Implement pipe->texture_subdata directly
  * 34630fe081b turnip: Properly return VK_DEVICE_LOST on queuesubmit
    failures.
  * 487576e3cfd turnip: Fix error handling of DRM_MSM_GEM_INFO ioctls.
  * e67c2e1c96c turnip: Do better TU_DEBUG=startup logging of
    drmGetDevices2() failure.
  * aba8c579a97 turnip: semaphore support.
  * 6283da34a91 ci/baremetal: Bump the kernel to a recent drm-msm-fixes
    for msm semaphores.
  * 5c0f82b0d72 aco: fix partial copies on GFX6/7
  * 66482303f6d mapi: x86: Fix dynamic entries in x86 tsd stubs.
  * 63805ccd3f0 ci/bare-metal: Fail early when we get stuck powering on
    a cheza.
  * 189a0fecf54 freedreno/ir3: move nir finalization to after cache miss
  * f97acb4bb4b freedreno/ir3: disk-cache support
  * 6aadb00e60f freedreno/ir3: build binning variant at same time as
    draw variant
  * 83b97bf161f freedreno/a6xx+ir3: stop generating pointless binning
    shaders
  * fdbe1ffaf74 freedreno/ir3: shuffle some variant fields
  * c0f22c3d940 freedreno/ir3: add ir3_compiler_destroy()
  * f1ab57359c7 freedreno/ir3: move finalize_nir to pscreen hook
  * d3ae5593783 freedreno/ir3: add ir3_finalize_nir()
  * e35b8971a74 zink: use OpFUnordNotEqual for nir_op_fne
  * 765de33d3ce zink: set lower_mul_high and lower_rotate in ntv
    compiler options
  * 49c13fccf75 zink: handle isign alu in ntv

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 29 Jun 2020 02:10:12 +0200

mesa (20.2.0~git2006251615.7e98f2534c3~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 7e98f2534c3 gitlab-ci: add a list of expected failures for RADV/ACO
    on NAVI14
  * 63e1e7209c2 radv: enable ACO by default
  * db0afb38007 radv: change use_aco -> use_llvm
  * b78f64507e9 radv: introduce RADV_DEBUG=llvm option
  * 37e7a5e746d zink: unify code for setting resource barriers
  * a102896cff2 radv: lower 64-bit dfloor on GFX6 for fixing precision
    issues
  * c84f11e7b67 radv: lower 64-bit drcp/dsqrt/drsq for fixing precision
    issues
  * 82b46667836 iris: Honor scanout requirement from DRI
  * ec7b55f4cc5 vulkan/overlay: fix crash on destroying NULL swapchain
  * 8c962f5f61f gitlab-ci: add parallel-rdp fossils
  * 6da06479878 freedreno/ir3/ra: fix pre-color edge case
  * c5b990f435e turnip: disable early_z for VK_FORMAT_S8_UINT
  * 04148f44111 turnip: fix update_stencil_mask
  * 9c0ae5704d6 turnip: fix empty scissor case
  * 7c008c293d7 freedreno: handle batch flush in resource tracking
  * 16b4da3ba31 freedreno: split out batch clear tracking helper
  * ad136945e6d freedreno: split out batch draw tracking helper
  * d74554b1674 freedreno: make foreach_bit() declare it's cursor
  * 1fd2bc10dc7 turnip: implement VK_EXT_vertex_attribute_divisor
  * 8018b4b7071 docs: fix 20.1.2 relnotes
  * 804c6ee0dfd docs: update calendar and link releases notes for 20.1.2
  * e94f81e9df8 docs: Add release notes for 20.1.2
  * 3065c4bf925 freedreno/ir3: switch PIPE_CAP_TGSI_TEXCOORD
  * e6d650353a0 freedreno: convert builtin blit VS prog to ureg builder
  * b5574c51654 freedreno/a3xx: use point-coord helper
  * ba6e1514f59 freedreno/a4xx: use point-coord helper
  * 3e8c6312c70 freedreno/a5xx: use point-coord helper
  * a474d48e176 freedreno/a6xx: use point-coord helper
  * 68d6aa3dd02 freedreno/a6xx: de-duplicate vinterp/vpsrepl state
    building
  * 022c363cfbb freedreno/ir3: add helper to determine point-coord
    inputs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 25 Jun 2020 17:11:42 +0200

mesa (20.2.0~git2006242255.01e2893cba4~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 01e2893cba4 turnip: implement depthBounds
  * a9d866910c5 freedreno/registers: a6xx depth bounds test registers
  * 4fc0499049f aco: remove outdated assert in handle_operands()
  * 7cad27831d2 aco: ignore blocked registers when checking edges in
    get_reg_impl()
  * 91a82d00696 radv: fix checking the return value of cs_finalize()
  * 86df5283a32 gitlab-ci: update the list of expected failures for
    Pitcairn
  * aa35670fd09 radv: Make radv_alloc_shader_memory static.
  * 64a92ef7a26 radv/winsys: Distinguish device/host memory errors.
  * a5cb88eea45 radv: Handle mmap failures.
  * 04765e6a9a4 radv/winsys: Deal with realloc failures in BO lists.
  * 519ddfd3126 aco: improve vectorization of 8/16-bit loads/stores
  * ddffcf36277 aco: fix when sub-dword create_vector operand cannot be
    placed perfectly
  * 91fd53884dc aco: don't allow partial copies on GFX6/7
  * 76b5d72921c aco: align swap operations to 4 bytes on GFX6/7
  * 91d7e401763 aco: don't create byte-aligned short loads
  * c3259b6e6a2 aco: add missing bld.scc() in byte_align_scalar()
  * a0f6ca4393d aco: don't store byte-aligned short stores
  * a18da83d184 aco: fix copy+paste error in split_buffer_store
  * 841fdfcd453 radv/aco,aco: allow SMEM SSBO loads on GFX6/7
  * 35b5e1fc7c5 aco: allow SMEM for some sub-dword accesses
  * c702f8ed157 aco: only use SMEM if we can prove it's safe
  * 0cfee26bee3 radv: fix image variable types in meta shaders
  * c344c083fc7 spirv: set variables to restrict by default
  * 1be67d610f4 android: freedreno/ir3: simplify generated sources rules
  * 41683157e77 android: freedreno/ir3: add missing generated sources
    and rules
  * b41828c3375 android: freedreno: add fd5_layout.c to Makefile.sources
  * 5f97dfc4c84 vulkan/wsi/x11: Ensure we create at least minImageCount
    images.
  * 7b3976d3f86 zink: clamp VkImageCreateInfo.arrayLayers to 1 for image
    resource creation
  * 994224bc293 gitlab-ci: update the list of expected CTS failures for
    RADV/ACO
  * 6a5fb31fefb nir: Fix divergence analysis for tessellation
    input/outputs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 25 Jun 2020 00:04:50 +0200

mesa (20.2.0~git2006222319.6e24047573f~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 6e24047573f zink: use correct define value for reserved slot count
    in ntv
  * c323e0ddf3d intel/dev: Add device info for DG1
  * 37a724e4ae0 anv/dg1: Don't use SET_TILING kernel uapi.
  * e6588354360 iris/bufmgr: Do not use map_gtt or use set/get_tiling on
    DG1
  * 762e601f776 intel/devinfo: Add function to check for
    DRM_I915_GEM_GET_TILING.
  * 86617c08cc9 intel/l3: Return the URB size from devinfo for DG1
  * 793b4092416 intel/isl: Update mocs for DG1
  * 3daa8667512 intel/l3: Add DG1 L3 configuration
  * 633dec7163e anv: Set L3 full way allocation at context init if L3
    cfg is NULL
  * e2e0521ecbb iris/l3: Enable L3 full way allocation when L3 config is
    NULL
  * 6054b24f584 intel/l3: Allow platforms to have no l3 configurations
  * 49fe43e15fd intel/l3: Don't rely on cfg entry URB size being 0 as a
    sentinal
  * f1fba99695f intel/devinfo: Add is_dg1 to device info
  * 64ccb740281 turnip: Enable tessellationShader physical device
    feature
  * 497671be35f ir3: Unconditionally enable MERGEDREGS on a6xx
  * 7a836ec6319 turnip: Force sysmem for tessellation
  * 2718353b381 turnip: Support tess for draws
  * 08aaa3d4c46 turnip: Emit HS/DS user consts as draw states
  * 8cb226b2588 turnip: Update VFD_CONTROL with tess system values
  * f08a80dcd49 turnip: Allocate tess BOs as a function of draw size
  * eefdca2e2f5 turnip: Parse tess state and support PATCH primtype
  * ff16e72545b turnip: Offset by component when lowering gl_TessLevel*
  * b09e690f3b7 turnip: Lower shaders for tessellation
  * d2df0761200 nir: Add an option for lowering TessLevelInner/Outer to
    vecs
  * d2d4677b56e nir: Support sysval tess levels in SPIR-V to NIR
  * ffc4d82438d v3d: Disable PIPE_CAP_PRIMITIVE_RESTART
  * 1fc346d2bec mesa: Add PrimitiveRestartFixedIndex to gl_constants
  * bb5fc90135f gallium: Add pipe cap for primitive restart with fixed
    index
  * bcf6a9ec635 nv50/ir/ra: fix memory corruption when spilling
  * b8c77d4765d nv50/ir/ra: convert some for loops to Range-based for
    loops

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 22 Jun 2020 23:44:20 +0200

mesa (20.2.0~git2006201246.c977567db65~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * c977567db65 radv: enable radv_no_dynamic_bounds for more Path of
    Exile executables
  * 08f64f91d12 gallium/util: add missing include
  * 2d6059d8877 gallium/util: limit STACK_LEN on Windows
  * e6fa8ed9685 graw/gdi: do not depend on UNICODE macro
  * eda68414205 gallium/os: call "ANSI" version of GetCommandLine
  * 04f77595f0b intel/compiler: Always apply sample mask on Vulkan.
  * 19b2ac2bb9e radv: enable radv_no_dynamic_bounds for Path of Exile
  * f4a643f65e3 radv: add new drirc option radv_no_dynamic_bounds
  * 3915b56e39c iris: Support I915_FORMAT_MOD_Y_TILED_GEN12_RC_CCS
  * 2305ab69382 iris: Refactor modifier_is_supported for gen12
  * c19492bcdb9 iris: Handle importing aux-enabled surfaces on TGL
  * 4ed6e43988e gallium/dri2: Support
    I915_FORMAT_MOD_Y_TILED_GEN12_RC_CCS
  * b25fedeff99 isl/drm: Support I915_FORMAT_MOD_Y_TILED_GEN12_RC_CCS
  * 9dea3e1b477 iris: Use ISL_AUX_USAGE_GEN12_CCS_E on gen12
  * 230952c2101 iris: Don't support sRGB + Y_TILED_CCS on gen9
  * db5d98cde82 intel: Add ISL_AUX_USAGE_GEN12_CCS_E
  * d9f7fce83c1 ci: Enable NIR validation on a630 GLES2 and VK tests.
  * 6ee80d8e0cf ci: Bump vulkan CTS to 1.2.3.0.
  * f8961ea0865 iris: Disable sRGB fast-clears for non-0/1 values
  * 48a3f4c44b6 iris: Avoid fast-clear with incompatible view
  * fbbf79377bc iris: Remove the CCS_D fallback
  * e533232d8c8 iris: Drop can_fast_clear_color's format parameter
  * 7b7d28ed6de docs: move "stable" tag explanation next to `Fixes:`
  * a096d410941 docs: move `Fixes:` tag explanation to its own section
  * 7488d491072 docs: make it clear that the tags needs to be in the
    commit message
  * 731465192a9 docs: reword a sentence a bit
  * 5d27d5eb614 docs: add some formatting to the "backport merge
    request" option
  * 0e4eb7b86d9 docs: prefer `Fixes:` over `Cc: mesa-stable`
  * 8fd98931235 docs: drop `git sendemail` instructions
  * a29a1588b1c docs: reword "sending a patch revision" to "updating a
    merge request"

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 20 Jun 2020 13:12:45 +0200

mesa (20.2.0~git2006180409.6269405a2ba~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 6269405a2ba virgl: replace all dup() with os_dupfd_cloexec()
  * 526910e8faa svga: replace all dup() with os_dupfd_cloexec()
  * 9ca2a4e6fc9 freedreno: replace all dup() with os_dupfd_cloexec()
  * bd5cf70d3db etnaviv: replace all dup() with os_dupfd_cloexec()
  * 419b446e1e0 egl: replace all dup() with os_dupfd_cloexec()
  * 62797c30edb i965: replace all dup() with os_dupfd_cloexec()
  * e0e9c2486d6 iris: replace all dup() with os_dupfd_cloexec()
  * 00defe2e0a9 anv: replace all dup() with os_dupfd_cloexec()
  * 405bffefe15 radv: replace all dup() with os_dupfd_cloexec()
  * 69269a46f10 vulkan/wsi: replace all dup() with os_dupfd_cloexec()
  * 4a8085d67ca replace all F_DUPFD_CLOEXEC with os_dupfd_cloexec()
  * 0e5ea7a3639 util: introduce os_dupfd_cloexec() helper
  * b00e1d9ea77 util/os_file: replace broken windows-detection code with
    detect_os.h
  * bf63da3e95a ci: disable the windows tests until the runner can be
    stabilized again
  * 3e37b7e6bba docs: remove plain-text copy of versions.rst
  * 9706b7238c7 khronos-update.py: add script to simplify update of
    Khronos headers & xml files
  * e8ad52f7b0c zink: enable xfb extension in screen creation
  * e5e657768c3 zink: switch to passing VkPhysicalDeviceFeatures2 in
    VkDeviceCreateInfo
  * 1983609212e zink: set PIPE_CAP_VIEWPORT_TRANSFORM_LOWERED and remove
    POS special casing
  * 37778fcd9a3 zink: implement transform feedback support to finish off
    opengl 3.0
  * 1b130c42b8d zink: implement streamout and xfb handling in ntv
  * c3f6a59d57b zink: add spirv_builder methods for
    OpVectorExtractDynamic and OpVectorInsertDynamic
  * 14dbf51d7fd zink: add spirv builder util functions for emitting xfb
    decorations
  * f841d11c9fe zink: use '2' variants for device props/feats, check
    features for ext enabling
  * 9f24909b0b7 turnip: use u_format for packing gmem clear values
  * 03e284ec9ec docs: fixup relnotes after rst-conversion
  * 51fb3b09dc1 radv/aco: enable FP16 features/extensions on GFX9+
  * abfe28a6bb6 aco: fix validation of opsel when set for the definition

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 18 Jun 2020 04:35:47 +0200

mesa (20.2.0~git2006171732.f745ceecee6~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * f745ceecee6 turnip: use draw states for input attachments
  * 159a1300ceb turnip: input attachment descriptor set rework
  * 233610f8cf8 turnip: refactor draw states and dynamic states
  * 62a4db4c0f1 turnip: delete dead dynamic state code
  * aab3398b337 turnip: improve dirty bit handling a bit
  * edb8c581db4 turnip: move descriptor set BO tracking to
    CmdBindDescriptorSets
  * 5ef0f9f6225 turnip: compute and graphics have completely separate
    state
  * a3464c567cc tu: Actually remove dead variables after io lowering
  * 168c42290f9 ir3: Don't calculate num_samp ourselves
  * 568e06b3a6f tu: Set num_components to 0 when building bindless
    intrinsics
  * 6fcbce3b996 tu: Remove tu_shader_compile_options
  * 808992fc506 tu: Use the ir3 shader API
  * b1700698a58 tu: Remove num_samp hack
  * 6f2981176d9 ir3: Pass reserved_user_consts to ir3_shader_from_nir()
  * 89c8393a163 pan/mdg: Reassociate adds for multiply-by-two
  * a3348f88c87 pan/mdg: Canonicalize (x * 2.0) to (x + x)
  * 6318e461416 pan/mdg: Allow scheduling "x + x" to multipliers
  * bc356abea31 pan/mdg: Factor out unit check
  * de7c6950b36 aco: fix sub-dword opsel/sdwa checks
  * 1e791e51a65 aco: fix validation error from vgpr spill/restore code
  * d37deebde57 turnip: fix cubic filtering with CmdBlitImage
  * 198b13974a2 turnip: fix 3D path always being used for CmdBlitImage
  * 1622787ee4d turnip: set VFD_INDEX_OFFSET in 3D clear/blit path
  * 4d13e35315e spirv: do not set num_components for non-vectorized
    mbcnt_amd intrinsic
  * b2e9d21fdd6 st_glsl_to_nir: fix potential use after free
  * 7e8e02d5432 glsl: small optimisation fix for uniform array resizing
  * a5d3e061af9 glsl: fix uniform array resizing in the nir linker
  * f63a5781008 anv: Add VK_EXT_custom_border_color to relnotes
  * ed7bebc17b4 anv: enable VK_EXT_pipeline_creation_cache_control
  * 23633f6c694 anv: implement
    VK_PIPELINE_CREATE_FAIL_ON_PIPELINE_COMPILE_REQUIRED_BIT_EXT

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 17 Jun 2020 17:56:13 +0200

mesa (20.2.0~git2006151746.b5c810d68b2~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * b5c810d68b2 turnip: drop linking libfreedreno_drm
  * 1a33faea8c5 freedreno/ir3: move the libdrm dependency out of shared
    code
  * 43e0062c5b3 freedreno/ir3: unify shader create/delete paths

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 15 Jun 2020 18:23:59 +0200

mesa (20.2.0~git2006131242.ebb33b2c0aa~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * ebb33b2c0aa post_version.py: update script to the new rST way of
    things
  * 8bc055fc527 gen_release_notes.py: update script to the new rST way
    of things
  * 9d90791c19a docs/release-calendar: restore missing id
  * 8077267026b bin/perf-annotate-jit.py: update internal reference
  * cd01d0dee16 radv: update internal reference
  * 7d497e4e098 docs/relnotes: update internal references
  * f1fe74afb2c docs: update internal references
  * ea91f4769ac README: update references to internal docs
  * 0b4f5121f02 docs: drop news in favour of the introduction as index-
    page
  * 064fe5f3f44 gitlab-ci: build and deploy docs
  * 381fc0eca56 docs: include specs into the generated docs
  * dd3add1b197 docs: bundle extra files
  * 62abe35e348 docs: use rst-note for highlighted text
  * 29c95ff627b docs: reformat license table as rst table
  * 84140a7c06c docs: use rst footnotes instead of manual ones
  * 8342fe8302a docs: Add the favicon to the new page.
  * 17aefa73a10 docs: do not copy source-files to site
  * 21adb67048d docs: Remove version.
  * 54e38882a12 docs: add xlibdriver to table-of-contents
  * 14f2a81b6f6 docs: drop open-coded toc for articles
  * d6be994ef8e docs: use code-blocks
  * bf3f0f7a82e docs: format notes as rst-notes
  * 5aea48001fc docs: include meson in the toctree
  * 7039310ae39 docs: use code-block with caption instead of table
  * dcaab1b311e docs: disable syntax-highlighting by default
  * 00cd1346bf0 docs: use sphinx
  * 0841da2fbb1 docs: fixup heading-levels
  * a71f08b7152 docs: fixup broken rst
  * 841a47fb286 docs: escape trailing underscores properly
  * 2c0707d13db docs: escape asterisks

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 13 Jun 2020 16:22:41 +0200

mesa (20.2.0~git2006111231.19b18e72196~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 19b18e72196 docs: update calendar, add news item, and link releases
    notes for 20.1.1
  * f94190e8b05 docs: Add release notes for 20.1.1
  * 0b3e3442126 ac/surface: don't free dcc_retile_map on failure
  * 56f2a77a414 ac/surface: enable DCC for the first level in the mip
    tail on gfx10
  * 7406ea37e6b ac/surface: require that gfx8 doesn't have DCC in order
    to be displayable
  * 374f6d568f6 ac/surface: don't set is_displayable if displayable DCC
    is missing
  * 0fcf55329be amd/addrlib: fix the C++ one definition rule violation
  * 27b7b899225 iris: Better handle metadata in NIR passes
  * 92cfbb7d0ce intel/nir: Call nir_metadata_preserve on !progress
  * 2b676b2ce87 nir: Properly preserve metadata in more cases
  * 5e1c42d85f2 nir: Call nir_metadata_preserve on !progress
  * b0d1f9a72ff nir: Add a nir_shader_preserve_all_metadata helper
  * e017ee95c11 nir: Add a nir_metadata_all enum value
  * 30f94b3e7d3 gallivm/sample: fix texel type for stencil 8-bit
  * 47c23180632 gallivm/conv: enable conversion min code. (v2)
  * 45606ee8049 gallivm/format: convert unsigned values to float
    properly.
  * a2c16ecb2ee llvmpipe: fix subpixel bits reporting.
  * f6ce962f00f gallivm/nir: add group barrier support
  * 069aee7cc54 draw/gs: add more info to debugging.
  * 092f6226ea6 draw/gs: fix emitting inactive primitives crash
  * cc13ffffba4 ci: Leave a note as to what might be going on with a
    test.
  * d5e993af47f freedreno/a6xx: Fix clip_halfz support.
  * af3c2f3cfd8 nvc0: initial support for tu1xx
  * 268dc60d3a0 nvc0: initial support for gv100
  * 839aeffb49e nvc0: remove hardcoded blitter vertprog
  * 4f3fbfb82e6 nvc0: move setting of entrypoint for a shader stage to a
    function
  * 550f1c6d332 nvc0: use NVIDIA headers for GP100- compute QMD
  * 443d369bd5f nvc0: use NVIDIA headers for GK104->GM2xx compute QMD
  * 7458e21e2b9 nvir/gv100: enable support for tu1xx
  * 78103abe878 nvir/gv100: initial support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 11 Jun 2020 17:17:54 +0200

mesa (20.2.0~git2006071808.b3beb6207f1~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * b3beb6207f1 v3d_bufmgr: fix time_t printf
  * d512028d06c pan_bo.h: add time.h include for time_t
  * 07ba5e47e66 vc4_bufmgr: fix time_t printf
  * e43ab7bb058 glsl: fix potential slow compile times for
    GLSLOptimizeConservatively
  * dd81f4853c8 llvmpipe: do not enable tessellation shader without llvm
    coroutines support
  * 990b3782bc5 intel/compiler: fix Android build
  * 6a841dbf4e4 intel/genxml: Migrate from deprecated
    xml.etree.ElementTree getchildren.
  * 06650a771dc android: svga: fix build for GL4.1 support
  * 0570c7a7b5b android: util: fix build for GL4.1 support
  * faa339e666b Switch from cElementTree to ElementTree.
  * a61532e4dbd Revert "panfrost: Keep cached BOs mmap'd"
  * d97aaad1555 pan/midgard: Use a signed value for checking inline
    constants
  * 0bacb280a88 freedreno/ir3: Handle cases where we decide not to lower
    UBO 0 loads.
  * e349f502792 freedreno/ir3: Drop the max_const on a6xx to 512.
  * 486b8943079 freedreno/ir3: Account for driver params in UBO max
    const upload.
  * a25347ab92b freedreno/ir3: Stop shifting UBO 1 down to be UBO 0.
  * 9e58ab09ffb freedreno/ir3: Drop unnecessary alignment of pushed UBO
    size.
  * 07ec745014a freedreno/ir3: Stop pushing immediates once we've filled
    the constbuf.
  * ab29f2da42f freedreno/ir3: Refactor ir3_cp's lower_immed().
  * 4065861807f freedreno: Upload gallium constbufs as needed when
    referenced as a UBO.
  * d1f9d1e26a2 freedreno/a6xx: Add support for ALPHA_TO_ONE.
  * ac1ab9294ab turnip: Add support for alphaToOne.
  * 79f3003445e turnip: Use tu_cs_emit_regs() for BLEND_CONTROL.
  * 5d13c7477eb radv: set keep_statistic_info with
    RADV_DEBUG=shaderstats
  * 981d07c74a1 intel: fix gen_sort_tags.py
  * bfff330f061 radv/aco: enable VK_KHR_shader_subgroup_extended_types
    on GFX6-GFX7
  * 6391f9ab4cb aco: fix nir_intrinsic_quad_* with 8-bit in GFX6-GFX7
  * e1523b34c2a aco: fix sign-extend 8-bit subgroup operations on GFX6-
    GFX7
  * ee4bc13de2a aco: use v_bfe_u32 for unsigned reductions sign-
    extension on GFX6-GFX7
  * a874132cc41 intel/genxml: drop sort_xml.sh and move the loop
    directly in gen_sort_tags.py

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 07 Jun 2020 22:42:25 +0200

mesa (20.2.0~git2006050257.f1f81abfd44~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * f1f81abfd44 freedreno/a6xx: more early-z
  * 4d7ee2749f5 ci: bump virglrenderer to latest version
  * ec98cff6a9a turnip: Simplify vertex buffer bindings.
  * 5c9728d9607 turnip: Don't bother clamping VB size.
  * 52942f18c60 turnip: Move vertex buffer bindings to SET_DRAW_STATE.
  * c8c7450fc73 llvmpipe: move coroutines out of noopt case
  * 2d1688345a6 pan/mdg: Ensure ld_vary_16 is aligned
  * de8be1de132 freedreno/a6xx: Fix VFD_CONTROL emit
  * 202252566bf radv: Always expose non-visible local memory type on
    dedicated GPUs
  * 622e3a8510a pan/mdg: Legalize inverts with constants
  * e61a98877cc nir: reuse existing psiz-variable
  * 57e4d0aa1c1 i965: fix export of GEM handles
  * aba3aed96e4 iris: fix export of GEM handles
  * e41e820648b i965: don't forget to set screen on duped image
  * 604a86e46f6 iris: fix BO destruction in error path
  * c3025bde192 mesa: Fix NetBSD compiler macro.
  * e9cda38031a freedreno/a6xx: also consider alpha-test for ztest-mode
  * 1e3731e7119 freedreno/a6xx: add early-lrz-late-z mode
  * 07887c9f34c freedreno/a6xx: re-work LRZ state tracking
  * 27e501bcfc5 freedreno/a6xx: update depth-plane control regs
  * f6307426ed5 freedreno/a6xx: sync registers from envytools
  * ebcf3545db7 freedreno/ir3: split kill from no_earlyz
  * 346bb81f405 docs/features.txt: Update for freedreno
  * 5fb7cad95c2 freedreno/a6xx: Turn on robustness extensions
  * 8b353524b04 vdpau: Fix wrong calloc sizeof argument.
  * 8252bb0ec6d OPTIONAL: iris: Perform BLORP buffer barriers outside of
    iris_blorp_exec() hook.
  * 4b00338bdee iris: Remove iris_flush_depth_and_render_caches().
  * 46adb83a293 iris: Emit single render target flush PIPE_CONTROL on
    format mismatch.
  * b9281884936 iris: Open-code iris_cache_flush_for_read() and
    iris_cache_flush_for_depth().
  * 74c774dce9e iris: Remove render cache hash table-based
    synchronization.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 05 Jun 2020 04:35:47 +0200

mesa (20.2.0~git2006031935.0e73d879e3a~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * 0e73d879e3a pan/bi: Handle vectorized load_const
  * 1b09c6993dc pan/bi: Passthrough second argument of F32_TO_F16
  * 8a4efe2d730 pan/bi: Pack second argument of F32_TO_F16
  * 323eecaf139 pan/bi: Fix SEL.16 swizzle
  * 9ed1ae4724c pan/bi: Handle SEL with vec3 16-bit
  * afc18c62d79 panfrost: Passthrough NATIVE loads/stores
  * 36af05bbdef pan/mdg: Handle regular nir_intrinsic_load_output
  * 293d37e19d8 pan/mdg: Allow f2u8 and friends thru
  * 0ae0141f5b2 pan/mdg: Handle f2u8
  * f8b881f1611 pan/mdg: Fold roundmode into applicable instructions
  * 93513cd9ff1 pan/mdg: Implement *_rtz conversions with roundmode
  * 6290e83190a pan/mdg: Lower roundmodes
  * 1bef7848674 pan/mdg: Add opcode roundmode property
  * 2eb4c85e424 pan/mdg: Add roundmode enum
  * 014d2e46a71 pan/mdg: Distinguish blend shaders in internal shader-db
  * 99446c9f7d3 panfrost: Only use AFBC YTR with RGB and RGBA
  * 9ac106defe3 panfrost: Decode AFBC flag bits

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 03 Jun 2020 19:56:16 +0200

mesa (20.2.0~git2006031234.a34cc97ca3e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a34cc97ca3e glsl: when NIR linker enable use it to resize uniform
    arrays
  * 7d1eadb7906 glsl: gather uniform dereference info before main
    linking loop
  * a13d8d48ce5 glsl: add update_array_sizes() helper to the NIR uniform
    linker
  * 6aea287b0a1 glsl: add struct to gather more info about uniform array
    access
  * d6d78f9b7ff util: add BITSET_LAST_BIT() helper
  * f518508a817 i965: call brw_nir_lower_uniforms() after uniform
    linking is complete
  * 907bacea13f gbm: document that gbm_bo_map exposes a linear view
  * 9f3956fea08 glsl: Don't replace lrp pattern with lrp if arguments
    are not floats
  * 3ed2123d77d spirv: Use scoped barriers for SpvOpControlBarrier
  * 689acc73989 intel/compiler: Extract control barriers from scoped
    barriers
  * 345b5847b42 nir: Replace the scoped_memory barrier by a
    scoped_barrier
  * 94438a64bf7 spirv: Split the vtn_emit_scoped_memory_barrier() logic
  * d3c937c0e4d radv: enable zero VRAM for all VKD3D (DX12->VK) games
  * fd5ffd3a83e radv: enable zero VRAM for Doom Eternal
  * c183ea94afd gitlab-ci: bump piglit checkout commit
  * 7873276f689 glsl/spirv: remove dead uniforms in spirv nir linker
  * a494b624101 glsl: remove dead uniforms in the nir linker
  * 60bee4c70c0 glsl: add can_remove_uniform() helper to the NIR linker
  * 04dbf709edf nir: add callback to nir_remove_dead_variables()
  * bc79442f3fa nir: add glsl_get_ifc_packing() helper
  * 7ac617c1172 pan/mdg: Don't double-replicate blend on T720
  * edd56bad942 radv: Use common gfx10_format_table.h
  * 560f095dd57 radv: Include gfx10_format_table.h only from a single
    source file.
  * b351a507638 radeonsi: Define gfx10_format in the common header.
  * c98e52f88a1 amd/common,radeonsi: Move gfx10_format_table to common.
  * d936f696772 radeonsi: Explicitly map Z16_UNORM_S8_UINT to None for
    GFX10.
  * 415c88eebcd Revert "CI: Disable Panfrost T720/T760"
  * 2dfc241e368 ci: bare-metal: make it possible to use a script for
    serial
  * a21966837ac zink: Use store_dest_raw instead of storing an uint
  * c310677a756 radv: Explicitly cast TIMESTAMP_NOT_READY value to
    uin32_t where needed.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 03 Jun 2020 16:32:57 +0200

mesa (20.2.0~git2005282147.034329128b7~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 034329128b7 iris: Rename iris_seqno to iris_fine_fence
  * 682e14d3eae nir: lower_tex: Don't normalize coordinates for TXF with
    RECT
  * f0c102c075f ci: Quick exit qpa extraction for non-matching qpas.
  * 46d9b500f4f ci: Move baremetal DEQP_NO_SAVE_RESULTS setup to the
    yml.
  * 33e0821a99f ci: Add DEQP_EXPECTED_RENDERER support for VK tests.
  * 6766d51c15f ci: Auto-detect the architecture for VK ICD filenames.
  * 044f50b9fdb ci: Drop old comment about enabling --deqp-watchdog.
  * c343d00edeb ci: Drop double ".txt" suffix on the unexpected results
    file.
  * 10c4a7cf597 spirv,radv,anv: implement no-op VK_GOOGLE_user_type

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 28 May 2020 23:37:33 +0200

mesa (20.2.0~git2005281234.01ce7887bf0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 01ce7887bf0 aco: fix 64-bit shared_atomic_exchange
  * 1f2fd9c62ee aco: don't reorder barriers in the scheduler
  * e1900ee2c70 aco: preserve more fields when combining additions into
    SMEM
  * 95d5c1b8a1e aco: check instruction format before waiting for a
    previous SMEM store
  * 5ccc7c277c8 aco: consider SDWA during value numbering
  * 8aa98cebc15 aco: fix interaction with 3f branch workaround and
    p_constaddr
  * 1fc1b877622 gitlab-ci: Pull in GCC 9 from Debian testing in x86_test-
    gl/vk images
  * c2366f01fd1 gitlab-ci: x86_test-base image as common base for
    x86_test-gl/vk
  * 43111ea7458 gitlab-ci: Also list arm/x86_build in needs: of test
    jobs
  * bccf2a25a89 intel: Add helper to calculate
    GPGPU_WALKER::RightExecutionMask
  * 78e400d4a51 iris, i965: Update limits for
    ARB_compute_variable_group_size
  * 46b428074f4 iris, i965: Drop max_variable_local_size
  * 90ec26a800c intel/fs: Generate multiple CS SIMD variants for
    variable group size
  * 9b8347c9884 anv: Use new helper functions to pick SIMD variant for
    CS
  * 594374dd8d8 iris: Use new helper functions to pick SIMD variant for
    CS
  * c9f4bda6ce5 iris: Set CS KernelStatePointer at dispatch
  * ee0fc0f6dcf i965: Use new helper functions to pick SIMD variant for
    CS
  * cb26d9c3119 intel/fs: Add helper to get prog_offset and simd_size
  * 5b5e77caa7f intel/fs: Support INTEL_DEBUG=no8,no32 in compute
    shaders
  * 10d0f39beb2 intel/fs: Remove min_dispatch_width spilling decision
    from RA
  * 9526e14b5cc docs: update calendar, add news item, and link releases
    notes for 20.1.0
  * e94a811a462 docs: Add release notes for 20.1.0
  * dff1bac6345 zink: always use logical eq ops in ntv with 1bit inputs
  * df2c68ee4fd pan/bi: Initialize struct fma_op_info member extended.
  * b3023055e07 lima/ppir: use a ready list in node_to_instr
  * 9ae8b4af75e pan/bi: Suppress inf/nan for now
  * 6f589f4e045 pan/bi: Add CSEL.16 packing tests
  * 87ca1c1eeae pan/bi: Pack compact vertex texturing
  * 6650fa22c79 pan/bi: Add f16 TEXC.vtx op
  * 731dfc6066d pan/bi: Allow vertex txl with lod=0 as compact

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 28 May 2020 15:35:52 +0200

mesa (20.2.0~git2005271649.a91306677c6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a91306677c6 ac/gpu_info: Correct Acturus cu bitmap
  * 296c04d78c9 intel/fs: Work around dual-source blending hangs in
    combination with SIMD16
  * dd2bd68fa69 zink: use general-layout when blitting to/from same
    resource
  * d9eaac02e53 radeonsi/drirc: enable zerovram option for 7 Days to Die
  * ddfd2e626a5 turnip: support
    VkImageDrmFormatModifierExplicitCreateInfoEXT
  * da409fb7b8c freedreno/layout: add explicit offset/pitch argument to
    fdl6_layout
  * f1acf492de9 glsl: fix slow linking of uniforms in the nir linker
  * f6214750eb4 glsl: stop cascading errors if process_parameters()
    fails
  * 755c0400606 freedreno: Add missing va_end.
  * e91108691d2 nir: Fix sources for image atomic fadd
  * 247f2fb32ae pan/decode: Dump unknown2
  * 6a19d49b2e8 pan/decode: Dump missing field on Bifrost
  * c2c8b1ac579 pan/decode: Fix tiler warning
  * 4bc7d521b13 pan/decode: Fix unused variable warning
  * a6212357209 nouveau: Use SATURATE
  * 9e535629805 etnaviv: Use SATURATE
  * bb5e10af246 iris: Use SATURATE
  * 17199107fd2 i965: Use SATURATE
  * f59d02a86dc intel: Use SATURATE
  * 7ea2ad0b399 softpipe: Use SATURATE
  * 9983c4cd68e panfrost: Use SATURATE
  * 82996a8cff7 glsl: Use SATURATE
  * a024b394272 gallium/draw: Use SATURATE
  * 747cb95e3c8 mesa/swrast: Use SATURATE
  * 05bacdb9170 mesa: Use SATURATE
  * 0f1fde1fafb util/format: Use SATURATE
  * 35938c15e22 util: Add SATURATE macro
  * 8cc7711924f intel/fs: Remove redundant assert()
  * 462bc408fe9 intel/fs: Early return when can't satisfy explicit group
    size
  * 2a308ee4c79 intel/fs: Remove unused state from
    brw_nir_lower_cs_intrinsics

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 27 May 2020 21:40:32 +0200

mesa (20.2.0~git2005232300.4174a13459d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 4174a13459d panfrost: Ensure final.no_colour is initialized.
  * 73c0f60d8c7 r600/sfn: Initialize VertexStageExportForGS
    m_num_clip_dist member variable.
  * 76a2aeeef3d llvmpipe: Fix variable name.
  * 4e147e2c94e docs: drop no-longer-relevant comment about bugzilla
  * 444138d6d9f tree-wide: fix deprecated GitLab URLs
  * 9375e72d8d1 radeonsi/gfx8: enable TC-compatible HTILE from the
    beginning as before
  * d30e1e486dd radeonsi: don't enable TC-compatible HTILE for stencil
    if stencil doesn't use it
  * caeb44aa244 radeonsi: split si_all_descriptors_begin_new_cs and
    rename functions
  * 7b6b35c6b5e radeonsi: move resetting tracked registers into a new
    function
  * 3509d3bd53e ac: update register and packet definitions for
    preemption
  * 56af131f330 Revert "radeonsi: don't wait for idle at the end of gfx
    IBs"
  * 3f1f23239a1 radeonsi: decrease the max GS invocation count to 32
  * 3cd96b51093 radeonsi: don't use INDIRECT_BUFFER within IBs
  * 8db739880af ac/surface: don't compute single-sample CMASK if it's
    unaligned
  * 21504eab78e ac/gpu_info: compute the best safe IB alignment
  * 5f365affc90 freedreno: Use the right amount of &'s
  * 1f33ca1fed5 freedreno: Add missing break statement.
  * f0e075ce6ec nir/copy_prop_vars: Record progress in more places
  * db6d9cdf066 nir/opt_deref: Report progress if we remove a deref
  * 111b0a66997 nir/lower_double_ops: Rework the if (progress) tree
  * 78786a219ea frontends/va: Fix deinterlace bottom field first flag
  * 569ca93751d pan/mdg: Allow DCE on ld_color_buffer masks
  * d8c16200e97 pan/mdg: Ensure we don't DCE into impossible masks
  * 197b398c32a pan/mdg: Lower shifts to 32-bit
  * 7a52e975e4e pan/mdg: Add pack_colour_32 opcode
  * f7cf5a30c74 panfrost: Handle !independent_blend for blend shaders
  * f9283eff6d1 panfrost: Use _mesa_roundevenf when packing clear
    colours
  * 8bb51992c8e panfrost: Fix dated comment
  * be71e2fd08b Properly check mmap return value
  * 38f32372aa9 ci: Improve baremetal's logging of the job env var
    passthrough.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 24 May 2020 12:05:52 +0200

mesa (20.2.0~git2005182201.d50069ab08a~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * d50069ab08a r600: enable TEXCOORD semantic for TGSI.
  * 68b3b5bcab9 ci: Switch the baremetal runner to be an x86 docker
    image.
  * 8094a9ab685 ci: Update versions of packages to remove from rootfses.
  * 18fc6a95b67 ci: Make the create-rootfs more resilient.
  * 588ea3184ce ci: Make cmake toolchain file for deqp cross build
    setup.
  * a65521145c0 ci: Autodetect whether we need cross setup in lava_arm
    builds.
  * 188916bd060 ci: Move cross file generation to a shared script.
  * 34195d69ddd iris: Initialise stub iris_seqno to 0
  * a6184eae312 freedreno/drm: handle ancient kernels
  * 106c2a65dbd freedreno/drm: don't pass thru 'DUMP' flag on older
    kernels
  * e422f61e6ea freedreno/a3xx: fix rasterizer discard
  * 5e105068343 freedreno/fdperf: add dependency on generated headers
  * 4504d6374db ci: Fix TypoError error when traces in traces.yml is an
    empty list
  * e85dc9a2406 ci: Split test_tracie_skips_traces_without_checksum in
    separate cases
  * 550a4f77648 ci: Migrate tracie tests done in shell script to pytest
  * 37621da7b14 ci: ArgumentParser receives the args from the main
    parameters
  * eb1f22fb014 ci: TRACES_DB_PATH and RESULTS_PATH defined as relative
    paths
  * 78c46c21261 etnaviv: don't expose timer queries
  * b5accb3ff99 freedreno/a3xx: parameterize ubo optimization
  * 475fb28377f freedreno: fix off-by-one in assertions checking for
    const sizes
  * 1c05e16666c freedreno/a3xx: fix const footprint
  * 9048adbd246 freedreno/ir3: avoid applying (sat) on bary.f
  * 8d86892ea3c freedreno/a3xx: reinstate rgb10_a2ui texture format
  * ff4df32fae5 freedreno/a3xx: there's no r8i/ui rb format, only
    rg8i/rg8ui

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 18 May 2020 23:25:13 +0200

mesa (20.2.0~git2005170112.78615dcca19~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 78615dcca19 radv: use util_float_to_half_rtz
  * 632a921bd0d lima/ppir: optimize tex loads with single successor
  * a4b7699d849 lima/ppir: rework tex lowering
  * 92611e21c19 lima/ppir: improve handling for successors in other
    blocks
  * 96c1d5f629b lima/ppir: handle failures on all ppir_emit_cf_list
    paths
  * fa3549c92b2 util/rand_xor: extend the urandom path to all non-
    Windows platforms
  * d76abe98cf1 util/rand_xor: fallback Linux to time-based instead of
    fixed seed
  * e0ce684aae8 util/rand_xor: drop unused header
  * f50f26325f8 util/rand_xor: make it clear that
    {,s_}rand_xorshift128plus take *exactly 2* uint64_t
  * 576bff5c73f gitlab-ci: exclude scripts that don't affect the build
  * 494b7ef0c1a gallium/auxiliary/vl: Fix compute shader scaling for non-
    square pixels
  * fd6a5e112aa gallium/u_threaded: execute transfer_unmap with
    THREAD_SAFE directly
  * c9ccceff109 radeonsi: test uncached clear/copy buffer performance
    with compute shaders
  * 5acf99e81f7 radeonsi: compute perf tests - don't test 1 wave/SA
    limit, test no limit first
  * c45a2145f5e radeonsi: disable the L2 cache for CPU read mappings of
    buffers
  * 7356144fe42 radeonsi: disable the L2 cache for most CPU mappings of
    textures
  * 36c01248049 winsys/amdgpu: add RADEON_FLAG_UNCACHED for faster blits
    over PCIe
  * cbbc18bc678 radeonsi: use display_dcc_offset for setting
    displayable_dcc_cb_mask
  * b5ac9d18d8f radeonsi: use vi_dcc_enabled instead of using tex-
    >surface.dcc_offset directly
  * 2c4c1b04996 radeonsi: rename SI_RESOURCE_FLAG_TRANSFER to
    FORCE_LINEAR
  * 4907bb44c3c radeonsi: simplify setting resource usage for
    si_init_temp_resource_from_box
  * f57276309b1 radeonsi: tweak clear/copy_buffer limits when to use
    compute
  * b158b117e1e radeonsi: optimize access pattern for compute blits with
    linear textures
  * 9f8089139f1 radeonsi: use correct clear value size for EQAA in
    expand_fmask
  * 2361e8e7227 ac/nir: honor ACCESS_STREAM_CACHE_POLICY for L1 and L0
    caches too
  * d573d1d8252 radeonsi: Use TRUNC_COORD on samplers
  * 65c2362e885 iris: Use modfiy disables for 3DSTATE_WM_DEPTH_STENCIL
    command
  * 864d8acbfdb radeon: Fix whitespaces
  * f80d653d701 radeonsi: don't expose 16xAA on chips with 1 RB due to
    an occlusion query issue
  * 844d561c580 spirv: handle OpCopyObject correctly with any types

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 17 May 2020 15:21:43 +0200

mesa (20.2.0~git2005150549.ea62c237031~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * ea62c237031 nir: Use 8-bit types for most info fields
  * 57e796a12a8 radv: Implement VK_EXT_custom_border_color
  * 9e3c6a7ba76 radv: Provide a better error for permission issues with
    priorities.
  * e7458f19e1d freedreno/uuid: Generate meaningful device and driver
    UUID
  * 9623debf48a freedreno: Centralize UUID generation into new files
    freedreno_uuid.c/h
  * cdfede7336b aco: split operations that use a swap's definition
  * f293d02dc44 tu: Advertise COLOR_ATTACHMENT_BLEND_BIT for blendable
    formats
  * adbdab3ee80 tu: Implement dual-src blending
  * 078aa9df8da tu: Move RENDER_COMPONENTS setting to pipeline state
  * 2a9d12d5133 ir3: Fixup dual-source blending slot
  * 0e0580550e1 freedreno/a6xx: Document dual-src blending enable bits
  * 4aeaef99c00 Revert "nir/validate: validate the stride for
    deref_ptr_as_array"
  * 2c6599d6d6d docs: update calendar, add news item, and link releases
    notes for 20.0.7
  * 212ee624f81 docs/relnotes Add sha256 sums to 20.0.7
  * e5e9a0dfd7e docs: Add release notes for 20.0.7
  * ceae09da156 intel: Silence unused parameter warning in
    __intel_log_use_args
  * 4cb2330e565 anv: Silence unused parameter warning in
    anv_image_get_clear_color_addr
  * b44eb50f2d1 anv/tests: Silence unused parameter warnings in main
  * f4638cfdad3 anv/tests: Don't rely on assert or changing NDEBUG in
    tests
  * 66e3c74f9c7 aco: fix WQM coalescing
  * 4151bddab5d anv: Fix descriptor set clean-up on BO allocation
    failure
  * 3f74c6a8815 anv: Call vk_object_base_finish for image views
  * ed95f69dd54 zink: correct PIPE_SHADER_CAP_MAX_SHADER_IMAGES
  * 50ebe5a991a zink: do not expose real value for
    PIPE_CAP_MAX_VIEWPORTS
  * adc63362734 meta: Remove support for multisample blits
  * bb28ce79882 meta: Coalesce the GLSL and FF paths in meta_clear
  * 5be77851907 meta: Use same vertex coordinates for GLSL and FF clears
  * e5d2fbf3528 meta: Stop frobbing MatrixMode
  * 29f10ede71f mesa: Add function to calculate an orthographic
    projection
  * c731f2ab63d mesa: Add matrix utility functions to load matrices

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 15 May 2020 08:07:37 +0200

mesa (20.2.0~git2005100932.56f955e4850~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 56f955e4850 etnaviv: drm: Normalize nano seconds
  * 022327f7535 etnaviv: drm: Use NSEC_PER_SEC
  * a92a483ff7f freedreno: android: add adreno-pm4-pack.xml.h generation
    to android build
  * 5dc3b22dd06 freedreno/drm: android: add libfreedreno_registers
    static dependency
  * e622e010fd8 lima/ppir: rework select conditions
  * a0c58867cdd lima/ppir: add fallback mov option for const scheduler
  * 8c476407313 lima/ppir: rework store output
  * 570f1420dbf lima/ppir: rework emit nir to ppir
  * 6b21b771f7b lima/ppir: remove unused clone functions
  * 8c4157138f3 lima/ppir: duplicate consts in nir
  * 5e6c3861182 lima/ppir: duplicate intrinsics in nir
  * 09003ba0700 lima/ppir: combine varying loads in node_to_instr
  * c6a3987f320 lima/ppir: do not assume single src for pipeline outputs
  * 741aa3439d7 lima/ppir: fix lod bias register codegen
  * cef1c736344 lima/ppir: introduce liveness internal live set
  * 9e790fea7c1 genxml: pack: deal with default field not being simple
    integers
  * 942d4538a46 genxml: factor out utility functions
  * d07f69413eb genxml: fix invalid end value for video fields
  * af17e392b2e genxml: run sorting script
  * 45c33313e6e intel/dev: Add device info for RKL
  * 54996ad4927 intel/dev: Split .num_subslices out of GEN12_FEATURES
    macro
  * 07b0fbea92a panfrost: don't always build bifrost_compiler
  * 727a0a53fdd radeonsi: remove emacs style config file
  * 6c998c7adfd intel/dump_gpu: Fix name of LD_PRELOAD in env append
    logic

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 11 May 2020 05:22:22 +0200

mesa (20.2.0~git2005082237.1a59590e5d6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 1a59590e5d6 ac/surface: fix broken pitch override on gfx8
  * c9e8df61dc8 freedreno: Initialize the bo's iova at creation time.
  * b3c4e6a597a freedreno: Rename append_bo() in case it doesn't get
    inlined.
  * e1c74f3facc freedreno: Clean up tests around ORing in the reloc
    flags.
  * 6c688ae81f4 freedreno: Deduplicate ringbuffer macros with
    computerator/fdperf
  * 094c7646a3a freedreno,tu: Don't request fragcoord components not
    being read.
  * ab5590e92bc vulkan/object: Always include the type
  * d11e4738a86 anv/allocator: Add a start_offset to anv_state_pool
  * 772b15ad322 util: Make process_test path compatible with mingw
    native toolchains
  * 696bafac40f CI: Disable Panfrost T7x0 jobs
  * 78d267e6dad Linux: Change minimum priority threads from SCHED_IDLE
    to nice 19 SCHED_BATCH.
  * f66bf5ba444 docs/features: add zink features
  * 8bcfce2fcd0 anv: fix alignments for uniform buffers
  * f105b69464d radv: report correct backend IR in hang reports when ACO
    is used
  * 290d480c551 radv: do not print the LLVM version string twice in hang
    reports
  * b1ef1c12113 radv: remove the LLVM version string when ACO is used
  * ee2aef3ea53 anv: call base finish only if pass given in
    DestroyRenderPass
  * a885ee52582 st/wgl: allocate and resolve msaa-textures
  * 947bb04fcc0 st/wgl: pass st_context_iface into
    stw_st_framebuffer_present_locked

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 08 May 2020 22:51:40 +0200

mesa (20.2.0~git2005072300.808eb20186a~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 808eb20186a radeonsi: Fix omitted flush when moving suballocated
    texture

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 08 May 2020 00:40:35 +0200

mesa (20.2.0~git2005072240.37e89e30276~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 37e89e30276 aco: either copy-propagate or inline create_vector
    operands
  * c9e73624022 ac/surface: override all offsets including metadata
    offsets
  * 441eaef6a9e amd: unify code for overriding offset and stride for
    imported buffers
  * c164ea86e19 ac/surface,radeonsi: move the set/get_umd_metadata code
    into ac_surface.c
  * 7691de0dcef ac/surface,radeonsi: move the set/get_bo_metadata code
    to ac_surface.c
  * 56e37374ddb amd: assume HTILE is always rb/pipe_aligned, remove
    ac_surface.u.gfx9.htile
  * cf61f635ff6 amd: assume CMASK is always rb/pipe_aligned, remove
    ac_surface.u.gfx9.cmask
  * 127aaf0b9ac amd: remove duplicated definitions from amdgpu_drm.h
  * 25edf9b1364 amd: update amdgpu_drm.h
  * 89d4b6b5c85 llvmpipe: make sample position a global array.
  * 3b6449d4531 nir/algebraic: Optimize some bfe patterns
  * f46eabf84e6 nir/algebraic: Split ibfe and ubfe with two constant
    sources
  * 0d605a8bbfd nir/algebraic: Recognize open-coded byte or word extract
    from bfe
  * 58dfb38f784 gallium/swr: Fix crashes in sampling code
  * 58b66f82e64 panfrost: Handle MALI_RGB8_UNORM in
    panfrost_format_to_bifrost_blend
  * 9c3e82296c8 panfrost: Don't trample on top of Bifrost-specific
    unions
  * 7e53cce3ba4 pan/decode: Fix flags_hi printing
  * a4d41a15109 panfrost: Add checksum BOs to batch
  * 4f17e9eef6f anv: don't expose VK_INTEL_performance_query without
    kernel support
  * 6d513eb0db2 tu: Support pipelines without a fragment shader
  * 7ba2333cc17 util/os_memory: never use os_memory_debug.h
  * 905edc376dd v3d: Include supported DXT formats to enable s3tc/dxt
    extensions
  * e3ecf48dda2 v3d: Fix swizzle in DXT3 and DXT5 formats
  * 17ed4a01ee2 docs/envvars: update RADV_FORCE_FAMILY
  * 5c6afd0f349 docs/envvars: document ACO_DEBUG
  * 1aaec1f3f45 docs: add src/amd/ to sourcetree.html
  * 38bbfd3a57d clover/nir: Check the result of spirv_to_nir
  * abc4a828577 nir: make fsat return 0.0 with NaN instead of passing it
    through
  * d8a27c0bb30 compiler/spirv: flag nclamp/nmin/nmax as exact
  * 9a11aa4ece6 docs/features: Add ARB_clear_texture to virgl

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 07 May 2020 23:13:33 +0200

mesa (20.2.0~git2005051752.266fec1307b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 266fec1307b radeonsi: don't wait for idle at the end of gfx IBs
  * ae4379d81e4 ac/nir: export some undef as zero
  * 0ee1a724bf7 gallium: add a new cap PIPE_CAP_GLSL_ZERO_INIT
  * ea289d1502d mesa: extend GLSLZeroInit semantics
  * 679421628bf glsl: add a is_implicit_initializer flag
  * fa6b22d36a9 glsl: rework zero initialization
  * 84f58a08634 glsl: init gl_FragColor if zero_init=true
  * 547e81655a0 radeonsi: don't print gs_copy_shader stats for shaderdb
  * b0a7499d28d radv: enable shaderInt16 unconditionally with LLVM and
    only GFX8+ with ACO
  * 64662dd5bae radeonsi: add workaround for issue 2647
  * 7983d97174d zink: use nir_lower_uniforms_to_ubo
  * 4777ee1a62f nir: Always create UBO variable when lowering uniforms
    to ubo
  * 354474b9e5a mesa/st: consider NumUniformBlocks instead of num_ubos
    when binding
  * 8471f7a5fa1 compiler/glsl: explicitly store NumUniformBlocks
  * 8059f206da8 glsl: rename has_implicit_uint_to_int_conversion to
    *_int_to_uint_*
  * 403eb507f58 driconf: add force_integer_tex_nearest option
  * 12fb7d70086 mesa: add gl_coontext::ForceIntegerTexNearest
  * 90d9f9a37ed aco: remove unecessary p_split_vector with v2b reg class
  * b0cb38f3608 vulkan: Update Vulkan XML and headers to 1.2.140
  * 785803a2e54 turnip: Remove RANGE_SIZE usage
  * 24f9aea7707 radv: Remove RANGE_SIZE usage
  * c4d11ea3c43 anv: Remove RANGE_SIZE usage
  * 57796946985 android: iris: add iris_seqno.{c,h} to Makefile.sources
  * c4cdef64ad6 ac/surface: fix MSAA crash with FORCE_SWIZZLE_MODE on
    gfx9
  * 1dcf291e3bf pan/bit: Add IMATH packing tests
  * 8fcc23bf28d pan/bit: Factor out identity swizzle helper
  * 36e4ffa382f pan/bit: Use swizzle helper for round
  * 118d53bf93d pan/bit: Remove test names
  * 52cdaaacbbb pan/bit: Interpret v4i8 ops
  * 66163614dbf pan/bit: Interpret IMATH

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 05 May 2020 18:26:26 +0200

mesa (20.2.0~git2005041751.b97cc41aa20~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * b97cc41aa20 Revert "ac: reassociate FP expressions for inexact
    instructions for radeonsi"
  * 5f01869f74a pan/bit: Add ICMP tests
  * 9bc684cad83 pan/bit: Add more 16-bit fmod tests
  * 041ba62e876 pan/bit: Add swizzles to round tests
  * 35c806e701d pan/bi: Don't pack ICMP on FMA
  * 5cbdf29b7e9 pan/bi: Pack ADD ICMP 16
  * 5bd41722802 pan/bi: Pack ADD ICMP 32
  * 336d5128f9b pan/bi: Structify ADD ICMP 16
  * fdf154d24af pan/bi: Pack ADD.DISCARD
  * 7a9b9859e72 pan/bi: Handle discard/branch in get_component_count
  * 8ab5c97895d pan/bi: Fuse conditions into discard_if
  * 201a11a13ad pan/bi: Add float-only mode to condition fusing
  * 7d867f787f9 pan/bi: Emit discard (not if)
  * c9ab73296c1 pan/bi: Handle discard_if in NIR->BIR naively
  * 6627b20de35 pan/bi: Unwrap BRANCH into CONDITIONAL class
  * 6e5d2072939 pan/bi: Remove BI_GENERIC
  * 20cb039457d pan/bi: Structify DISCARD
  * 5c03340fd1a pan/bi: Fix DISCARD ops in disasm
  * 31a41bb6a62 pan/bi: Disable CSEL4 emit for now
  * e14e3065a9f pan/bi: Fix incorrectly flipped swizzle
  * 8415b3d5523 pan/bi: Fix missing swizzle
  * c9634894a67 pan/bi: Fix double-abs flipping
  * ef9b4b3a0be pan/bi: Set clause type for gl_FragCoord.z
  * 47c84ee7354 pan/bi: Lower gl_FragCoord
  * c5ef35c4334 pan/bi: Passthrough direct ld_var addresses
  * 513c774d580 pan/bi: Print bad instruction on src packing fail
  * 0561fe3a06d pan/bi: Futureproof COMBINE lowering against non-u32
  * c48839086db pan/bi: Abort on unhandled intrinsics
  * 94e6263c0b0 pan/bi: Abort on unknown op packing
  * 5a415259fc7 pan/bi: Add clause type for gl_FragCoord.zw load

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 04 May 2020 19:27:13 +0200

mesa (20.2.0~git2005041406.cb1e0db23e3~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cb1e0db23e3 vulkan/wsi: Make wsi_swapchain inherit from
    vk_object_base
  * 32f20783a51 vulkan: Add run-time object type asserts in handle casts
  * 7628585dd70 anv: Refactor setting descriptors with immutable sampler
  * 73fb7cdbe1c vulkan,anv: Move the DEFINE_HANDLE_CASTS macros to
    vk_object.h
  * 682c81bdfb7 vulkan,anv: Add a base object struct type
  * 369703774cf anv: Allocate CPU-side memory for events
  * 4ac4e8e11f3 anv: Stop clflushing events
  * a9158f79514 vulkan,anv: Add a common base object type for VkDevice
  * 9d10bde5a87 vulkan: Allow destroying NULL debug report callbacks
  * 46b3cb011fd st/mesa: destroy only own program variants when program
    is released
  * 7e7bb38bd8b radeonsi: fix export count
  * af55bdd05d9 vtn/opencl: native sqrt support
  * 337ff9c0889 vtn/opencl: native rsqrt support
  * 2ab6a58c197 vtn/opencl: native recip support
  * a698c2eedba vtn/opencl: native powr support
  * 594c49be080 vtn/opencl: native divide support
  * bce8a86b652 vtn/opencl: native variants of sin/cos
  * f76b379a9a6 vtn/opencl: add native_tan-support
  * aab1361d595 compiler/nir: move tan-calculation to helper
  * 58bb8172574 mesa: check draw buffer completeness on
    glClearBufferfv/glClearBufferuiv
  * f1a40a26a90 Revert "ac/surface: remove
    RADEON_SURF_TC_COMPATIBLE_HTILE and assume it's always set"
  * ee8f60da19d i965: disable shadow batches when batch debugging.
  * b2164320a06 i965: add support for gen 5 pipelined pointers to dump
  * df9629e593e radv: Extend tiling flags to 64-bit.
  * b5f7b0ce194 aco: add message to static_assert
  * 8e02de4d7fc aco: remove use of f-strings
  * 49cc9e95266 anv: Disable extensions based on Android versions
  * a77cf797f12 anv: Limit vulkan version to 1.1 for Android
  * 33c61eb2f10 iris: Implement ARB_compute_variable_group_size
  * e645bc69397 intel: Let drivers call brw_nir_lower_cs_intrinsics()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 04 May 2020 16:46:53 +0200

mesa (20.2.0~git2005010751.cc2c3b41b86~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cc2c3b41b86 ci: fix reporting the number of unexpected/flakes
  * 23daa49d4ca gitlab-ci: Use YAML anchor for llvmpipe paths in virgl
    rules
  * 60912f1ebd3 freedreno: we don't need aligned vbo's
  * 9a7c179473f freedreno/a6xx: add some more formats
  * 6f7d94580e3 pan/decode: Don't crash on missing payload
  * bde19c0e7ba panfrost: Fix tiled texture "stride"s on Bifrost
  * bbecbedb4ca panfrost: Fix norm coords on bifrost sampler
  * 401409eff31 panfrost: Fix sampler wrap/filter field orders
  * 6148d1be4bb panfrost: Fix size of bifrost sampler descriptor
  * 884f8699925 panfrost: Fix texture field size
  * d04be375ccd pan/bit: Add round tests
  * 6bbedf8359a pan/bit: Interpret ROUND
  * f1f4f1b816a pan/bit: Add framework forinterpreting double vs float
  * 130a3fba1c7 pan/bi: Pack round opcodes (FMA, either 16 or 32)
  * 5f35cdaa8dd pan/bi: Pipe multiple textures through
  * fc634dc3b27 pan/bi: Add texture indices to IR
  * f8424d3b999 freedreno/a6xx: fix LRZ hang
  * 0e51082cfa7 freedreno/ir3: Leave bools as 1-bit, storing them in
    full regs.
  * 769adc9546a freedreno/ir3: Drop redundant IR3_REG_HALF setup in ALU
    ops.
  * bdd2f284d90 radeonsi: revert an accidental change in si_clear_buffer
  * 5afec9bc9fb radeonsi: fix si_compute_clear_render_target with render
    condition enabled
  * 19db1a540c2 radeonsi: add a workaround to fix KHR-
    GL45.texture_view.view_classes on gfx9
  * d6acdbd9352 radeonsi: implement and use compute-based DCC
    decompression on gfx9-10
  * d3da73954a6 radeonsi: add SI_IMAGE_ACCESS_DCC_OFF to ignore DCC for
    shader images
  * 93d5c860812 radeonsi: bind shader images after DCC is disabled for
    image stores
  * 44d27fd6fba radeonsi: clean up and deduplicate code around internal
    compute dispatches
  * e58dcc47c3b radeonsi: unify and align down the max SSBO/TBO/UBO
    buffer binding size
  * b7ffa1560c3 tgsi_to_nir: handle TGSI_OPCODE_BARRIER
  * d35c3dc80e8 tgsi_to_nir: handle TGSI_SEMANTIC_BLOCK_SIZE
  * 2840bc3065b glthread: upload non-VBO vertices and indices for non-
    Indirect non-IBM draws

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 01 May 2020 11:10:50 +0200

mesa (20.1.0~git2004210949.d29fea77b91~b~mesaaco6) bionic; urgency=medium

  * New snapshot:
  * d29fea77b91 docs: remove outdated sentence

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 21 Apr 2020 12:01:31 +0200

mesa (20.1.0~git2004210916.56f174d14eb~b~mesaaco5) bionic; urgency=medium

  * New snapshot:
  * 56f174d14eb st/omx: fix gcc warnings
  * 07071cac7b9 gallium/utils: silence strncpy warning
  * dbfeec62c38 mesa: fix crash in find_value
  * 7c43b8ce1b8 nir: Delete the fnoise opcodes
  * 4386c067705 glsl: Hard-code noise to zero in builtin_functions.cpp
  * 95f555a93a8 st/glsl_to_nir: make use of nir linker for linking
    uniforms
  * 0f79e0f7c62 glsl: fix gl_nir_set_uniform_initializers() for bindless
    textures
  * 95464402277 glsl: add bindless support to nir uniform linker
  * 57e65cabd4f pick-ui: show commit sha in the pick list
  * 32451a15ecb pick-ui: make .pick_status.json path relative to the git
    root instead of the script
  * 26a26a35848 pick-ui: compute .pick_status.json path only once
  * a4b36cd3dd3 intel/fs: Coalesce when the src live range is contained
    in the dst
  * 14b8d979db4 intel/fs: Rename block to scan_block in
    can_coalesce_vars
  * 064d39e620f radv: use common nir_convert_ycbcr
  * 7870d714598 anv: use common nir_convert_ycbcr
  * 71820c6b02d nir: convert_ycbcr: preserve alpha channel
  * f8558fb1ce7 nir: add common convert_ycbcr for vulkan csc
  * c2d8a4bf176 nir/linking: fix issue with two compact variables in a
    row. (v2)
  * a24ab26ff72 pick-ui: auto-scroll the feedback window
  * 8b8a99ba567 bin/pick-ui: Add a new maintainer script for picking
    patches
  * 0123b8f6341 bin/gen_release_notes.py: Fix version detection for .0
    release
  * 4abf0837cdb anv: Add support for new MMAP_OFFSET ioctl.
  * 0d387da0834 anv: Add anv_device parameter to anv_gem_munmap.
  * d1c1ead7cd6 iris/bufmgr: Add support for MMAP_OFFSET ioctl.
  * ae6f06c5093 i965/bufmgr: Add support for MMAP_OFFSET ioctl.
  * 5bc3f52dd8c iris/bufmgr: Factor out GEM_MMAP ioctl from mmap_cpu and
    mmap_wc.
  * a42d7157849 i965/bufmgr: Factor out GEM_MMAP ioctl from mmap_cpu and
    mmap_wc.
  * 16be8ff0227 drm-uapi: Update headers from Linux 5.7-rc1.
  * a1f6ae4744d spirv: Fix propagation of OpVariable access flags

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 21 Apr 2020 10:27:18 +0200

mesa (20.1.0~git2004201512.c3c1f4d6bcc~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * c3c1f4d6bcc aco: move src1 to vgpr instead of using VOP3 for VOP2
    instructions during isel
  * be0bb7e1015 aco: fix 64bit fsub
  * ad3ef6d0fc0 gitlab-ci: Test virgl driver
  * d6b7439619c meson: do not disable incremental linking for debug-
    builds
  * ed29b24e233 gtest: Update to 1.10.0
  * 59427b6d1d0 nir/opt_algebraic: lower 64-bit fmin3/fmax3/fmed3
  * eed0ace466d nir/lower_int64: lower
    imin3/imax3/umin3/umax3/imed3/umed3
  * 17acff01a00 radeonsi: skip vs output optimizations for some outputs
  * 839818332c1 nir/gcm: dont move movs unless we can replace them later
    with their src
  * e4e5beee8a4 nir/gcm: be more conservative about moving instructions
    from loops
  * bf4a6c99d24 nir/gcm: allow derivative dependent intrinisics to be
    moved earlier
  * 50a6dd0d653 nir/gcm: Prefer the instruction's original block
  * d4cf2df01a1 nir/gcm: Delete dead instructions
  * dca3f351e5b nir/gcm: Add a real concept of "progress"
  * 5b1615fdb75 nir/gcm: Move block choosing into a helper function
  * 1f60f1aa3d0 nir/gcm: Use an array for storing the early block
  * 6006a9e2757 nir/gcm: Loop over blocks in pin_instructions
  * 4d083b52c04 nir/dominance: Better handle unreachable blocks
  * 425558bfd59 aco: use v_subrev_f32 for fsub with an sgpr operand in
    src1
  * adeef43d150 CI: Disable Lima jobs due to lab unhealthiness
  * e6c7bdc8513 ci/windows: Make Chocolatey installs more reliable
  * ec1b96fdc8b nir: Lower returns correctly inside nested loops
  * 969aeb6a93a anv: Apply any needed PIPE_CONTROLs before emitting
    state
  * ffc84eac0d5 anv: Move vb_emit setup closer to where it's used in
    flush_state
  * 06c5875fd6b Fix promotion of floats to doubles
  * 94cb129d514 ir3/ra: Fix off-by-one issues with live-range extension
  * cdc43775917 util/sparse_free_list: manipulate node pointers using
    atomic primitives
  * 36d2a0eed69 glsl: only set stage ref when uniforms referenced in
    stage
  * 6afd0954e12 glsl: pull mark_array_elements_referenced() out into
    common helper
  * 5d992b539e9 glsl: fix block index in NIR uniform linker

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 20 Apr 2020 17:49:58 +0200

mesa (20.1.0~git2004161110.e3e704c7e7e~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * e3e704c7e7e amd/addrlib: Use enum instead of sparse chars to
    identify dimensions
  * e58509cdecc gbm/dri: Propagate queryDmaBufModifiers return value
  * b5b25ee0327 zink: be less picky about tiled resources
  * 040a2643c08 st/dri: make sure software color-buffers are linear
  * 1c4f68b089b virgl: Use ETC2 formats directly when possible.
  * dcb1e8fef8a radeonsi: use thread_context::bytes_mapped_limit
  * 15cf7d170b3 gallium/u_threaded: flush batch when hitting mapping
    limit
  * 35b39639288 radv: do not abort with unknown/unimplemented descriptor
    types
  * 11faaf646d1 aco: fix emitting stream output with tess eval shaders
  * 91aa596ca7e aco: implement nir_op_f2i8/nir_op_f2u8
  * 04a7ec7c8a7 nvc0: enable GL_NV_viewport_array2
  * cd092bf9370 st/mesa: add support for GL_NV_viewport_array2
  * b0d0a3c9165 gallium: add PIPE_CAP_VIEWPORT_MASK
  * 8f191e0c373 gallium: add TGSI_PROPERTY_LAYER_VIEWPORT_RELATIVE
  * 17308c10141 gallium: add TGSI_SEMANTIC_VIEWPORT_MASK
  * 2d4787d77e3 mesa: add NV_viewport_array2 enable, attach to glsl
  * cc6661bfc87 glsl: add NV_viewport_array2 support
  * 54424a3d13f compiler: add VARYING_SLOT_VIEWPORT_MASK
  * 3a9e66277af ir3: Handle load_ubo_ir3 when promoting to constants
  * abcfb643706 ir3: Fix LDC offset units
  * 2d489f76f48 Revert "nvc0: fix line width on GM20x+"
  * 26a1adce5bd anv: Fix UBO range detection in
    anv_nir_compute_push_layout
  * b2e41571434 anv: Advertise SEND count through
    VK_EXT_pipeline_executable_properties
  * 2c82b13c8ff iris: make BATCH_SZ smaller by BATCH_RESERVED bytes
  * 103cb32c794 iris: remove useless bo->gtt_offset assignment
  * c586cb23e0a iris: remove unnecessary forward declaration
  * f3f5016c0bf iris: remove hole from struct iris_bo
  * 0158f73f086 Fix util/process test on Cygwin
  * befe2ff3a61 llvmpipe/nir: free the nir shader
  * cb0a2b3df68 draw/tess: free the NIR

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 16 Apr 2020 13:33:52 +0200

mesa (20.1.0~git2004041746.7af813d48a5~b~mesaaco4) bionic; urgency=medium

  * New snapshot:
  * 7af813d48a5 glx: use anonymous namespace to avoid -Wodr issues when
    building with LTO enabled
  * 17d783b2ed4 glx: fix 630 times -Wlto-type-mismatch when building
    with LTO enabled
  * a0a4df7e4f1 Revert "spirv: Rewrite CFG construction"
  * 51492f20f7e Revert "gallivm: disable rgtc/latc SNORM accellerated
    fetches"
  * aa95b6aed5b gallivm/rgtc: enable fast path for snorm types.
  * 03204dadbc1 gallivm/rgtc: fix the truncation to 8-bit
  * 0b06adb7505 glsl: don't limit fp16 lowering to frag
  * f054230ea3c freedreno: limit fp16 to frag and compute
  * c0d56efa31e freedreno/ir3: also precompile compute shaders for
    shaderdb
  * 37e052c8b08 freedreno: fix missing locking
  * f8fc690d1c2 freedreno/a6xx: add some compute logging
  * 629c0cee0a4 freedreno/ir3/cf: use ssa-uses
  * 72f6b03aec4 freedreno/ir3: add a pass to collect SSA uses
  * 67dbe8088fd freedreno/ir3/cf: skip array load/store
  * c2d0cc8b8d5 freedreno/ir3: fixup cat3 32b vs 16b
  * e73a8a9703b freedreno/ir3/cf: handle widening too
  * bf646488642 nir: fix definition of imadsh_mix16 for vectors
  * 1d293096d0a aco: use MUBUF to load subdword SSBO
  * 8cfddc91999 aco: implement 8bit/16bit store_ssbo
  * 3df0a41c752 aco: implement 8bit/16bit load_buffer
  * c70d0144550 aco: implement storagePushConstant8 &
    storagePushConstant16
  * 5718347c2b4 aco: implement vec2/3/4 with subdword operands
  * 85521061d63 aco: prepare helper functions for subdword handling
  * fe08f0ccf94 aco: add byte_align_scalar() & trim_subdword_vector()
    helper functions
  * 23ac24f5b1f aco: add missing conversion operations for small
    bitsizes
  * d223e4e8de8 aco: don't vectorize 8/16bit load/store_ssbo
  * 0bb35376764 aco: don't assume split_vector(create_vector) has the
    same number of elements when optimizing
  * c436743b0c4 aco: don't propagate SGPRs into subdword PSEUDO
    instructions
  * 8f1712ba2f8 aco: lower subdword shuffles correctly.
  * ca38c1f1f1c aco: add builder function for subdword copy()

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 04 Apr 2020 22:33:00 +0200

mesa (20.1.0~git2003302357.6e672074dd1~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 6e672074dd1 st/mesa: add environment variable pin_app_thread for
    faster glthread on AMD Zen
  * 4df3c7a2079 gallium/u_threaded: call the driver to pin threads to L3
    immediately
  * 4de35bed423 lima: also check tiled and depth case when import
  * e46b2ef7243 lima: fix buffer import with offset
  * 02ad147c5c8 pan/bi: Fix handling of constants with COMBINE
  * bd19e763402 pan/bi: Handle fp16/abs scheduling restriction
  * c88f816169c pan/bi: Handle abs packing for fp16/FMA add/min
  * ba8e11f0f17 pan/bi: Handle core faddminmax16 packing
  * 12a16f22476 pan/bi: Structify fadd/min/max16
  * c12a208d782 pan/bi: Add v2f16 versions of rounding ops
  * f81b67b857b pan/bi: Handle round opcodes in frontend
  * c7170e97423 pan/bi: Assert out i16 related converts for now
  * 2fd8b2e6d4c pan/bi: Add one-source f32->f16 op
  * 197c6414ea4 pan/bi: Add bifrost_fma_2src generic
  * 57a8e6e8d0e pan/bi: Handle standard FMA conversions
  * 499e97b5196 pan/bi: Enumerate conversions
  * 902f99a45d3 pan/bi: Expand out FMA conversion opcodes
  * 73715124ea5 pan/bi: Pack outmod and roundmode with FMA
  * 158f2452f23 pan/bi: Add FMA16 packing
  * b5148b6b490 pan/bi: Fix missing type for fmul
  * 5eb209a05f6 pan/bi: Finish FMA structures
  * 375a7d0f32f pan/bi: Ignore swizzle in unwritten component
  * aa77d8128e9 pan/bi: Handle f2f* opcodes
  * c2a8ef907b5 panfrost: Enable PIPE_SHADER_CAP_FP16 on Bifrost
  * 77e04eb2e2e pan/bi: Enable precision lowering in standalone compiler
  * 683cd9b6f4f pan/bi: Fix off-by-one in scoreboarding packing
  * f3726a08743 pan/bi: Fix overzealous write barriers
  * 3d7166fa698 pan/bit: Begin generating a vertex job
  * a0d1be30e1b pan/bit: Submit a WRITE_VALUE job as a sanity check
  * 97029c773e8 panfrost: Stub out G31/G52 quirks

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 31 Mar 2020 07:58:22 +0200

mesa (20.1.0~git2003241634.238e2ed2100~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 238e2ed2100 radv: enable VK_KHR_8bit_storage on GFX6-GFX7
  * bd22a0f710c util/u_process: fix Windows build
  * 6a4fadce129 pan/bi: Rewrite aligned vectors as well
  * 5a3493c536b pan/bi: Lower combines to rewrites for scalars
  * e0a51d5308f pan/bi: Ingest vecN directly (again)
  * 04509dae7f7 turnip: implement depth clamp
  * afe27d5345f turnip: fix znear clipping
  * 07a8100aed6 freedreno/registers: more GRAS_CL_CNTL bits, Z_CLAMP
  * 43918c9a7fc aco: implement 64-bit VGPR constant copies in
    handle_operands()
  * 21ba2bc5954 aco: remove dead code in handle_operands()
  * 9f4ba2d2b4a nir/gather_info: fix per-vertex handling in
    try_mask_partial_io
  * f1cc13727c6 radeonsi: enable workarounds for YoYo engine based games
  * 8f48e7b1e99 util/xmlconfig: add new sha1 application attribute
  * f8f1413070a util/u_process: add util_get_process_exec_path
  * 2cb965e5b60 util/os_file: extend os_read_file to return the file
    size
  * bd6234f24be radeonsi: clarify the conditions when FLUSH_AND_INV_DB
    is needed
  * 67a10ea2159 intel/dump_gpu: Handle a bunch of getparam in the no-HW
    case
  * 7fd41843782 intel/dump_gpu: Add an ensure_device_info helper
  * be451f71ab3 anv: Stop fetching the timestamp frequency ourselves
  * d63d0006860 egl/android: enable/disable KHR_partial_update correctly
  * 41412cc4b74 ci: Ban the recent popular freedreno a630 intermittent
    failure.
  * 719063d4d07 st/mesa: fix use of uninitialized memory due to
    st_nir_lower_builtin
  * 17c7f4e30ed aco: fix boolean undef regclass
  * 4ed12efb58c lima: Add missing source file to Android.mk
  * 1182a3934a5 intel/tools/aubinator_error_decode: Decode ring buffers
    from HEAD to TAIL
  * 84e707e6f22 docs/features: Update virgl OpenGL 4.5 features
    GL_ARB_clip_control and GL_KHR_robustness are now expose in the
    guest.
  * 49f9a0bb572 intel/tools/aubinator_error_decode: read HW Context
    before other batches
  * c40acdef52b iris: Set patch count threshold in 3DSTATE_HS
  * 60c789543e3 anv: Set patch count threshold in 3DSTATE_HS
  * 1a5ac646cef intel/compiler: Track patch count threshold

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 24 Mar 2020 19:52:25 +0100

mesa (20.1.0~git2003161628.ac1dbd5ef81~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * ac1dbd5ef81 lima/gpir: fix crash in schedule_insert_ready_list()
  * 2756b629171 lima/gpir: add better lowering for ftrunc
  * b7d89476f1e lima/gpir: kill dead writes to regs in DCE
  * 8c1bcc8555a lima/gpir: Optimize nots created from branch lowering
  * 47dacf38671 lima/gpir: Optimize conditional break/continue
  * 9fb0fda8e7b lima/gpir: Make lima_gpir_node_insert_child() useful
  * 5c3f20a25ba panfrost: Fix gnu-empty-initializer error.
  * 2d14a8f2372 aco: fix operand order for LS VGPR init bug workaround
  * ded7a8bb462 aco: fix instruction encoding for LS VGPR init bug
    workaround
  * ee9e0d1ecae aco: set late kill for v_interp_p1_f32 for some APUs
  * 1872759f553 aco: add a late kill flag
  * c51348bd9b6 aco: move some register demand helpers into
    aco_live_var_analysis.cpp
  * e1b08b55ff4 radv/sqtt: handle thread trace capture in
    sqtt_QueuePresentKHR()
  * 4061ac859d0 anv: Push UBO ranges relative to the start of the
    binding
  * ae15b4fd733 anv: Fix the comparison in an assert
  * 299fad5585c gitlab-ci: bump Vulkan CTS to 1.2.1.0
  * af6d8dea008 gitlab-ci: do not set the number of deqp-parallel jobs
    for RADV CTS
  * 4668a08e9d7 gitlab-ci: allow deqp-runner to use the maximum number
    of jobs
  * 888b41f0ee0 gitlab-ci: remove useless 'patch' package in the VK test
    image
  * 3349fe9a26d tu: Rewrite border color handling
  * f6dad10d047 meson: Avoid duplicate symbols.
  * 4b61ad372d5 Revert "ci: Remove T820 from CI temporarily"
  * bbdb4b1a6d9 gitlab-ci/lava:  fix handling of lava tags
  * fd1436440bd iris: allow compression conditionally for images on
    gen12
  * d836f3fadfb isl: allow compression for storage images on gen12+
  * cd132a8eed9 iris: determine aux usage during predraw and state setup
  * d4c879e69e2 iris: move existing image format fallback as a helper
    function
  * fe2baf72e7b iris: provide dummy iris_image_view_aux_usage
  * e8f0483ec40 intel/compiler: detect if atomic load store operations
    are used
  * 6dd654ba419 iris: use the images_used mask in resolve pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 17 Mar 2020 01:11:51 +0100

mesa (20.1.0~git2003101652.ba03e308b66~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * ba03e308b66 freedreno/fdperf: set locale
  * 30dd0599250 freedreno/computerator: add performance counter support
  * af68b0d3460 vulkan/wsi: Return an error if dup() fails
  * 34d2637fa76 vulkan/wsi: Don't leak the FD when
    GetImageDrmFormatModifierProperties fails
  * 3c96e25de77 freedreno/ir3: try to avoid syncs
  * cc82521de4e freedreno/ir3: round-robin RA
  * b2b349096f0 freedreno/ir3: track register usage in first RA pass
  * 9ae93be8fbd freedreno/ir3: fix has_latency_to_hide
  * b6eb11295a7 freedreno/ir3: split out has_latency_to_hide()
  * dd2e050a842 util/ra: move NO_REG to header
  * 36aed70b591 util/ra: spiff out select_reg_callback
  * b3efa2a4da2 freedreno: fix FD_MESA_DEBUG=inorder
  * 752b9985bed freedreno/ir3: add simplified stall estimation
  * 64ae2ef8bbc freedreno/ir3: remove extra nops inserted in scheduler
  * ad2ff7a278a freedreno/computerator: add hrsq/hlog2/hexp2
  * 4a8e4c18d2f freedreno/ir3: also lower lowp frag outputs
  * 3535797e8c9 nir/print: show variable precision
  * 10eee6d8c63 intel/tools: Fix compilation with UBSan
  * 74be835a84a i965: Use gl_vertex_format in brw_vertex_element.
  * e62b82a693e i965: Make use of the vertex format functions in i965.
  * cf929823bf8 mesa: Provide gl_vertex_format accessors.
  * 1641c872ed3 mesa: Remove now unused _mesa_draw_attrib.
  * 305724dd7b7 mesa: Remove now unused _mesa_draw_attrib_and_binding.
  * 4ccda7bfd97 i965: Remove glbinding from brw_vertex_element.
  * 38db4f17200 i965: Reorder workaround flags computation.
  * e53fd073bea i965: Split merge_inputs and clear_buffers.
  * de579ffba2e i965: Test original vertex array pointer to skip array
    upload.
  * b684030c3a6 i965: Use the VAOs binding information in array setup.
  * e1f2c84282b i965: Use 32 bit u_bit_scan for vertex attribute setup.
  * 0ea3ca3eca4 iris: Move down iris_emit_sbe_swiz in profiles.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 10 Mar 2020 19:25:13 +0100

mesa (20.1.0~git2003071109.0103f02acb1~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 0103f02acb1 gitlab-ci: Always name artifacts archive after the job
    producing it
  * 20c09c9c068 anv: stop storing prog param data into shader blobs
  * e03f9652801 anv: Bounds-check pushed UBOs when robustBufferAccess =
    true
  * faea84e2540 anv: Add an align_down_u32 helper
  * 61ac8cf0838 anv: Align UBO sizes to 32B
  * 4610d69e37f anv: Delete some pointless break statements
  * 28c243e9ece anv: Pass buffer addresses into emit_push_constant*
  * ff5de35127d anv: Mark max_push_range UNUSED and simplify the code
  * 35ca2ad22e2 anv: Parse VkPhysicalDeviceFeatures2 in CreateDevice
  * 0e4c001951a docs/relnotes/20.0: fix vulkan version reported
  * 5ff443b8aa9 docs/relnotes/19.3: fix vulkan version reported
  * 2557d614d36 gen_release_notes: fix vulkan version reported
  * de30a7ae6ea pan/bi: Fix Android.mk
  * 0b0be49005b pan/bi: Rename next-wait to simply 'wait'
  * b329f8c750a pan/bi: Add dummy scheduler
  * 51e537c9fa4 pan/bi: Implement load_const
  * 1ead0d3488b pan/bi: Add preliminary LOAD_UNIFORM implementation
  * 48910e83889 pan/bi: Implement store_vary for vertex shaders
  * d86659ca57e pan/bi: Add helpers for creating temporaries
  * 59b476e11ad pan/bi: Implement load_input for vertex shaders
  * dabb6c6b9fd pan/bi: Implement store_output for fragment shaders
  * 79c1af06234 pan/bi: Add bi_schedule_barrier helper
  * 92a4f26e7f5 pan/bi: Add blend_location to IR for BI_BLEND
  * 07671826658 pan/bi: Implement nir_intrsinic_load_interpolated_input
  * 806533ba7ff pan/bi: Fix destination printing
  * 65c8dcca3b3 pan/bi: Handle jumps (breaks, continues)
  * 987aea14000 pan/bi: Handle loops when ingesting CFG
  * 9a00cf3d1ef pan/bi: Add support for if-else blocks
  * 977a38c87f5 pan/bi: Call nir_lower_io_to_temporaries in cmdline
  * 55dab92073f pan/bi: Add instruction emit/remove helpers

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 07 Mar 2020 13:01:15 +0100

mesa (20.1.0~git2003031750.18675363a35~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 18675363a35 gallium/swr: fix corruptions in Unigine Heaven

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 03 Mar 2020 19:50:40 +0100

mesa (20.1.0~git2003031706.0ab5c88a0ac~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 0ab5c88a0ac st/va: GetConfigAttributes: check profile and entrypoint
    combination
  * cd40110420b intel/isl: Implement D16_UNORM workarounds.
  * 9fea90ad517 aco: keep track of which events are used in a barrier
  * 3f31c54842d st/va/postproc: reallocate interlaced destination buffer
  * 2d32248f49e panfrost: fix transform feedback
  * 585a21ceca0 gallium: add PIPE_CAP_PSIZ_CLAMPED
  * babf7357d24 gallium: add PIPE_CAP_VIEWPORT_TRANSFORM_LOWERED
  * 4ce339e7411 gallium: add PIPE_CAP_PACKED_STREAM_OUTPUT
  * 82dc149254a glsl/linker: add xfb workaround for modified built-in
    variables
  * 4a329bea44f glsl/linker: handle array/struct members for
    DisableXfbPacking
  * 00746fa2dab glsl/linker: add DisableTransformFeedbackPacking
    workaround
  * 8b361df9cf7 spirv: fix memory_barrier_tcs_patch emission
  * 6d839addf95 spirv: improve creation of memory_barrier
  * 5d713fb66e7 lima: don't disable tiling if there's linear modifier in
    list
  * 46a8cab58bc ac: rename min_vgpr_alloc to min_wave64_vgpr_alloc
  * 33faef6a340 ac: rename vgpr_alloc_granularity to
    wave64_vgpr_alloc_granularity
  * 9432eb3e9ce ac: rename lds_size_per_cu to lds_size_per_workgroup
  * 69628ababbd turnip: Execute main cs for secondary command buffers
  * 5715a61fa96 turnip: Promote tu_cs_get_size/is_empty to header
  * bdf20d324bf nvc0: enable EXT_texture_shadow_lod
  * 11a06dfd4ba st/mesa: allow TXB2/TXL2 to work with cube array shadow
    textures
  * 1d3b0b90888 nv50,nvc0: add newly added PIPE_CAP's to list
  * 62f7197fb54 anv: multiply the scratch space by 4 on gen9-10 like
    iris and i965
  * aa78801f0a6 intel/device: bdw_gt1 actually has 6 eus per subslice
  * 9e5ce30da7f intel: fix the gen 12 compute shader scratch IDs
  * 1efe139cad1 intel: fix the gen 11 compute shader scratch IDs
  * d0c66869c1f pan/bi: Move some definitions from disasm to bifrost.h
  * 346262ceb6d pan/bi: Structify FMA_FADD
  * 4fe5b59a96a pan/bi: Squash LD_ATTR ops together
  * ee957bc0f37 pan/bi: Combine LOAD_VARYING_ADDRESS instructions by
    type

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 03 Mar 2020 18:54:17 +0100

mesa (20.1.0~git2002281653.8cb9f794131~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 8cb9f794131 freedreno/ir3: add assert
  * ac705edd829 freedreno/ir3: fix assert with getinfo
  * c1f43674618 freedreno/ir3: don't precolor unassigned inputs
  * 4b8e198fd2b freedreno/ir3: fix crash with samgq workaround
  * 56565b7bba5 freedreno/ir3: update SFU delay
  * 2cf4b5f29ed freedreno/ir3: track half-precision live values
  * 4353b3c1c5a freedreno/ir3: don't hide latency when there is none to
    hide
  * 9d2aaa589cf freedreno/ir3: rewrite regmask to better support a6xx+
  * c02cd8afbd6 freedreno/ir3: remove regmask_set_if_not()
  * 2fa64729db9 freedreno: honor FD_MESA_DEBUG=nogrow
  * bab9db6c026 freedreno/a6xx: enable SKIP_IB2_ENABLE properly
  * 9724a7c1055 freedreno/a6xx: don't emit YIELD packet
  * 45771786e4a freedreno/a6xx: whitespace fix
  * ae3e237db05 freedreno/a6xx: emit LRZ clear in sysmem too
  * 6b605804ead freedreno/a6xx: remove unused param
  * 141d0d1c25d freedreno/ir3: remove from_tgsi
  * c7ac1bcea01 turnip: increase array sizes in tu_descriptor_map
  * d195eef05d2 turnip: fall back to sysmem when attachments don't fit
    into gmem
  * de3230e0a5d turnip: remove unnecessary fb size check
  * cf302c9a22f turnip: don't hardcode gmem base for input attachment
  * 6420406f197 turnip: fix srgb MRT
  * 8f9e1c6047e turnip: fix hw binning + render_area offset interaction
  * de33c23370b turnip: minify image_view extent
  * b18d6575fee turnip: remove unecessary MRT_CONTROL fill
  * 33b2db5fb93 turnip: move some constant state to tu6_init_hw
  * 7d27a9ffb36 turnip: check the right alignment requirement on shader
    iova
  * 0f0662a5515 turnip: add r5g5b5a1_unorm/b5g5r5a1_unorm  formats
  * 80ceebcdd10 turnip: rework format table to support
    r5g5b5a1_unorm/b5g5r5a1_unorm
  * 89c6ef42335 util/format: add missing BC4/BC5 vulkan formats
  * 339f127f2b3 panfrost: LogicOp fixes and non 8-bit format support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 28 Feb 2020 21:26:31 +0100

mesa (20.1.0~git2002211644.4d57a275048~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 4d57a275048 iris: Set MOCS for constant packets on Gen12+
  * 4bac2fa3c6d iris: Fix BLORP vertex buffers to respect ISL MOCS
    settings
  * 1cdf5abdfae iris: Make mocs an inline helper in iris_resource.h
  * f8ab00776cc ci: Remove a useless filtering of the lava logs.
  * 7f3f9b2b192 ci: Don't bother generating deqp junit results since we
    don't present it.
  * 4c372d384a7 ci: Document how LAVA runners work.
  * 994e2581226 ci: Make LAVA job fails emit the full list of unexpected
    test results.
  * 54dbb55ea82 ci: Make sure that we have a proper shell prompt for
    LAVA.
  * 985343e71ae ci: prepare-artifacts: Make the indent here match
    previously in the file
  * 89a3856714e anv: Add pipe_state_for_stage() helper
  * 7df5d36078a anv: Use intel_debug_flag_for_shader_stage()
  * f58b384fbef spirv: Be consistent when checking for Shader/Kernel
  * 5f3cbbd958d spirv: Remove outdated SPIR-V decoration warnings
  * 1598370aca6 nir/builder: Return an integer from nir_get_texture_size
  * 265e234e234 nir: Fix the nir_builder include path for
    nir_builtin_builder
  * f5a8958910f util: Change os_same_file_description return type from
    bool to int
  * 228cbdfe67e winsys/amdgpu: Make local variable r signed
  * 87365e263ec nir/lower_ssbo: handle atomics
  * 7ab4e4dd963 nir: Add SSBO->global lowering pass
  * b929565ea8d panfrost: Rewrite texture descriptor creation logic
  * ad44f587a8e panfrost: Move format translation to root
  * 58f14018b4f panfrost: Move pan_afbc.c to root
  * 5ddf7ad9d20 panfrost: Move checksum routines to root panfrost
  * 2e3318b151a util: promote u_debug_memory.c to src/util
  * 8021daeb1fb lima: implement PLB PP stream cache
  * 7edde3d26bb docs: Update index, relnotes, and release-calendar for
    20.0
  * 0ada39f37ad Docs: Add 20.0.0 release notes
  * 740cb3d1939 radv: use RADEON_FLAG_ZERO_VRAM when creating the trace
    BO
  * 37650bf9380 radv/winsys: add a new flag that requests zerovram
    allocations
  * 7a73446c513 gallivm: fix crash in emit_get_buffer_size

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 23 Feb 2020 17:13:24 +0100

mesa (20.1.0~git2002192005.97a590af21e~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 97a590af21e docs: Mark 20.0.0-rc3 as done
  * 772d60385cc docs: Mark 19.3.4 as done
  * 288e9fd295b docs: Add SHA256 sum for 19.3.4
  * 3238f4c3abf docs: Add release notes for 19.3.4
  * d8fe9e045f0 anv: Drop anv_image.c:get_surface()
  * 58bdc1c748f nir/search: Use larger type to hold linearized index
  * 912ee82521e gallium/util: remove unused u_surfaces.c/h
  * 360ffdf4e23 main/get: Converted type conversion macros to inline
    functions
  * f1dc4c9554c Mark a few static inline helpers with ASSERTED
  * d46a5cfe781 mesa/draw: Make sure all the unused fields are
    initialized to zero
  * 6edbb3c6d07 mesa: Fix FLUSH_VERTICES in SubpixelPrecisionBiasNV.
  * d3160a6177a panfrost: Remove old hack
  * 7f6f419be93 panfrost: Remove old comment
  * aed052f7039 panfrost: Remove dirty tracking
  * fe5c5507bd6 aco: add some helpers for filling/testing register
    ranges
  * 43497e30e26 aco: add RegisterFile
  * 7e6010106fb st/vdpau: Only call is_video_format_supported hook if
    needed
  * 72154237fb7 iris: Do not dereference nullptr with pipe_reference
  * d800bcd9b96 glsl/blob: Do not call memcpy if there is nothing to
    copy
  * 7685f48ece7 intel/bufmgr: Cast bitshift to unsigned
  * d5931f285be intel/compiler: Do not qsort zero sized array
  * d596795d4d3 brw_fs: Avoid zero size vla
  * d4e395a27d7 brw_nir: Cast bitshift to unsigned
  * 82913bac145 docs/envvars: document RADV_TEX_ANISO
  * 72f7d3d5b09 gallium: Only define PIPE_ALIGNSTACK on x86.
  * 427870abfd0 llvmpipe: Fix another uninitialized value warning, on
    init_val.
  * 81225e1f034 llvmpipe: Silence uninitialized variable warning about
    "scissor"
  * dc8c5af99b0 llvmpipe: Silence uninitialized variable warning about
    "vals"
  * d8d34238a6d llvmpipe: Fix warning about uninitialized "op" in the
    NIR path.
  * b32bd704c0a llvmpipe: Silence uninitialized variable warning about
    "chan"

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 19 Feb 2020 22:07:27 +0100

mesa (20.1.0~git2002141803.7bee388fb50~b~mesaaco3) bionic; urgency=medium

  * Fix ACO patch
  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 14 Feb 2020 22:07:11 +0100

mesa (20.1.0~git2002141803.7bee388fb50~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 7bee388fb50 egl: directly access static members instead of using
    _egl{Get,Set}ConfigKey()
  * 946eacbafb4 freedreno/a6xx: document some unknown bits
  * 75fbe089a6a freedreno: name sysmem color/depth flush events
  * c57456aab69 panfrost: Simplify swizzle translation
  * f3490a141c8 panfrost: Inline panfrost_get_default_swizzle
  * efda2cfcf96 spirv2nir: Add kernel spirv support
  * eeb6d611285 spirv2nir: print nir shader if translation succed
  * 7e80b03dd15 zink: do not use SpvDimRect
  * f43a3fc28ff lima: handle early-z and pixel kill better
  * 582d0c5f147 gitlab-ci: Add three more dEQP-GLES31 tests to softpipe
    skips
  * 3d16bfc42de gitlab-ci: Sort random failure softpipe skips
  * f86bf2e90a9 docs/new_features: empty the feature list for the 20.1
    cycle
  * 886acbe1c53 radv: remove unnecessary RADV_DEBUG=nobatchchain option
  * 676869e1d4b glsl: fix gl_nir_set_uniform_initializers() for image
    arrays
  * 6baeca36899 intel/tools: Update aubinator_error_decode.
  * 334788d4cc9 freedreno: allow INVALID modifier
  * 3547e19bbd0 intel/isl: Switch to R8_UNORM format for compatiblity
  * 207a93bbff1 intel/isl: Move get_format_encoding function to isl
  * 2a98cf3b2ec Revert "gitlab-ci: disable a630 tests as mesa-cheza is
    down (again)"
  * 5a82273f09d freedreno/a6xx: fix Z24_UNORM_S8_UINT_AS_R8G8B8A8
  * 4151d843236 iris: add support INTEL_blackhole_render
  * 6d35610bd57 st: add support for INTEL_blackhole_render
  * 5d7e9edba18 i965: enable INTEL_blackhole_render
  * 74ec39f66d5 mesa: add INTEL_blackhole_render
  * 08cff938b76 Revert "st/va: Convert interlaced NV12 to progressive"
  * 3a2977e7b5c anv: Reject modifiers on depth/stencil formats
  * 5a593bec16b gallium/swr: fix rdtsc debug statistics mechanism
  * dd16ad107da gitlab-ci: remove load_store_vectorizer from expected
    s390x test failures
  * aca2458d1bf nir: fix nir_const_value_as_uint bit size in load/store
    vectorizer tests
  * 0c1ba69a270 Revert "nir: Add a couple trivial abs optimizations"

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 14 Feb 2020 21:59:25 +0100

mesa (20.1.0~git2002072203.1c3f4c07047~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1c3f4c07047 zink: fixup sampler-usage
  * fa915a724fb zink: lower away fdph
  * 0c36b1c0dbf etnaviv: enable texture upload memory throttling
  * 7bddaa61362 freedreno/ir3: Fold const only when the type is float
  * 260bd32b58a freedreno/ir3: put the conversion back for half const to
    the right place.
  * d70192e6973 freedreno/ir3: Add cat4 mediump opcodes
  * 3eca6d9ce14 freedreno/ir3: fold const conversion into consumer
  * 5e2012d5c74 freedreno/ir3: fix printing half constant registers.
  * d55dfef7823 freedreno/ir3: Set IR3_REG_HALF flag on src as well in
    immediate MOV
  * fbfc8c35315 docs: Mark 20.0-rc2 as done
  * d8bae10bfe0 freedreno: android: fix build of perfcounters.
  * fad99243151 freedreno: android: add a6xx-pack.xml.h generation to
    android build
  * cad400a59e4 freedreno: android: fix build failure on android due to
    python version
  * ff8265b64ff gallium/swr: Fix llvm11 compilation issues
  * f239bb8020d Vulkan Overlay: Don't try to change the image layout to
    present twice
  * 4b978cd950c aco: do not use ds_{read,write}2 on GFX6
  * da76dfb5159 intel/vec4: fix valgrind errors with vf_values array
  * 1572e8f3e13 lima/parser: Change value name in RSW parser
  * 5802259e543 lima/parser: Extend AUX0 findings
  * cebfb3169ca lima/parser: Fix RSW depth test parsing
  * eaa0784fd32 i965: remove duplicated comment
  * 26ab38f1440 ci: Drop turnip opt-in option
  * fbc117cba31 llvmpipe: advertise 4 vertex streams
  * 7e6690b1a62 draw: don't emit vertex to streams with no outputs
  * 72154c90752 draw: emit multiple streams to streamout.
  * 00c066e5a04 draw/gs: track emitted prims + verts per stream.
  * 0c77007c9db draw: change geom shader output to an array of outputs.
  * 8583fcd8f18 gallivm/nir: add support for multiple vertex streams
  * b6688413131 gallivm/swr: add stream_id to geom epilogue emit
  * 9d70002744c llvmpipe/query: add support for indexed queries

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 08 Feb 2020 00:21:54 +0100

mesa (20.1.0~git2002020654.8ff613dc587~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 8ff613dc587 VERSION: bump after 20.0 branch point
  * 02658df152d lima: Fix build with GCC 10.
  * 982d61e2cdd freedreno/ir3: fix a dirty lie
  * 752aeb7b3fe freedreno/ir3: simplify split from collect
  * 8d0e7d9a4c1 freedreno/ir3: create fragcoord instructions in input
    block
  * fb09020ef23 freedreno/ir3: remove unused tex arg harder
  * 2ffe44ec0a5 freedreno/ir3: add RA sanity check
  * 2f4f46b7080 freedreno/a6xx: fix lrz overflow
  * 3e79c4f0edc freedreno/ir3: two pass register allocation
  * b0293af7a5d freedreno/ir3: don't precolor unused inputs
  * ad2587d3c88 freedreno/ir3: add is_tex_or_prefetch()
  * 4a7a6c9ef0e freedreno/ir3: number instructions from one
  * 0f78c32492e freedreno/ir3: post-RA sched pass
  * 3369406e44b freedreno/ir3: fix kill scheduling
  * 9a9f78f1f9f freedreno/ir3/ra: make use()/def() functions instead of
    macros
  * a5f24f966ae freedreno/ir3: a bit more optmsgs debug
  * 300d1181c72 freedreno/ir3: move atomic fixup after RA
  * 304b50c9f8f freedreno/ir3: move block-scheduling into legalize
  * 093c94456bc freedreno/ir3: move nop padding to legalize
  * c803c662f99 freedreno/ir3: split out delay helpers
  * 54c795f8297 freedreno/ir3: fix crash when no non-input instructions
  * c1194e10b2d freedreno/ir3: cleanup after lower_locals_to_regs
  * f0b792ea060 freedreno/ir3: shuffle a few ir3_register fields
  * 95831e2f66a intel/gen12+: Set way_size_per_bank to 4
  * 00a84c170a0 intel/gen12+: Reserve 4KB of URB space per bank for
    Compute Engine
  * c0d8b373ade virgl: Use align_free for align_malloc allocated buffer
  * d326d30efef freedreno/drm: readonly cmdstream
  * f93dfb509cb intel/fs: Write the address register with NoMask for
    MOV_INDIRECT
  * 9a95abd0f75 intel/tools: Handle strides better when dumping buffers
  * 51d7c42165d intel/disasm: SEND has two sources on Gen12+

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 02 Feb 2020 10:31:58 +0100

mesa (20.0.0~git2001281517.815a603889b~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 815a603889b anv: Handle unavailable queries in
    vkCmdCopyQueryPoolResults
  * af92ce50a7e anv: Properly fetch partial results in
    vkGetQueryPoolResults
  * 7edcf4a59d0 aco: fix rebase error from GS copy shader support
  * dd9bf7d2911 anv/android: make format_supported_with_usage static
  * 104744f4dfc anv/android: setup gralloc1 usage from gralloc0 usage
    manually
  * 03a0d39366d aco: use MUBUF in some situations instead of splitting
    vertex fetches
  * 21d2799cee8 aco: value-number MUBUF instructions
  * d39f5519a11 aco: handle unaligned vertex fetch on GFX10
  * d9e357e35ba aco: skip unused channels at the start when fetching
    vertices
  * 525b1073474 aco: rework vertex fetching a bit
  * 4363a1f75b3 amd/common,radv: move vertex_format_table to
    ac_shader_util.{h,c}
  * ab7ac1ffda0 gallium/swr: fix tessellation state save/restore
  * fe5267d3223 lima: disable early-z if fragment shader uses discard
  * 650c6805453 lima: ppir: always create move and update ld_tex
    successors for all blocks
  * 4a0f62f1fca lima: ppir: don't delete root ld_tex nodes without
    successors in current block
  * 63af27bc768 freedreno/drm: fix invalid-cmdstream-size with older
    kernels
  * 0c154d9e2db Revert "winsys/amdgpu: Re-use amdgpu_screen_winsys when
    possible"
  * ba06c7620f3 Revert "winsys/amdgpu: Close KMS handles for other DRM
    file descriptions"
  * 993f866d2e3 anv: Insert holes for non-existant XFB varyings
  * 68b3bfaa424 intel/genxml: Make SO_DECL::"Hole Flag" a Boolean
  * a27542c5dde intel/compiler: Clear accumulator register before EOT
  * 480cf7d9bf0 pan/midgard: Remove float_bitcast
  * 83e1fa87a7e radv: do not allow sparse resources with multi-planar
    formats
  * 24360966ab3 panfrost/midgard: Prettify embedded constant prints
  * aa973fc14e1 panfrost/midgard: Add a condense_writemask() helper
  * 2dc63d39d31 aco: fix literal application with
    v_cndmask_b32/v_addc_co_u32/etc
  * 827681f9213 aco: always add sgprs to sgpr_ids when choosing literals
  * 92970adb4ba aco: fix operand to scc when selecting SGPR
    ufind_msb/ifind_msb
  * e6c90e4af94 aco: fix WaR check for >64-bit FLAT/GLOBAL instructions
  * 8784062abbc pan/midgard: Handle tag 0x4 as texture

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 28 Jan 2020 17:17:43 +0100

mesa (20.0.0~git2001250559.eb7cd575da0~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * eb7cd575da0 radeonsi: fix a regression since the addition of
    si_shader_llvm_vs.c
  * 688d2901b84 radeonsi: make screen available to shader part
    compilation
  * 07a441d53f8 anv: Rework CCS memory handling on TGL-LP
  * b29cf7daf3a anv: Make anv_vma_alloc/free a lot dumber
  * fd0f9d11963 anv: Make AUX table invalidate a PIPE_* bit
  * 658dc9ca506 anv: Add another align_down helper
  * 64ca8a3272e isl: Add a helper for calculating subimage memory ranges
  * 47931160369 anv: Delete a redundant calculation
  * a1e9adc9ce5 intel/aux-map: Factor out some useful helpers
  * bea62ea566c intel/aux-map: Add some #defines
  * 0366c8c5b73 radeonsi: expose shader cache stats to the HUD
  * c046551e603 radeonsi: print shader cache stats with
    AMD_DEBUG=cache_stats
  * 2fd3bb23ab7 radeonsi: restructure si_shader_cache_load_shader
  * 0db74f479b9 radeonsi: use the live shader cache
  * 4bb919b0b8b gallium/util: add a cache of live shaders for shader CSO
    deduplication
  * f36f85d958e util/simple_mtx: add a missing include to get ASSERTED
  * 6a0dda63dd1 intel/compiler: Add names for SHADER_OPCODE_[IU]SUB_SAT
  * c1a2ac2abe9 anv: Always initialize target_stencil_layout
  * 41bffe09135 anv: Replace aux_surface.isl.size_B checks with
    aux_usage checks
  * e693a57232a anv: Rework the meaning of
    anv_image::planes[]::aux_usage
  * de647190244 radv: print NIR shaders after lowering FS inputs/outputs
  * 17e225ee1e5 intel/isl: Add a hack for the Gen12 A0 texture buffer
    bug
  * 4cd23420bd9 intel/isl: Plumb devinfo into
    isl_genX(buffer_fill_state_s)
  * 98aab272a82 intel/disasm: Properly disassemble indirect SENDs
  * 3b2eafbea95 intel/fs: Don't unnecessarily fall back to indirect
    sends on Gen12
  * c70a786c773 anv: Improve BTI change cache flushing
  * e39c52787e8 panfrost: Fix 32-bit warning for `indices`
  * 58aa2b8cfc6 pan/decode: Remove SHORT_SLIDE indirection
  * 7d52b3a18bb pan/midgard: Remove pack_color define
  * 6c95ea6bd72 pan/decode: Remove last_size

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 25 Jan 2020 09:40:06 +0100

mesa (20.0.0~git2001221531.5b810c7de30~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 5b810c7de30 panfrost/midgard: Add missing lowering passes for
    type/size conversion ops
  * fcceeaffaef panfrost/midgard: Add 64 bits float <-> int converters
  * fe5fbadd462 panfrost/midgard: Fix mir_print_instruction() for branch
    instructions
  * e1f9e8d60b9 panfrost/midgard: Add f2f64 support
  * f53a0799c7d panfrost/midgard: Factorize f2f and u2u handling
  * 6548d01b3da panfrost/midgard: Make sure promote_fmov() only promotes
    32-bit imovs
  * 9566f26ed46 panfrost/midgard: Rework mir_adjust_constants() to make
    it type/size agnostic
  * 15c92d158ca panfrost/midgard: Use a union to manipulate embedded
    constants
  * 63461cb7e13 anv: ensure prog params are initialized with 0s
  * 4936120230f panfrost: Fix crash in compute variant allocation
  * d817f2c6961 etnaviv: drm: Don't miscalculate timeout
  * 047162d99ce egl: Fix _eglPointerIsDereferencable w/o mincore()
  * 39e7492d33c egl/android: fix buffer_count for applications setting
    max count
  * 1c9ecb21237 aco: Fix signedness compare warning.
  * 533a20dbd56 aco: Fix maybe-uninitialized warnings.
  * 6fb3df2786f aco: Fix -Wstringop-overflow warnings in aco_span.
  * 75e5720e1a6 radeon: Fix multiple definition error with radeon_debug
  * 8e22df3aec9 gallium: Fix a couple of multiple definition warnings.
  * a134ac5ee93 r600: Move get_pic_param to radeon_vce.c
  * b7f97598091 radeon: Move si_get_pic_param to radeon_vce.c
  * e45ea781f85 intel/compiler: Fix array bounds warning on GCC 10.
  * 3abfde13be1 turnip: Add support for non-zero (still constant) UBO
    buffer indices.
  * 5f791df0d00 turnip: fix array/matrix varyings
  * c1717652233 turnip: remove tu_sort_variables_by_location
  * 1736447f27e freedreno/ir3: allow inputs with the same location
  * 17c9ec94f59 gitlab-ci: Skip ext_timer_query/time-elapsed
  * 68cfc65ccbc intel/compiler: Test compaction on Gen <= 12
  * 22462ba242d intel/compiler: Validate fuzzed instructions
  * 72cf63cfc63 intel/compiler: Add unit tests for new EU validation
    checks
  * 5f4eacaeda5 intel/compiler: Validate some instruction word encodings

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 22 Jan 2020 17:00:05 +0100

mesa (20.0.0~git2001171827.ddb80f9276b~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * ddb80f9276b anv: enable VK_KHR_swapchain_mutable_format
  * 4bdf8547f4d vulkan/wsi: Implement VK_KHR_swapchain_mutable_format
  * a218f132786 vulkan/wsi: Filter modifiers with ImageFormatProperties
  * 210e68874bb vulkan/wsi: Use the interface from the real modifiers
    extension
  * c78926b84df vulkan/wsi: Move the ImageCreateInfo higher up
  * 6790397346c anv: Support modifiers in GetImageFormatProperties2
  * 44f5a92c0b1 anv: Drop some VK_IMAGE_TILING_OPTIMAL checks
  * 0099f85232b aco: print assembly with CLRXdisasm for GFX6-GFX7 if
    found on the system
  * 51de5d5ac65 vulkan/wsi: disable the hardware cursor
  * ad820d5aca1 gallium/swr: Disable showing detected arch message.
  * b9b393f0ce4 aco: fix emitting slc for MUBUF instructions on GFX6-
    GFX7
  * 6af63c939bf panfrost/midgard: Fix swizzle for store instructions
  * be95c816a7d docs: do not double-close link tag
  * b009a7644b9 docs: remove double-closed definition-list
  * b387f68f49a docs: move paragraph closing tag
  * a370cfd96ed docs: use code-tags instead of pre-tags
  * 1de361e56b3 docs: use code-tags instead of pre-tags
  * 36e02752755 docs: use code-tag instead of pre-tag
  * f0677086a17 docs: open paragraph before closing it
  * a0d25c4d87e docs: fix paragraphs
  * 750d664226e docs: fix typo in html tag name
  * 5b1c4e1b75f util: call bind_sampler_states before setting
    sampler_views
  * d55573aac63 nir: Fix printing of ~0 .locations.
  * 65641e0c7a2 meson: use github URL for wraps instead of completely
    unreliable wrapdb
  * d7cef7c67b9 docs: Update release calendar for 20.0
  * 2ebfc6db161 lima: Fix alpha blending
  * 3bca0af25db aco: ignore parallelcopies to the same register on jump
    threading
  * 427e5eeb020 aco: handle phi affinities transitively through
    parallelcopies
  * d098024c40e aco: rework lower_to_cssa()
  * 300f8dec76f aco: implement stream output with vec3 on GFX6

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 17 Jan 2020 20:04:12 +0100

mesa (20.0.0~git2001150842.7f5462e349a~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 7f5462e349a radv: enable Vulkan 1.2
  * 68d6bead781 radv: implement Vulkan 1.2 features and properties
  * b3033198a8c radv: implement Vulkan 1.1 features and properties
  * a09ab76828a radv: update VK_KHR_timeline_semaphore for Vulkan 1.2
  * fab0aa91821 radv: update VK_KHR_uniform_buffer_standard_layout for
    Vulkan 1.2
  * 3ff8d124583 radv: update VK_KHR_shader_subgroup_extended_types for
    Vulkan 1.2
  * af25c8d57bd radv: update VK_KHR_shader_float_controls for Vulkan 1.2
  * 5335bb6c39e radv: update VK_KHR_shader_float16_int8 for Vulkan 1.2
  * a73d01b1db9 radv: update VK_KHR_shader_atomic_int64 for Vulkan 1.2
  * 83d1773a578 radv: update VK_KHR_imageless_framebuffer for Vulkan 1.2
  * b3bdb4e6ff8 radv: update VK_KHR_image_format_list for Vulkan 1.2
  * a80229941f5 radv: update VK_KHR_driver_properties for Vulkan 1.2
  * af883bf3dcd radv: update VK_KHR_draw_indirect_count for Vulkan 1.2
  * b537be43680 radv: update VK_KHR_depth_stencil_resolve for Vulkan 1.2
  * 5993f13b27f radv: update VK_KHR_create_renderpass2 for Vulkan 1.2
  * b2be00fbc17 radv: update VK_KHR_buffer_device_address for Vulkan 1.2
  * 0eb26aae1ce radv: update VK_KHR_8bit_storage for Vulkan 1.2
  * b4eed4e548a radv: update VK_EXT_scalar_block_layout for Vulkan 1.2
  * efdf9d8969a radv: update VK_EXT_sampler_filter_minmax for Vulkan 1.2
  * 65e215e6f3a radv: update VK_EXT_host_query_reset for Vulkan 1.2
  * 95ec0c050bf radv: update VK_EXT_descriptor_indexing for Vulkan 1.2
  * 4ef3f7e3d37 anv: Enable Vulkan 1.2 support
  * c616627f63d anv: Implement the new core version property queries
  * a47152c622f anv: Implement the new core version feature queries
  * 721666e52a7 anv,nir: Lower quad_broadcast with dynamic index in NIR
  * 7e3e2ce7028 anv: Bump the patch version to 131
  * f33a68af63e vulkan/overlay: Fix for Vulkan 1.2
  * 75755e0eba1 turnip: Pretend to support Vulkan 1.2
  * ac0c7ad2c23 vulkan: Update the XML and headers to 1.2.131
  * 8775b742ea3 gitlab-ci: Stop using manual jobs for merge requests

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 15 Jan 2020 16:18:40 +0100

mesa (20.0.0~git2001132319.1c6a2efa06e~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 1c6a2efa06e mesa/st: lower samplers before nir_lower_tex
  * 4cda61f11e9 nir: assert that nir_lower_tex runs after lowering
    derefs
  * d72f1787533 i965: support EXT_EGL_image_storage
  * b1c266d5fa5 i965: refactor intel_image_target_texture_2d
  * 34fe560cd6d i965: track if image is created by a dmabuf
  * bf576772ab4 dri_util: add driImageFormatToSizedInternalGLFormat
    function
  * b68ff2b8731 glapi / teximage: implement EGLImageTargetTexStorageEXT
  * 1fe23d0e22a teximage: split out helper from
    EGLImageTargetTexture2DOES
  * 7978f2401bb anv: Memset array properties
  * d36eed3e695 anv: Don't over-advertise descriptor indexing features
  * d7ff137445b intel/blorp: Fill out all the dwords of MI_ATOMIC

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 14 Jan 2020 00:43:05 +0100

mesa (20.0.0~git2001132126.40dd418e14e~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 40dd418e14e gitlab-ci: Upgrade kernel for LAVA jobs to v5.5-rc5
  * 05c81875d7b aco: fix unconditional demote_to_helper
  * 2bb88b2fdc0 radeonsi: don't enable VBOs in user SGPRs if compute-
    based culling can be used
  * 363b4027fcb radeonsi: put up to 5 VBO descriptors into user SGPRs
  * 220d00314fd ac,radeonsi: increase the maximum number of shader args
    and return values
  * ef253c67898 radeonsi: simplify si_set_vertex_buffers
  * 312e04689a9 radeonsi: don't allow draw calls with uninitialized VS
    inputs
  * c278c73f135 radeonsi: add si_context::num_vertex_elements
  * 1e03b63b3bb radeonsi: rename desc_list_byte_size ->
    vb_desc_list_alloc_size
  * 2cc14bd7b89 anv: set stencil layout for input attachments
  * 21bc16a723b anv: Drop an unused variable
  * d3737002eed nir/lower_atomics_to_ssbo: Also lower barriers
  * e40b11bbcb0 nir: Rename nir_intrinsic_barrier to control_barrier
  * bd3ab75aef9 intel/nir: Stop adding redundant barriers
  * ba43b66dc99 nir/glsl: Emit memory barriers as part of barrier()
  * a4125b4d261 spirv: Add output memory semantics to OpControlBarrier
    in TCS
  * 2365520c9d3 spirv: Add a workaround for OpControlBarrier on old
    GLSLang
  * 60097cc840e nir: Add a new memory_barrier_tcs_patch intrinsic
  * f2eece773c2 llmvpipe: No-op implement more barriers
  * 3498ab98f5a nir: Handle barriers with more granularity in
    combine_stores
  * f09db0bed5f nir: Handle more barriers in dead_write and copy_prop
  * ada49bae5e0 intel/vec4: Support scoped_memory_barrier
  * 40aef2bf3ea lima: Add stencil support
  * 2ce71494f10 lima/parser: Make rsw alpha blend parsing more readable
  * 440b0d6eec2 panfrost: Remove unneeded phi nodes
  * 809c8feb92d aco: check if multiplication/clamp is live when applying
    output modifier
  * ef8abfa7908 aco: disable add combining for ds_swizzle_b32
  * 69bed1c9186 aco: don't DCE atomics with return values
  * 8f291dc1460 aco: set exec_potentially_empty for demotes
  * 21eafe30df5 aco: better handle neg/abs of sgprs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 13 Jan 2020 22:46:59 +0100

mesa (20.0.0~git2001112015.44a6b17df76~b~mesaaco0) bionic; urgency=medium

  * Time for glvnd 1.3!
  * New snapshot:
  * 44a6b17df76 aco/wave32: Set the definitions of v_cmp instructions to
    the lane mask.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 11 Jan 2020 22:08:24 +0100

mesa (19.3.2+git2001091030.c54178f796d~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * c54178f796d docs: add SHA256 sums for 19.3.2
  * 8734effe130 VERSION: bump for 19.3.2
  * a2083af27d9 docs: Add release notes for 19.3.2
  * 30cd0c75237 anv: don't close invalid syncfd semaphore
  * 11c11597064 radeonsi: check ctx->sdma_cs before using it
  * d4a1f1daaf3 main: allow external textures for BindImageTexture
  * 28cba736ce3 intel/nir: Add a memory barrier before barrier()
  * c63d04cb570 radv: Emit a BATCH_BREAK when changing pixel shaders or
    CB_TARGET_MASK.
  * 64ee69a1890 radeonsi: disable SDMA on gfx8 to fix corruption on RX
    580
  * 310d8774899 cherry-ignore: update for 19.3.2
  * d9cbe10ee85 glsl/nir: do not change an element index to have correct
    block name
  * e87b1008802 glsl: fix a binding points assignment for ssbo/ubo
    arrays
  * 9f1782854e0 glsl: fix an incorrect max_array_access after
    optimization of ssbo/ubo
  * 4028c3c8679 radv: Only use the gfx mipmap level offset/pitch for
    linear textures.
  * 3d43ce1ca1d radv: return the correct pitch for linear mipmaps on
    GFX10
  * 980ac74d5e1 spirv: Fix glsl type assert in spir2nir.
  * c4eeaf5f603 r600: Fix maximum line width
  * d8392c05aea anv: Ignore some CreateInfo structs when rasterization
    is disabled
  * e5e1c5e0ae6 nir: Add clone/hash/serialize support for non-uniform
    tex instructions.
  * 180a8a73e0a aco: Fix uniform i2i64.
  * e1e84f65020 winsys/radeon: initialize pte_fragment_size
  * 6f473094a93 meta: Cleanup function for DrawTex
  * 425450c9845 amd/common: Handle alignment of 96-bit formats.
  * 1efde6d42af mesa: avoid returning a value in a void function
  * 8817d8ee18e nine: fix empty-body-issues
  * 0b25d2ce753 amd: fix empty-body issues
  * 22aa4585613 util/format: remove left-over
    util_format_description_table declaration
  * eaa56931a15 radv: Expose all sample counts for integer formats as
    well.
  * 2078d2da462 anv: Properly advertise sampledImageIntegerSampleCounts
  * 1a0a74f19e8 radeon/vcn2: enable rate control for hevc encoding

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 11 Jan 2020 10:16:31 +0100

mesa (19.3.1+git1912181056.cb6cc519e7a~b~mesaaco1) bionic; urgency=medium

  * New snapshot:
  * cb6cc519e7a dcos: add releanse notes for 19.3.1
  * c5ff7fbeabe VERSION: bump version for 19.3.1
  * b7f253b87da docs: remove new_features.txt from stable branch
  * 687df737af0 mesa: avoid triggering assert in implementation
  * 1949c2a323b i965: expose MESA_FORMAT_B8G8R8X8_SRGB visual
  * 1a6b8fcf178 dri: add __DRI_IMAGE_FORMAT_SXRGB8
  * 0309f2f0716 virgl: Increase the shader transfer buffer by doubling
    the size
  * e075d332794 anv: Export filter_minmax support only when it's really
    supported
  * e3f1a591723 amd/common: Always use addrlib for HTILE tc-compat.
  * 4f45bac153f amd/common: Fix tcCompatible degradation on Stoney.
  * fbb0f5dfbb0 radv: fix radv secure compile feature breaks compilation
    on armhf EABI and aarch64
  * 9e3be21a915 anv: fix fence underlying primitive checks
  * 61ea855be34 iris: Default to X-tiling for scanout buffers without
    modifiers
  * 08a24d9e286 cherry-ignore: update for the 19.3.1 cycle

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 19 Dec 2019 17:19:58 +0100

mesa (19.3.0+git1912121155.a278301fd41~b~mesaaco1) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 12 Dec 2019 21:29:35 +0100

mesa (19.3.0~rc6~git1912041314.9b189cb9b1b~b~mesaaco1) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 10 Dec 2019 08:14:42 +0100

mesa (19.3.0~rc6~git1912041314.9b189cb9b1b~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 9b189cb9b1b VERSION: bump version for 19.3-rc6
  * 15791ca8f9e aco: fix a couple of value numbering issues
  * f0aa6a75352 anv: Set up SBE_SWIZ properly for gl_Viewport
  * f6ac7d9a5b8 iris: Allow max dynamic pool size of 2GB for gen12
  * f9e8f6bad81 nir/lower_io_to_vector: don't create arrays when not
    needed
  * f7d100caad4 radv: set writes_memory for global memory stores/atomics
  * 0fa0b5fc3a8 aco: don't split live-ranges of linear VGPRs
  * bf03a4311ba aco: add v_nop inbetween exec write and VMEM/DS/FLAT
  * 967043eb68e aco: fix i2i64
  * f4a4cce5904 aco: propagate p_wqm on an image_sample's coordinate
    p_create_vector
  * 4f026b2a05d etnaviv: remove dead code
  * d32a34a3f3d i965: update Makefile.sources for perf changes
  * 8e3c4caf74d panfrost: Make sure we reset the damage region of RTs at
    flush time
  * e11d9cd9ed3 gallium: Fix the ->set_damage_region() implementation
  * 0ca8b506a46 radv: Fix timeline semaphore refcounting.
  * a2606453450 winsys/amdgpu: avoid double simple_mtx_unlock()
  * 5ba4fb857d8 radv: Unify max_descriptor_set_size.
  * 553de940de8 drirc: Set vs_position_always_invariant for Shadow of
    Mordor on Intel
  * f63c3ecaa07 driconf, glsl: Add a vs_position_always_invariant option
  * d438ccdedf9 radv/gfx10: fix implementation of exclusive scans
  * 19573e43745 radv: fix enabling sample shading with
    SampleID/SamplePosition

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 04 Dec 2019 23:38:49 +0100

mesa (19.3.0~rc5~git1911270907.5a12bc6454a~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5a12bc6454a VERSION: Bump version for -rc5
  * 14acf6fc3d1 meson: Fix linkage of libgallium_nine with libgalliumvl
  * 06a95a06e84 radv: Allocate cmdbuffer space for buffer marker write.
  * 2e8af7b3e0a r600: Disable eight bit three channel formats
  * 5b9decf632f radv: create a fresh fork for each pipeline compile
  * 0b0c500ad12 radv: add a secure_compile_open_fifo_fds() helper
  * 093deac71f5 radv: add some infrastructure for fresh forks for each
    secure compile
  * ba9f8e0fee0 Revert "draw: revert using correct order for prim
    decomposition."
  * 85b0bb51443 intel/fs: Disable conditional discard optimization on
    Gen4 and Gen5
  * 9cd69861f82 glsl: Enable textureSize for samplerExternalOES
  * c694d3c5ca1 llvmpipe/ppc: fix if/ifdef confusion in backport.
  * 6477084c1af freedreno/ir3: fix printing output registers of FS.
  * 37ded70630b v3d: adds an extra MOV for any sig.ld*
  * 9d1b1968bfc v3d: Fix predication with atomic image operations
  * 79521963ab2 radv: Do not change scratch settings while shaders are
    active.
  * abccd999efa vulkan: delete typo'd header

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 27 Nov 2019 18:57:38 +0100

mesa (19.3.0~rc4~git1911200925.cd736de7aa6~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * cd736de7aa6 VERSION: bump for 19.3.0-rc4
  * b7ab6e9470d anv: Stop bounds-checking pushed UBOs
  * addf63dbd79 Call shmget() with permission 0600 instead of 0777
  * 2b4459973b8 Revert "freedreno/ir3: enable pre-fs texture fetch for
    a6xx"
  * 48f8f0edca0 i965: Unify CC_STATE and BLEND_STATE atoms on Haswell as
    a workaround
  * 3b8461cf162 freedreno/registers: fix a6xx_2d_blit_cntl ROTATE
  * 79610494f9d freedreno/ir3: disable texture prefetch for 1d array
    textures
  * 32aba91c07f llvmpipe: use ppc64le/ppc64 Large code model for JIT-
    compiled shaders
  * 35182247fc1 aco: fix 64-bit fsign with 0
  * ab4df0ec726 aco: don't combine literals into
    v_cndmask_b32/v_subb/v_addc
  * 37d13ecca7c cherry-ignore: update for 19.3.0-rc4 cycle
  * a3d52fd4ab8 Revert "dri_interface: add interface for
    EGL_EXT_image_flush_external"
  * 36fbe5b292b Revert "st/dri: assume external consumers of back
    buffers can write to the buffers"
  * 9445d96d5cc Revert "st/dri: add support for
    EGL_EXT_image_flush_external"
  * 5cd8c67a7f8 Revert "egl: handle EGL_IMAGE_EXTERNAL_FLUSH_EXT"
  * d7c0a1d3d47 Revert "egl: implement new functions from
    EGL_EXT_image_flush_external"
  * 7c61e5192fa intel/compiler: fix nir_op_{i,u}*32 on ICL
  * f393c923454 anv: Initialize depth_bounds_test_enable when not
    explicitly set
  * 4fbe772b237 nir/algebraic: Mark other comparison exact when removing
    a == a
  * 17ad67c6dcc nir/algebraic: Add the ability to mark a replacement as
    exact
  * 61366cdf055 freedreno/ir3: fix gpu hang with pre-fs-tex-fetch
  * 001e7305abc aco: don't propagate vgprs into v_readlane/v_writelane
  * 1b8f93550af aco: fix read_invocation with VGPR lane index
  * 992bff94f7a aco: fix shuffle with uniform operands
  * 51a15eabe6f aco: preserve kill flag on moved operands during RA
  * f3c0d5aa3a2 aco: fix invalid access on Pseudo_instructions
  * 512ed9899a9 st/mesa: fix Sanctuary and Tropics by disabling
    ARB_gpu_shader5 for them
  * 35c196025b7 anv/wsi: signal the semaphore in the acquireNextImage
  * 4910128baba anv: remove list items on batch fini
  * 14c8323774a anv: invalidate file descriptor of semaphore sync fd at
    vkQueueSubmit

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 20 Nov 2019 19:55:17 +0100

mesa (19.3.0~rc3~git1911131117.3d9c678772d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 3d9c678772d Bump version for -rc3
  * bb08c0f04db cherry-ignore: Update for 19.3-rc3 cycle
  * 3c1b3656b9e egl: fix _EGL_NATIVE_PLATFORM fallback
  * 05be7259233 zink: correct depth-stencil format
  * 8608c460d17 spirv: Don't leak GS initialization to other stages
  * 2f66f619c8e ac: Handle invalid GFX10 format correctly in
    ac_get_tbuffer_format.
  * 2bd7416823e Meson: Remove lib prefix from graw and osmesa when
    building with Mingw. Also remove version sufix from osmesa swrast on
    Windows.
  * 0aef18324a3 aco: workaround Tonga/Iceland hardware bug
  * 3211308e883 gallium: dri2: Use index as plane number.
  * f7d76ad80e7 zink: disable fragment-shader texture-lod
  * 52005416a02 zink: make sure src image is transfer-src-optimal
  * 0b670a919ce zink: do not advertize coherent mapping
  * b90f5a9ea02 zink: always allow mutating the format
  * 2ea5038045d zink: use actual format for render-pass
  * 5ca2bb392fd freedreno/a6xx: Disable geometry shaders for release
  * 01f6321c093 radeonsi: fix shader disk cache key

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 14 Nov 2019 15:08:58 +0100

mesa (19.3.0~rc2~git1911060908.15342abc5ba~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 15342abc5ba Bump VERSION to 19.3.0-rc2
  * 08501e77af5 meson: Add dep_glvnd to egl deps when building with
    glvnd
  * 49af89a0b98 intel/compiler: remove the operand restriction for src1
    on GLK
  * dd4b73ad380 aco: fix accidential reordering of instructions when
    scheduling
  * a8faeff399f aco: only use single-dword loads/stores for spilling
  * 0d846243a02 aco: fix immediate offset for spills if scratch is used
  * bc5357bf336 anv: Properly handle host query reset of performance
    queries
  * 5cee7ad873d iris: Fix "Force Zero RTA Index Enable" setting again
  * 184d39301d9 nir: correct use of identity check in python
  * 9bca129bb4c radv: fix compute pipeline keys when optimizations are
    disabled
  * 6daaf66f662 mesa: check draw buffer completeness on
    glClearBufferfi/glClearBufferiv
  * 4d21f802b56 radv: Close all unnecessary fds in secure compile.
  * 090469173cc docs/relnotes/new_features.txt: Add note about ACO
  * 59bc14186ec gallium/swr: Fix depth values for blit scenario
  * 5032575b949 zink: emit line-width when using polygon line-mode
  * b981ca4d7ec pipe-loader: Build kmsro loader for with all kmsro
    targets
  * 3544a01121c anv: Set the batch allocator for compute pipelines
  * bb9d1ed2bd4 anv/tests: Zero-initialize instances
  * 5f8e0c715ef anv: Fix a potential BO handle leak
  * f0104d8fefe mesa: enable msaa in clear_with_quad if needed
  * cb66ea7780f radv: Fix disk_cache_get size argument.
  * 75886fafaad anv: Remove _mesa_locale_init/fini calls.
  * b3fd30921a2 turnip: Remove _mesa_locale_init/fini calls.
  * ea886e49be9 radv: Remove _mesa_locale_init/fini calls.
  * 307e5cc8fd7 radeonsi: tell the shader disk cache what IR is used
  * 0b8836cb23b android: aco: fix Lower to CSSA
  * 39e9739a3b2 iris/gen11+: Move flush for render target change
  * de705da8a63 iris: Add IRIS_DIRTY_RENDER_BUFFER state flag
  * 640747a2980 intel/compiler: Report the number of non-spill/fill SEND
    messages on vec4 too
  * 9df47634403 radv: Fix timeout handling in syncobj wait.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 06 Nov 2019 19:35:07 +0100

mesa (19.3.0~rc1~git1910301458.20512e9ddb4~b~0) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 31 Oct 2019 23:05:33 +0100

mesa (19.3.0~git1910301449.5a9d777f5ac~b~mesaaco1) bionic; urgency=medium

  * Refresh ACO by default patch
  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 30 Oct 2019 17:06:02 +0100

mesa (19.3.0~git1910301449.5a9d777f5ac~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 5a9d777f5ac radv: fix perftest options
  * c895e082813 radv: move nomemorycache debug option at the right palce
  * d4e0bef1bbb radv: fix dumping SPIR-V into hang reports
  * 4f8c86e6a58 mesa: enable ARB_gpu_shader_int64 in compat profile
  * 2d8b8d3bd1c mesa: add [Program]Uniform*64ARB display list support
  * 396195e8f1a radv: Enable VK_KHR_timeline_semaphore.
  * 4aa75bb3bdd radv: Add wait-before-submit support for timelines.
  * 88d41367b8a radv: Add timelines with a VK_KHR_timeline_semaphore
    impl.
  * 2117c53b723 radv: Add temporary datastructure for submissions.
  * c3eae659e7b radv: Split semaphore into two parts as enum+union.
  * 84d9551b232 radv: Always enable syncobj when supported for all
    fences/semaphores.
  * 45f4a639a87 radv: Improve fence signalling in QueueSubmit.
  * a9c8424e083 radv: Do sparse binding in queue submission.
  * 915e9178faf radv: Split out commandbuffer submission.
  * 43ba44357c4 radv: Clean up unused variable.
  * 2e3a635ee69 radv: Add an early exit in the secure compile if we
    already have the cache entries.
  * d78809632f5 radv: Compute hashes in secure process for secure
    compilation.
  * 4c4ac2d4d51 zink: drop nop descriptor-updates
  * b222f28357c zink: use bitfield for dirty flagging
  * 6d30abb4f14 zink: use dynamic state for line-width
  * d2bb63c8d4c zink: Use optimal layout instead of general. Reduces
    valid layer warnings. Fixes RADV image noise.
  * aaf1b092706 gitlab-ci: Disable meson-windows job for the time being
  * cf256646864 radv: make use of radv_sc_read()
  * 28fff3efbcb radv: add radv_sc_read() helper
  * 23a6827e4d9 radv: allow select() calls in secure compile
  * 1abf05764ba mapi: Improve the x86 tsd stubs performance.
  * 41407d5e9fc mapi: Inline call x86_current_tls.
  * b2b8639d8e9 mapi: Clean up entry_patch_public for x86 tls
  * 1fb75bee90d mapi: split entry_generate_or_patch for x86 tls
  * 45206d7673a mapi: Adapted libglvnd x86 tsd changes

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 30 Oct 2019 16:46:20 +0100

mesa (19.3.0~git1910291605.f9ad73cdfd2~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * f9ad73cdfd2 anv: Set depthBounds to true in
    anv_GetPhysicalDeviceFeatures.
  * e6c87502785 genxml: Change 3DSTATE_DEPTH_BOUNDS bias.
  * 2a38fc1027e gitlab-ci: Only run the pipeline if any files affecting
    it have changed
  * 163d5fde066 gallium/swr: Enable GL_ARB_gpu_shader5: multiple streams
  * 44971b84b70 panfrost: Remove unused definitions in mali-job.h
  * fa14cdf6e48 panfrost: Cleanup _shader_upper -> shader
  * b4f508ab599 meson: define _GNU_SOURCE on FreeBSD
  * 1a2246a5e08 intel/perf: update ICL configurations
  * 1257d06ba74 gitlab-ci: Update required libdrm version
  * 690d359b6f4 travis: fix scons build after deprecation warning
  * e2155158e99 anv: Fix output of INTEL_DEBUG=bat for chained batches
  * f9fe86e02ad winsys/amdgpu: use the new GPU reset query
  * 9edcce2a32e ac: get tcc_harvested from the kernel
  * 4d1e43badb9 radeonsi: initialize shader compilers in threads on
    demand
  * 1380db9fa8d radeonsi: don't print diagnostic LLVM remarks and notes
  * c52ebbcea4f aco: Introduce vgpr_limit to keep track of available
    VGPRs.
  * d59f702e268 aco: Implement subgroup shuffle in GFX10 wave64 mode.
  * c2eebfe3eaa aco: Remove dead code in reduction lowering.
  * 3865448012b aco: Fix reductions on GFX10.
  * cd04b63c000 loader: default to iris for all future PCI IDs
  * ea8116908ce anv: add a couple printflike() annotations
  * 21b7f79a769 st/mesa: lower global vars to local after lowering clip

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 29 Oct 2019 17:28:11 +0100

mesa (19.3.0~git1910281402.3ac688b0c2e~b~mesaaco0) bionic; urgency=medium

  * Switch to master git, github no longer updated
  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 28 Oct 2019 22:46:09 +0100

mesa (19.3.0~git1910171521.fe930ad92ab~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * fe930ad92ab aco: don't combine minmax3 if there is a neg or abs
    modifier in between
  * 2f23d925b86 aco: ensure that uniform booleans are computed in WQM if
    their uses happen in WQM

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 19 Oct 2019 18:09:37 +0200

mesa (19.3.0~git1910102044.1b2cbc98c39~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 1b2cbc98c39 aco: rework scratch resource code

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 11 Oct 2019 06:30:02 +0200

mesa (19.3.0~git1910091656.246f50f2c13~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 246f50f2c13 aco: move s_andn2_b64 instructions out of the
    p_discard_if

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 10 Oct 2019 00:38:01 +0200

mesa (19.3.0~git1910091656.246f50f2c13~b~mesaaco3) bionic; urgency=medium

  * New snapshot:
  * 246f50f2c13 aco: move s_andn2_b64 instructions out of the
    p_discard_if

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 10 Oct 2019 00:36:36 +0200

mesa (19.3.0~git1910042348.6c3bad5214b~b~mesaaco3) bionic; urgency=medium

  * Add egl.pc again
  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 07 Oct 2019 23:38:18 +0200

mesa (19.3.0~git1909191901.b738bf06917~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * b738bf06917 aco: only emit waitcnt on loop continues if we there was
    some load or export
  * 75f6ade9cbc radv/aco: enable ACO by default
  * f5071f82b79 Update issue templates
  * 9bb418b0155 temporary workarounds
  * 61b43581004 nir/constant_folding: fold load_constant intrinsics
  * c5b5e26952e aco: enable nir_opt_sink
  * 77d431501e6 nir/sink: don't sink load_ubo to outside of it's
    defining loop
  * 5ef540b437b nir/sink: handle uses outside the defining loop but
    within another loop
  * e79c8423d52 aco: enable load/store vectorizer
  * 821261c6a6f nir: add load/store vectorizer tests
  * b6f4fbe4096 nir: add a load/store vectorization pass
  * 9c835306ab7 nir: tighten nir_var_all
  * f061fe140c0 nir: add nir_num_variable_modes and
    nir_var_mem_push_const
  * 68297b2badd aco: use nir_lower_idiv_llvm
  * b0cd78f1ea3 nir/lower_idiv: add new llvm-based path
  * 8cc77978f6c radv/aco: disable lower_sub
  * 88526ecc6d3 nir: allow for isub and fsub in loop_analyze
  * 5ed5e76741b nir/algebraic: refactor inexact opcode restrictions
  * 5b5c5bf8335 docs: Update bug report URLs for the gitlab migration
  * ec76232785f glx: Remove redundant null check.
  * 706c9f2d607 iris: Skip double-disabling TCS/TES/GS after BLORP
    operations
  * 7f7060dc739 .mailmap: add an alias for Frank Binns
  * c1b1e0e875a .mailmap: add an alias for Bas Nieuwenhuizen
  * 5ec5fecc26d anv: fix descriptor limits on gen8
  * 8b78cce433b radv: remove dead shared variables
  * 281262281b7 radv/aco: enable
    VK_EXT_shader_demote_to_helper_invocation
  * e01b522a72a radv: enable clustered reductions
  * a70a9987181 radv/aco: Setup alternate path in RADV to support the
    experimental ACO compiler
  * 93c8ebfa780 aco: Initial commit of independent AMD compiler
  * 99cbec0a5f4 egl: check for NULL value like eglGetSyncAttribKHR does

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sun, 22 Sep 2019 11:34:15 +0200

mesa (19.3.0~git1909171715.374999ecfdf~b~mesaaco2) bionic; urgency=medium

  * New snapshot:
  * 374999ecfdf aco: fix compilation on some GCC versions/flags

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 17 Sep 2019 21:27:07 +0200

mesa (19.3.0~git1909161937.42225d73ef4~b~mesaaco2) bionic; urgency=medium

  * Change to llvm-9
  * New snapshot:
  * 42225d73ef4 amd/compiler: fix dump_shaders when record_llvm_ir=false
    on debug builds
  * 1940965ed12 amd/compiler: lower ALU to scalar after lowering shared
    derefs
  * 7b8bc0d2639 amd/compiler: disallow constant propagation to
    p_extract_vector
  * 2b1ac059019 amd/compiler: fix copy+paste errors
  * 7d1c5cf5753 amd/compiler: rework phi scratch register code
  * bac6c14fdff amd/compiler: remove trivial phis before finding scc
    spill registers
  * 8a96aa03d2e amd/compiler: fix sgpr_live_out
  * 4eb3121b86e amd/compiler: reset ostream settings after printing asm
  * 835eaafc88b amd/compiler: reset positioning of fill characters
  * a28c5d69b7e amd/compiler: don't apply two literals to SALU
  * 5e92f5b88d3 Update issue templates
  * 37695f32290 temporary workarounds
  * 2c20e79e980 nir/constant_folding: fold load_constant intrinsics
  * 7431f26aeca amd/compiler: implement load_constant using s_getpc_b64
  * 4583a0a09ab amd/compiler: deduplicate code between
    load_ubo/load_ssbo
  * 3341a3fc472 amd/compiler: cleanup after rebase
  * c57de85c9e4 amd/compiler: fix compilation after rebase
  * 52f8070b65c radv: finish removing RADV_PERFTEST=llvmvs
  * 658f64c5c91 amd/compiler: fix compilation with release builds
  * 9ed9022a2c9 amd/compiler,radv: prepare for merged stages
  * c1dc9d0324c amd/compiler: switch to more detailed stage enum
  * c7a81cae853 amd/compiler: combine reg_class and allocated
  * 96f4f4df0bb amd/compiler: don't print disasm twice
  * 1b0102a147a amd/compiler: spare two VGPRs when scheduling for less
    live-range splits
  * debf1c0c8a2 amd/compiler: remove Export_instruction::waitcnt_ignore
  * 2141f987f17 amd/compiler: store block index in SOPP instructions
  * 7452cad1c15 amd/compiler: don't emit pointless discard early exits
  * 9e179200371 amd/compiler: add missing regclass check
  * 2c037088f52 amd/compiler: have discards jump to a block instead of
    over instructions
  * e0c5cc0e768 radv: actually disable ACO on unsupported GPUs

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 16 Sep 2019 22:05:43 +0200

mesa (19.3.0~git1908301754.f2bed9b344c~b~mesaaco1) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 05 Sep 2019 05:12:59 +0200

mesa (19.3.0~git1908301754.f2bed9b344c~b~mesaaco0) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 05 Sep 2019 05:11:52 +0200

mesa (19.3.0~git1908301754.f2bed9b344c~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * f2bed9b344c Update issue templates
  * 7e5756a4a67 temporary workarounds
  * c0be725e28b radv: finish removing RADV_PERFTEST=llvmvs
  * 91dd2390693 amd/compiler: fix compilation with release builds
  * 984d9736997 amd/compiler,radv: prepare for merged stages
  * 6cebde38c08 amd/compiler: switch to more detailed stage enum
  * 9ef7b244eb2 amd/compiler: combine reg_class and allocated
  * dea903fad69 amd/compiler: don't print disasm twice
  * d622dfd1450 amd/compiler: spare two VGPRs when scheduling for less
    live-range splits
  * 6b16591a527 amd/compiler: remove Export_instruction::waitcnt_ignore
  * b96db540d18 amd/compiler: store block index in SOPP instructions
  * c8c0e48fe9a amd/compiler: don't emit pointless discard early exits
  * 85eb76c8fac amd/compiler: add missing regclass check
  * 95a683b52a3 amd/compiler: have discards jump to a block instead of
    over instructions
  * 4cc14c32e82 radv: actually disable ACO on unsupported GPUs
  * 9a5c93826a0 amd/compiler: misc print_ir cleanups, fixes and
    additions
  * 48eedbf5ff2 amd/compiler: use s_bfm_b32 to load some constants
  * d9a9273b0c7 amd/compiler: use v_bfrev_b32/s_brev_b32 to load some
    constants
  * 82e6585966c amd/compiler: fix constant propagation from s_movk_i32
  * 9f020a642d3 amd/compiler: use Builder more
  * bc888c30b6d radv: initialize LLVM for ACO if disassembly is needed
  * 5a04765b2e7 radv: move decision whether to use ACO or LLVM to
    radv_create_shaders()
  * 3854c776713 amd/compiler: fix
    nir_intrinsic_image_deref_atomic_{min|max} after rebase
  * 66da8ca98ce amd/compiler: only handle SCC for pseudo instructions
    which write to SGPR
  * aa804e650b6 amd/compiler: fix Instruction class of some
    p_create_vector pseudo instructions
  * 771849020b5 amd/compiler: fix RegClass of reduction operations
  * 60bcbcbe6a8 amd/compiler: Fix boolean quad swaps
  * 0062f4da958 amd/compiler: fix tg4 instruction temp regClass
  * 30aab7e49fc amd/compiler: fix lcssa & divergence function calls
    after rebase
  * a1d3204b1f6 amd/compiler: work around SGPR init bug for Iceland
    family

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 31 Aug 2019 13:14:36 +0200

mesa (19.3.0~git1908251522.db73bde35cc~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * db73bde35cc Update issue templates

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 26 Aug 2019 22:54:31 +0200

mesa (19.3.0~git1908221134.fc0fdb637b4~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * fc0fdb637b4 amd/compiler: only handle SCC for pseudo instructions
    which write to SGPR
  * b928c8306d3 amd/compiler: fix Instruction class of some
    p_create_vector pseudo instructions
  * 2f8ffc7b4b2 amd/compiler: fix RegClass of reduction operations
  * 1797f68263d amd/compiler: Fix boolean quad swaps
  * bfeeb9ff56f amd/compiler: fix tg4 instruction temp regClass
  * 4c70c31074a amd/compiler: fix lcssa & divergence function calls
    after rebase
  * 0f33ed0e3ca amd/compiler: work around SGPR init bug for Iceland
    family
  * 427291fb223 amd/compiler: update remat_use_count for some loop
    header phis
  * e4f2574e919 amd/compiler: fix scratch on compute
  * afa5fc5d9ce amd/compiler: misc _setup.cpp fixes regarding scratch
  * b67b5d96a1c amd/compiler: remove many undef checks
  * 97112598d80 amd/compiler: get rid of most undefs
  * a5a3e39eea1 amd/compiler: use a constant for v_interp_mov_f32
  * 48821e67675 radv: remove dead shared variables
  * 6c5f250637c amd/compiler: workaround LLVM disassembler erroring on
    v_add_u32+clamp
  * 2f70dffd6b2 amd/compiler: set const_element_size = 16 bytes for
    swizzled scratch accesses
  * 79a09291a43 amd/compiler: set scratch_size_per_wave
  * 699174c1ad8 amd/compiler: Fix jump-threading of helper blocks after
    break/continue
  * d1b14bffd57 amd/compiler: clean up the type size stuff in _setup.cpp
  * 9e324dd9941 amd/compiler: fix compilation with c++14
  * 025db3b4e0f amd/compiler: Use an enum class for RegType
  * 2b47f20a914 amd/compiler: don't execute subgroup operations in WQM
    if it is not required
  * c7ecb41675a nir/sink: handle uses outside the defining loop but
    within another loop
  * 2f17b4e7252 amd/compiler: make Definition more compact
  * 1f2cedaa883 amd/compiler: make Operand more compact
  * 2ab3e850280 amd/compiler: make Temp more compact
  * 748fad9d652 amd/compiler: use s_mul_hi_u32/s_mul_hi_i32
  * 545b398ce28 amd/compiler: be more careful scheduling spill/reload
    instructions
  * 78ee46bea4d amd/compiler: consider DPP/SDWA when applying literals
  * 13eb3cc19f7 amd/compiler: fix copy+paste errors in waitcnt pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 24 Aug 2019 18:48:41 +0200

mesa (19.2.0~git1908211454.a952333d50d~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * a952333d50d amd/compiler: fix tg4 instruction temp regClass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 21 Aug 2019 16:57:11 +0200

mesa (19.2.0~git1908201459.9b18c4e3df0~b~mesaaco0) bionic; urgency=medium

  * New snapshot:
  * 9b18c4e3df0 amd/compiler: work around SGPR init bug for Iceland
    family
  * 62b2e2c3467 amd/compiler: update remat_use_count for some loop
    header phis

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 20 Aug 2019 18:00:50 +0200

mesa (19.2.0~git1908192010.81fac59f8c0~b~mesarc0) bionic; urgency=medium

  * New snapshot:
  * 81fac59f8c0 amd/compiler: fix scratch on compute
  * 738b81e8d45 amd/compiler: misc _setup.cpp fixes regarding scratch
  * 6fb87e024c9 amd/compiler: workaround LLVM disassembler erroring on
    v_add_u32+clamp
  * f6829fef242 amd/compiler: set const_element_size = 16 bytes for
    swizzled scratch accesses
  * 29058402777 amd/compiler: set scratch_size_per_wave
  * 650031018b4 amd/compiler: Fix jump-threading of helper blocks after
    break/continue
  * 420bc51b5f4 amd/compiler: fix compilation with c++14
  * a0a7fa7531b Revert "radv: Do not decompress on LAYOUT_GENERAL."
  * 597ea285541 amd/compiler: Use an enum class for RegType
  * 56db3b3eef9 amd/compiler: don't execute subgroup operations in WQM
    if it is not required
  * 9c26d227b81 nir/sink: handle uses outside the defining loop but
    within another loop
  * 30574bba376 amd/compiler: be more careful scheduling spill/reload
    instructions
  * 7d6ab5e165e amd/compiler: consider DPP/SDWA when applying literals
  * aba8c9f0c7b temporary workarounds
  * 54ece766654 amd/compiler: fix copy+paste errors in waitcnt pass

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 20 Aug 2019 02:54:55 +0200

mesa (19.2.0~git1908141454.73c5a984ab5~b~mesarc0) bionic; urgency=medium

  * New snapshot:
  * 73c5a984ab5 amd/compiler: don't eliminate phis for EXEC if they are
    necessary
  * 32cd9487f45 Update issue templates
  * e3bb1cc46bd amd/compiler: rework waitcnt insertion pass
  * b9fe0048d33 amd/compiler: document VCCZ/SMEM hardware bug on SI/CI
  * 21ce4e7a99f amd/compiler: further fixup after rebase
  * b354a9c38d8 amd/compiler: add missing scc clobber
  * 6eea4986a1d amd/compiler: improve MUBUF offset optimization with
    literals
  * a687537fe4e amd/compiler: implement
    nir_intrinsic_{load|store}_scratch
  * 567b942d05c nir: add nir_intrinsic_load_scratch to divergence
    analysis
  * 00a75a66f05 amd/compiler: fixup after rebase
  * 75ebd8a03d3 amd/compiler: Use range based loops and algorithms for
    Instruction::definitions
  * c23767137a2 amd/compiler: Use range based loops for
    Instruction::operations
  * 8eee7a9c069 amd/compiler: Use aco::span for definitions and
    operations of an instruction
  * dc818201df7 amd/compiler: Introduce a span object
  * d810a418510 amd/compiler: ensure loops complete when nested in
    Unspecified branches
  * 1b865e46517 amd/compiler: refactor uses_gpr()
  * 90b8d884ea2 amd/compiler: Fix waitcnt_entries for lgkm
  * b23b2c1f5c0 amd/compiler: remove various TODOs in isel
  * 1ed0a761ce9 amd/compiler: remove constant offset optimization in
    visit_load_ubo()
  * 5229c587573 nir/load_store_vectorize: assume explicitly laid out
    types
  * 177d686e5cb amd/compiler: RA: don't check triviality of phis if
    already done or the block is not sealed
  * 0a5c4d91fbd amd/compiler: set loops to WQM if any nested IF needs
    WQM
  * 628020f7c9c amd/compiler: update README
  * 16d46584382 nir/lcssa,amd/compiler: always create lcssa phis for
    loop-invariant bools
  * 69e886f30fc amd/compiler: remove incorrect boolean-phi optimization
  * 375a6a8b01e amd/compiler: move nir_to_lcssa() later
  * 930637aecd2 fix compilation after rebase
  * f88511be3ab nir: update to latest nir lower_io_to_vector MR
  * 433e61c899b nir: update to latest nir_opt_load_store_vectorize MR
  * b8f8ebdfd09 nir,amd/compiler: update to latest nir_lower_idiv MR

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 14 Aug 2019 22:20:01 +0200

mesa (19.2.0~git1908071710.3b777a1dd7e~b~mesarc0) bionic; urgency=medium

  * New snapshot:
  * 3b777a1dd7e amd/compiler: Fix waitcnt_entries for lgkm

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 08 Aug 2019 14:21:46 +0200

mesa (19.2.0~git1908051748.70bb3c0becd~b~mesarc0) bionic; urgency=medium

  * New snapshot:
  * 70bb3c0becd nir/lcssa,amd/compiler: always create lcssa phis for
    loop-invariant bools
  * 40415564cf7 amd/compiler: remove incorrect boolean-phi optimization
  * 26b6cc3b31f amd/compiler: move nir_to_lcssa() later
  * cad7efa469a amd/compiler: set loops to WQM if any nested IF needs
    WQM
  * 8f5ac45a1a4 Update issue templates
  * 1043e92a395 fix compilation after rebase
  * 62b82b237d9 nir: update to latest nir lower_io_to_vector MR
  * e1c7c2ddcc3 nir,amd/compiler: update to latest
    nir_lower_io_to_explicit MR
  * 40ab0e84d95 nir: update to latest nir_opt_load_store_vectorize MR
  * 0d6d2ff0c13 nir,amd/compiler: update to latest nir_lower_idiv MR
  * 7c5a352f6da amd/compiler: trim number of maintained exec masks in
    top-level loops to at most 2
  * 994dc8eefdc amd/compiler: fix NOP insertion between M0 writes and
    VINTRP
  * 4f6d659efb3 amd/compiler: emit breaks for more discards in loops
  * 5eda909f9c7 amd/compiler: ensure loops with discards exit
  * f45a6504a27 amd/compiler: fix combined break+discard blocks
  * 2f0a273c853 amd/compiler: don't fix WQM operand to exec
  * 83c970b6c7f amd/compiler: fix NOP after 3+ dword VMEM store
  * 748101ec11b amd/compiler: enable shader_ballot by default for ACO
  * 47b9989dcb4 nir/algebraic: turn (a+#b)<<#c into (a<<c)+(b<<c)
  * cc527e6f643 amd/compiler: optimize multiplication by one
  * 8bea0e80557 amd/compiler: move comparisons to their uses
  * f900fb0ab3e nir: merge opt_move_comparisons and move_load_ubo and
    extend opt_sink
  * 2400d6a766f amd/compiler: add position export scheduler
  * 822fdbc7342 amd/compiler: implement transform feedback
  * f7086c30f40 amd/compiler: split out divergent if code in visit_if()
    into helpers
  * 58710a9f7e3 amd/compiler: initial vertex shader support
  * bf455af1c83 nir: add various VS intrinsics to divergence analysis
  * 23c75af145e amd/compiler: use war_hint for VMEM stores on pre-GFX8
  * c056bf47467 amd/compiler: don't add waitcnts when VMEM write data is
    used or on GFX8+
  * bccd79eee44 nir/algebraic: add a few masking-before-unpack
    optimizations

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 05 Aug 2019 20:48:03 +0200

mesa (19.2.0~git1908012232.fbaabd839e8~b~mesarc2) bionic; urgency=medium

  * New snapshot:
  * fbaabd839e8 amd/compiler: ensure loops with discards exit
  * 613a8082bb6 amd/compiler: fix combined break+discard blocks
  * 2d096ea935b amd/compiler: don't fix WQM operand to exec
  * b2bb91dcccf amd/compiler: fix NOP after 3+ dword VMEM store

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 02 Aug 2019 03:54:36 +0200

mesa (19.2.0~git1907292153.5c6077221dd~b~mesarc2) bionic; urgency=medium

  * New snapshot:

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 01 Aug 2019 00:36:50 +0200

mesa (19.2.0~git1907292153.5c6077221dd~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 5c6077221dd Update issue templates
  * a1c84be3133 Add DOOM app profile
  * 8d199b9a888 nir/algebraic: turn (a+#b)<<#c into (a<<c)+(b<<c)
  * 9fca550ae63 amd/compiler: optimize multiplication by one
  * 1f8a8125e65 amd/compiler: move comparisons to their uses
  * 5d51c40074a nir: merge opt_move_comparisons and move_load_ubo and
    extend opt_sink
  * aea96eb4afe amd/compiler: add position export scheduler
  * 56d0d1f704f amd/compiler: implement transform feedback
  * 3aa21e7c38a amd/compiler: split out divergent if code in visit_if()
    into helpers
  * d7c7cce7615 amd/compiler: initial vertex shader support

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 31 Jul 2019 15:51:42 +0200

mesa (19.2.0~git1907291609.9bdc04c3811~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 9bdc04c3811 amd/compiler: fix txf_ms with an offset
  * 4a6a40930f9 ac/nir: fix txf_ms with an offset

 -- Ernst Sjöstrand <ernstp@gmail.com>  Mon, 29 Jul 2019 18:44:25 +0200

mesa (19.2.0~git1907251230.58e0420cb35~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 58e0420cb35 amd/compiler: fix assertion in aco_insert_exec_mask
  * f7b925a4029 amd/compiler: disable
    VK_EXT_shader_demote_to_helper_invocation temporary because of a
    hang in PoE

 -- Ernst Sjöstrand <ernstp@gmail.com>  Thu, 25 Jul 2019 12:59:00 +0200

mesa (19.2.0~git1907231419.17d9490cef1~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 17d9490cef1 amd/compiler: fix texture offsets
  * c9897e7a781 Update issue templates
  * d5dbdc8ee86 Add DOOM app profile
  * f9b38efdda1 amd/compiler: enable int64_atomics capability for ACO
  * 721477d1e3a amd/compiler: implement 64bit atomic_ssbo
  * 7bc5d18ca0c nir/lower_io_to_vector: update to v3
  * 19de84cb5b6 amd/compiler: disable int8_float16 device feature
  * 99f9e3dc372 amd/compiler: enable shaderFloat64
  * 2cbed4c245e amd/compiler: implement remaining shaderFloat64
    instructions
  * 39de1211353 amd/compiler: implement
    VK_EXT_shader_demote_to_helper_invocation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 23 Jul 2019 16:47:52 +0200

mesa (19.2.0~git1907191421.3f3665b8d52~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 3f3665b8d52 nir/lower_io_to_vector: update to v3
  * a60c3076062 amd/compiler: preserve omod_success/clamp_success in
    some combining opts
  * 6628a16a9b4 amd/compiler: remove potentially incorrect optimization
  * 5031ab774a6 Update issue templates
  * 0c473a421aa amd/compiler: Fix RA for shader with more than 32 input
    variables
  * 1d9a46843ff amd/compiler: implement stencil writes when depth writes
    are also done
  * a50d59e3f9d amd/compiler: fix v_add_lshl_u32 optimization to only
    consider the second operand
  * 7157929d52c add Github issue template
  * 6240f934f57 Add DOOM app profile
  * 6f5cef467ff amd/compiler: fix RADV_DEBUG=compiletime

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 20 Jul 2019 17:23:12 +0200

mesa (19.2.0~git1907191421.3f3665b8d52~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 3f3665b8d52 nir/lower_io_to_vector: update to v3
  * a60c3076062 amd/compiler: preserve omod_success/clamp_success in
    some combining opts
  * 6628a16a9b4 amd/compiler: remove potentially incorrect optimization
  * 5031ab774a6 Update issue templates
  * 0c473a421aa amd/compiler: Fix RA for shader with more than 32 input
    variables
  * 1d9a46843ff amd/compiler: implement stencil writes when depth writes
    are also done
  * a50d59e3f9d amd/compiler: fix v_add_lshl_u32 optimization to only
    consider the second operand
  * 7157929d52c add Github issue template
  * 6240f934f57 Add DOOM app profile
  * 6f5cef467ff amd/compiler: fix RADV_DEBUG=compiletime
  * 0e2241145ac amd/compiler: allow p_wqm to take a sgpr
  * 8b446e71548 amd/compiler: Don't emit unnecessary split- &
    create_vector instructions for load_shared
  * 196fe3fd91b amd/compiler: don't propagate VGPR operands into
    p_linear_phi
  * 9d29e77ff5e amd/compiler: split vectors only locally if it is not
    safe to reuse the result
  * e7117737c52 amd/compiler: move upper half of 64bit iadd/isub
    operands to VGPR
  * 2078a8bf3f3 amd/compiler: implement nir_op_{f2f32,u2f64,i2f64}
  * c2978f65f7d amd/compiler: remove wrong assertion in ssa_elimination
  * 8c6ebf61d7a amd/compiler: set exec mask always to zero on discard()
  * 6aa313c904c amd/compiler: fix register file restoration when
    get_regs_for_copies fails
  * 465d1fe3b0f amd/compiler: recover from failed live-range splitting
    while register allocation
  * 6f5e73ca6ff amd/compiler: correctly apply input modifiers to DPP
    instructions
  * e57976fedea amd/compiler: handle fixed register definitions before
    assigning registers for other definitions
  * 3cf9454e583 amd/compiler: handle swizzled vector alu sources
  * d6916a69500 amd/compiler: correctly handle p_extract_vector with
    vector definition
  * 1f6010dd013 amd/compiler: remove killed phi sgpr-operands from live
    vars between p_logical_end and block end.
  * a34cf700907 amd/compiler: add missing scc clobbers
  * 574fda19c06 amd/compiler: update ctx.spills_exit even if the block
    isn't processed
  * 48fc73f325f amd/compiler: update ctx.remat_use_count after renaming
  * b8308f9079e amd/compiler: remove partially spilled vars after adding
    to spills_entry
  * 024a5b3cd9e amd/compiler: update phi operand after reloading
  * ea5bdb1cda9 amd/compiler: fix uniform b2i32 with s2 src.
  * 5f98621a3ea amd/compiler: set level_zero for negative levels
  * 1dde704358c amd/compiler: re-enable definitions after disabling
    killed operands
  * 604ab1c3f60 amd/compiler: update block->{s,v}gpr_demand later
  * 5f3d09426e5 amd/compiler: wrap v_{sin,cos}_f32 inputs on pre-GFX9
  * fabeea5da2d amd/compiler: fix phi reassignment
  * f918de3dc07 amd/compiler: fix early-exit for some p_end_linear_vgpr
    insertion code
  * 47187f7c5ef amd/compiler: use new concept of radv shader binaries.
  * 2b29f01cd78 amd/compiler: cleanup #include headers
  * 78df91ca1d0 amd/compiler: fix discard() inside uniform branches
  * cd8236887c5 amd/compiler: use a boolean vector for ctx.reload_count
  * 44784dee04b use spills_exit instead when ending spill vgpr live
    ranges
  * f0e34a04a34 nir/lower_io_to_vector: handle dual source blending
  * d179cb2a103 amd/compiler: fix fneg(fabs(fmul(a,b))) optimization
  * e24c5521e79 amd/compiler: extend spill vgpr live ranges in some
    situations
  * e0db642e734 Simplify controll flow in dominator_tree
  * b09d5def1eb amd/compiler: fix uniform phis with vgpr operands
  * a5306a08606 amd/compiler: add idep_amdgfxregs_h as a dependency
  * 11adc0cfb4b amd/compiler: update spiller with Tonga workaround
  * 6be54229aa8 amd/compiler: workaround Tonga SGPR bug
  * 2ac392e3280 amd/compiler: correctly update branches in
    try_remove_invert_block()
  * 73c665795e5 amd/compiler: fix vgpr nir_op_uadd_sat on pre-GFX9
  * 904355ed0fa amd/compiler: enable shaderInt64
  * 51c9d07d633 amd/compiler: implement 64bit nir_op_uadd_carry &
    nir_op_usub_borrow
  * ce7374acdb9 amd/compiler: implement 64bit load_push_constant()
  * ab830ec0dfd amd/compiler: implement 64bit load_ubo
  * b84db6a2724 amd/compiler: implement 64bit load/store_shared
  * 023c765bbd2 amd/compiler: fix register assignment restrictions for
    SMEM operands
  * 5d769291fb3 amd/compiler: respect definition sizes when allocating
    registers for split_vector
  * 8ca90736377 amd/compiler: fix nir_op_mov to uniform for 64bit values
  * 4313187ded1 amd/compiler: implement 64bit load/store_ssbo
  * 074e1a71bc1 amd/compiler: add various peephole optimizations
  * 386cf49cb0f amd/compiler: move some code out of
    combine_instruction()
  * 4d5c986d87b amd/compiler: replace the base_offset label with add_sub
  * 259c3a47912 amd/compiler: recognize p_create_vector instructions
    which are just moves
  * 4c7f0a54682 amd/compiler: create more optimizable vector code in
    visit_load_shared()
  * b1697d92ac6 amd/compiler: label labels and prevent conflicting
    labels
  * 0578f3903d4 nir/algebraic: mark a few comparison simplifications as
    precise
  * 45802977d89 nir/algebraic: optimize contradictory iand operands
  * 422d58df2fa amd/compiler: lower more int64 instructions which are
    not supported by GCN hardware
  * 2cd6d1ce72a nir: lower int64 in a single pass.
  * bbd383acc09 amd/compiler: implement 64bit nir_op_isign
  * 5b8b4c60218 amd/compiler: implement scalar 64bit nir_op_isub
  * c1691b16c1c amd/compiler: add some more 32bit <-> 64bit integer
    conversions
  * 9dccd649581 amd/compiler: implement nir_op_f2i64 & nir_op_f2u64
  * 8df8ebf2c3b amd/compiler: implement divergent 64bit nir_op_ieq
  * 54c57025b89 amd/compiler: add VOPC opcodes for all HW generations
  * 746f1351208 amd/compiler: disable ACO on unsupported GPUs
  * 7c0f5895703 amd/compiler: don't label muls with modifiers as omods
  * 67b477ec8e5 radv: add RADV_PERFTEST=llvm
  * 62d7bb84195 radv: add ACO to the disk cache's driver flags
  * f5c66e788fc radv: warn about using ACO
  * 65ec849ba5a radv: print ACO earlier in the device name
  * 68639624a5c amd/compiler: add VOP1 opcodes for all HW generations
  * aab19cd3f65 amd/compiler: add VOP2 opcodes for all HW generations
  * a2a32bf5a7f amd/compiler: add SMEM opcodes for all HW generations
  * b21d487535c amd/compiler: add SOP* opcodes for all HW generations
  * d7b5a252423 amd/compiler: remove pseudo_barrier instructions when
    lowering them.
  * ce9b385f9f7 amd/compiler: fix linear register class on reduction
    operand
  * cdd6d7dfa75 amd/compiler: fix edge case of potential pointer
    invalidation
  * 7db103e4a26 amd/compiler: refactor opcode_infos from AoS to SoA
    layout
  * 0c38cdd18bc amd/compiler: refactor VOP1/VOP2 instructions each into
    a single table
  * e74e7a0a9f6 amd/compiler: add Navi SMEM opcodes
  * 92e35a1bc74 amd/compiler: add Navi opcodes for SOP* instructions
  * 2d74a576813 amd/compiler: refactor SOP1/SOP2/SOPC opcodes as single
    table for each format
  * 9095c5bec18 amd/compiler: simplify opcode table access in assembler.
  * 0cc9f437e0c amd/compiler: fix warning about uninitialized variable
  * a7029aeb293 amd/compiler: refactor CFG as std::vector<Block> instead
    of using unique_ptr.
  * 723e3029c78 amd/compiler: make dominator_tree() a single forward
    pass.
  * 0d8debca8ae amd/compiler: make visit_jump() and visit_discard()
    independent from pointers into program->blocks
  * 978501d2e67 amd/compiler: change signature of add_edge() and friends
    to take the predecessor's index instead of pointer
  * 5ca0a5d128d amd/compiler: make visit_if() independent from pointers
    to program->blocks
  * dca57abb437 amd/compiler: make visit_loop() independent from
    pointers into program->blocks
  * efb28ca38e1 amd/compiler: refactor linear/logical_pre- and
    successors based on block index instead of pointer.
  * 68c68e94a94 amd/compiler: make pseudo_branch targets int and fill
    them after instruction selection
  * e99bd6b3579 amd/compiler: change signature of get_ssa()
  * f7f11792b54 amd/compiler: change signature of mark_block_wqm()
  * 25f65ae6b71 amd/compiler: change signature of read_variable() in RA.
  * 25025331f62 amd/compiler: remove template argument from
    live_var_analysis
  * 0df10a2fca3 amd/compiler: fix more warnings
  * c369fefa71a amd/compiler: disable RA validation by default
  * ef5161993f1 amd/compiler: don't propagate constants to p_wqm,
    s_mulk_i32 and such
  * d760deb8e29 amd/compiler: fix incorrect expression order in RA
  * 4298ebacb98 amd/compiler: fix p_wqm, s_mulk_i32 and such with undef
    operands
  * e2bb99a72f9 amd/compiler: fix null dereference in
    setup_reduce_temp()
  * 851816a2365 amd/compiler: refactor PhysReg
  * c95b63afe9b amd/compiler: beautify Temp definition
  * 2d1a92c133d amd/compiler: make RegClass a struct with proper methods
  * 1d3f2927c35 amd/compiler,nir: fix warnings
  * e6fb1dc22fc amd/compiler: correctly update reload_count with
    affinities
  * ff342525966 amd/compiler: disable validation on release builds, add
    ACO_VALIDATE
  * 69a96dfe2cb amd/compiler: correctly swap scc and a sgpr
  * 709760dfe84 amd/compiler: handle parallel copies from a constant
    into scc
  * 7e17a84420a amd/compiler: preserve scc when swapping sgprs
  * 3b6a57dd463 amd/compiler: add Pseudo_instruction
  * f506137e9b8 amd/compiler: treat buffer and image barriers as the
    same
  * cb49172e8ed amd/compiler: fix interferences and affinities of
    spilled variables
  * e04810971d9 amd/compiler: don't spill constants which are used in
    the next instruction.
  * 289391f5e51 amd/compiler: fix incorrect register class
  * 2f1a290561f amd/compiler: better handle high waitcnt counters
  * c6e8d48211a amd/compiler: remove incorrect assert in spiller
  * 96194896c5f amd/compiler: better handle unreachable continues with
    divergent ifs
  * 3b499fa684c amd/compiler: implement planar textures
  * 2776e698085 amd/compiler: be more strict when scheduling around
    s_barrier
  * 8ee03c69faf amd/compiler: extend moving_ds to more memory
    instructions
  * 4487c75df96 amd/compiler: fix 1D array nir_texop_txs on GFX9+
  * cf1684ebfe4 amd/compiler: support rematerialization of
    p_create_vector
  * 34b53bb33b2 amd/compiler: increase MAX_ARGS to 64
  * 9344f6faa24 amd/compiler: for spilling, only insert linear_vgpr user
    after loops if there was a reload inside the loop.
  * 8eee6292445 amd/compiler: fix sgpr demand for live var analysis wrt
    exec mask
  * d4d06e2392b amd/compiler: fix reductions in loops
  * 10daffc5e16 Revert "amd/compiler: try to avoid using XOR when
    lowering parallelcopies"
  * 2afa7807e72 amd/compiler: fixup NUM_FORMAT name after rebase
  * 14ca560d026 amd/compiler: fix CIK/SI/VI -> GFX6/7/8 after rebase
  * 0ed9259520d nir: fix nir_opt_load_store_vectorize imov -> mov
  * cbee466861b amd/compiler: fix imov/fmov -> mov after rebase
  * 575e6e9a562 amd/compiler: allow the scheduler to decrease max_waves
  * f94aea03be8 amd/compiler: always predicate discard early exits on an
    exact exec mask
  * 92ccc27757c amd/compiler: correctly preserve WQM mask after discards
  * 7fc6ddaf509 amd/compiler: don't move export instructions during
    scheduling
  * d601277466e amd/compiler: allow the scheduler to reorder some memory
    instructions
  * 81ae50f0834 amd/compiler: increase scheduler window size
  * 2677d22de31 amd/compiler: fix assert in get_reg()
  * 03b6d291709 amd/compiler: fix edge-case in print_regs()
  * d4f0bf65494 amd/compiler: label and optimize add(add(<tmp>,
    <const>), <const>)
  * b9f820f52be amd/compiler: don't create NULL exports during isel
  * d863c373fde amd/compiler: check live-out during RA validation
  * 1c232481c69 amd/compiler: correctly identify unreachable continues
    with divergent ifs
  * 68bdeb5b5a7 amd/compiler: fixup loop header phis in the case of
    unreachable continues
  * d32c3cf178d amd/compiler: correctly add parallelcopies to a phi's
    uses
  * b1b02641d7e amd/compiler: shuffle register if needed to make space
    for phis
  * bdfd00a6df2 amd/compiler: correctly give an empty expr_set to
    process_block()
  * 4bae41cae94 amd/compiler: don't mark invert blocks as top level
  * cc258a45e6c amd/compiler: fix situation where instructions were
    inserted before phis
  * ef383ebb581 amd/compiler: remove incorrect assert
  * 4d11b6dc90a amd/compiler: don't fix outer mask to exec on discards
  * f6f64344364 amd/compiler: allow for 2 more sgprs without spilling
  * edd939062a2 amd/compiler: fix renaming of spilled variables in
    (nested) loops
  * 5e90cb74f69 amd/compiler: validate out-of-bounds register
    assignments.
  * 95e6026452e amd/compiler: consider WAR hazards for Export
    instructions while register assignment.
  * 634a0831b3d amd/compiler: soft-align vec4 registers when live-range
    splitting
  * 810f3fd091d amd/compiler: try to avoid using XOR when lowering
    parallelcopies
  * b88fa9970ae amd/compiler: use best_fit for register assignments
    without live-range splits
  * 04d550b62dd amd/compiler: Rework live-range splitting for register
    assignment.
  * 033a1bbdcdc amd/compiler: outline get_reg_simple() function to find
    a register without live-range splitting
  * bcfd7906f61 amd/compiler: round up GPRs for correct #num_waves in
    shader stats
  * 5b2a039c46c amd/compiler: have insert_waitcnt() ignore discard
    exports
  * 0ed7cb4ca34 amd/compiler: fix nir_texop_samples_identical
  * 36ba48b0fdc amd/compiler: add missing scc clobber
  * d711496fd83 amd/compiler: implement push constant inlining
  * 7cd5c48d99f radv: use a different device name if ACO is used
  * 17067955172 nir: combine move_load_const and opt_sink
  * 667fb14aaea radv: consider ACO when hashing shaders
  * 3f99228193b radv: only flush SMEM L1 for SSBOs if ACO is enabled
  * 1ed419e1715 amd/compiler: correctly size 64-bit constants
  * d976564d86e amd/compiler: assert when a 64-bit literal constant is
    being created
  * 02575d8bb5c amd/compiler: explicitly size undefined operands
  * 997dd13020f nir/load_store_vectorize: remove deref stuff in
    may_alias()
  * 1b78ed17f51 amd/compiler: update TODO
  * ad94def48fd amd/compiler: optimize v_cndmask(0, 1.0, b) * a ->
    v_cndmask(0, a, b)
  * ef0371c55e7 nir: remove fmul(b2f(a), b) -> bcsel optimization
  * 88bf8ac990c Revert "nir: optimize fadd(a, fneg(b)) -> fsub"
  * 6de006ead12 amd/compiler: add fadd(a, -b) -> fsub(a, b) optimization
  * b12ea32cd79 amd/compiler: don't do any combining for dead VALU
    instructions
  * e08793e7a71 amd/compiler: make an instruction VOP3 to apply a sgpr
  * 2fd79e766bd amd/compiler: optimize fneg(fneg(a))
  * 9bb81e7318a nir/load_store_vectorize: cosmetic changes
  * e8872ca08bf nir/load_store_vectorize: miscellaneous fixes, cleanups
    and improvements
  * beb98ab0718 nir/lcssa: update formatting
  * e61e17629ae nir/lcsaa: simplify instr_is_invariant()
  * c6ee6061c0f nir/load_store_vectorize: update comment
  * 99b96859487 amd/compiler: use nir_shader_get_entrypoint()
  * a6a08a02f1f nir/subgroups: fix clustered reduction lowering when
    subgroup_size=0
  * f3a5efd603f radv: lower FS outputs to vector
  * f037d4253b5 nir/lower_io_to_vector: add flat mode
  * 47d5251b905 nir/lower_io_to_vector: allow FS outputs to be
    vectorized
  * 2854ce5dfcb nir/divergence_analysis: process cf_nodes recursively
    instead of using a worklist.
  * b2358159821 nir/divergence_analysis: only consider phis at loop
    headers as uniform if all loop-carried values are the same.
  * 8c034f3c2dc amd/compiler: update TODO
  * 29ea256d46c amd/compiler: use Builder more during instruction
    selection
  * 809315cdb13 amd/compiler: remove unused post-RA scheduler
  * 6a314b77732 amd/compiler: use Builder in lower_bool_phis()
  * 1adacd2808d amd/compiler: make further use of Builder in
    lower_to_hw_instr
  * 732dd11f0d0 amd/compiler: remove RegType::scc_bit and RegClass::b
  * 958f3b6886f amd/compiler: move misplaced branch in
    p_{create,split}_vector lowering
  * bd258491f9c amd/compiler: set p_create_vector operands when
    scalarizing phis
  * a48a5f63672 amd/compiler: fix num_components in phi regClass
    selection.
  * 8946ed4f0de amd/compiler: fix assertion in phi regClass selection
  * e172544b750 amd/compiler: fix regs_intersect()
  * ec6661a8706 amd/compiler: fix after rebase
  * a7715530d85 amd/compiler: update TODOs for upstreaming
  * acf13b5ebe7 amd/compiler: change neg(mul(a, b)) to use v_mul_f32 in
    VOP3 Format
  * 54b1fa6396e amd/compiler: fix vector expansion of nir_texop_tg4
  * 4049dfb606c amd/compiler: try to scalarize phis so that they can be
    partially eliminated
  * 7ff77ed0c63 amd/compiler: emit better code for uniform tex
    instructions and fix validation error
  * 8102563fa53 amd/compiler: handle uniform offsets in load_input()
  * c874dd0b5a0 amd/compiler: always set need_indirect_descriptor_sets
  * 7b8029c1724 amd/compiler: limit user sgprs to 16 on Vega compute
    shaders
  * ecc1dfe2706 amd/compiler: fix local_next_use_distance calculation
  * cc3af2075ce amd/compiler: fix interferences of spilled variables
  * 50a3213ae37 amd/compiler: add 64bit lshl & ashr
  * f9054bd163b amd/compiler: add indirect descriptor sets
  * cf0f221e6e1 amd/compiler: return uniform texture and image_load
    instructions in sgprs.
  * c5578482226 amd/compiler: fix inlined uniform block descriptors
  * a1cf6692e50 amd/compiler: allow for image stores with less than 4
    components
  * 5e7e4433031 amd/compiler: update TODO
  * 042d8b4beae amd/compiler: implement SMEM ssbo stores for fragment
    shaders
  * 1f791ba2cea amd/compiler: break up SMEM clauses if needed
  * 371eac2531c amd/compiler: combine negates and multiplies
  * bec4e5931ad amd/compiler: fix nir_op_fneg with zero
  * 7b38c82797a amd/compiler: implement 64bit comparison instructions
  * 5f424384c9d amd/compiler: silence warnings and fix
    texop_samples_identical wrong tmp_dst ssa-def
  * bc83280656e amd/compiler: implement nir_intrinsic_load_sample_pos
  * b0515d75666 amd/compiler: implement
    nir_intrinsic_load_barycentric_at_offset
  * d785cb313e2 amd/compiler: implement
    nir_intrinsic_load_barycentrinc_at_sample
  * d03a54e862c nir: add load_barycentrinc_at_[sample|offset] and
    load_sample_pos to divergence analysis
  * 28137675e1b amd/compiler: fix split global stores on pre-GFX9
  * d93a8923522 amd/compiler: don't propagate constants into
    v_cndmask_b32 conditions
  * 77e05a0edaa amd/compiler: fix integer texture gather on pre-GFX9
  * e720c5edf70 amd/compiler: fix 1D texture sampling with explicit
    derivatives on GFX9
  * fb31ebfc8df amd/compiler: implement 1D array nir_texop_txs on GFX9
  * f8ab0dbfdbc amd/compiler: implement cube sampling with explicit
    derivatives
  * 3e93dc1267e amd/compiler: fix wrong image opcode
  * e27a2652404 amd/compiler: fix spilling at merge blocks
  * 08d1873714a amd/compiler: remove debug code
  * 0c1811e2454 amd/compiler: fix missing logical not
  * 00b04a626b5 amd/compiler: handle flat interpolation of vec inputs
  * 6dc6494589b amd/compiler: allow undef to be specified for
    p_{split,extract}_vector
  * ccb1ebb5366 amd/compiler: fix removal of live_out_exec in spiller
  * 35d66e6a4f9 amd/compiler: use SMEM for some ssbo stores
  * 3a1e141e179 amd/compiler: fix compilation
  * ba4bb569f6f amd/compiler: add missing check in v_mad_f32 ->
    v_mac_f32 optimization
  * 32c0ea8acfc amd/compiler: fix error in nir_intrinsic_mbcnt_amd
    implementation
  * 6461aef0e24 amd/compiler: optimize vectors of undefined operands
  * e9dc3d32890 amd/compiler: handle more barriers when moving DS
    instructions
  * db22dcb425b amd/compiler: Fix 64bit iadd if both operands are
    created from vectors (like from i2i64).
  * a6133a4a89f amd/compiler: implement nir_op_i2i64
  * e10fcec1584 amd/compiler: fix boolean subgroupClusteredXor()
  * 7dd38b9c578 amd/compiler: handle fixed phi definitions before
    affinities.
  * 68052bfc3b1 nir: remove wrong assertion in divergence analysis.
  * a49c798d609 amd/compiler: add unofficial errata in README
  * c0847b7bd6b amd/compiler: disable VK_KHR_shader_float16_int8 for aco
  * f3dad9c79aa amd/compiler: mark s_bfe_* as writing SCC
  * 7629dad9932 amd/compiler: fix vgpr nir_op_iabs and implement
    nir_op_frexp_*
  * 1abe7f5c0f4 amd/compiler: set flat_shaded_mask
  * 002de1c3daf amd/compiler: switch optimizer to new dead_code_analysis
    pass instead of using live_var_analysis
  * 6e5c1915d1f amd/compiler: implement new dead_code_analysis pass to
    calculate number of uses for each SSA-def
  * dcc0369364a amd/compiler: move v_mad -> v_mac optimization to
    register allocation
  * 4a889995fcf amd/compiler: add missing uses == 1 check
  * 103d308fbe6 amd/compiler: fix logical edges after break/continue
  * d064bb996e4 amd/compiler: add support for AMD_shader_ballot
    instructions
  * 3e0e7c83099 nir: add AMD_shader_ballot intrinsics to divergence
    analysis
  * 6333bacc5bb amd/compiler: Add support for AMD_gcn_shader
    instructions
  * e51d39b6268 amd/compiler: Add support for AMD_shader_trinary_minmax
    instructions
  * 923a0b70b69 amd/common: rework writelane function for
    write_invocation
  * cd5d3f5e367 amd/compiler: ensure branches leading to WQM code are in
    WQM
  * fb8532277be amd/compiler: allow a WQM/exact transition when handling
    p_is_helper
  * 7df08254006 amd/compiler: don't value number DS instructions
  * d9ca0e2686f amd/compiler: be more careful with barriers in the
    scheduler
  * e8171d4e0bc amd/compiler: fix 64-bit load_const after rebase
  * b9140c8ff53 amd/compiler: print block kind
  * b15a78170e6 amd/compiler: set block_kind_top_level
  * 46bbdbd9d65 amd/compiler: remove duplicate 'count--'
  * 52fa68c3f82 amd/compiler: disable VK_AMD_gpu_shader_half_float &
    VK_AMD_gpu_shader_int16 for aco
  * 36c03d372b5 nir: fix load_store_vectorize after rebase
  * a3721720a48 nir: fix lower_io after rebase
  * 0a7f9a2edb0 amd/compiler: fix rebase compilation errors from NIR
    changes
  * 0e233041796 amd/compiler: implement global loads/stores
  * 40580c0617f amd/compiler: add support for flat,global and scratch
    instructions
  * 9ad36f597af amd/compiler: print_regs() fixes
  * 45b816b2cca amd/compiler: use std::vector for ssa_info in
    aco::optimize()
  * 738e18a7de5 amd/compiler: implement 64-bit sgpr nir_op_iadd
  * 798d438255a amd/compiler: fixup p_linear_phi with s2 boolean operand
    and s1 definition
  * ac219af0fc4 amd/compiler: switch jump threading to new exec mask
    handling
  * 12da2ccc79b amd/compiler: Do not spill the exec mask and don't count
    it for sgpr demand
  * 2a762047748 amd/compiler: implement load_helper_invocation for new
    exec mask handling
  * 7e929e87c2f amd/compiler: implement correct nir_intrinsic_discard()
  * 7f088ee23df amd/compiler: rework discard_if()
  * 2e76806945f amd/compiler: switch instruction selection to new exec
    mask handling pass.
  * d682ed52e22 amd/compiler: handle WQM in insert_exec_mask
  * f414a91982c amd/compiler: move calculation of wqm needs to
    insert_exec_mask()
  * eba9de7f8cd amd/compiler: new separate pass for exec mask handling
  * d514674ff30 amd/compiler: small builder extension
  * a5556fef937 amd/compiler: add exec as operand to s_or_saveexec
  * 1bfd1f35d45 amd/compiler: add block kind information to IR
  * 38ed51b598b amd/compiler: don't schedule beyond changes of the exec
    mask
  * da0eaedc921 amd/compiler: correctly update waitcnt_ctx for empty
    blocks
  * 25b2211993b amd/compiler: allow for phis with fixed exec register
  * fdbbe6517b1 amd/compiler: increase register limit when get_reg()
    fails
  * a46d3344404 amd/compiler: handle phis with all sources undefined
  * bfff286253a nir/subgroups: Clamp cluster size to subgroup_size
  * 5a66d7b7fe8 amd/compiler: use bit arrays to represent sets of
    temporaries in scheduler
  * 34f755b6b19 amd/compiler: fix uniform b2f32 with s2 booleans
  * ddab7ee1388 amd/compiler: handle clip distance inputs
  * 28c7334fe13 amd/compiler: implement linear interpolation
  * 916fa7f3b4c nir,amd/compiler: improve various subgroup operations
    with uniform inputs
  * fed56e253de nir/lower_to_explicit: set explicit_stride for vectors
  * 8c689c904fd amd/compiler: initialized fixed register with
    Operand(Temp(0, ...))
  * 21a99d9290d amd/compiler: propagate p_is_helper as 0 when wqm isn't
    needed
  * 6e11ae4f953 amd/compiler: implement
    nir_intrinsic_load_helper_invocation
  * a5f5372f50c amd/compiler: implement nir_intrinsic_first_invocation
  * 5f720f7bb1f amd/compiler: implement nir_intrinsic_quad_*
  * 7a388498878 amd/compiler: implement nir_intrinsic_vote_any
  * 7e0d3f81ce4 amd/compiler: implement read_invocation
  * 58e0e8efdb6 amd/compiler: implement boolean read_first_invocation
  * 531a0ee7a2a amd/compiler: don't value number reductions
  * 5643b9ed625 nir: mark nir_intrinsic_shuffle as divergent
  * fc67e6374ac amd/compiler: implement boolean nir_intrinsic_shuffle
  * 1a4b4109b15 amd/compiler: multiply shuffle lane by 4
  * bc9856e0d7b amd/compiler: implement boolean nir_intrinsic_ballot
  * c93d76e8e2d amd/compiler: implement 64-bit vgpr nir_op_ine
  * 171f9eaaa2b amd/compiler: implement 64-bit bit_count
  * 5536ae80fb6 amd/compler: implement 64-bit vgpr i2b1
  * 9c287388f7c amd/compler: implement 64-bit sgpr find_lsb/find_msb
  * b92149bd53b amd/compiler: implement clustered reductions

 -- Ernst Sjöstrand <ernstp@gmail.com>  Sat, 20 Jul 2019 17:20:07 +0200

mesa (19.2.0~git1907111232.677bea5144d~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 677bea5144d amd/compiler: implement nir_op_{f2f32,u2f64,i2f64}
  * acc3f4d56b9 amd/compiler: remove wrong assertion in ssa_elimination
  * 2064386e734 amd/compiler: set exec mask always to zero on discard()
  * 49f4a60b453 amd/compiler: fix register file restoration when
    get_regs_for_copies fails
  * e757dd9cc05 add Github issue template

 -- Ernst Sjöstrand <ernstp@gmail.com>  Fri, 12 Jul 2019 21:21:42 +0200

mesa (19.2.0~git1907101128.eebe7f88564~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * eebe7f88564 amd/compiler: recover from failed live-range splitting
    while register allocation

 -- Ernst Sjöstrand <ernstp@gmail.com>  Wed, 10 Jul 2019 16:58:02 +0200

mesa (19.2.0~git1907091712.9928a225386~b~mesarc1) bionic; urgency=medium

  * New snapshot:
  * 9928a225386 amd/compiler: correctly apply input modifiers to DPP
    instructions
  * aae07fa2083 amd/compiler: handle fixed register definitions before
    assigning registers for other definitions
  * 75d5748b16a amd/compiler: respect definition sizes when allocating
    registers for split_vector
  * 7a202201a64 amd/compiler: handle swizzled vector alu sources
  * 65dbabab773 amd/compiler: correctly handle p_extract_vector with
    vector definition
  * 077490f1121 amd/compiler: remove killed phi sgpr-operands from live
    vars between p_logical_end and block end.

 -- Ernst Sjöstrand <ernstp@gmail.com>  Tue, 09 Jul 2019 20:46:49 +0200

mesa (19.0.2-1ubuntu1) disco; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 11 Apr 2019 11:56:22 +0300

mesa (19.0.2-1) experimental; urgency=medium

  * New upstream release.
  * control: Bump libdrm-dev build-dep, amdgpu needs 2.4.97.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 11 Apr 2019 11:50:26 +0300

mesa (19.0.1-1ubuntu2) disco; urgency=medium

  * i965-comet-lake.diff: Add support for CML. (LP: #1821863)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 03 Apr 2019 10:58:06 +0300

mesa (19.0.1-1ubuntu1) disco; urgency=medium

  * Merge from Debian. (LP: #1822092)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 28 Mar 2019 15:51:31 +0200

mesa (19.0.1-1) experimental; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 28 Mar 2019 15:38:58 +0200

mesa (19.0.0-1ubuntu1) disco; urgency=medium

  * Merge from Debian. (LP: #1818516)
  * revert-set-full-thread-affinity.diff: Fix qemu crash. (LP: #1815889)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 14 Mar 2019 18:48:18 +0200

mesa (19.0.0-1) experimental; urgency=medium

  * New upstream release.
  * meson-fix-with-dri2-def-for-hurd.diff: Restored the original diff to
    fix hurd build.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 14 Mar 2019 18:41:31 +0200

mesa (19.0.0~rc7-1) experimental; urgency=medium

  * New upstream release candidate.
  * Migrate to llvm/clang-8.
  * fix-hurd-ftbfs.diff: Refreshed, and partially replaced by two
    patches from upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 07 Mar 2019 09:58:25 +0200

mesa (19.0.0~rc6-1) experimental; urgency=medium

  * New upstream release candidate. (LP: #1815236)
  * rules: Replace imx with kmsro, fixes arm build.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 04 Mar 2019 09:26:07 +0200

mesa (19.0.0~rc5-1) experimental; urgency=medium

  * New upstream release candidate.
  * libgbm1.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 20 Feb 2019 14:02:45 +0200

mesa (19.0.0~rc2-1) experimental; urgency=medium

  * New upstream snapshot.
  * 1-5-meson-remove-duplicate-definition.patch: Dropped, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 08 Feb 2019 10:44:48 +0200

mesa (18.3.4-2) unstable; urgency=medium

  * Cherry-pick f6556ec7d12 (dri: meson: do not prefix user provided dri-
    drivers-path) from upstream master branch. Fixes a regression since
    switching to meson (Closes: #922807).
  * rules: Add meson option -Db_ndebug=true to disable assertions
    (Related bugs: #920462, #922162, #922346).
  * source/local-options: Remove meson build files from extend-diff-
    ignore.

 -- Andreas Boll <aboll@debian.org>  Sat, 02 Mar 2019 13:21:59 +0100

mesa (18.3.4-1ubuntu1) disco; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 19 Feb 2019 11:42:32 +0200

mesa (18.3.4-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 19 Feb 2019 11:02:44 +0200

mesa (18.3.3-1ubuntu1) disco; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 07 Feb 2019 16:41:47 +0200

mesa (18.3.3-1) unstable; urgency=medium

  [ James Clarke ]
  * Add pkg.mesa.nolibva build profile; this breaks the mesa -> libva-dev ->
    libva-glx1 -> libgl1-mesa-glx dependency loop when bootstrapping.
    (Closes: #870434)

  [ Timo Aaltonen ]
  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 06 Feb 2019 11:36:46 +0200

mesa (18.3.2-1ubuntu1) disco; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 18 Jan 2019 11:39:28 +0200

mesa (18.3.2-1) unstable; urgency=medium

  * New upstream release.
    - 2-5..5-5*.patch: Dropped, upstream.
  * fix-hurd-ftbfs.diff: Add one more check for PIPE_OS_HURD, and fixes
    from James Clarke to address other issues with the build.
  * nv30: Cherry-pick patches to fix a plasmashell crash. (Closes:
    #918835)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 17 Jan 2019 20:36:15 +0200

mesa (18.3.1-1) experimental; urgency=medium

  * New upstream release.
  * fix-hurd-ftbfs.diff: Fix src/util build on Hurd.

 -- Timo Aaltonen <tjaalton@debian.org>  Sat, 12 Jan 2019 20:02:51 +0200

mesa (18.3.0-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * control, rules. LLVM is available on s390x these days, so simplify
    the packaging and let s390x build the same package set as other release
    archs.

  [ Andreas Boll ]
  * New upstream release.
  * Use proposed meson patches from upstream to fix hurd and ppc64el.
  * control: Bump meson build-dep to 0.45 per meson.build.
  * control: Drop unused build-dep libtool.
  * control: Switch to python3 build-deps.
  * Inline debian/not-installed into debian/rules.
  * rules: Tidy up override_dh_install.

 -- Andreas Boll <aboll@debian.org>  Mon, 10 Dec 2018 22:52:55 +0100

mesa (18.3.0~rc5-2) experimental; urgency=medium

  * rules: Drop virgl, va/vdpau from s390x.
  * meson-fix-hurd-build.diff: Hurd needs -D_GNU_SOURCE.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 03 Dec 2018 20:43:45 +0200

mesa (18.3.0~rc5-1) experimental; urgency=medium

  * New upstream release candidate.
  * rules: Fix a typo in list of dri drivers.
  * rules, meson-add-glx-direct-toggle.diff: Fix build on hurd.
  * rules: Drop extra -Dosmesa from confflags.
  * rules: Don't build gallium nouveau on s390x.
  * rules: Classic osmesa needs classic swrast, and since it's not enabled
    where llvmpipe is enabled, enable gallium osmesa there.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 30 Nov 2018 11:45:45 +0200

mesa (18.3.0~rc4-1) experimental; urgency=medium

  * New upstream release candidate.
  * control: Bump libdrm-dev dependency to 2.4.95.
  * libgl1-mesa-dri.install: Updated, etc/drirc is now
    usr/share/drirc.d/00-mesa-defaults.conf.
  * libegl-mesa0.symbols: Updated.
  * Build with gcc8 again.
  * control, rules: Build with meson.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 29 Nov 2018 15:35:41 +0200

mesa (18.2.8-2ubuntu1) disco; urgency=medium

  * Merge from Debian.
    - Re-enable libsensors support

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 03 Jan 2019 02:50:15 +0200

mesa (18.2.8-2) unstable; urgency=medium

  * Actually merge the upstream version. (Closes: #917556)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 28 Dec 2018 20:11:40 +0200

mesa (18.2.8-1) unstable; urgency=medium

  * New upstream release.
  * control: Build-depend on libsensors-dev. (Closes: #917442)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 28 Dec 2018 10:50:13 +0200

mesa (18.2.7-2) unstable; urgency=medium

  * Temporarily disable libsensors support to bootstrap with libsensors5.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Fri, 21 Dec 2018 09:22:16 +0100

mesa (18.2.7-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 19 Dec 2018 11:47:32 +0200

mesa (18.2.6-1ubuntu2) disco; urgency=medium

  * Temporarily disable libsensors support to bootstrap with libsensors5.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 03 Jan 2019 02:34:40 +0200

mesa (18.2.6-1ubuntu1) disco; urgency=medium

  * Merge from Debian.
    - add missing i965 pci-id's (LP: #1789924)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 28 Nov 2018 23:14:08 +0200

mesa (18.2.6-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 28 Nov 2018 22:58:22 +0200

mesa (18.2.5-3) unstable; urgency=medium

  [ Michael Biebl ]
  * Force compilation against gcc-7, gcc-8 miscompiles mesa
    See https://gcc.gnu.org/bugzilla/show_bug.cgi?id=87859
    (Closes: #914267).

 -- Andreas Boll <aboll@debian.org>  Thu, 22 Nov 2018 21:18:39 +0100

mesa (18.2.5-2) unstable; urgency=medium

  * Move KHR/khrplatform.h from libegl1-mesa-dev to mesa-common-dev
    because GL/glcorearb.h and GL/glext.h started to depend on this
    header too (Closes: #914167).

 -- Andreas Boll <aboll@debian.org>  Tue, 20 Nov 2018 21:20:51 +0100

mesa (18.2.5-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <aboll@debian.org>  Mon, 19 Nov 2018 16:18:34 +0100

mesa (18.2.4-1) experimental; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
    - vulkan: Disable randr lease for libxcb < 1.13 (Closes: #908827,
    #909720).
  * Drop version from build-deps libxcb-dri3-dev and libxcb-present-dev.
  * Bump libdrm-dev dependency to 2.4.92.
  * Enable building etnaviv and imx on arm64 (Closes: #907136).

  [ Timo Aaltonen ]
  * copyright: Rewrite for format 1.0.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 15 Nov 2018 11:20:08 +0200

mesa (18.2.2-0ubuntu1) cosmic; urgency=medium

  * New upstream bugfix release. (LP: #1796367, #1794923)

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 08 Oct 2018 14:23:09 +0300

mesa (18.2.1-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian experimental. (LP: #1714178, #1792873)
  * glvnd-fix-a-segfault-in-eglgetprocaddess.diff: Dropped, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 25 Sep 2018 23:26:15 +0300

mesa (18.2.1-1) experimental; urgency=medium

  * New upstream release.
  * control: Add libd3dadapter9-mesa to -dev depends.
  * control: Fix libd3dadapter9-mesa-dev section, and drop
    shlibs:Depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 24 Sep 2018 15:28:35 +0300

mesa (18.2.0-3) experimental; urgency=medium

  * control, rules: Nine needs llvmpipe, and also makes sense to build it
    only on archs that have wine.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 19 Sep 2018 13:41:29 +0300

mesa (18.2.0-2) experimental; urgency=medium

  * control: Bump build-dep on libxcb-dri3-dev and libxcb-present-dev to
    1.13. (Closes: #908827)
  * control: Build-depend on x11proto-dev, modify libegl1-mesa-dev and
    libgl1-mesa-dev depends.
  * Migrate to llvm/clang-7.
  * Enable gallium D3D state tracker, thanks Antonio Russo and Andrew
    Cook! (Closes: #863972)
  * rules: Enable v3d on arm. Thanks, Fabio Pedretti!
  * rules: Drop enabling texture float, it's enabled by default now.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 18 Sep 2018 14:49:24 +0300

mesa (18.2.0-1) experimental; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 10 Sep 2018 12:54:33 +0300

mesa (18.2.0~rc4-1) experimental; urgency=medium

  * New upstream release candidate.
  * control: Add libxrandr-dev and libwayland-egl-backend-dev to build-
    depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 22 Aug 2018 19:59:55 +0300

mesa (18.1.9-1) unstable; urgency=medium

  * New upstream release.
  * Cherry-pick 2f1ad72ac17 (clover: Add explicit virtual destructor to
    argument class) from upstream master branch. Fixes memory leaks with
    some OpenCL apps (Closes: #909741). Thanks, David Kuehling!

 -- Andreas Boll <aboll@debian.org>  Wed, 10 Oct 2018 16:54:18 +0200

mesa (18.1.8-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 10 Sep 2018 10:34:39 +0300

mesa (18.1.7-1) unstable; urgency=medium

  * New upstream release.
  * libglx-mesa0: Add Breaks: glx-diversions (<< 0.8.4~) (Closes:
    #903929).

 -- Andreas Boll <aboll@debian.org>  Wed, 29 Aug 2018 11:16:55 +0200

mesa (18.1.6-1) unstable; urgency=medium

  * New upstream release.
    - Fixes white screen when running Xfwm4 with compositing
      (Closes: #901789).
  * Drop glvnd-fix-gl-dot-pc.patch, fixed upstream (0c927e8da9e)
    (Closes: #896447).

 -- Andreas Boll <aboll@debian.org>  Tue, 14 Aug 2018 09:28:56 +0200

mesa (18.1.5-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 30 Jul 2018 16:59:04 +0300

mesa (18.1.5-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 30 Jul 2018 14:30:06 +0300

mesa (18.1.4-1) unstable; urgency=medium

  [ Emilio Pozuelo Monfort ]
  * New upstream release.

  [ Simon McVittie ]
  * Make libwayland-dev Build-Depends consistent with -dev Depends

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Sun, 15 Jul 2018 12:59:44 +0200

mesa (18.1.3-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 02 Jul 2018 11:27:54 +0300

mesa (18.1.3-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 02 Jul 2018 11:25:05 +0300

mesa (18.1.2-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 22 Jun 2018 08:34:53 +0300

mesa (18.1.2-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 19 Jun 2018 17:50:24 +0300

mesa (18.1.1-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian.
  * glvnd-fix-a-segfault-in-eglgetprocaddess.diff: Backport a commit to
    fix a segfault. (LP: #1776499)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 13 Jun 2018 12:10:21 +0300

mesa (18.1.1-1) unstable; urgency=medium

  * New upstream release. (Closes: #901342)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 13 Jun 2018 11:46:04 +0300

mesa (18.1.0-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian experimental.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 29 May 2018 10:31:32 +0300

mesa (18.1.0-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release candidate.
  * signing-key.asc: Add the key from Dylan Baker.
  * rules: Update clean target.

  [ Andreas Boll ]
  * New upstream release.
  * signing-key.asc: Remove old key from Juan A. Suarez Romero.
  * Enable support for tegra on armhf and arm64. Thanks, Fabio Pedretti!
  * Bump libdrm-dev dependency to 2.4.91.

 -- Andreas Boll <aboll@debian.org>  Sat, 26 May 2018 10:34:44 +0200

mesa (18.0.5-1) unstable; urgency=medium

  * New upstream release.
    - Fixes compositor freezes with XServer 1.20. Closes: #900149.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Mon, 04 Jun 2018 09:51:42 +0200

mesa (18.0.4-1ubuntu1) cosmic; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 May 2018 11:07:50 +0300

mesa (18.0.4-1) unstable; urgency=medium

  * New upstream release.
  * Add key from Juan A. Suarez.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 May 2018 10:07:58 +0300

mesa (18.0.3-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.

  [ Nicolas Braud-Santoni ]
  * Add debian/gbp.conf.

  [ Timo Aaltonen ]
  * control: libegl1-mesa-dev should pull the new libwayland-dev, update
    dependency.

 -- Andreas Boll <aboll@debian.org>  Tue, 08 May 2018 10:42:07 +0200

mesa (18.0.2-2ubuntu2) cosmic; urgency=medium

  * control: libegl1-mesa-dev should pull the new libwayland-dev, update
    dependency.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 07 May 2018 10:34:10 +0300

mesa (18.0.2-2ubuntu1) cosmic; urgency=medium

  * Merge from Debian experimental.
  * Drop libwayland-egl-mesa again.

 -- Timo Aaltonen <tjaalton@debian.org>  Sat, 05 May 2018 21:01:52 +0300

mesa (18.0.2-2) unstable; urgency=medium

  * Upload to unstable.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 02 May 2018 13:22:18 +0300

mesa (18.0.2-1) experimental; urgency=medium

  * New upstream release.

 -- Andreas Boll <aboll@debian.org>  Mon, 30 Apr 2018 10:15:24 +0200

mesa (18.0.1-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release.

  [ Andreas Boll ]
  * Update Vcs-* URLs to point at salsa.debian.org (Closes: #896146).
    Thanks, Stuart Young!
  * Bump debhelper compat to 11.
  * Bump standards version to 4.1.4.

 -- Andreas Boll <aboll@debian.org>  Fri, 20 Apr 2018 13:29:30 +0200

mesa (18.0.0-1) experimental; urgency=medium

  * New upstream release.
  * control: Update to my Debian address.

 -- Andreas Boll <aboll@debian.org>  Wed, 28 Mar 2018 13:04:01 +0200

mesa (18.0.0~rc5-1ubuntu1) bionic; urgency=medium

  [ Timo Aaltonen ]
  * Merge from Debian experimental.
  * Drop Mir EGL patches, they're not needed anymore.
  * Revert dropping libwayland-egl-mesa for now, until the wayland FFE
    is acked.
  * dri3-reinstate-get_dri_screen-callback.diff: Dropped, upstream.

  [ Daniel van Vugt ]
  * Add disable-intel-ccs-compression.patch to avoid screen corruption
    when logging into Xorg sessions (LP: #1753776)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 22 Mar 2018 09:29:44 +0200

mesa (18.0.0~rc5-1) experimental; urgency=medium

  [ Andreas Boll ]
  * New upstream release candidate.

  [ Fabio Pedretti ]
  * rules: Rename --disable-gallium-llvm to --disable-llvm

  [ Timo Aaltonen ]
  * control, rules: Switch to llvm 6.0, bump libclc to match.
  * Drop libwayland-egl-mesa, which is now provided by src:wayland.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 21 Mar 2018 20:05:23 +0100

mesa (18.0.0~rc4-1ubuntu3) bionic; urgency=medium

  * dont-enable-10bpc-by-default.diff: Replace the drirc hack, just flip
    the default to not enable 10bpc configs by default for gallium drivers.
    (LP: #1752123)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 28 Feb 2018 19:34:58 +0200

mesa (18.0.0~rc4-1ubuntu2) bionic; urgency=medium

  * control: Remove libtxc-* Recommends which were left over after a
    merge.
  * dont-expose-10bpc-to-gnome-shell.diff: Add a workaround to not use
    10bit RGB config with gnome-shell, until mutter is fixed. (LP:
    #1752123)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 28 Feb 2018 13:55:43 +0200

mesa (18.0.0~rc4-1ubuntu1) bionic; urgency=medium

  * Merge with Debian experimental.
  * Stop using alternatives, not needed anymore with libglvnd.
  * patches: Mir patches updated.
  * dri3-reinstate-get_dri_screen-callback.diff: Fix a regression in
    accelerated video playback. (LP: #1747744)
  * control: Add nvidia-304/340/384 to libegl-mesa0, libgles2-mesa and
    libglx-mesa0 Breaks.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 13 Feb 2018 17:56:35 +0200

mesa (18.0.0~rc4-1) experimental; urgency=medium

  * New upstream release candidate.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 12 Feb 2018 10:43:32 +0200

mesa (18.0.0~rc2-1) experimental; urgency=medium

  * New upstream release.
  * libgbm1.symbols: Updated.
  * rules: Use -O1 for sh3 & sh4, thanks John Paul Adrian Glaubitz!
    (Closes: #887444)
  * rules: Fix hurd FTBFS, thanks Samuel Thibault! (Closes: #888047)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 25 Jan 2018 13:42:14 +0200

mesa (17.3.9-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <aboll@debian.org>  Thu, 19 Apr 2018 11:18:35 +0200

mesa (17.3.8-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <aboll@debian.org>  Fri, 06 Apr 2018 10:24:44 +0200

mesa (17.3.7-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 21 Mar 2018 18:26:10 +0100

mesa (17.3.6-1) unstable; urgency=medium

  * New upstream release.
    - Fixes GPU hangs in the i965 driver (Closes: #890866).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 27 Feb 2018 09:41:37 +0100

mesa (17.3.5-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 20 Feb 2018 12:16:33 +0100

mesa (17.3.4-1) unstable; urgency=medium

  * New upstream release.
    - winsys/radeon: Compute is_displayable in surf_drm_to_winsys
    (Closes: #888633).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 16 Feb 2018 11:56:39 +0100

mesa (17.3.3-1) unstable; urgency=medium

  * New upstream release.
  * Bump debhelper compat to 10.
  * Bump standards version to 4.1.3.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 19 Jan 2018 20:34:29 +0100

mesa (17.3.2-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 12 Jan 2018 15:11:42 +0200

mesa (17.3.1-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 22 Dec 2017 11:25:59 +0100

mesa (17.3.0-1) unstable; urgency=medium

  * New upstream release.
  * Bump standards version to 4.1.2.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 13 Dec 2017 17:11:15 +0100

mesa (17.3.0~rc5-1) experimental; urgency=medium

  * New upstream release candidate.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 21 Nov 2017 11:44:37 +0100

mesa (17.3.0~rc3-1) experimental; urgency=medium

  [ Andreas Boll ]
  * New upstream release candidate.

  [ Fabio Pedretti ]
  * control: Remove libtxc-dxtn* recommends for S3TC.
  * rules: Rename --enable-gallium-llvm to --enable-llvm.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 08 Nov 2017 14:00:55 +0100

mesa (17.3.0~rc2-1) experimental; urgency=medium

  * New upstream release candidate.
  * Bump libdrm-dev build-dep to 2.4.85 per configure.ac.
  * rules: Replace deprecated --disable-omx with --disable-omx-bellagio.
  * Update libgbm1.symbols.
  * Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 31 Oct 2017 14:12:08 +0100

mesa (17.2.5-1) unstable; urgency=medium

  [ Emilio Pozuelo Monfort ]
  * Make mesa-va-drivers enhance libva2 rather than libva1 (Closes: #881374).

  [ Timo Aaltonen ]
  * libglx-mesa0.links.in: Add libGLX_indirect.so.0 to link against
    libGLX_mesa so that GLX with a remote xserver works. (Closes: #881789)

  [ Andreas Boll ]
  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 17 Nov 2017 10:46:35 +0100

mesa (17.2.4-1) unstable; urgency=medium

  * New upstream release.
  * Build with dh_libva (Closes: #879064).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 31 Oct 2017 12:19:49 +0100

mesa (17.2.3-1) unstable; urgency=medium

  * New upstream bugfix release.
  * Bump standards version to 4.1.1 (Priority: extra -> optional).
  * Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 20 Oct 2017 11:59:49 +0200

mesa (17.2.2-1) unstable; urgency=medium

  * New upstream bugfix release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 03 Oct 2017 14:20:47 +0300

mesa (17.2.1-2) unstable; urgency=medium

  * Cherry-pick 2ef7f23820a (configure: check if -latomic is needed for
    __atomic_*) from upstream. Should fix FTBFS on armel (Closes:
    #874531).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 26 Sep 2017 11:25:54 +0200

mesa (17.2.1-1) unstable; urgency=medium

  * New upstream bugfix release. (LP: #1716250)

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Sep 2017 14:33:02 +0300

mesa (17.2.0-2) unstable; urgency=medium

  * control: Mark transitional packages M-A: same. (Closes: #874013,
    #874509).

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 06 Sep 2017 21:53:24 +0300

mesa (17.2.0-1) unstable; urgency=medium

  * New upstream release.
  * control: Make transitional packages arch:any. (Closes: #874013)
  * control: Add libglx-mesa0 to libgl1-mesa-glx Depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 05 Sep 2017 14:41:01 +0300

mesa (17.2.0~rc6-1) experimental; urgency=medium

  * New release candidate.
  * control, rules: Build gallium/svga only on x86.
  * rules: Improve readability.
  * control, rules: Bump llvm/clang to 5.0, and libclc to match.
  * control: Bump libgl1-mesa-dri to libglx-mesa0 Depends, it's needed
    for swrast used on some tests.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 01 Sep 2017 11:37:30 +0300

mesa (17.2.0~rc4-1) experimental; urgency=medium

  * Migrate mesa to build against libglvnd:
    + patches:
      - Fix gl.pc
    + control:
      - Add libglvnd-core-dev to build-depends
      - Drop libgles2-mesa, provide a transitional package which
        depends on libgles2
    + control, install, symbols, lintian-overrides:
      - Drop libegl1-mesa, libgl1-mesa-glx, add libegl-mesa0, libglx-mesa0,
        provide transitional packages for libegl1-mesa, libgl1-mesa-glx
      - Replace depends on libegl1-mesa with libegl1 or libglvnd-dev
      - Add Provides: libegl-vendor to libegl-mesa0 and libglx-vendor to
        libglx-mesa0
    + control, lib{,e}gl1-mesa-dev.install:
      - Drop .so files, provided by libglvnd-dev now
      - Depend on libglvnd-dev instead of libegl1-mesa/libgl1-mesa-glx
    + rules:
      - Add --enable-libglvnd
      - GLESv2 libs still get built, purge them from debian/tmp
      - Remove lib{EGL,GLX}_mesa.so which are not needed for anything

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 09:44:24 +0300

mesa (17.3.3-0ubuntu1) bionic; urgency=medium

  * New upstream release.
  * patches: Drop upstreamed patch, refresh egl-platform-mir.patch.
  * rules: Fix disabling omx.
  * libgbm1.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 26 Jan 2018 14:45:02 +0200

mesa (17.2.4-0ubuntu2) bionic; urgency=medium

  * Import changes from 17.2.2-0ubuntu2
  * Make mesa-va-drivers enhance libva2 rather than libva1.
  * vulkan-mir.patch: Dropped, breaks radeon vulkan driver. (LP: #1720890)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 08 Nov 2017 16:29:58 +0200

mesa (17.2.4-0ubuntu1) bionic; urgency=medium

  * New upstream bugfix release. (LP: #1727390)
  * i965-disable-l3-cache-alloc-for-ext-buffers.diff: Fix corruption
    running windowed 3D apps on dGPU. (LP: #1727401)

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 07 Nov 2017 15:36:09 +0200

mesa (17.2.2-0ubuntu2) bionic; urgency=medium

  [ Andreas Boll ]
  * Build with dh_libva (Closes: #879064).

 -- Jeremy Bicha <jbicha@ubuntu.com>  Sat, 04 Nov 2017 15:43:28 -0400

mesa (17.2.2-0ubuntu1) artful; urgency=medium

  * New upstream bugfix release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 03 Oct 2017 15:49:38 +0300

mesa (17.2.1-0ubuntu1) artful; urgency=medium

  * New upstream bugfix release. (LP: #1716250)

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Sep 2017 14:42:16 +0300

mesa (17.2.0-0ubuntu1) artful; urgency=medium

  * New upstream release.
  * control, rules: Bump llvm/clang to 5.0, and libclc to match.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 05 Sep 2017 16:24:49 +0300

mesa (17.2.0~rc4-0ubuntu3) artful; urgency=medium

  * control: Build libxatracker* only on x86.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 15:52:41 +0300

mesa (17.2.0~rc4-0ubuntu2) artful; urgency=medium

  * rules: Build gallium/svga only on x86.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 15:26:38 +0300

mesa (17.2.0~rc4-0ubuntu1) artful; urgency=medium

  * Migrate mesa to build against libglvnd:
    + patches:
      - Fix gl.pc
    + control:
      - Add libglvnd-core-dev to build-depends
      - Drop libgles2-mesa, provide a transitional package which
        depends on libgles2
    + control, install, symbols, lintian-overrides:
      - Drop libegl1-mesa, libgl1-mesa-glx, add libegl-mesa0, libglx-mesa0,
        provide transitional packages for libegl1-mesa, libgl1-mesa-glx
      - Replace depends on libegl1-mesa with libegl1 or libglvnd-dev
      - Add Provides: libegl-vendor to libegl-mesa0 and libglx-vendor to
        libglx-mesa0
    + control, lib{,e}gl1-mesa-dev.install:
      - Drop .so files, provided by libglvnd-dev now
      - Depend on libglvnd-dev instead of libegl1-mesa/libgl1-mesa-glx
    + rules:
      - Add --enable-libglvnd
      - GLESv2 libs still get built, purge them from debian/tmp
      - Remove lib{EGL,GLX}_mesa.so which are not needed for anything

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 09:44:24 +0300

mesa (17.3.3-0ubuntu1) bionic; urgency=medium

  * New upstream release.
  * patches: Drop upstreamed patch, refresh egl-platform-mir.patch.
  * rules: Fix disabling omx.
  * libgbm1.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 26 Jan 2018 14:45:02 +0200

mesa (17.2.4-0ubuntu2) bionic; urgency=medium

  * Import changes from 17.2.2-0ubuntu2
  * Make mesa-va-drivers enhance libva2 rather than libva1.
  * vulkan-mir.patch: Dropped, breaks radeon vulkan driver. (LP: #1720890)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 08 Nov 2017 16:29:58 +0200

mesa (17.2.4-0ubuntu1) bionic; urgency=medium

  * New upstream bugfix release. (LP: #1727390)
  * i965-disable-l3-cache-alloc-for-ext-buffers.diff: Fix corruption
    running windowed 3D apps on dGPU. (LP: #1727401)

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 07 Nov 2017 15:36:09 +0200

mesa (17.2.2-0ubuntu2) bionic; urgency=medium

  [ Andreas Boll ]
  * Build with dh_libva (Closes: #879064).

 -- Jeremy Bicha <jbicha@ubuntu.com>  Sat, 04 Nov 2017 15:43:28 -0400

mesa (17.2.2-0ubuntu1) artful; urgency=medium

  * New upstream bugfix release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 03 Oct 2017 15:49:38 +0300

mesa (17.2.1-0ubuntu1) artful; urgency=medium

  * New upstream bugfix release. (LP: #1716250)

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Sep 2017 14:42:16 +0300

mesa (17.2.0-0ubuntu1) artful; urgency=medium

  * New upstream release.
  * control, rules: Bump llvm/clang to 5.0, and libclc to match.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 05 Sep 2017 16:24:49 +0300

mesa (17.2.0~rc4-0ubuntu3) artful; urgency=medium

  * control: Build libxatracker* only on x86.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 15:52:41 +0300

mesa (17.2.0~rc4-0ubuntu2) artful; urgency=medium

  * rules: Build gallium/svga only on x86.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 15:26:38 +0300

mesa (17.2.0~rc4-0ubuntu1) artful; urgency=medium

  * New upstream release candidate.
  * Merge from Debian.
  * patches: Refresh Mir support patches.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 15 Aug 2017 10:28:24 +0300

mesa (17.2.0~rc3-1) experimental; urgency=medium

  * New upstream release candidate.
  * control: Add wayland-protocols (>= 1.9) to Build-Depends.
  * control: Bump libdrm-dev build dependency to 2.4.82.
  * libegl1-mesa.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 08 Aug 2017 09:37:22 +0300

mesa (17.1.5-1) unstable; urgency=medium

  * Team upload.

  [ Jordan Justen ]
  * New upstream release.
  * Update Standards-Version to 4.0.0 for lintian
    out-of-date-standards-version

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 25 Jul 2017 09:04:49 +0300

mesa (17.1.4-1ubuntu1) artful; urgency=medium

  * Merge from Debian.
    - update/refresh Mir patches

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 03 Jul 2017 19:04:38 +0300

mesa (17.1.4-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 03 Jul 2017 18:29:51 +0300

mesa (17.1.3-2) unstable; urgency=medium

  * Upload to unstable.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Tue, 27 Jun 2017 00:26:18 +0200

mesa (17.1.3-1) experimental; urgency=medium

  * New upstream release.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Mon, 26 Jun 2017 00:03:57 +0200

mesa (17.1.2-2ubuntu2) artful; urgency=medium

  * egl-platform-mir.patch
  * egl-platform-rs.patch
    - Fix configure.ac so that the Mir EGL platforms are actually
      built. (LP: #1526658) (LP: #1696797)

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Fri, 16 Jun 2017 17:51:50 +1000

mesa (17.1.2-2ubuntu1) artful; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 13 Jun 2017 10:57:29 +0300

mesa (17.1.2-2) experimental; urgency=medium

  * rules: --with-egl-platforms is deprecated, use --with-platforms
    instead.
  * rules: Enable surfaceless EGL platform.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 13 Jun 2017 10:50:33 +0300

mesa (17.1.2-1ubuntu1) artful; urgency=medium

  * Merge from Debian.
  * Refresh patches.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 07 Jun 2017 13:24:07 +0300

mesa (17.1.2-1) experimental; urgency=medium

  * New upstream release.
  * Update d/upstream/signing-key.asc with key from Juan A. Suarez Romero.
  * README.source: Add documentation about how to update d/u/signing-
    key.asc.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 07 Jun 2017 10:32:08 +0300

mesa (17.1.0-1ubuntu1) artful; urgency=medium

  * Merge from Debian.
  * i915-dont-default-to-2.1.patch: Dropped, implemented upstream.
  * Refresh patches.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 12 May 2017 16:35:35 +0300

mesa (17.1.0-1) experimental; urgency=medium

  * New upstream release.
  * control: Add zlib1g-dev to build-depends.
  * control: Bump libdrm-dev build-dep to 2.4.80.
  * libgbm1.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 11 May 2017 09:59:50 +0300

mesa (17.0.5-0ubuntu1) artful; urgency=medium

  * New upstream bugfix release. (LP: #1686344)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 04 May 2017 20:07:36 +0300

mesa (17.0.4-1ubuntu1) artful; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 26 Apr 2017 11:01:18 +0300

mesa (17.0.4-1) experimental; urgency=medium

  * New upstrem release.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 19 Apr 2017 16:14:20 +0300

mesa (17.0.3-1ubuntu1) zesty; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 03 Apr 2017 19:03:10 +0300

mesa (17.0.3-1) experimental; urgency=medium

  * New upstream release.
  * Update d/upstream/signing-key.asc with key from Andres Gomez.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 03 Apr 2017 11:35:58 +0200

mesa (17.0.2-1ubuntu2) zesty; urgency=medium

  [ Cemil Azizoglu ]
  * egl-platform-rs.patch: Add support for Mir's new render surface based
    EGL driver
  * khr_platform_mir.patch: Add EGL_KHR_platform_mir
  * vulkan-mir.patch: Add Vulkan WSI driver for Mir

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 28 Mar 2017 19:22:29 +0300

mesa (17.0.2-1ubuntu1) zesty; urgency=medium

  * Merge from Debian experimental.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 21 Mar 2017 13:36:51 +0200

mesa (17.0.2-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release.

  [ Andreas Boll ]
  * Require LLVM on sparc64:
    - Enables radeonsi, llvmpipe and radv drivers.
    - Enables OpenCL support.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 21 Mar 2017 11:35:09 +0100

mesa (17.0.1-1ubuntu1) zesty; urgency=medium

  * Merge from Debian.
    - enable llvmpipe on ppc64el (LP: #1489483)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 10 Mar 2017 14:25:48 +0200

mesa (17.0.1-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release.

  [ Andreas Boll ]
  * Declare Multi-Arch: same for mesa-vulkan-drivers (Closes: #853897).
  * Cherry-pick 7d1195c (clover: Work around build failure with
    AltiVec.) from upstream master branch.
  * Enable OpenCL on ppc64el (Closes: #810913).
  * Require LLVM on more architectures (armel mips mips64el mipsel
    powerpc ppc64):
    - Enables radeonsi, llvmpipe and radv drivers.
    - Enables OpenCL support.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 06 Mar 2017 15:15:00 +0100

mesa (17.0.0-1ubuntu1) zesty; urgency=medium

  [ Timo Aaltonen ]
  * Merge from Debian.
  * Drop patches for 16k wide textures on i965, upstream.

  [ Cemil Azizoglu ]
  * Updated egl-platform-mir.patch.
    - remove device_name field (removed from the generic struct in the
      upstream and made wayland specific).
    - Change MirSurfaceParameters into MirWindowParameters.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 13 Feb 2017 16:19:39 +0200

mesa (17.0.0-1) experimental; urgency=medium

  * New upstream release.
  * control, rules: Bump clang/llvm to 4.0, and libclc to match.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 13 Feb 2017 15:46:47 +0200

mesa (17.0.0~rc3-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * Drop libgles1.

  [ Andreas Boll ]
  * New upstream release candidate.
  * Drop transitional package libegl1-mesa-drivers.
  * Remove Breaks/Replaces from pre-jessie.
  * Explicitly disable LLVM on some arches. Should fix FTBFS on x32.
  * Drop configure.ac-Require-LLVM-for-r300-only-on-x86-and-x.patch,
    upstream.
  * Cherry-pick 045f38a (vulkan: Don't install vk_platform.h or
    vulkan.h).
  * Update list of unwanted vulkan headers.
  * Drop unused git-cleanup.sh script. Replaced with usage of --extend-
    diff-ignore some time ago.
  * Enable building etnaviv and imx on armhf (Closes: #852614).
    - Bump libdrm-dev build-dep to 2.4.74-2~.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 06 Feb 2017 19:05:30 +0100

mesa (17.0.0~rc2-1) experimental; urgency=medium

  * New upstream release candidate.
  * Add configure.ac-Require-LLVM-for-r300-only-on-x86-and-x.patch:
    Should fix FTBFS on some arches.
  * rules: Explicitly enable/disable gbm. Should fix FTBFS on hurd.
  * Revert to debhelper compat 9 (Workaround for #851130).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 25 Jan 2017 16:45:53 +0100

mesa (17.0.0~rc1-1) experimental; urgency=medium

  * New upstream release candidate.
  * Bump libdrm-dev build-dep to 2.4.74 per configure.ac.
  * Bump libwayland-dev build-dep to 1.11.0 per configure.ac.
  * Remove libgcrypt20-dev build-dep per configure.ac.
  * Update watch url.
  * Drop vl-zscan-fix-Fix-trivial-sign-compare-warnings.diff and r600-
    sb-Fix-loop-optimization-related-hangs-on-eg.diff, upstream.
  * Drop workaround-binutils-mips-844357.diff, binutils regression has
    been fixed.
  * Rename EGL_DISPLAYS to EGL_PLATFORMS.
  * Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 19 Jan 2017 18:39:06 +0100

mesa (13.0.6-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 21 Mar 2017 14:02:03 +0100

mesa (13.0.5-1) unstable; urgency=medium

  * New upstream release.
  * Switch mesa3d.org URLs to https.
  * Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 21 Feb 2017 13:13:50 +0100

mesa (13.0.4-1ubuntu1) zesty; urgency=medium

  * Merge from debian.
  * radeonsi-always-leave-poly-offset-in-a-valid-state.diff:
    Dropped, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 06 Feb 2017 09:47:24 +0200

mesa (13.0.4-1) unstable; urgency=medium

  * New upstream release.
  * Drop vl-zscan-fix-Fix-trivial-sign-compare-warnings.diff and r600-
    sb-Fix-loop-optimization-related-hangs-on-eg.diff, upstream.
  * Drop workaround-binutils-mips-844357.diff, binutils regression has
    been fixed (Closes: #852030).
  * Revert to debhelper compat 9 (Workaround for #851130).
  * Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 01 Feb 2017 15:36:10 +0100

mesa (13.0.3-1ubuntu3) zesty; urgency=medium

  * control: Add dh-autoreconf back to build-deps, for backports.
  * radeonsi-always-leave-poly-offset-in-a-valid-state.diff:
    Fix fdo#99451.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 19 Jan 2017 18:59:24 +0200

mesa (13.0.3-1ubuntu2) zesty; urgency=medium

  * rules: Drop forcing -O2 to fix ppc64el ftbfs, gcc got fixed already.
    (LP: #1605796)
  * control: Fix dependencies for ubuntuBSD. (LP: #1565080)
  * compat,rules: Don't bump compat to 10, breaks applying patches
    before autoreconf which we need for the Mir EGL platform.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 12 Jan 2017 09:49:20 +0200

mesa (13.0.3-1ubuntu1) zesty; urgency=medium

  * Merge from Debian.
  * intel: Add patches to support 16k textures. (LP: #1655556)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 11 Jan 2017 09:45:19 +0200

mesa (13.0.3-1) unstable; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release.

  [ Andreas Boll ]
  * Add vl-zscan-fix-Fix-trivial-sign-compare-warnings.diff: Fixes mpeg2
    decoding on radeon GPUs without native mpeg2 support (Closes:
    #846297).  Thanks to Jörg-Volker Peetz for reporting and tracking
    down this regression!
  * Add r600-sb-Fix-loop-optimization-related-hangs-on-eg.diff: Fixes
    GPU hangs on r600g (Evergreen and Northern Islands GPUs) in many
    games.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 10 Jan 2017 17:38:23 +0200

mesa (13.0.2-3) unstable; urgency=medium

  * Fix typo to correctly disable asm on x32. Should fix FTBFS on x32.
  * Add debian/source/format file.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 15 Dec 2016 16:42:25 +0100

mesa (13.0.2-2) unstable; urgency=medium

  * Bump llvm/libclang build-deps to >= 1:3.9.1.
    - Enables support for OpenCL on AMD Polaris GPUs (Closes: #848173).
  * Cherry-pick 6dc96de (cso: don't release sampler states that are
    bound) from upstream master branch. Fixes random GPU hangs on
    radeonsi (AMD Southern Islands and newer) in many games.
  * Bump debhelper compat to 10.
  * Stop passing --disable-silent-rules to configure, debhelper does
    that for a while.
  * Drop no longer needed dpkg-dev versioned build-dependency.
  * Drop redundant cross-build detection, debhelper does this for us
    already.
  * Disable assembly usage on x32. Related to Bug #758094.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 15 Dec 2016 15:16:56 +0100

mesa (13.0.2-1ubuntu1) zesty; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 29 Nov 2016 18:15:09 +0200

mesa (13.0.2-1) unstable; urgency=medium

  * New upstream release.
  * workaround-binutils-mips-844357.diff: Add workaround for broken
    binutils on mips*. Fixes invalid symbol table of libGL.so.1. See
    also Bug #844357.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 29 Nov 2016 16:29:00 +0100

mesa (13.0.1-2) unstable; urgency=medium

  * Cherry-pick commit 1809f17 (mesa: Drop PATH_MAX usage.) from
    upstream 13.0 branch. Should fix FTBFS on hurd (Closes: #843588).
  * Enable extra HUD support for showing I/O stats of block/NIC devices.
  * Enable HUD lmsensors support.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 28 Nov 2016 13:32:31 +0100

mesa (13.0.1-1ubuntu1) zesty; urgency=medium

  * Merge from Debian experimental.
  * dri3-fix-totem-with-libva.diff: Dropped, upstream.
  * egl-platform-mir.patch: Refreshed.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 23 Nov 2016 16:36:34 +0200

mesa (13.0.1-1) experimental; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 14 Nov 2016 16:23:42 +0100

mesa (13.0.0-1) experimental; urgency=medium

  * New upstream release.
  * Make mesa-vulkan-drivers.install more generic. Should fix FTBFS on
    some arches.
  * rules: Remove superfluous linux check.
  * rules: Remove vulkan_intel.h only where it get installed in tmp.
    Should fix FTBFS on some more arches.
  * source/local-options: Update extend-diff-ignore.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 02 Nov 2016 11:49:13 +0100

mesa (13.0.0~rc2-1) experimental; urgency=medium

  * New upstream release candidate.
  * control, rules: Use llvm/clang 3.9 (Closes: #836913).
  * control: Bump libclc dependencies.
  * Bump libdrm-dev build-dep to 2.4.69 per configure.ac.
  * Remove libudev-dev and libudev1 dependencies per configure.ac.
  * Enable OpenCL on kfreebsd-* since we don't need udev anymore.
  * Enable radv vulkan driver.
  * control: Remove superfluous linux- prefix.
  * not-installed: wglext.h got dropped from the tarball.
  * mesa-common-dev: Remove mesa_glinterop.h, upstream doesn't install
    it anymore.
  * Update libgles2-mesa.symbols.
  * Update libgl1-mesa-glx.symbols.
  * source/local-options: Update extend-diff-ignore.
  * Update mesa-vulkan-drivers.lintian-overrides.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 25 Oct 2016 10:59:08 +0200

mesa (12.0.4-2ubuntu1) zesty; urgency=medium

  * Merge from Debian
    - New upstream bugfix release. (LP: #1641017)
  * dri3-fix-totem-with-libva.diff: Dropped, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 23 Nov 2016 14:04:45 +0200

mesa (12.0.4-2) unstable; urgency=medium

  * Limit new glx symbols to !hurd-any. Should fix FTBFS on hurd.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 11 Nov 2016 18:31:40 +0100

mesa (12.0.4-1) unstable; urgency=medium

  * New upstream release.
  * not-installed: wglext.h got dropped from the tarball.
  * mesa-common-dev: Remove mesa_glinterop.h, upstream doesn't install
    it anymore.
  * Update symbols of libegl1-mesa and libgl1-mesa-glx.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 11 Nov 2016 16:35:09 +0100

mesa (12.0.3-3) unstable; urgency=medium

  * Limit libgbm1 dependency to !hurd-any (Closes: #841774).  Thanks,
    Samuel Thibault!

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 24 Oct 2016 10:18:09 +0200

mesa (12.0.3-2) unstable; urgency=medium

  * control: Add libtxc-dxtn-s2tc as an alternative in libgl1-mesa-dri's
    Recommends (Closes: #839658).
  * control: Add strictly versioned dependency on libgbm1 to libegl1-
    mesa.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 21 Oct 2016 09:49:37 +0200

mesa (12.0.3-1ubuntu2) yakkety; urgency=medium

  * dri3-fix-totem-with-libva.diff: Fix apps crashing when libva is
    being used with dri3.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 06 Oct 2016 11:58:42 +0300

mesa (12.0.3-1ubuntu1) yakkety; urgency=medium

  * Merge from Debian.

  [ Christopher James Halse Rogers ]
  * egl-platform-mir.patch: Updated for upstream changes to dri2_initialize
    in egl_dri2.c. (LP: #1620934, #1620994)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 16 Sep 2016 10:07:05 +0300

mesa (12.0.3-1) unstable; urgency=medium

  * New upstream release.
  * Enable vc4 on arm64.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 15 Sep 2016 13:38:40 +0200

mesa (12.0.2-1ubuntu1) yakkety; urgency=medium

  * Merge from Debian.
  * install.in: Modify a bit to be more in line with Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 06 Sep 2016 15:05:17 +0300

mesa (12.0.2-1) unstable; urgency=medium

  * New upstream release.
  * rules: Pass -c4 to dpkg-gensymbols through dh_makeshlibs, got
    dropped with the migration to dh.
  * rules: Replace deprecated debhelper option -s with -a.
  * copyright: Sync with docs/license.html.
  * Replace almost all dynamic debhelper config files with static files.
  * rules: Drop unneeded override_dh_builddeb, xz is the default
    compression type for dpkg-deb nowadays.
  * Replace mesa-vulkan-drivers.post{inst,rm} with mesa-vulkan-
    drivers.triggers.
  * control: Only build-dep on libgcrypt20-dev on architectures where we
    build mesa-vulkan-drivers.
  * source/local-options: Add more files to extend-diff-ignore option.
    Fixes 87 patch-system-but-direct-changes-in-diff lintian warnings.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 06 Sep 2016 10:37:23 +0200

mesa (12.0.1-3ubuntu2) yakkety; urgency=medium

  * debian/rules: Work around gcc ICE on ppc64el by forcing -O2.

 -- Adam Conrad <adconrad@ubuntu.com>  Fri, 22 Jul 2016 16:46:48 -0600

mesa (12.0.1-3ubuntu1) yakkety; urgency=medium

  * egl-platform-mir.patch: Don't enable support for ABGR8888. (LP:
    #1473901)

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Jul 2016 11:36:21 +0300

mesa (12.0.1-3) experimental; urgency=medium

  * rules, control: Build mesa-vulkan-drivers only on linux-
    {amd64,i386,x32}.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Jul 2016 16:31:00 +0300

mesa (12.0.1-2) experimental; urgency=medium

  * rules: Drop MESA_GIT_SHA1 hack because upstream uses build timestamp
    instead.
  * rules, not-installed: Handle removing unwanted vulkan headers in
    rules instead.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Jul 2016 11:45:01 +0300

mesa (12.0.1-1ubuntu1) yakkety; urgency=medium

  * Merge from debian experimental.
  * Rebase Mir egl platform patch.
  * Re-enable llvm on ppc64el to see if unity tests work.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Jul 2016 08:37:54 +0300

mesa (12.0.1-1) experimental; urgency=medium

  * New upstream release candidate.
  * symbols: Updated.
  * mesa-common-dev: Add mesa_glinterop.h.
  * Enable building intel vulkan driver on linux & kfreebsd, add
    libgcrypt20-dev and libvulkan-dev to build-depends.
  * rules: Tidy up override_dh_clean.
  * rules: Use package version for MESA_GIT_SHA1.
  * rules: Fix install of va drivers.
  * gallivm-disable-avx512-features.diff: Removed, included upstream.
  * control, rules: Enable llvm/opencl on arm64. (LP: #1585942)

 -- Timo Aaltonen <tjaalton@debian.org>  Sat, 16 Jul 2016 13:03:04 +0300

mesa (11.2.2-1ubuntu1) yakkety; urgency=medium

  * Merge from debian. (LP: #1549849)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 13 May 2016 07:34:30 +0300

mesa (11.2.2-1) unstable; urgency=medium

  * New upstream release.
  * control: Bump Standards-Version to 3.9.8 (no changes).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 11 May 2016 12:22:28 +0200

mesa (11.2.1-2) unstable; urgency=medium

  * gallivm-disable-avx512-features.diff: LLVM 3.8 enables AVX512 on all
    Skylake CPU's when it's a server-CPU feature. Disable it from the
    llvmpipe driver so that it doesn't crash on non-server Skylake.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 09 May 2016 15:17:24 +0300

mesa (11.2.1-1ubuntu1) yakkety; urgency=medium

  * Merge from Debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 21 Apr 2016 00:13:44 +0300

mesa (11.2.1-1) experimental; urgency=medium

  * New upstream release.
  * control, rules: Use llvm/clang 3.8.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 18 Apr 2016 11:25:00 +0300

mesa (11.2.0-1ubuntu2) xenial; urgency=medium

  * control, rules: Enable mesa-opencl-icd now that the archive reorg
    allows to build-depend on packages from universe. (LP: #1319835)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 14 Apr 2016 14:20:56 +0300

mesa (11.2.0-1ubuntu1) xenial; urgency=medium

  * Merge from debian. (LP: #1481832. #1548845)

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 05 Apr 2016 10:19:51 +0300

mesa (11.2.0-1) experimental; urgency=medium

  [ Andreas Boll ]
  * control: Fix vdpau-va-driver Breaks/Replaces for mesa-va-drivers
    (Closes: #819655).
  * control: Bump Standards-Version to 3.9.7 (no changes).
  * watch: Update url to use https instead of ftp.

  [ Timo Aaltonen ]
  * New upstream release.
  * rules: Disable tests for now, most of them weren't run before anyway
    and they cause unnecessary ftbfs on some archs.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 31 Mar 2016 16:52:51 +0200

mesa (11.2.0~rc4-1) experimental; urgency=medium

  * New upstream release candidate.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 30 Mar 2016 09:35:05 +0300

mesa (11.2.0~rc3-2) experimental; urgency=medium

  * mesa-va-drivers: Build gallium VA driver, and add symlinks for
    nouveau, r600 and radeonsi.
  * control: Add vdpau-va-driver Breaks/Replaces for mesa-va-drivers.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 24 Mar 2016 14:01:20 +0200

mesa (11.2.0~rc3-1) experimental; urgency=medium

  * New upstream release candidate.
  * Drop upstreamed patches.
  * libgl1-mesa-glx.symbols: Remove dropped symbols.
  * rules,control: Drop -dbg packages, we have -dbgsym now.
  * rules, *.install.in, not-installed: Drop dri/-build prefix, we build
    everything in one pass nowadays.
  * control: Bump libdrm-dev build-dep to 2.4.67 for freedreno.
  * rules: Migrate to dh.
  * control: Add dh-autoreconf to build-depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 09 Mar 2016 01:01:55 +0200

mesa (11.1.3-1) unstable; urgency=medium

  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Mon, 18 Apr 2016 19:04:40 +0200

mesa (11.1.2-1ubuntu2) xenial; urgency=medium

  * debian/patches/glibc2.23-pthreads-compat.patch: fix misuse of
    pthread_barrier API.  Closes LP: #1559842.

 -- Steve Langasek <steve.langasek@ubuntu.com>  Mon, 21 Mar 2016 05:59:56 +0000

mesa (11.1.2-1ubuntu1) xenial; urgency=medium

  * Merge from Debian.
  * control, rules: Use llvm-3.8 for OpenGL 4.1 support. (LP: #1535500)

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 09 Feb 2016 13:40:00 +0200

mesa (11.1.2-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 11 Feb 2016 13:14:08 +0200

mesa (11.1.1-2) unstable; urgency=medium

  * Limit the symbols glXGetDriverConfig and glXGetScreenDriver to
    arch=!hurd-any (Fixes FTBFS on hurd).

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 15 Jan 2016 18:44:52 +0100

mesa (11.1.1-1ubuntu2) xenial; urgency=medium

  * Remove architecture restrictions on Mir EGL platform;
    Mir is now built everywhere.

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Thu, 21 Jan 2016 17:07:05 -0600

mesa (11.1.1-1ubuntu1) xenial; urgency=medium

  * Merge from Debian.
  * patches: Refreshed.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 04 Dec 2015 12:40:46 +0200

mesa (11.1.1-1) experimental; urgency=medium

  * New upstream release.
  * Enable support for virgl (Closes: #807774).
  * Enable support for vc4 (Closes: #809406).
  * Enable support for freedreno on arm64.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 14 Jan 2016 11:27:28 +0100

mesa (11.1.0-1) experimental; urgency=medium

  * New upstream release.
  * Add a patch to remove the unused symbol
    _glapi_create_table_from_handle from libGL.so.1.
  * Replace shlibs file with a symbols file for libgl1-mesa-glx.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Tue, 15 Dec 2015 20:24:10 +0100

mesa (11.1.0~rc3-1) experimental; urgency=medium

  * New upstream release candidate.
  * Bump libdrm-dev build-dep to 2.4.65.
  * Update symbols for libgles2-mesa and libxatracker2.
  * Remove Breaks/Conflicts/Provides/Replaces from pre-wheezy.
  * Remove duplicated field "Priority" from package libgl1-mesa-dri.
  * Declare Multi-Arch: same for mesa-opencl-icd{,-dbg} (Closes:
    #804919).
  * Add a Lintian override for symbols-declares-dependency-on-other-
    package libgbm1-private.
  * Remove obsolete libgl1-mesa-dri.lintian-overrides.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 10 Dec 2015 12:22:54 +0100

mesa (11.0.8-1ubuntu1) xenial; urgency=medium

  * Merge from debian.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 Dec 2015 16:59:55 +0200

mesa (11.0.8-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 Dec 2015 16:12:35 +0200

mesa (11.0.7-1ubuntu1) xenial; urgency=medium

  * Merge from Debian.
    - new bugfix release

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 10 Dec 2015 14:35:28 +0200

mesa (11.0.7-1) unstable; urgency=medium

  [ Julien Cristau ]
  * Update debian/copyright from docs/license.html (closes: #806805).  Thanks,
    Steinar H. Gunderson!

  [ Andreas Boll ]
  * New upstream release.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Wed, 09 Dec 2015 21:18:17 +0100

mesa (11.0.6-1ubuntu1) xenial; urgency=medium

  * Merge from Debian.
    - new bugfix release

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 30 Nov 2015 16:24:08 +0200

mesa (11.0.6-1) unstable; urgency=medium

  * New upstream release.
  * Bump libvdpau-dev build-dep.
  * Add docs-Replace-sourceforge-logo-with-a-text-link.patch (Fixes
    Lintian error privacy-breach-logo).
  * Add some Lintian overrides for package-name-doesnt-match-sonames.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Fri, 27 Nov 2015 08:59:30 +0100

mesa (11.0.5-1ubuntu2) xenial; urgency=medium

  * debian/{rules,control}: Duplicate ppc/arm64 Mir disabling for s390x.

 -- Adam Conrad <adconrad@ubuntu.com>  Tue, 24 Nov 2015 00:08:47 -0700

mesa (11.0.5-1ubuntu1) xenial; urgency=medium

  * Merge from Debian.
    - new upstream bugfix release

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 12 Nov 2015 16:49:01 +0200

mesa (11.0.5-1) unstable; urgency=medium

  * New upstream release.
  * Add myself to Uploaders.

 -- Andreas Boll <andreas.boll.dev@gmail.com>  Thu, 12 Nov 2015 11:55:02 +0100

mesa (11.0.4-1ubuntu1) xenial; urgency=medium

  [ Timo Aaltonen ]
  * Merge from Debian.
  * patches: Dropped patches included in this release, fix Mir patch
    FTBFS. (LP: #1509005)

  [ Christopher James Halse Rogers ]
  * patches: Fix Mir patch harder.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 28 Oct 2015 07:58:56 +0200

mesa (11.0.4-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
  * Cherry-pick commit 70e91d6 (i965: Remove early release of DRI2
    miptree) from upstream (Closes: #769518).
  * control: Add libclc-amdgcn to mesa-opencl-icd depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 26 Oct 2015 10:30:04 +0200

mesa (11.0.2-1ubuntu4) wily; urgency=medium

  * core-fix-EXT_texture_format_BGRA8888.patch: Cherry pick upstream commit
    fixing incorrectly-strict error handling in format code. Fixes black
    windows in Weston and Mir (LP: #1504387)

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Fri, 09 Oct 2015 14:45:54 +1100

mesa (11.0.2-1ubuntu3) wily; urgency=medium

  * d/patches/egl-platform-mir.patch: add mirclient dependency (LP: #1503450)

 -- Tiago Stürmer Daitx <tiago.daitx@canonical.com>  Tue, 06 Oct 2015 22:05:12 +0000

mesa (11.0.2-1ubuntu2) wily; urgency=medium

  * control, rules: Disable LLVM on ppc64el again, until unity tests
    pass with it.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 02 Oct 2015 15:45:56 +0300

mesa (11.0.2-1ubuntu1) wily; urgency=medium

  * Merge from debian.
    - new upstream bugfix release

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 30 Sep 2015 15:19:09 +0300

mesa (11.0.2-1) experimental; urgency=medium

  [ Andreas Boll ]
  * control: Bump libclc dependencies.

  [ Timo Aaltonen ]
  * New upstream release.
  * rules, control: Enable llvmpipe on ppc64el. (LP: #1489483)

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 29 Sep 2015 16:35:59 +0300

mesa (11.0.0-1ubuntu1) wily; urgency=medium

  * Merge from Debian. (LP: #1484279)
  * egl-platform-mir.patch: Updated.
  * i965-remove-early-release-of-dri2-miptree.patch: Add a workaround to
    fix crashes in brw_meta_fast_clear. (LP: #1492037)
  * control, rules: Default to llvm-3.6 again, because 3.7 won't be in
    main for wily.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 Sep 2015 19:20:17 +0300

mesa (11.0.0-1) experimental; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 14 Sep 2015 14:23:13 +0300

mesa (11.0.0~rc3-1) experimental; urgency=medium

  [ Andreas Boll ]
  * Use https for Vcs-* fields.

  [ Timo Aaltonen ]
  * New upstream release candidate.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 07 Sep 2015 15:04:32 +0300

mesa (11.0.0~rc2-1) experimental; urgency=medium

  * New upstream release candidate.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 02 Sep 2015 11:38:28 +0300

mesa (11.0.0~rc1-1) experimental; urgency=medium

  [ Andreas Boll ]
  * New upstream release candidate.
  * control: Drop unneeded libomxil-bellagio-dev build-dep.
  * rules: Explicitly disable vaapi (Closes: #789100).
  * control: Update upstream url.
  * control: Update Vcs-* fields.
  * Drop libgl1-mesa-swx11* packages.
  * control: Update package description.

  [ Timo Aaltonen ]
  * control: Delete commented out libgl1-mesa-glx-i686 from the file.
  * control: Bump llvm/libclang build-deps to match versions where
    amdgpu is enabled.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 24 Aug 2015 11:15:16 +0300

mesa (11.0.0~git20150817-1) experimental; urgency=medium

  * New upstream snapshot
  * control: Bump libdrm build-dep to 2.4.63.
  * control: Add libomxil-bellagio-dev to build-deps.
  * rules: Disable gles1 & 2 for swx11 builds.
  * libegl1-mesa.symbols, libgles2-mesa.symbols: Updated
  * control, rules: Migrate to llvm 3.7.
  * rules: Enable llvmpipe on armhf again.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 18 Aug 2015 07:53:45 +0300

mesa (10.6.8-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 22 Sep 2015 17:21:49 +0300

mesa (10.6.7-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 14 Sep 2015 11:15:23 +0300

mesa (10.6.5-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.

  [ Julien Cristau ]
  * Break libopengl-perl (<< 0.6704+dfsg-2), thanks to Niko Tyni
    (closes: #796918)

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 02 Sep 2015 12:26:37 +0300

mesa (10.6.4-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Wed, 19 Aug 2015 09:11:47 +0300

mesa (10.6.3-1ubuntu1) wily; urgency=medium

  * Merge from debian-experimental git.
  * Drop skl-*, i965-* patches, upstream.
  * egl-platform-mir.patch: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 11 Aug 2015 08:00:09 +0300

mesa (10.6.3-1) unstable; urgency=medium

  * New upstream release.
  * libegl1-mesa.symbols: Updated.
  * not-installed: Dropped wmesa.h which is gone.
  * libgles{1,2}-mesa.symbols: Updated.
  * libegl1-mesa.symbols: Drop a spurious comment.
  * source/local-options: Updated extend-diff-ignore.
  * mesa-common-dev.docs: Updated.
  * Delete i965-do_blit...patch, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 28 Jul 2015 11:12:44 +0300

mesa (10.5.9-2ubuntu1) wily; urgency=medium

  * Merge from Debian unstable.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 10 Jul 2015 14:02:38 +0300

mesa (10.5.9-2) unstable; urgency=medium

  * i965-do_blit_drawpixels-decode-array-formats.patch: Fix a regression
    since 10.5.5, allow using blit fastpath again.

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 10 Jul 2015 13:01:40 +0300

mesa (10.5.9-1ubuntu1) wily; urgency=medium

  * Merge from Debian unstable.
  * skl-use-1-register-for-uniform-pull.diff dropped, upstream.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 06 Jul 2015 10:03:58 +0300

mesa (10.5.9-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 06 Jul 2015 08:56:26 +0300

mesa (10.5.8-1ubuntu2) wily; urgency=medium

  * i965-store-the-gpu-revision.diff,
    i965-refactor-simd16-to-2xsimd8-checks.diff,
    i965-define-i915-param-revision.diff,
    skl-break-down-simd16-3-source-instructions.diff:
    Fix noise in Unity, torcs et al. (LP: #1471213)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 03 Jul 2015 15:08:26 +0300

mesa (10.5.8-1ubuntu1) wily; urgency=medium

  * Merge from Debian unstable.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 25 Jun 2015 21:34:12 +0300

mesa (10.5.8-1) unstable; urgency=medium

  * New upstream release.

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 25 Jun 2015 18:50:11 +0300

mesa (10.5.7-1ubuntu1) wily; urgency=medium

  * Merge from Debian unstable, remaining changes
    - libclc/clang is not in main, drop building mesa-opencl-icd
    - drop building the software rasterizer
    - llvm-3.6 is the default on Ubuntu, use it
    - install GL/EGL libs under a separate dir to not conflict with
      blobs, use alternatives for ldconfig
    - patches:
      egl-platform-mir.patch: Mir EGL platform
      i915-dont-default-to-2.1.patch: revert of i915 forced OpenGL
        2.1 commit
      skl-*: backports for Skylake
  * control: Add libmirclient-dev to build-depends.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 16 Jun 2015 14:33:48 +0300

mesa (10.5.7-1) unstable; urgency=medium

  * New upstream release.
  * control: Bump policy to 3.9.6, no changes.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 16 Jun 2015 11:57:08 +0300

mesa (10.5.5-1) unstable; urgency=medium

  [ Maarten Lankhorst ]
  * New upstream release.
  * Update watch file.

  [ Timo Aaltonen ]
  * libegl1-mesa.symbols: Updated.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 12 May 2015 13:26:49 +0300

mesa (10.5.2-0ubuntu1) vivid; urgency=medium

  * Merge from unreleased experimental git
    - new upstream bugfix release
  * egl-platform-mir.patch: Refreshed.

 -- Timo Aaltonen <tjaalton@debian.org>  Mon, 30 Mar 2015 15:07:30 +0300

mesa (10.5.0-0ubuntu1) vivid; urgency=medium

  * Merge with unreleased debian-experimental.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 09 Mar 2015 14:10:00 +0100

mesa (10.5.0~rc3-0ubuntu1) vivid; urgency=medium
  
  * Merge with unreleased debian-experimental.
  * Drop skl-implement-wadisable1ddepthstencil.diff, upstreamed.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 02 Mar 2015 11:45:53 +0100

mesa (10.5.0~rc2-0ubuntu1) vivid; urgency=medium
  
  * Merge with unreleased debian-experimental.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 16 Feb 2015 09:35:43 +0100

mesa (10.5.0~rc1-0ubuntu2) vivid; urgency=medium

  * Add a couple of backported fixes for Skylake:
    skl-use-1-register-for-uniform-pull.diff
    skl-use-vec4-datatypes-for-message-header.diff
    skl-implement-wadisable1ddepthstencil.diff

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 20 Feb 2015 08:54:44 +0200

mesa (10.5.0~rc1-0ubuntu1) vivid; urgency=medium

  [ Timo Aaltonen ]
  * Update Mir patch.

  [ Maarten Lankhorst ]
  * Merge from unreleased debian-experimental.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 19 Feb 2015 11:28:53 +0100

mesa (10.4.2-2ubuntu5) vivid; urgency=medium

  * Fix ftbfs from no longer including libmirclient-dev.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 11 Feb 2015 09:21:54 +0100

mesa (10.4.2-2ubuntu4) vivid; urgency=medium

  * debian/control:
    - Change build-dep for mir to mir-client-platform-mesa-dev.
  * debian/patches/egl-platform-mir.patch:
    - Fix potential double free (LP: #1414999).
    - Fix gbm_device leak (LP: #1419704).
    - Fix dri_buffers[front/back] leak (LP: #1419710).
    - Use mir-client-platform-mesa-dev to get Mir build flags.

 -- Alexandros Frantzis <alexandros.frantzis@canonical.com>  Mon, 09 Feb 2015 12:35:56 +0200

mesa (10.4.2-2ubuntu3) vivid; urgency=medium

  * egl-platform-mir.patch: Fix memory leak. (LP:#1418486)

 -- Timo Aaltonen <tjaalton@debian.org>  Fri, 06 Feb 2015 12:12:01 +0200

mesa (10.4.2-2ubuntu2) vivid; urgency=medium

  * Flip the switch to llvm 3.6 with patches backported from upstream.
  * Add upstream workaround for hangs on gen4. (LP: #1388612)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 29 Jan 2015 13:27:10 +0100

mesa (10.4.2-2ubuntu1) vivid; urgency=medium

  [ Timo Aaltonen ]
  * Merge from Debian experimental.

  [ Maarten Lankhorst ]
  * Disable opencl after it was re-enabled accidentally in the merge.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 20 Jan 2015 10:30:20 +0100

mesa (10.4.2-2) unstable; urgency=medium

  * rules: Drop dh_makeshlibs exception on gbm_gallium_drm.so as it's
    gone now.
  * control: Add depends on libwayland-egl1-mesa to libegl1-mesa-dev,
    since it ships libwayland-egl.so on Linux.
  * control: Mark libegl1-mesa-drivers M-A: same again. (Closes:
    #775370)

 -- Timo Aaltonen <tjaalton@debian.org>  Thu, 15 Jan 2015 15:28:40 +0200

mesa (10.4.2-1) experimental; urgency=medium

  * New upstream release.
  * control, rules, libopenvg*, libgbm1, libegl1-mesa-drivers:
    Drop EGL/GBM state trackers and OpenVG.
  * control: Make libegl1-mesa-drivers transitional.

 -- Timo Aaltonen <tjaalton@debian.org>  Tue, 13 Jan 2015 13:43:51 +0200

mesa (10.3.2-0ubuntu1) vivid; urgency=medium

  * Merge from unreleased debian-unstable.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 27 Oct 2014 08:43:19 +0100

mesa (10.3.2-1) unstable; urgency=medium

  [ Sven Joachim ]
  * New upstream stable release.
    - Fixes crashes in vdpau with the r600g driver (Closes: #766058).

 -- Julien Cristau <jcristau@debian.org>  Mon, 27 Oct 2014 11:40:24 +0100

mesa (10.3.1-1ubuntu1) utopic; urgency=medium

  * Merge with released debian unstable, no changes in packaging.
    - New upstream release. (LP: #1384289)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 23 Oct 2014 12:50:53 +0200

mesa (10.3.1-1) unstable; urgency=medium

  * Build libgbm on kfreebsd (fixes FTBFS).
  * New upstream stable release.
  * Upload to unstable.

 -- Julien Cristau <jcristau@debian.org>  Mon, 13 Oct 2014 17:56:27 +0200

mesa (10.3.0-2) experimental; urgency=medium

  * Add missing Replaces/Breaks for the gallium-pipe move.

 -- Julien Cristau <jcristau@debian.org>  Fri, 10 Oct 2014 00:09:47 +0200

mesa (10.3.0-0ubuntu3) utopic; urgency=medium

  [ Andreas Pokorny ]
  * debian/patches/egl-platform-mir.patch:
    - Add support for get_image_buffers and KHR_image_pixmap.

  [ Alexandros Frantzis ]
  * debian/patches/egl-platform-mir.patch:
    - Update for Mesa 10.3 (LP: #1377853).

 -- Alexandros Frantzis <alexandros.frantzis@canonical.com>  Tue, 07 Oct 2014 13:06:26 +0300

mesa (10.3.0-0ubuntu2) utopic; urgency=medium

  * Add depends on libgl1-mesa-dri to some packages.
    - libgl1-mesa-glx, libegl1-mesa and libgbm1 depend on the dri
      files to be installed, even for swrast support. (LP: #1374131)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 29 Sep 2014 14:33:23 +0200

mesa (10.3.0-0ubuntu1) utopic; urgency=medium

  * New upstream release. (LP: #1364003)
  * Merge from released debian-experimental.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 22 Sep 2014 15:42:27 +0200

mesa (10.3.0-1) experimental; urgency=medium

  [ Maarten Lankhorst ]
  * New upstream release.
  * Remove upstreamed patch.
    - 01_gallium-util-add-missing-u_debug-include.patch

  [ Andreas Boll ]
  * Move gallium-pipe installation from libgl1-mesa-dri.install.linux.in
    to mesa-opencl-icd.install.in, because it's only needed for opencl.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 08 Oct 2014 10:30:05 +0200

mesa (10.3.0~rc3-3) experimental; urgency=medium

  [ Andreas Boll ]
  * Bump llvm-3.5-dev and libclang-3.5-dev to 1:3.5-1, should fix FTBFS on
    kfreebsd-*.
  * Bump compat to v9 for changed dh_strip behavior:
    - dh_strip puts separated debug symbols in a location based on their
      build-id (Closes: #755921).
  * Drop redundant libegl1-mesa-drivers.install.linux.in.

  [ Dima Kogan ]
  * All -dev packages are now Multi-Arch: same (Closes: #689088, #678040).

  [ Julien Cristau ]
  * Upload clean source without partial Ubuntu alternatives patches (closes: #761678)

 -- Julien Cristau <jcristau@debian.org>  Mon, 15 Sep 2014 22:39:15 +0200

mesa (10.3.0~rc3-2) experimental; urgency=medium

  [ Andreas Boll ]
  * Add 01_gallium-util-add-missing-u_debug-include.patch, fixes FTBFS on
    big endian archs.
  * Enable --with-egl-platforms=drm on kfreebsd-any, should fix FTBFS.
  * Don't try to install vdpau hardlinks on hurd, should fix FTBFS.

  [ Fabio Pedretti ]
  * debian/rules: minor cleanup.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 15 Sep 2014 11:01:55 +0200

mesa (10.3.0~rc3-1) experimental; urgency=medium

  [ Maarten Lankhorst ]
  * Build with llvm 3.5.
  * New upstream release.
  * Remove mention of tdfx.

  [ Timo Aaltonen ]
  * mesa-common-dev: Add glcorearb.h.
  * not-installed: Skip libglapi.so.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 08 Sep 2014 15:50:42 +0200

mesa (10.2.6-1ubuntu3) utopic; urgency=medium

  * And revert again for now.. (LP: #1360241)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Fri, 22 Aug 2014 15:02:30 +0200

mesa (10.2.6-1ubuntu2) utopic; urgency=medium

  * Fixup typo.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 21 Aug 2014 18:39:52 +0200

mesa (10.2.6-1ubuntu1) utopic; urgency=medium

  * Drop 101_ubuntu_hidden_glname.patch.
    - 8 years old patch supposedly to fix glx-tls, but if it was
      important nowadays I would have expected it in upstream by now.
  * Rebuild against llvm 3.5-rc3.
  * Add explicit depends on llvm 3.5-rc3 for libgl1-mesa-dri.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 21 Aug 2014 15:27:00 +0200

mesa (10.2.6-1) unstable; urgency=medium

  * New upstream release.
  * Drop x32-updates.diff, upstream.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 21 Aug 2014 15:06:36 +0200

mesa (10.2.5-1ubuntu2) utopic; urgency=medium

  * Temporarily revert to llvm 3.4, too many regressions.

 -- Maarten Lankhorst <maarten.lankhorst@canonical.com>  Wed, 13 Aug 2014 23:11:15 +0200

mesa (10.2.5-1ubuntu1) utopic; urgency=low

  * Rebuild with llvm 3.5.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 12 Aug 2014 13:05:29 +0200

mesa (10.2.5-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
    - nv50: fix build failure on m68k due to invalid struct alignment
      assumptions (Closes: #728053).
    - i915: Fix up intelInitScreen2 for DRI3 (Closes: #754297).

  [ Matthias Klose ]
  * Add patch to fix FTBFS on x32. (Closes: #757703)
    - x32-updates.patch

  [ Maarten Lankhorst ]
  * Enable support for freedreno.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 11 Aug 2014 13:34:58 +0200

mesa (10.2.4-1) unstable; urgency=medium

  * New upstream release.

 -- Julien Cristau <jcristau@debian.org>  Sun, 20 Jul 2014 10:20:05 +0200

mesa (10.2.3-0ubuntu1) utopic; urgency=low

  * Merge from unreleased unstable to fix vmwgfx.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 09 Jul 2014 11:57:29 +0200

mesa (10.2.3-1) unstable; urgency=low

  [ Maarten Lankhorst ]
  * New upstream release.

  [ Julien Cristau ]
  * Add debian/upstream/signing-key.asc, and add pgpsigurlmangle option to
    debian/watch so uscan can check signatures on release tarballs.

 -- Julien Cristau <jcristau@debian.org>  Wed, 09 Jul 2014 19:39:06 +0200

mesa (10.2.2-1ubuntu1) utopic; urgency=medium

  * Merge with released debian unstable.
    - New upstream release.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 03 Jul 2014 11:44:05 +0200

mesa (10.2.2-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
    - glx: Don't crash on swap event for a Window (non-GLXWindow)
      (Closes: #685328).
    - 01_targets-xa-limit-the-amount-of-exported-symbols.diff dropped,
      upstream
  * Cherry-pick commit b4dcf87 (glxext: Send the Drawable's ID in the
    GLX_BufferSwapComplete event) from upstream, fixes intel + dri3.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 03 Jul 2014 09:54:48 +0200

mesa (10.2.1-2ubuntu3) utopic; urgency=low

  * Fix segfault in Mir EGL platform on i965 (LP: #1336854)

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Thu, 03 Jul 2014 11:52:41 +1000

mesa (10.2.1-2ubuntu2) utopic; urgency=medium

  * Fix FTBFS by fixing 117-static-gallium.patch

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 25 Jun 2014 11:41:13 +0200

mesa (10.2.1-2ubuntu1) utopic; urgency=medium

  * Merge with released debian unstable.
    - New upstream release.
    - Drop upstreamed patches.
    - Refresh mir patch.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 23 Jun 2014 15:52:33 +0200

mesa (10.2.1-2) unstable; urgency=medium

  * Upload to unstable.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 23 Jun 2014 12:00:09 +0200

mesa (10.2.1-1) experimental; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
    - 01_glapi-Duplicate-GLES1-prototypes-in-glapi_dispatch.c.diff
      dropped, upstream
  * Add 01_targets-xa-limit-the-amount-of-exported-symbols.diff, fixes
    FTBFS with gcc-4.9.
  [ Maarten Lankhorst ]
  * Attempt to fix a FTBFS on hurd.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 16 Jun 2014 15:41:59 +0200

mesa (10.2.0~rc4-2) experimental; urgency=medium

  [ Andreas Boll ]
  * Add 01_glapi-Duplicate-GLES1-prototypes-in-glapi_dispatch.c.diff,
    should fix FTBFS on non-i386 and non-amd64.

  [ Emilio Pozuelo Monfort ]
  * Upload to experimental.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Sat, 31 May 2014 00:44:19 +0200

mesa (10.2.0~rc4-1) experimental; urgency=medium

  [ Fabio Pedretti ]
  * debian/rules: remove unused --with-llvm-shared-libs configure option
  * debian/control: remove python-libxml2 dependency

  [ Julien Cristau ]
  * Bump libdrm-dev build-dep to 2.4.54 per configure.ac.
  * Bump libxcb-dri2 and libxcb-glx build-deps per configure.ac.
  * Remove Cyril Brulebois from Uploaders.
  * debian/rules: explicitly disable omx.

  [ Maarten Lankhorst ]
  * New upstream release candidate.

  [ Andreas Boll ]
  * New upstream release candidate.
    - 01_no_undefined.diff dropped, upstream
  * Don't try to enable xa on !linux.

  [ Emilio Pozuelo Monfort ]
  * Upload to experimental.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Sat, 24 May 2014 15:16:23 +0200

mesa (10.2.0~rc1-1) experimental; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release candidate.
    - 02_gbm_no_undefined.diff dropped, upstream
    - 03_gbm_make_devices_static.diff dropped, upstream
  * control: Bump libdrm-dev build-dependency.
  * Drop a symbol from libxatracker2.
  * libosmesa6: Bump the soname to upstream default (8), drop
    04_osmesa_version.diff. Add a symlink with the old name to point to
    the new lib.

  [ Julien Cristau ]
  * Add 01_no_undefined.diff to actually add -Wl,--no-undefined to the linker
    flags for our shared libraries.

  [ Andreas Boll ]
  * Relax ocl-icd-libopencl1 dependency to allow the generic virtual
    libopencl1 as a valid alternative (Closes: #745765).
  * Add missing separator between dependency items '${misc:Depends}'
    and 'libglapi-mesa (= ${binary:Version})'.

 -- Julien Cristau <jcristau@debian.org>  Wed, 14 May 2014 22:57:08 +0200

mesa (10.1.4-1) unstable; urgency=medium

  [ Timo Aaltonen ]
  * New upstream release.

  [ Andreas Boll ]
  * New upstream release.
  * Bump llvm-3.4-dev and libclang-3.4-dev to 1:3.4.1-3
    - Enables geometry shaders on radeonsi

  [ Emilio Pozuelo Monfort ]
  * Upload to unstable.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Tue, 27 May 2014 12:05:35 +0200

mesa (10.1.3-0ubuntu1) utopic; urgency=medium

  [ Maarten Lankhorst ]
  * Merge from unreleased debian-unstable.

  [ Timo Aaltonen ]
  * fix-gpu-hangs-on-bdw.diff: Upstream commit to fix various GPU hangs
    on Broadwell. (LP: #1318589)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 12 May 2014 09:51:08 +0000

mesa (10.1.2-1) unstable; urgency=medium

  [ Andreas Boll ]
  * New upstream release.
    + i965: Don't enable reset notification support on Gen4-5 (Closes: #746557)

 -- Julien Cristau <jcristau@debian.org>  Tue, 06 May 2014 09:31:26 +0200

mesa (10.1.1-1) unstable; urgency=low

  [ Andreas Boll ]
  * New upstream release.
  * Relax ocl-icd-libopencl1 dependency to allow the generic virtual
    libopencl1 as a valid alternative (Closes: #745765).
  * Add missing separator between dependency items '${misc:Depends}'
    and 'libglapi-mesa (= ${binary:Version})'.

 -- Julien Cristau <jcristau@debian.org>  Sun, 27 Apr 2014 19:51:45 +0200

mesa (10.1.0-4ubuntu5) trusty; urgency=medium

  * enable-bdw.diff: Enable Broadwell support. (LP: #1300258)
  * fix-unity-on-bdw.diff: Fix rendering on unity.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Mon, 14 Apr 2014 09:59:17 +0300

mesa (10.1.0-4ubuntu4) trusty; urgency=medium

  * Cherry-pick patches to improve stability with vmware. (LP: #1284134)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 10 Apr 2014 12:08:10 +0200

mesa (10.1.0-4ubuntu3) trusty; urgency=medium

  * i965-dont-call-abort-on-unknown-dev.diff: Allow using a fallback
    driver when the native one doesn't support the device.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Wed, 09 Apr 2014 12:42:49 +0300

mesa (10.1.0-4ubuntu2) trusty; urgency=medium

  * fix-kwin.diff: i965; Don't check reset status on gen4/5. (LP: #1299499)

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Tue, 01 Apr 2014 16:58:02 +0300

mesa (10.1.0-4ubuntu1) trusty; urgency=medium

  * Merge from unreleased debian sid.
  * Add explicit libudev1 | libudev0 dependency. (LP: #1296947)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 31 Mar 2014 09:56:17 +0000

mesa (10.1.0-5) unstable; urgency=low

  [ Maarten Lankhorst ]
  * Add explicit libudev1 dependency (LP: #1296947)
    - libudev is being dlopened now, but still a dependency.

  [ Julien Cristau ]
  * Fix libegl1-mesa-dev installability on hurd, which doesn't have
    libegl1-mesa-drivers (closes: #742335).  Thanks, Pino Toscano!

 -- Julien Cristau <jcristau@debian.org>  Mon, 31 Mar 2014 15:58:53 +0200

mesa (10.1.0-4) unstable; urgency=medium

  [ Andreas Boll ]
  * Fix unsatisfiable libwayland-egl1-mesa and libwayland-dev dependency on
    !linux (Closes: #742306).
  * Install /etc/drirc on hurd (Closes: #741572).

 -- Julien Cristau <jcristau@debian.org>  Sat, 22 Mar 2014 10:39:12 +0100

mesa (10.1.0-3) unstable; urgency=medium

  [ Andreas Boll ]
  * Build OpenCL only on architectures where we have LLVM enabled.
  * Actually enable radeonsi on kfreebsd.

  [ Sven Joachim ]
  * Drop dependency of libegl1-mesa-drivers on libgl1-mesa-dri again.

  [ Julien Cristau ]
  * Steal Ubuntu patch to work around build failure on armhf
    (https://bugs.freedesktop.org/show_bug.cgi?id=72064)
  * Upload to unstable.

 -- Julien Cristau <jcristau@debian.org>  Wed, 19 Mar 2014 22:48:14 +0100

mesa (10.1.0-2) experimental; urgency=medium

  [ Sjoerd Simons ]
  * Install libwayland-egl in a separate library package (libwayland-egl1-mesa)
    and provide a virtual libwayland-egl1 package. (Closes: #739269).

 -- Julien Cristau <jcristau@debian.org>  Mon, 17 Mar 2014 23:11:14 +0100

mesa (10.1.0-1ubuntu1) trusty; urgency=medium

  * Merge from released debian-experimental.
  * Rename libvdpau1-drivers-mesa to mesa-vdpau-drivers.
    - This makes ubuntu package names identical to debian.
  * Disable opencl for now.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 13 Mar 2014 16:30:35 +0100

mesa (10.1.0-1) experimental; urgency=low

  [ Andreas Boll ]
  * Disable dri3 on !linux
  * Enable building drivers for libvdpau1 (Closes: #705558).
  * New upstream release.
  * Drop 01-hurd.diff, upstream in 10.1.0.
  * Next attempt to fix FTBFS on hurd

  [ Sven Joachim ]
  * Drop dependency of libegl1-mesa-drivers on libgl1-mesa-dri.

 -- Julien Cristau <jcristau@debian.org>  Fri, 07 Mar 2014 22:16:32 +0100

mesa (10.1.0~rc3-0ubuntu3) trusty; urgency=medium

  * Add --dynamic-list to undo damage from -Bsymbolic-functions.
    - This fixes vdpau interop properly.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 06 Mar 2014 10:28:47 +0100

mesa (10.1.0~rc3-0ubuntu2) trusty; urgency=medium

  * Install libegl-wayland in /mesa-egl again.
    - Fixes FTBFS for g-c-c.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 05 Mar 2014 10:17:21 +0100

mesa (10.1.0~rc3-0ubuntu1) trusty; urgency=medium

  [ Maarten Lankhorst ]
  * Merge from unreleased debian-experimental.
  * Enable egl, libopenvg, gbm and vdpau for all archs.
    - This simplifies the build rules considerably, and
      is closer to debian behavior.
  * Cherry pick fixes for playback of interlaced videos. (LP: #1287326)
  * Cherry pick fixes for crashes related to vdpau interop.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 25 Feb 2014 14:29:26 +0100

mesa (10.1.0~rc2-1) experimental; urgency=medium

  [ Maarten Lankhorst ]
  * Add missing depends to keep lib(e)gl1-dev usable.
  * Bump to rc2.

  [ Emilio Pozuelo Monfort ]
  * Update build dependencies and dependencies minimum versions. Thanks to
    Fabio Pedretti <fabio.ped@libero.it> for the patch.

  [ Andreas Boll ]
  * Attempt to fix FTBFS on hurd.
  * Cherry pick some fixes for GLX fbconfig. (Closes: #739691)

  [ Samuel Thibault ]
  * Enable egl and gles on hurd (closes: #729260)

  [ Julien Cristau ]
  * libgbm1.symbols: try to avoid listing private symbols.
  * Enable radeon/r200/r300/r600/radeonsi on kfreebsd (closes: #732337).
    Thanks, Robert Millan!
  * gallium: fix build failure on powerpcspe (closes: #695746).  Thanks, Roland
    Stigge!

 -- Julien Cristau <jcristau@debian.org>  Sun, 02 Mar 2014 20:22:47 +0100

mesa (10.1.0~rc1-1ubuntu4) trusty; urgency=medium

  * Merge from debian git
    - Enable building drivers for libvdpau1

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Thu, 20 Feb 2014 21:46:24 +0200

mesa (10.1.0~rc1-1ubuntu3) trusty; urgency=low

  [ Robert Hooker ]
  * Add more missing depends to lib(e)gl1-mesa-dev.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 19 Feb 2014 19:38:33 +0100

mesa (10.1.0~rc1-1ubuntu2) trusty; urgency=low

  * Add libxcb-dri3-dev to lib(e)gl1-mesa-dev depends.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 19 Feb 2014 19:06:29 +0100

mesa (10.1.0~rc1-1ubuntu1) trusty; urgency=low

  * First mesa 10.1 release candidate.
  * Refresh egl-platform-mir.patch and drop upstreamed bits.
  * Merge more upstream fixes post rc1.
  * Cherry pick some fixes for GLX fbconfig. (LP: #1278168)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 19 Feb 2014 17:19:12 +0100

mesa (10.1.0~rc1-1) experimental; urgency=low

  * New upstream release.
  * Add new build-depends for dri3.
  * Refresh libegl1-mesa and gbm symbols.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 12 Feb 2014 11:50:39 +0100

mesa (10.0.2-1) experimental; urgency=low

  [ Maarten Lankhorst ]
  * Stop building libgl1-mesa-dri-experimental (Closes: #685104).
    - It's been empty since 8.0.
  [ Matthias Klose ]
  * Move to llvm-3.4.

  [ Julien Cristau ]
  * Fix FTBFS on kfreebsd.
  * ... and attempt to fix FTBFS on hurd.
  * New upstream stable release.

 -- Julien Cristau <jcristau@debian.org>  Sat, 25 Jan 2014 10:44:22 +0100

mesa (10.0.1-1ubuntu2) trusty; urgency=medium

  [ Matthias Klose ]
  * Build using llvm-3.4.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 19 Dec 2013 19:21:03 +0100

mesa (10.0.1-1ubuntu1) trusty; urgency=low

  * New upstream release.
  * Do not enable llvmpipe on armhf. (LP: #1260068)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 19 Dec 2013 18:03:32 +0100

mesa (10.0.1-1) experimental; urgency=low

  * New upstream release.
  * Do not attempt to build i915 and i965 on arm.
  * Enable radeonsi on arm.
  * Disable llvmpipe on armhf, it regresses.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 18 Dec 2013 15:18:25 +0100

mesa (10.0.0-1ubuntu4) trusty; urgency=medium

  * libegl1-mesa-dev: Don't depend on libmirclient-dev on ppc64.

 -- Matthias Klose <doko@ubuntu.com>  Mon, 16 Dec 2013 10:51:02 +0100

mesa (10.0.0-1ubuntu3) trusty; urgency=low

  * Refresh Mir EGL platform patch.
    + Adds EGL_KHR_image support, needed for nested Mir-on-Mir support
    + Adds resize support (LP: #1227744)
    + Properly free()s surface front and back buffers on destroy (LP: #1211982)

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Wed, 11 Dec 2013 12:24:46 +0800

mesa (10.0.0-1ubuntu2) trusty; urgency=low

  * Do not require libdrm-intel on arm, fixes FTBFS regression.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 09 Dec 2013 19:20:07 +0100

mesa (10.0.0-1ubuntu1) trusty; urgency=low

  * Merge from released debian-experimental, changes:
    - Reset versions on libxatracker2 symbols.
    - Enable llvmpipe on armhf.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 09 Dec 2013 11:59:03 +0100

mesa (10.0.0-1) experimental; urgency=low

  [ Emilio Pozuelo Monfort ]
  * debian/control:
    + Let libegl1-mesa-dev depend on libwayland-dev as wayland-egl.pc
      requires wayland-client.pc.

  [ Maarten Lankhorst ]
  * New upstream release.
  * Refresh patches for 10.0-rc1.
  * Bump libdrm-dev requirement to 2.4.48 for intel.
  * Add breaks on xserver-xorg-core without support for loading megadriver.
  * Cherry pick commit to hide some gbm symbols.
  * Manually install *_dri.so to preserve mega-driver hardlinks.

  [ Timo Aaltonen ]
  * rules: Enable llvmpipe on armhf, should work now.

 -- Julien Cristau <jcristau@debian.org>  Sun, 08 Dec 2013 15:17:17 +0100

mesa (10.0.0-0ubuntu1) trusty; urgency=low

  * Merge from unreleased debian-experimental.
  * Drop upstreamed aarch64 patch.
  * Refresh patches.
  * Disable 118-dricore-gallium.patch for now, requires porting.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 09 Dec 2013 11:11:41 +0100

mesa (9.2.2-1ubuntu2) trusty; urgency=medium

  * Build without Mir backend on ppc64.

 -- Matthias Klose <doko@ubuntu.com>  Sat, 07 Dec 2013 14:42:44 +0100

mesa (9.2.2-1ubuntu1) trusty; urgency=low

  * Merge from released debian-unstable.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 22 Oct 2013 12:17:27 +0200

mesa (9.2.2-1) unstable; urgency=low

  * New upstream release.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 22 Oct 2013 10:59:20 +0200

mesa (9.2.1-1ubuntu3) saucy; urgency=low

  * libegl1-mesa-dev: Don't depend on libmirclient-dev on AArch64.

 -- Matthias Klose <doko@ubuntu.com>  Thu, 10 Oct 2013 16:25:10 +0200

mesa (9.2.1-1ubuntu2) saucy; urgency=low

  * Build without Mir backend on AArch64.

 -- Matthias Klose <doko@ubuntu.com>  Wed, 09 Oct 2013 23:11:33 +0000

mesa (9.2.1-1ubuntu1) saucy; urgency=low

  [ Robert Hooker ]
  * Add i915-dont-default-to-2.1.patch: Stop defaulting to OpenGL 2.1 that is not
    fully implemented in hardware on gen3 GPUs, the software fallbacks make Unity
    unusably slow. (LP: #1222602)
  [ Maarten Lankhorst ]
  * New upstream bugfix release. (LP: #1232940)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 07 Oct 2013 10:39:18 +0200

mesa (9.2.1-1) experimental; urgency=low

  * New upstream release.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 07 Oct 2013 10:00:39 +0200

mesa (9.2-1ubuntu3) saucy; urgency=low

  * Create a libglapi.so symlink. (LP: #1232000)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 01 Oct 2013 13:09:38 +0200

mesa (9.2-1ubuntu2) saucy; urgency=low

  * Fix double-free in Mir EGL platform (LP: #1221974)

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Tue, 17 Sep 2013 12:05:36 -0400

mesa (9.2-1ubuntu1) saucy; urgency=low

  * Merge from debian-experimental, remaining changes:
    - Add support for aarch64.
    - Build libgallium and libmesagallium shared.
    - Enable mir support.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 28 Aug 2013 14:02:08 +0200

mesa (9.2-1) experimental; urgency=low

  [ Jon Severinsson ]
  * control: Recommend libtxc-dxtn-s2tc0 | libtxc-dxtn0, not just the virtual libtxc-dxtn0.
  * control: Bump libdrm-dev build-dependency to 2.4.45.
  * control: Add versioned libglapi-mesa dependency to libosmesa6.
  * libgl1-mesa(-swx11)-dev.install.in: Install the correct pkgconfig/gl.pc files.
  * rules: Add --disable-shared-glapi to the swx11-i386-i686 target.

  [ Maarten Lankhorst ]
  * Bump libdrm-dev to 2.4.46.

  [ Sven Joachim ]
  * Remove the workaround for sparc introduced in version 7.10-2.

  [ Maarten Lankhorst ]
  * New upstream release.
  * Refresh 02_gbm_no_undefined.diff.
  * Drop 12_fix_glapi_gen.diff, upstreamed.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 28 Aug 2013 10:28:20 +0200

mesa (9.2~rc1-1) experimental; urgency=low

  * New upstream release.
  * Refresh patches for 9.2:
    - 02_gbm_no_undefined.diff.
    - 04_osmesa_version.diff
    - 06_kfreebsd-ftbfs.diff
  * Removed writes to srcdir, fixing parallel builds.
    - 12_fix_glapi_gen.diff
  * Require llvm-3.3-dev >= 1:3.3-4 and libelf-dev.
  * Update symbols files.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 20 Aug 2013 15:42:31 +0200

mesa (9.1.7-1) unstable; urgency=low

  [ Andreas Beckmann ]
  * libgl1-mesa-glx: Add Breaks: glx-diversions (<< 0.4) because the old
    versions were not aware of libGL.so.1.2.0.  (Closes: #720069)

  [ Maarten Lankhorst ]
  * New upstream release.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 07 Oct 2013 11:34:34 +0200

mesa (9.1.6-2ubuntu2) saucy; urgency=low

  * Import missing powerpc build fixes.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 13 Aug 2013 16:23:32 +0200

mesa (9.1.6-2ubuntu1) saucy; urgency=low

  * New upstream release.
  * Merge from RELEASED debian-unstable. \o/
  * Remaining changes:
    - Building mir.
    - Add support for aarch64.
    - Linking against shared dricore/gallium.
  * Drop fix-osmesa-exports.diff, upstreamed.

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 13 Aug 2013 15:39:43 +0200

mesa (9.1.6-2) unstable; urgency=low

  * Don't run 'make -j' if DEB_BUILD_OPTIONS doesn't set parallel.  Oops.

 -- Julien Cristau <jcristau@debian.org>  Mon, 12 Aug 2013 08:00:21 +0200

mesa (9.1.6-1) unstable; urgency=low

  [ Andreas Boll ]
  * New upstream release. (Closes: #717410)
  * Cherry-pick commit 0dbbfa0 (mesa: Fix MESA_PATCH version) from
    upstream.

  [ Julien Cristau ]
  * Don't run configure for different builds in parallel.

 -- Julien Cristau <jcristau@debian.org>  Sun, 11 Aug 2013 18:15:58 +0200

mesa (9.1.4-0ubuntu8) saucy; urgency=low

  * hide the now missing Mir symbol on powerpc.

 -- Didier Roche <didrocks@ubuntu.com>  Mon, 05 Aug 2013 13:43:52 +0200

mesa (9.1.4-0ubuntu7) saucy; urgency=low

  * rules,control: Don't build Mir support on powerpc as it's not available
    there.

 -- Didier Roche <didrocks@ubuntu.com>  Mon, 05 Aug 2013 12:59:59 +0200

mesa (9.1.4-0ubuntu6) saucy; urgency=low

  * Add Mir EGL platform

 -- Christopher James Halse Rogers <raof@ubuntu.com>  Fri, 02 Aug 2013 13:30:23 +1000

mesa (9.1.4-0ubuntu5) saucy; urgency=low

  * Fix the build on Aarch64, disabling most of the acceleration
    packages.

 -- Matthias Klose <doko@ubuntu.com>  Mon, 22 Jul 2013 14:29:24 +0200

mesa (9.1.4-0ubuntu4) saucy; urgency=low

  * Fix build on Aarch64.
  * debian/rules: Split out a configure target to be able to restart
    builds.

 -- Matthias Klose <doko@ubuntu.com>  Sun, 21 Jul 2013 13:43:45 +0200

mesa (9.1.4-0ubuntu3) saucy; urgency=low

  * Add fix-os-mesa-exports.diff from upstream. (LP: #1066599)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 16 Jul 2013 11:29:32 +0200

mesa (9.1.4-0ubuntu2) saucy; urgency=low

  * control, rules: Again, add llvm-3.2-dev to build-depends for
    powerpc, enable gallium llvm and shared libs (FTBFS).

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Tue, 02 Jul 2013 15:26:47 +0300

mesa (9.1.4-0ubuntu1) saucy; urgency=low

  * Merge from unreleased debian git, remaining changes:
    - don't build libgl1-mesa-swx11*
    - use alternatives for libEGL, libGL*, libOpenVG
    - build a common libgallium library to save disk space
    - clean up extra po files
  * Drop patches now upstream.
  * Update revert-a64c1eb9b110.diff.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Tue, 02 Jul 2013 10:06:51 +0300

mesa (9.1.4-1) unstable; urgency=low

  [ Julien Cristau ]
  * Don't call wayland_buffer_is_drm from libgbm, it's in libEGL
    (closes: #712556).
  * Make sure libgbm doesn't have undefined symbols.

  [ Andreas Boll ]
  * Use dpkg-buildflags.
  * Disable silent rules.
  * Cherry-pick commit 0829b89 (mesa: Fix ieee fp on Alpha) from upstream
    (Fixes FTBFS on alpha)

  [ Timo Aaltonen ]
  * New upstream release.

  [ Julien Cristau ]
  * libegl1-mesa-drivers depends on libgl1-mesa-dri for libllvmradeon
    (closes: #714828)

 -- Julien Cristau <jcristau@debian.org>  Sat, 06 Jul 2013 11:37:34 +0200

mesa (9.1.3-6) unstable; urgency=low

  * Team upload.

  * debian/libegl1-mesa.symbols:
    + More kfreebsd build fixes. Mark some symbols as linux-any.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Fri, 07 Jun 2013 20:27:55 +0200

mesa (9.1.3-5) unstable; urgency=low

  * Team upload.

  [ Andreas Boll ]
  * debian: Don't install libllvmradeon*.so on kfreebsd-*, fixes FTBFS.

  [ Emilio Pozuelo Monfort ]
  * Upload to unstable.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Fri, 07 Jun 2013 14:12:43 +0200

mesa (9.1.3-4) unstable; urgency=low

  * Team upload.

  [ Andreas Boll ]
  * debian: Fix another kfreebsd-* FTBFS with adding libgl1-mesa-
    dri.install.kfreebsd.in, where we don't install gallium-pipe/*.so

  [ Emilio Pozuelo Monfort ]
  * Release to unstable.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Fri, 07 Jun 2013 00:50:34 +0200

mesa (9.1.3-3) experimental; urgency=low

  [ Andreas Boll ]
  * debian/not-installed: Remove /etc/drirc, it's shipped since 8.0.5-1.
    Fixes build on hurd.
  * debian: Fix build regression on !hurd.
    Fix it with libgl1-mesa-dri.install.hurd.in, where we don't install drirc.
  * Cherry-pick commit 7de78ce5, 07f2dee and 9622049 from upstream
    (Fixes FTBFS on kfreebsd-*)
    - configure.ac: Remove redundant checks of enable_dri.
    - configure.ac: Build dricommon for DRI gallium drivers
    - configure.ac: Build dricommon for gallium swrast
  * Memory corruption (OOB read/write) in i965 driver [CVE-2013-1872]

  [ Julien Cristau ]
  * Build i915 and i965 on kfreebsd.

 -- Cyril Brulebois <kibi@debian.org>  Thu, 06 Jun 2013 10:29:15 +0200

mesa (9.1.3-2) experimental; urgency=low

  * Team upload.

  [ Julien Cristau ]
  * Fix build of swrast only without libdrm, causing build failure on hurd
    (cherry-picked from upstream).  Thanks, Andreas Boll!

  [ Andreas Boll ]
  * debian/not-installed: Remove glut headers
  * debian/patches: Drop 05_kfreebsd-egl-x11.diff, fixed by eglibc (2.17-4)
  * debian/rules: Use rm -f instead of rm for deleting libdricore*.so, fixes
    build failure on kfreebsd-*.
  * glapi: Add some missing static_dispatch=false annotations to
    es_EXT.xml. Fixes FTBFS on powerpc and ia64 (cherry-picked from
    upstream).

  [ Emilio Pozuelo Monfort ]
  * Release to experimental.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Mon, 03 Jun 2013 15:25:19 +0200

mesa (9.1.3-1) experimental; urgency=low

  * Team upload.
  * New upstream release.
    - Set close on exec flag when opening dri devices (Closes: #651370).
    - Don't emit a .note.ABI-tag section anymore (Closes: #628758).

  [ Timo Aaltonen ]
  * Refresh patches
    - disable 05_kfreebsd-egl-x11.diff for now.
  * control: Added libtool to build-depends.
  * rules: Drop special handling of config.{guess,sub}, not needed anymore.
  * rules, libosmesa*: Build only the 32bit OSMesa library.
  * control: Bump libdrm build-dep to 2.4.39.
  * control: Bump libwayland-dev build-dep to 0.95.
  * rules: Update the clean target.
  * rules: Add --disable-shared-glapi to the swx11 targets.
  * libosmesa*.install.in: Install files from the correct path.
  * rules: --with-driver= is deprecated, use --enable-foo.
  * rules: Purge .la files before dh_install.
  * Update symbols.
  * libgl1-mesa-dri.install*.in: Add libdricore.
  * control: Add new dependencies to libgl1-mesa-dev.
  * rules, libgl1-mesa-dri.install.linux.in: Add support for radeonsi.
  * rules: Build llvm shared libs on platforms that support llvm.
  * control, rules, libglu*: Remove libglu packaging, since it's been split
    off upstream.
  * rules: Disable dri for the swx11 targets.
  * not-installed: Updated.
  * Update symbols for libgles2-mesa and libxatracker1.
  * libegl1-mesa-drivers.install.linux: Bump libwayland-egl.so version
  * control: Add libdrm-dev to mesa-common-dev Depends.
  * control: Build-depend on llvm-3.2-dev (Closes: #678822).
  * libgl1-mesa-dri.install.in: Include gallium-pipe/*.so and libllvmradeon*.so.
  * rules: Add files to clean.
  * control: Add libxcb-dri2-0-dev to libgl1-mesa-dev depends.

  [ Steve Langasek ]
  * Install all dri drivers from the DESTDIR tree, instead of copying them
    from the build tree; this simplifies the install rules since we know
    already that we're only building drivers that we want to ship, and
    avoids rpath problems with libtool linking to in-tree convenience
    libraries.
  * debian/rules: don't install libdricore*.so, this isn't a public library.
  * Add Pre-Depends on multiarch-support to libgl1-mesa-dri, since we're
    shipping a shared library in the package; not an issue in practice since
    this is all post-wheezy / post-precise, but it's an archive reject error
    in Debian right now so let's just be complete.

  [ Maarten Lankhorst ]
  * Bump standards-version to 3.9.3.
  * control: Bump libwayland-dev build-dep to 1.0.2.
  * Remove 13-llvm-config-pick-a-version.diff and just pass a flag to configure.

  [ Robert Hooker ]
  * Drop xutils-dev build dep, makedepend is no longer required
  * Recommend libtxc-dxtn0 in libgl1-mesa-dri for easier use with multiarch
    installs (Closes: #668645).
  * Drop 02_use-ieee-fp-on-s390-and-m68k.patch, upstream in 9.1.2.
  * Drop 10-hurd-configure-tweaks.diff, upstream in 9.1.2.

  [ Sven Joachim ]
  * Bump libdrm-dev build-dependency to 2.4.42.

  [ Rico Tzschichholz ]
  * Update packaging mesa packaging with xorg-edgers

  [ Emilio Pozuelo Monfort ]
  * integer overflows calculating memory needs for replies [CVE-2013-1993]
  * Bump llvm-3.2-dev build dependency to 1:3.2repack-7~ for a fixed
    llvm-config-3.2 --libdir, otherwise configure fails.

 -- Emilio Pozuelo Monfort <pochu@debian.org>  Tue, 28 May 2013 21:15:55 +0200

mesa (9.1.3-0ubuntu3) saucy; urgency=low

  * Added patches to add/fix Haswell pci-id's (LP: #1175533)
    - add-vlv-ids.diff
    - fix-hsw-gt3-names.diff
    - fix-missing-gt3-id.diff
    - add-more-reserved-hsw-ids.diff

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Wed, 19 Jun 2013 14:16:47 +0200

mesa (9.1.3-0ubuntu2) saucy; urgency=low

  * Add back a patch that reverts a change which made blur slow on i915,
    add two other reverts so the big one applies cleanly. (LP: #1187500)

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Fri, 07 Jun 2013 15:11:32 +0300

mesa (9.1.3-0ubuntu1) saucy; urgency=low

  [ Robert Hooker ]
  * New upstream bug-fix release.
  * Drop upstream patches:
     - 0001-nv50-fix-3D-render-target-setup.patch
     - 0002-nv50-nvc0-disable-DEPTH_RANGE_NEAR-FAR-clipping-duri.patch
     - 0003-nv50-nvc0-fix-3d-blits-restore-viewport-after-blit.patch
     - 0004-nvc0-fix-for-2d-engine-R-source-formats-writing-RRR1.patch
     - 100_no_abi_tag.patch
     - 119-libllvmradeon-link.patch
     - vbo-fix-crash.diff
  * debian/patches/117-static-gallium.patch: Refresh for minor change
    in 9.1.2

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 23 May 2013 10:06:41 +0200

mesa (9.1.1-0ubuntu3) raring; urgency=low

  * Hide x86sse symbols on i386, preventing conflicts. (LP: #1170074)
    - 120-hide-x86sse.patch

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 18 Apr 2013 12:27:32 +0200

mesa (9.1.1-0ubuntu2) raring; urgency=low

  * control, rules: Add llvm-3.2-dev to build-depends for powerpc, enable
    gallium llvm and shared libs (FTBFS).

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Wed, 17 Apr 2013 01:42:38 -0600

mesa (9.1.1-0ubuntu1) raring; urgency=low

  [ Timo Aaltonen ]
  * Merge from unreleased debian git
    - new upstream release (LP: #1112147, #1164093)
  * Revert a commit to fix slow blur on intel.
  * vbo-fix-crash.diff: Patch from the stable tree that fixes a crasher
    with shared display lists.

  [ Maarten Lankhorst ]
  * Add some more patches to fix image copy regressions on nouveau.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Tue, 16 Apr 2013 15:35:32 +0300

mesa (9.1~git20130207.f1c46c84-0ubuntu1) UNRELEASED; urgency=low

  [ Timo Aaltonen ]
  * Merge from unreleased debian git.
  * Refresh patches.

  [ Robert Hooker ]
  * Drop ubuntu specific libtxc-dxtn-s2tc0 recommends from libgl1-mesa-glx,
    libgl1-mesa-dri now recommends libtxc-dxtn0.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Thu, 07 Feb 2013 18:09:58 +0200

mesa (9.0.3-0ubuntu1) raring; urgency=low

  * New upstream release. (LP: #1134466)

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Thu, 14 Mar 2013 12:18:29 +0100

mesa (9.0.2-0ubuntu1) raring; urgency=low

  * New upstream release.
  * Decrease size of mesa's libgl1-mesa-dri again
    - re-enable 117-static-gallium.patch
    - add 118-dricore-gallium.patch to link against libdricore again

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Tue, 22 Jan 2013 11:54:09 +0100

mesa (9.0.1-0ubuntu1) raring; urgency=low

  * Merge from unreleased debian git.
    - release 9.0.1
  * add 118-automake-ldrm.patch to ease backport to precise
    - upstream commit, targeted for 9.0.2

 -- Maarten Lankhorst <maarten.lankhorst@ubuntu.com>  Mon, 19 Nov 2012 12:03:50 +0100

mesa (9.0-0ubuntu2) raring; urgency=low

  * patches/118-wayland-0.99.diff: Upstream port to wayland 0.99 API
  * patches/119-wayland-no-0.85.diff: Drop wayland 0.85 defines
  * patches/120-wayland-no-egl-pixmap.diff: Drop wl_egl_pixmap usage
  * debian/control: Adjust build-depends to match the above patches

 -- Adam Conrad <adconrad@ubuntu.com>  Sun, 18 Nov 2012 02:52:31 +0000

mesa (9.0-0ubuntu1) quantal; urgency=low

  * Merge from unreleased debian git.
    - final 9.0 release.
  * rules: Don't try building gallium swrast for arm, since it doesn't
    work and wasn't actually built anyway.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Tue, 09 Oct 2012 15:55:51 +0300

mesa (9.0~git20121004.b2048c5e-0ubuntu1) quantal; urgency=low

  * Merge from unreleased debian git.
    - new snapshot leading to final 9.0.
  * Drop patch 118, obsolete.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Wed, 03 Oct 2012 18:23:24 +0300

mesa (9.0~git20120917.7cfd42ce-0ubuntu3) quantal; urgency=low

  * Add 118-undefined-symbols.patch, fixing libglapi and libosmesa
    missing symbols. (LP: #1053088)

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Thu, 20 Sep 2012 13:25:46 +0300

mesa (9.0~git20120917.7cfd42ce-0ubuntu2) quantal; urgency=low

  * Add Recommends on libtxc-dxtn-s2tc0, required by Bastion, Psychonauts,
    Amnesia and other games on Intel graphics.  This package provides
    patent-free s3tc texture support.
    (LP: #1053029)

 -- Bryce Harrington <bryce@ubuntu.com>  Tue, 18 Sep 2012 21:17:11 -0700

mesa (9.0~git20120917.7cfd42ce-0ubuntu1) quantal; urgency=low

  * Merge from unreleased debian git. (LP: #1047306)

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Mon, 17 Sep 2012 13:24:35 +0300

mesa (9.0~git20120903.e1673d20-0ubuntu1) quantal; urgency=low

  * Merge from unreleased debian git.
  * Remove 118-remove-assertion.diff, included upstream.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Thu, 06 Sep 2012 18:09:56 +0300

mesa (9.0~git20120821.c1114c61-0ubuntu2) quantal; urgency=low

  * Added 118-remove-assertion.diff from upstream (LP: #1042293).

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Mon, 27 Aug 2012 21:12:44 +0300

mesa (9.0~git20120821.c1114c61-0ubuntu1) quantal; urgency=low

  * Merge from unreleased debian git.
    - Includes support for ATI Trinity PCI IDs (LP: #1009089)
  * rules, control, libgl1-mesa-swx11*: Remove swx11 support.
  * Refresh patches:
    - drop 115_llvm_dynamic_linking.diff,
      117_nullptr_check_in_query_version.patch, and
      118_glsl_initialize_samplers.patch, all upstream
    - disable 116_use_shared_galliumcore.diff until it's reviewed and
      reworked to apply
  * not-installed, libegl1-mesa-drivers-install.linux.in: Updated to
    match the single-pass build.
  * libgl1-mesa-dri.*install.in: Drop libglsl.so, it's included in
    libdricore.so now.
  * rules: Don't disable GLU on the common flags, we need to build it
    on the dri target.
  * libglu*install.in: Fix the source file paths to match the build target.
    Drop the static lib from -dev since only shared libs get built.
  * libgl1-mesa-dev.install.in: Fix the source file paths to match the
    build target.
  * libgl1-mesa-dri.install.linux.in: Don't try to install libgallium.so,
    which isn't built yet.
  * rules: Enable llvmpipe on armhf to see if it works or not.
  * rules: Remove bin/install-sh on clean, and don't create a symlink for
    it.
  * control: Add Pre-Depends on dpkg-dev due to the binaries using xz
    compression.

 -- Timo Aaltonen <tjaalton@ubuntu.com>  Thu, 23 Aug 2012 15:37:30 +0300

mesa (8.0.5-4) unstable; urgency=low

  * Cherry-pick commit 17f1cb1d99 (dri/nouveau: fix crash in
    nouveau_flush) from upstream master branch.

 -- Sven Joachim <svenjoac@gmx.de>  Wed, 13 Mar 2013 17:52:18 +0100

mesa (8.0.5-3) unstable; urgency=high

  * mesa: add bounds checking for uniform array access (CVE-2012-5129).

 -- Julien Cristau <jcristau@debian.org>  Thu, 06 Dec 2012 10:20:40 +0100

mesa (8.0.5-2) unstable; urgency=low

  * Fix regression in 8.0.5 (spurious GL_INVALID_ENUM errors):
    mesa: test for GL_EXT_framebuffer_sRGB in glPopAttrib().
    Thanks to Simon Chopin for the report.

 -- Julien Cristau <jcristau@debian.org>  Wed, 28 Nov 2012 22:09:14 +0100

mesa (8.0.5-1) unstable; urgency=low

  * New upstream stable release
  * Pull a couple more fixes from upstream's 8.0 branch, including:
    - nvfx: handle some unknown PIPE_CAPs (closes: 674965)
  * Install drirc in libgl1-mesa-dri package with some settings for i965
    (closes: #671747).

 -- Julien Cristau <jcristau@debian.org>  Sun, 04 Nov 2012 16:55:17 +0100

mesa (8.0.4-2) unstable; urgency=high

  * Use xz for all binary packages not just *-dbg.
  * glsl/linker: Avoid buffer over-run in
    parcel_out_uniform_storage::visit_field (CVE-2012-2864; closes: #685667).

 -- Julien Cristau <jcristau@debian.org>  Fri, 24 Aug 2012 00:09:47 +0200

mesa (8.0.4-1) unstable; urgency=low

  [ Sven Joachim ]
  * New upstream stable release (Closes: #682703).
  * Cherry-pick commit fbf86c7f0f (i965/gen7: Reduce GT1 WM thread count
    according to updated BSpec.) from upstream.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 29 Jul 2012 13:17:06 +0200

mesa (8.0.3-1) unstable; urgency=low

  [ Robert Hooker ]
  * New upstream stable release (Closes: #673532)
  * Refresh patches.

 -- Cyril Brulebois <kibi@debian.org>  Wed, 13 Jun 2012 14:58:54 +0200

mesa (8.0.2-2) unstable; urgency=low

  * Upload to unstable.

 -- Cyril Brulebois <kibi@debian.org>  Tue, 01 May 2012 21:42:35 +0200

mesa (8.0.2-1) experimental; urgency=low

  [ Timo Aaltonen ]
  * New upstream bugfix release. (LP: #926379)
  * control: libegl1-mesa-dev should depend on -drivers so that the
    symlinks work.

  [ Robert Hooker ]
  * Add libudev-dev to libgbm-dev dependencies.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 29 Apr 2012 15:51:10 +0200

mesa (8.0-2) experimental; urgency=low

  [ Julien Cristau ]
  * Only build the radeon, r200, i915 and i965 dri drivers on Linux.  They
    require KMS.

  [ Cyril Brulebois ]
  * Fix FTBFS on GNU/kFreeBSD with libgl1-mesa-dri.install.kfreebsd.in:
    there's no *_dri.so file left in the top directory, only swrast is
    built and shipped under gallium/. So mention it explicitly, in the
    same way as it is done in the libgl1-mesa-dri.install.linux.in file.
  * Enable wayland support again, but only on Linux. Wayland needs some
    porting (it uses *CLOEXEC flags and epoll). For that, add those files
    since EGL packages are also shipped on GNU/kFreeBSD, and we need to
    add a few files for Wayland, but only for Linux:
    - libegl1-mesa-dev.install.linux.in
    - libegl1-mesa-drivers.install.linux.in
  * Limit the wl_drm_interface symbol to arch=linux-any accordingly,
    and bump the version.
  * Limit the build-dependency on libwayland-dev to linux-any too, and
    bump it.
  * Automatically revert changes to bin/{config.{guess,sub},install-sh} in
    the clean target. The first two are modified, the last one needs to be
    turned back into a symlink.

 -- Cyril Brulebois <kibi@debian.org>  Tue, 14 Feb 2012 16:18:14 +0100

mesa (8.0-1) experimental; urgency=low

  [ Cyril Brulebois ]
  * New upstream release.
  * Disable patch temporarily (needs a refresh):
    - 11-hurd-ftbfs-again.diff
  * Drop patch, no longer needed since swrastg was renamed to swrast:
    - 14-load-swrastg-before-swrast.diff
  * Update rules file to strop building DRI1 drivers, they went away
    with the following upstream commit:
    - dri: Remove all DRI1 drivers (e4344161bd).
  * Update not-installed for removed files.
  * Stop trying to ship swrastg through libgl1-mesa-dri-experimental,
    it replaced the non-gallium variant.

  [ Timo Aaltonen ]
  * Refresh patches.
  * control: Add libxcb-glx0-dev to build-depends.
  * control: Drop libglw1-mesa, libglw1-mesa-dev, glw got moved to a
    separate source package.
  * libegl-mesa.symbols, libgles2-mesa.symbols: Add new symbols.
  * rules: Drop obsolete configure options.
  * Enable vmwgfx gallium driver & xatracker. (Closes: #652501).
  * Build llvmpipe swrast only on non-hurd x86, traditional for the
    rest.
  * rules: No need to copy nouveau_vieux to the gallium dir, it's
    installed in libgl1-mesa-dri now.
  * rules: Handle installing r300_dri.so like other gallium drivers,
    in libgl1-mesa-dri.install.linux.in.

  [ Robert Hooker ]
  * Bump libdrm build dep to 2.4.30, x11proto-gl-dev to 1.4.14, and
    x11proto-dri2-dev to 2.6.
  * Add libxatracker packaging.
  * Add libxcb-glx0-dev to libegl1-mesa-dev depends.

  [ Christopher James Halse Rogers ]
  * debian/control: Add libx11-xcb-dev to libegl1-mesa-dev depends.

 -- Cyril Brulebois <kibi@debian.org>  Fri, 10 Feb 2012 14:02:04 +0100

mesa (7.11.2-1) unstable; urgency=low

  * New upstream release:
    - Fix a few intel bugs.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 11 Dec 2011 15:43:40 +0100

mesa (7.11.1-1) unstable; urgency=low

  [ Sven Joachim ]
  * New upstream release.
  * Move the Nouveau drivers to the libgl1-mesa-dri package
    (Closes: #645239).
  * Install the swrastg driver in the libgl1-mesa-dri-experimental package
    (Closes: #605444).
    - New patch 14-load-swrastg-before-swrast.diff to prefer swrastg over
      swrast.
    - Build-depend on llvm-2.9-dev also on kfreebsd-{amd64,i386}.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 27 Nov 2011 18:54:24 +0100

mesa (7.11-6) unstable; urgency=low

  [ Julien Cristau ]
  * Inline what's left of debian/scripts/choose-configs in debian/rules.
  * Enable texture-float for dri (closes: #635651).
  * Update from upstream's 7.11 branch (commit e7794048)
  * Merge changes from 7.10.3-4, including:
    - Fix comments in libegl1-mesa.symbols to avoid impending FTBFS with the
      upcoming dpkg-dev 1.16.1 (closes: #642690)

  [ Cyril Brulebois ]
  * Document the symlink dance in README.source.

 -- Cyril Brulebois <kibi@debian.org>  Sat, 24 Sep 2011 20:32:55 +0200

mesa (7.11-5) unstable; urgency=low

  * Merge patch from Pino Tiscano (thanks!):
    - Use hurd-any instead of: hurd-i386 (“wildcard archs are free”).
    - Use any-i386 instead of: i386 kfreebsd-i386 hurd-i386.
    - Rewrite a check in debian/rules to follow the same logic.
    - Switch libgbm1-dbg to arch: linux-any. This fixes uninstallability
      on kfreebsd-* by getting rid of this package there.
    - Switch libglapi-mesa{,-dbg} arch: any. This fixes the FTBFS on
      hurd-i386^Wany.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 28 Aug 2011 19:07:48 +0200

mesa (7.11-4) unstable; urgency=low

  * Use xz compression for dbg packages.
  * Simplify dh_strip calls a bit using make variables.
  * libgbm-dev is also linux-only, not just libgbm1.

 -- Julien Cristau <jcristau@debian.org>  Sat, 27 Aug 2011 12:02:42 +0200

mesa (7.11-3) unstable; urgency=low

  * Don't build libgbm on kfreebsd, it needs KMS/udev.
  * Build/ship r300g on all Linux architectures, not just x86.

 -- Julien Cristau <jcristau@debian.org>  Fri, 26 Aug 2011 11:04:45 +0200

mesa (7.11-2) unstable; urgency=low

  * Work around the lack of O_CLOEXEC on kfreebsd, fix FTBFS.
  * Don't crash on BadRequest from DRI2Connect, just fall back to sw or
    indirect.

 -- Julien Cristau <jcristau@debian.org>  Thu, 25 Aug 2011 23:13:35 +0200

mesa (7.11-1) unstable; urgency=low

  [ Christopher James Halse Rogers ]
  * New upstream release.
    - Fix regression from 7.10, missing characters in text display with
      intel drivers (Closes: #631516). Thanks to Martin Steigerwald for
      the report and the tests.
  * Temporarily disable Wayland EGL backend as it requires a newer
    libwayland-dev
  * Update rules for configure changes
  * debian/lib{egl1,openvg1}-mesa.install.in:
  * debian/libegl1-mesa-drivers.install.in:
    - Stop trying to install st_{GL,OpenVG} and pipe_*
      as they are all now built in to egl_gallium.so
  * Add libgbm{1,1-dbg,-dev} packages for the new buffer-manager library.
  * Drop 12-llvm-config-check.diff; upstream.
  * Refresh 13-llvm-config-pick-a-version.diff for new upstream.
  * Add strictly versioned dependencies on libglapi-mesa to libgl1-mesa-glx
    and libegl1-mesa-drivers as they also now depend on this internal library.
  * debian/rules:
  * debian/libgl1-mesa-dri.install.linux.in:
    - Manually install r300g only when we actually build it.  Fixes build on
      non-i386, non-amd64 linux.

  [ Julien Cristau ]
  * Don't use dh_testroot in clean.

 -- Julien Cristau <jcristau@debian.org>  Thu, 25 Aug 2011 00:15:27 +0200

mesa (7.11~0-2) experimental; urgency=low

  * Thank you sbuild for giving a green light when that's not actually the
    case. Fix missing Pre-Depends for the libegl1-mesa-drivers package
    (multiarch-support).

 -- Cyril Brulebois <kibi@debian.org>  Sun, 19 Jun 2011 21:26:00 +0200

mesa (7.11~0-1) experimental; urgency=low

  * New upstream snapshot, from the master branch (up to 2fe39b46e7).
  * Drop 05_hurd-ftbfs.diff, merged upstream (as 758561786c).
  * Refresh 06_kfreebsd-ftbfs.diff (due to 8fd8de3995).
  * Refresh 08-kfreebsd-gallium.diff (adjust offsets).
  * Add 10-hurd-configure-tweaks.diff to enable x86 assembler on Hurd,
    thanks to Pino Toscano.
  * Refresh 11-hurd-ftbfs-again.diff (adjust offsets and drop the
    src/gallium/auxiliary/os/os_time.c hunk, which should be OK since
    PIPE_OS_UNIX is used there, and should happily replace the use of
    PIPE_OS_HURD; and adapt for the removal of the PIPE_OS_EMBEDDED check).
  * debian/libegl1-mesa.install.in: Stop trying to install egl_dri2.so and
    egl_glx.so, since they are now built-in (since c98ea26e16).
  * debian/libgles{1,2}-mesa.install.in: Stop trying to install
    st_GLESv{1,2}_CM.so (respectively), which got removed. Quoting the
    commit message: “Remove GLES overlay. With core mesa doing runtime API
    checks, GLES overlay is no longer needed.” (12583174c5).
  * Drop --enable-gles-overlay from debian/rules accordingly.
  * Add 12-llvm-config-check.diff to handle --disable-gallium more
    properly.
  * Add 13-llvm-config-pick-a-version.diff, so that llvm-config-2.9 is
    searched by configure, instead of unversioned llvm-config.
  * Add a NOT_INSTALLED_EITHER variable to debian/not-installed. A few
    files might have to be removed, but only if that's a git snapshot
    (those files aren't in the released tarballs). Let's consider it's OK
    to run “rm -f” on them: {,dri/}usr/include/GL/glut{,f90}.h
  * Add libglapi-mesa{,-dbg} packages.
  * Use a package-name-doesnt-match-sonames override accordingly.
  * Update libegl1-mesa.symbols with new symbols.
  * Update libgles{1,2}-mesa.symbols now that internal symbols (_glapi_*
    and _glthread_GetID) moved to libglapi-mesa.
  * Add a gentarball target, to generate tarballs for git snapshots.
  * Replace “The OpenGL utility library…” with “Mesa OpenGL utility
    library…” in the description of the libglu1-mesa* packages.
  * Replace radeon with r300 in GALLIUM_DRIVERS to match upstream renaming
    (5722286be2).
  * Build r300 classic (through DRI_DRIVERS) everywhere, since r300g comes
    with a few additional requirements: LLVM is needed for this driver,
    and apparently only works fine on x86 platform. As a consequence, only
    build r300g on amd and i386, and add llvm-2.9-dev build-dep on those
    platforms accordingly. Disable it explicitly on other platforms.
  * Stop building i915g at all, it's apparently never going to be a
    suitable replacement for i915c.
  * Add libwayland-dev build-dep.
  * Add wayland to EGL_DISPLAYS on Linux.
  * Ship wayland-egl.pc and libwayland-egl.so in libegl1-mesa-dev; and ship
    libwayland-egl.so.1* in libegl1-mesa-drivers.
  * Update libegl1-mesa.symbols with new wl_drm_interface symbol.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 19 Jun 2011 19:01:52 +0200

mesa (7.10.3-4) unstable; urgency=medium

  [ Cyril Brulebois ]
  * Accept libmotif-dev as an alternative to lesstif2-dev in
    libglw1-mesa-dev's dependencies, as requested by Michael Hanke
    (Closes: #631236).
  * Merge upstream 7.10 branch up to e041956cb2.
  * Wrap Breaks fields.
  * Add Breaks: {xserver-xorg-core,libgl1-mesa-glx}-no-multiarch to
    libgl1-mesa-dri* to handle upgrades from squeeze-backports (without
    multiarch) to wheezy (with multiarch).
  * Add lintian overrides for breaks-without-version accordingly, those
    packages are only provided in squeeze-backports.
  * Replace “The OpenGL utility library…” with “Mesa OpenGL utility
    library…” in the description of the libglu1-mesa* packages.
  * Rename all remaining *.install files as *.install.in and use
    “${DEB_HOST_MULTIARCH}” instead of “*”.
  * Use the sed substitution on all debian/*.in files accordingly.
  * Remove debian/clean, and use the same for loop to remove the generated
    files.
  * Set urgency to “medium” to speed things up. Migration to testing is
    a prerequisite for squeeze backports.

  [ Sven Joachim ]
  * Fix comments in libegl1-mesa.symbols to avoid impending FTBFS with
    the upcoming dpkg-dev 1.16.1.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 07 Aug 2011 21:50:46 +0200

mesa (7.10.3-3) unstable; urgency=low

  * Update the “Breaks: xserver-xorg-core” from “(<= 2:1.10.2-1)” to
    “(<< 2:1.10.2-2)”. The first binNMU migrated to testing too soon,
    so it was needed to rebuild it again, in testing. Updating the
    Breaks makes sure that a multiarch mesa doesn't get installed with
    a server built against a pre-multiarch mesa.
  * Merge upstream 7.10 branch up to 1ad06c7a25.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 19 Jun 2011 17:31:17 +0200

mesa (7.10.3-2) unstable; urgency=low

  [ Cyril Brulebois ]
  * Add Breaks against nvidia and fglrx packages, since they are also
    affected by the multiarch changes, and need fixing. Until fixed
    packages reach the archive, nvidia and fglrx users should stick to
    mesa 7.10.2-3 packages, currently available in testing. Thanks to
    Andreas and Patrick for the version strings (Closes: #630710).
  * Set CXXFLAGS along with CFLAGS (Closes: #630602). Thanks for the
    report and the patch, Fabio Pedretti!

  [ Julien Cristau ]
  * Prepend the multiarch dir to the dri driver search path.  ${ORIGIN}/dri
    works for libGL, but not for egl_dri2.so (which lives in /usr/lib/*/egl/).
    Thanks to Michel Dänzer for the heads-up!

 -- Cyril Brulebois <kibi@debian.org>  Fri, 17 Jun 2011 11:46:20 +0200

mesa (7.10.3-1) unstable; urgency=low

  * New upstream release.
  * Add flex and bison build-deps (even though the generated files are
    stored in VCS, and shipped…).

 -- Cyril Brulebois <kibi@debian.org>  Tue, 14 Jun 2011 15:37:41 +0200

mesa (7.10.2-4) unstable; urgency=low

  [ Steve Langasek ]
  * Build for multiarch.

  [ Cyril Brulebois ]
  * Explanation of the “Breaks: xserver-xorg-core” part for our users: the
    server queries the DRI driver path at build time, which is getting
    changed for multiarch, so the server needs be rebuilt; a binNMU will
    take care of getting the server ready.
  * Many thanks for multiarch, Steve!
  * Update Uploaders list. Thanks, David and Brice!
  * Wrap Build-Depends.

 -- Cyril Brulebois <kibi@debian.org>  Tue, 14 Jun 2011 12:19:33 +0200

mesa (7.10.2-3) unstable; urgency=low

  * Merge upstream 7.10 branch up to eaadbacb5c.
  * Ship r600g again, it should be more usable now.

 -- Cyril Brulebois <kibi@debian.org>  Tue, 31 May 2011 17:48:47 +0200

mesa (7.10.2-2) unstable; urgency=low

  [ Cyril Brulebois ]
  * Merge upstream 7.10 branch up to b8c6362389.
  * Get rid of leading article in short descriptions, taking care of this
    lintian tag for almost all binary packages:
    - description-synopsis-starts-with-article
  * Get rid of libgl1-mesa-dri-i686, already commented out in control file.

  [ Sven Joachim ]
  * Avoid installing the nouveau_vieux driver into libgl1-mesa-dri
    (Closes: #622222).

 -- Cyril Brulebois <kibi@debian.org>  Mon, 02 May 2011 12:29:37 +0200

mesa (7.10.2-1) unstable; urgency=low

  * New upstream release.

 -- Cyril Brulebois <kibi@debian.org>  Sun, 10 Apr 2011 23:42:41 +0200

mesa (7.10.1-1) experimental; urgency=low

  [ Cyril Brulebois ]
  * Revert to r600 classic, r600 gallium doesn't seem ready yet, after all
    (Closes: #612609).

  [ Julien Cristau ]
  * Set the DRI driver search path to "${ORIGIN}/dri", allowing libGL to find
    the drivers after being relocated to /usr/lib32 by ia32-libs
    (closes: #466790).  Thanks to Javier Serrano Polo for the suggestion.

  [ Christopher James Halse Rogers ]
  * New upstream release
    - Lots of intel bugfixes, mainly for Sandybridge.
    - Lots of GLSL spec conformance fixes
    - Drop 12-fix-fdo-31940.diff; included included in new release.
  * Remove talloc from build-depends.  This has been re-implemented in-tree.
  * Also drop patch fixing talloc linking.
  * Cherry-pick fix from master for changed nouveau headers in libdrm 2.4.24.
    - Also bump build-depend on libdrm to 2.4.24
  * Build and install nouveau_vieux driver in libgl1-mesa-dri-experimental.
    (Closes: #586062)

 -- Cyril Brulebois <kibi@debian.org>  Sun, 03 Apr 2011 21:26:05 +0200

mesa (7.10-4) unstable; urgency=low

  * debian/not-installed: Ignore the same files on *i386.
  * debian/local/control: Report-with: xserver-xorg{,-core}.
  * debian/local/script: New bug script, calling glxinfo if available,
    then the server's bug script.
  * New patch, thanks to Pino Toscano, fixing FTBFS on GNU/Hurd:
    - 11-hurd-ftbfs-again.diff
  * Make a lot of binary packages linux-any kfreebsd-any:
    - libegl1-mesa
    - libegl1-mesa-dbg
    - libegl1-mesa-dev
    - libegl1-mesa-drivers
    - libegl1-mesa-drivers-dbg
    - libopenvg1-mesa
    - libopenvg1-mesa-dbg
    - libopenvg1-mesa-dev
    - libgles1-mesa
    - libgles1-mesa-dbg
    - libgles1-mesa-dev
    - libgles2-mesa
    - libgles2-mesa-dbg
    - libgles2-mesa-dev
  * Disable EGL/Gallium/GLES/state trackers on GNU/Hurd.
  * Fix FTBFS on sparc64, treat it the same way as sparc. Thanks, Aurélien
    Jarno! (Closes: #613106).
  * Add patch for a crash in dri2_invalidate_drawable, thanks to Kai
    Wasserbäch (Closes: #612640):
    - 12-fix-fdo-31940.diff

 -- Cyril Brulebois <kibi@debian.org>  Wed, 16 Feb 2011 11:53:26 +0100

mesa (7.10-3) unstable; urgency=low

  [ Julien Cristau ]
  * debian/rules: RIP lpia.

  [ Cyril Brulebois ]
  * Cherry-pick from upstream (thanks to Dave Airlie for the hint):
    - radeon: fix build on non-KMS systems.
    This fixes the FTBFS on GNU/kFreeBSD.
  * Ship r300g (r300 gallium) on Linux only: Introduce Linux-specific
    libgl1-mesa-dri.install.linux to that effect.
  * According to Michel Dänzer, r600g (r600 gallium) is working well
    enough to be shipped now. Let's ship it, then!
  * Cherry-pick from upstream, fixing X's failure to start with UMS on
    r300g (Closes: #612380):
    - dri_util: fail driCreateNewScreen if InitScreen is NULL

 -- Cyril Brulebois <kibi@debian.org>  Tue, 08 Feb 2011 16:06:38 +0100

mesa (7.10-2) unstable; urgency=low

  * Fix FTBFS on i386: Add some files to debian/not-installed, on a
    per-architecture fashion (those are under /usr/lib/i686/cmov/).
  * Work around FTBFS on sparc due to new symbols: pass -c1 to
    dpkg-gensymbols instead of -c4 (on sparc only). Those symbols probably
    shouldn't be exported, but let's make it possible to build xorg-server
    1.9 in sid.

 -- Cyril Brulebois <kibi@debian.org>  Sat, 05 Feb 2011 11:16:26 +0100

mesa (7.10-1) experimental; urgency=low

  * New upstream release.
  * Add patch: 10-fix-talloc-linking.diff
  * Use debian/not-installed to keep track of files which aren't getting
    installed for now. Delete them before running dh_install. Use the list
    of files appearing in the build logs for 7.9+repack-2.
  * Switch from --list-missing to --fail-missing accordingly.
  * Pass -c4 to dpkg-gensymbols through dh_makeshlibs to make sure
    symbol-related changes are noticed and dealt with.
  * Update symbols files with new symbols:
    - libopenvg1-mesa.symbols
  * Remove “mesa internal ASM optimized functions” lines from symbols
    files, those seem to be gone, and with -c4 passed to dpkg-gensymbols,
    any related issue will break the build:
    - libgles1-mesa.symbols
    - libgles2-mesa.symbols
  * Stop using dh_strip -s --remaining-packages. When a build is resumed
    (-nc), this dh_strip call is a no-op if it was previously written to
    the debhelper log files. Specify all remaining packages instead.
    That's boring, but avoid getting non-stripped packages.
  * Add debian/git-cleanup.sh script to ease removing files in git which
    aren't in the release tarballs, and make dpkg-source error out.
  * Keep my eyes wide shut and add myself to Uploaders.

 -- Cyril Brulebois <kibi@debian.org>  Tue, 25 Jan 2011 00:20:57 +0100

mesa (7.9+repack-2) experimental; urgency=low

  [ Cyril Brulebois ]
  * Specify PASV in watch file, and mangle +repack.

  [ Christopher James Halse Rogers ]
  * debian/control:
    - Add libudev-dev to build-depends.  This is required for the DRI2 EGL
      driver to work with a drm display.

  [ Sven Joachim ]
  * Update for the latest libdrm-nouveau API:
    - Cherry-pick commit c25fcf5a from Mesa master.
    - Build-depend on libdrm-dev 2.4.23 or newer.
  * Use linux-any for linux-libc-dev and libudev-dev build-depends.

  [ Julien Cristau ]
  * Update from upstream 7.9 branch, commit 0ff45dd.
  * Refresh patches.

 -- Julien Cristau <jcristau@debian.org>  Tue, 04 Jan 2011 12:46:59 +0100

mesa (7.9+repack-1) experimental; urgency=low

  * Repack the upstream tarball to get rid of duplicate files which make dpkg
    choke.  Thanks to Luca Falavigna for his help diagnosing this.

 -- Julien Cristau <jcristau@debian.org>  Mon, 15 Nov 2010 23:04:45 +0100

mesa (7.9-1) experimental; urgency=low

  [ Christopher James Halse Rogers ]
  * debian/control:
    - Add EGL, GLESv1, GLESv2, and OpenVG virtual packages.  The Khronos group
      specifies a de-facto linux ABI for these libraries.  We have a similar
      package for libgl1.
  * debian/README.Debian:
    - Document the virtual packages above.

  [ Sven Joachim ]
  * Bump libdrm-dev build dependency to 2.4.21-2~, the Nouveau Gallium
    driver does not build with squeeze's libdrm-nouveau1.

  [ Julien Cristau ]
  * New upstream release.
  * Update patches:
    - 03_optional-progs-and-install.patch dropped, demos moved to a separate
      package
    - 07-nouveau-update.diff and
      09-intel-fix-invalidate-before-initialisation.diff dropped, they were
      backports from upstream
    - 04_osmesa_version.diff updated
  * Add build-dep on talloc.
  * Drop the mesa-utils package, demos were moved out of the mesa tree.
  * Use --with-egl-platforms instead of --with-egl-displays, and replace kms
    with drm.
  * Merge some packaging changes from ubuntu:
    - libegl1-mesa-drivers-x11,kms: There are no longer separate kms or x11
      drivers for EGL, libegl1-mesa-drivers now contains a single driver that
      provides both backends (Christopher James Halse Rogers)
    - Remove pre-generated .pc's, use the ones generated at build time instead
      (Robert Hooker)
    - Build the r600 gallium driver
    - Update symbols files
  * README.source: we don't need to repack MesaLib.tar.gz anymore.
  * Kill old sourceforge url from debian/watch.
  * Ship the gallium r300 driver instead of the classic one.

 -- Julien Cristau <jcristau@debian.org>  Sat, 13 Nov 2010 00:36:11 +0100

mesa (7.8.2-2) experimental; urgency=low

  * Add missing dependencies to libegl1-mesa-dev, thanks to Alexandros
    Frantzis (LP: #600243).
  * gallium: handle kfreebsd like freebsd, fixing FTBFS (closes: #585618)
  * intel: Fix invalidate before initialisation (stolen from fdo bugzilla
    #29091, fixes server 1.9rc crash when starting an app using GLX 1.3)
  * Pull from 7.8-branch up to commit d06e011.
  * Fixup hurd and kfreebsd patches to apply.

 -- Julien Cristau <jcristau@debian.org>  Tue, 20 Jul 2010 15:57:31 +0200

mesa (7.8.2-1) experimental; urgency=low

  [ Robert Hooker ]
  * Adjust the build system to install the dri target in a separate
    DESTDIR, no longer passing --libdir=/usr/lib/glx at configure time
    messing with the .pc's since it is used for a majority of the 
    packages now.
  * Fix up the mesa-common-dev header install location.

  [ Julien Cristau ]
  * Add ${misc:Depends} to all packages.
  * libc6-dev is build-essential, no need to depend on it.
  * Replace nonsensical dependency of libglw1-mesa-dev on libxext6 with a
    dependency on libxt-dev and lesstif2-dev.
  * Add new lintian overrides for the package-name-doesnt-match-sonames stuff.
  * Don't ship progs/objviewer in the tarball, it's insanely big and unused.
  * New upstream release.
  * Refresh patches.
  * Stop shipping an upstream git log, it's unlikely to be useful to anyone,
    and it's big.
  * debian/scripts/choose-configs: use DEB_HOST_ARCH, not DEB_BUILD_ARCH
    (closes: #451648).
  * Rename radeong_dri.so to r300_dri.so in build, not binary.

  [ Christopher James Halse Rogers ]
  * debian/patches/07-nouveau-update.diff:
    - Pull in nouveau_class.h header no longer shipped by libdrm 2.4.21 and 
      update nouveau build to use it.  Fixes FTBFS against libdrm 2.4.21.
  * debian/rules:
    - Simplify selecting which gallium drivers are built.  Use this to only
      act on gallium packages on archs where we're actually building them.
      Part of the fix for FTBFS on Hurd and kFreeBSD.

 -- Julien Cristau <jcristau@debian.org>  Thu, 01 Jul 2010 12:50:18 +0200

mesa (7.8.1-2) experimental; urgency=low

  [ Tormod Volden ]
  * debian/rules: Do not strip the same packages twice

  [ Julien Cristau ]
  * Stop building the ffb dri driver on sparc, it no longer exists.
  * Merge changes from 7.7.1-2.

  [ Christopher James Halse Rogers ]
  * debian/compat:
    - Bump to v7 for dh_install search path behaviour
  * debian/rules:
    - Enable gallium for dri build.
    - Enable egl for dri build.
    - Build nouveau, radeon & swrast gallium drivers
    - Build OpenVG, OpenGL|ES, dri, glx & egl state trackers
  * debian/libegl1-mesa-dev.install:
  * debian/libegl1-mesa.install:
  * debian/libegl1-mesa.symbols:
    - New libEGL package.
  * debian/libgles1-mesa-dev.install:
  * debian/libgles1-mesa.install:
  * debian/libgles1-mesa.symbols:
    - New OpenGL|ES v1.x package.
  * debian/libgles2-mesa-dev.install:
  * debian/libgles2-mesa.install:
  * debian/libgles2-mesa.symbols:
    - New OpenGL|ES v2.x package.
  * debian/libopenvg1-mesa-dev.install:
  * debian/libopenvg1-mesa.install:
  * debian/libopenvg1-mesa.symbols:
    - New OpenVG package.
  * debian/libegl1-mesa-drivers-x11.install:
    - New gallium EGL drivers package.
  * debian/libegl1-mesa-drivers-kms.install:
    - New gallium EGL kms driver package.
  * debian/egl.pc:
  * debian/vg.pc:
  * debian/glesv1_cm.pc:
  * debian/glesv2.pc:
    - Pull pkg-config files from master and install them in the respective
      -dev packages.
  * debian/libgl1-mesa-dri-experimental.install:
  * debian/libgl1-mesa-dri.install:
    - “make install” puts classic and gallium drivers in the same path, but
      builds gallium drivers in the gallium/ subdirectory.  Copy the drivers 
      directly from the build path, rather than trying to separate them out 
      post-hock.
  * debian/control:
    - Add new packages.
    - Add new build-depends on libx11-xcb-dev, libxcb-dri2-0-dev, 
      libxcb-xfixes0-dev and python-libxml2 for gallium.
    - Bump build-depends on dpkg-dev for regex in symbols files.

 -- Julien Cristau <jcristau@debian.org>  Fri, 11 Jun 2010 03:19:09 +0200

mesa (7.8.1-1) experimental; urgency=low

  * New upstream release.
    + Pull from upstream 7.8 branch up to commit db3b3421.
  * Refresh patches.
  * Bump build dependency to libdrm-dev 2.4.19, x11proto-gl-dev 1.4.11,
    and x11proto-dri2-dev 2.1.

 -- Brice Goglin <bgoglin@debian.org>  Sun, 18 Apr 2010 09:25:39 +0200

mesa (7.7.1-2) unstable; urgency=low

  * debian/rules: use DEB_HOST_ARCH_CPU instead of DEB_HOST_GNU_CPU.  Prompted
    by Ubuntu which changed the latter to i686, breaking their packages on
    i386.
  * Pull from mesa_7_7_branch (commit 8ba378d).

 -- Julien Cristau <jcristau@debian.org>  Thu, 20 May 2010 17:34:19 +0200

mesa (7.7.1-1) unstable; urgency=low

  [ Brice Goglin ]
  * Remove Thierry Reding from Uploaders, closes: #572539.
  * Bump Standards-Version to 3.8.4, no changes needed.

  [ Timo Aaltonen ]
  * New upstream release.

 -- Brice Goglin <bgoglin@debian.org>  Tue, 30 Mar 2010 17:15:09 +0200

mesa (7.7-4) unstable; urgency=low

  * Pull from upstream mesa_7_7_branch up to commit 293f4d51.
    + r6xx/r7xx: emit relocation for FRAG & TILE buffer, closes: #569663.

 -- Brice Goglin <bgoglin@debian.org>  Wed, 24 Feb 2010 22:44:11 +0100

mesa (7.7-3) experimental; urgency=low

  * Pull from upstream mesa_7_7_branch up to commit f5145a6e.
  * Build against libdrm-radeon1 2.4.17 to get DRI2 support.

 -- Brice Goglin <bgoglin@debian.org>  Mon, 01 Feb 2010 22:55:36 +0100

mesa (7.7-2) experimental; urgency=low

  [ Julien Cristau ]
  * Rename the build directory to not include DEB_BUILD_GNU_TYPE for no
    good reason.  Thanks, Colin Watson!
  * Remove myself from Uploaders

  [ Brice Goglin ]
  * Pull from upstream mesa_7_7_branch up to commit 2f28ca0a.
    + Fix funky colors on radeon/r200/r300.

 -- Brice Goglin <bgoglin@debian.org>  Wed, 27 Jan 2010 09:14:38 +0100

mesa (7.7-1) experimental; urgency=low

  [ Brice Goglin ]
  * Bump libdrm build dependency to 2.4.15, closes: #561058.
  * New upstream release.
  * Pull from upstream mesa_7_7_branch up to commit 6d6c9c66.

  [ Julien Cristau ]
  * Add freedesktop.org ftp to watch file since that's where newer upstream
    tarballs are.
  * Don't include GLUT sources since we don't use them.

 -- Brice Goglin <bgoglin@debian.org>  Mon, 11 Jan 2010 17:52:31 +0100

mesa (7.7~rc2-1) experimental; urgency=low

  * New upstream release candidate.
    + s3v and trident DRI drivers removed since they never worked.

 -- Brice Goglin <bgoglin@debian.org>  Sat, 12 Dec 2009 13:02:55 +0100

mesa (7.6.1-1) unstable; urgency=low

  * New upstream release
    + Pull upstream mesa_7_6_branch up to commit da876fa3
  * Bump linux-libc-dev build-dep to 2.6.31 for the r600 dri driver (fixes
    ftbfs on mips).
  * Drop hunk from 05_hurd-ftbfs.diff that was applied upstream.  Refresh
    other patches.

 -- Julien Cristau <jcristau@debian.org>  Tue, 29 Dec 2009 10:42:24 +0000

mesa (7.6.1~rc3-1) unstable; urgency=low

  * New upstream release candidate.
    + Pull upstream mesa_7_6_branch up to commit 7d41b424.
    + Includes sparc64 xform asm patch from #560403.
  * Update debian/rules to fix sparc64 FTBFS, thanks Aurelien Jarno,
    closes: #560403.
  * Build r600 DRI driver.

 -- Brice Goglin <bgoglin@debian.org>  Fri, 11 Dec 2009 18:36:36 +0100

mesa (7.6.1~rc2-1) unstable; urgency=low

  * New upstream release candidate.
    + Pull upstream mesa_7_6_branch up to commit b2953ee.
    + i965: Fix the bounds emitted in the vertex buffer packets,
      closes: #556541.
    + Fix window drawing regression in Kwin on older Radeon hardware,
      fix assertion failure leading to crash on kwin when compositing
      is enabled, closes: #549588.
    + Refresh patches.

 -- Brice Goglin <bgoglin@debian.org>  Sun, 06 Dec 2009 00:14:34 +0100

mesa (7.6-1) unstable; urgency=low

  [ Brice Goglin ]
  * New upstream release.
    + Fix software fallback assertion on RS480, closes: #539162.
    + Fix segfault in _swrast_ReadPixels on i915, closes: #545085.

  [ Julien Cristau ]
  * Don't run install from the various configs in parallel, hopefully fixing a
    bug in the previous debian/rules.  Thanks to Bernhard R. Link for the
    suggestions.

 -- Brice Goglin <bgoglin@debian.org>  Tue, 29 Sep 2009 11:51:58 +0200

mesa (7.5.1-1) unstable; urgency=low

  [ Brice Goglin ]
  * New upstream release.
  * Add README.source.
  * Bump Standards-Version to 3.8.3.

  [ Julien Cristau ]
  * Override 'package-name-doesnt-match-sonames' lintian warnings for libGLU,
    libGLw and both libGLs.
  * Use dh_lintian and bump debhelper build-dep accordingly.

 -- Brice Goglin <bgoglin@debian.org>  Fri, 04 Sep 2009 11:38:46 +0200

mesa (7.5-3) unstable; urgency=low

  * Pull from upstream mesa_7_5_branch up to commit b4ba6a66
    (early 7.5.1 release snapshot).
  * Only install the huge upstream changelog in mesa-common-dev,
    closes: #538094.
  * Enable i686 optimized libraries on hurd-i386.

 -- Brice Goglin <bgoglin@debian.org>  Fri, 24 Jul 2009 00:29:28 +0200

mesa (7.5-2) unstable; urgency=low

  * Pull from upstream mesa_7_5_branch up to commit a6b31415
    + radeon/DRI1: if we have HW stencil, only expose fbconfigs with stencil,
      closes: #537732.
  * Install the upstream changelog.

 -- Brice Goglin <bgoglin@debian.org>  Tue, 21 Jul 2009 22:21:50 +0200

mesa (7.5-1) unstable; urgency=low

  [ Timo Aaltonen ]
  * Move dri.pc to mesa-common-dev (closes: #521667)

  [ Brice Goglin ]
  * Enable i686 optimized libraries on kfreebsd-i386, closes: #537345.
  * New upstream release:
    + i915: Fix assertion failure on remapping a non-BO-backed VBO,
      closes: #537147.
    + GLX/DRI1: Mark GLX visuals with depth != screen depth non-conformant,
      closes: #532980.

 -- Brice Goglin <bgoglin@debian.org>  Sun, 19 Jul 2009 12:53:41 +0200

mesa (7.5~rc4-1) experimental; urgency=low

  [ Timo Aaltonen ]
  * New upstream release candidate.
    + xdriinfo now works with DRI2 (closes: #527132)
  * rules: Disable EGL.
  * mesa-common-dev.install: Don't install glxew.h, conflicts with libglew.

  [ Julien Cristau ]
  * Update patches:
    + 02_use-ieee-fp-on-s390-and-m68k.patch moved from imports.h to compiler.h
    + 03_optional-progs-and-install.patch refreshed
    + 05_hurd-ftbfs.diff partly applied upstream
    + 06_kfreebsd-ftbfs.diff refreshed
  * Install dri.pc, which will be needed to build xorg-server 1.7.
  * Don't build gallium for now.

 -- Julien Cristau <jcristau@debian.org>  Sun, 28 Jun 2009 20:21:37 +0200

mesa (7.4.4-1) unstable; urgency=low

  [ Julien Cristau ]
  * New upstream release.
    + fixes a crash in swrast glXWaitX (closes: #528708)
  * Don't build hardware dri drivers on s390.
  * Update 04_osmesa_version.diff, refresh 06_kfreebsd-ftbfs.diff.

  [ Brice Goglin ]
  * Enable motif in GLw, closes: #527483.

 -- Julien Cristau <jcristau@debian.org>  Sun, 28 Jun 2009 18:58:27 +0200

mesa (7.4.1-1) unstable; urgency=low

  [ Julien Cristau ]
  * Make libgl1-mesa-dev and mesa-common-dev 'Architecture: any'.  This gets
    rid of uninstallability when a new upstream version isn't built on all
    architectures, and allows us to ship potentially arch-specific .pc files.
  * Install pkgconfig files for libGLU, libOSMesa and libGLw.
  * Make libgl1-mesa-dri{,-dbg} 'Architecture: any', as swrast_dri.so should
    get built everywhere.
  * Drop the dependency on libgl1-mesa-glx from -dri, and make -glx recommend
    -dri instead.  The dri drivers are also loaded by the X server, which
    doesn't need libGL.  On the other hand, libGL needs one of the dri drivers
    for direct rendering (either software or hardware).  Mark libgl1-mesa-dri
    as breaking old xserver-xorg-core and libgl1-mesa-glx, to avoid
    incompatibilities.
  * Add patch by Samuel Thibault to fix FTBFS on hurd-i386.
  * Pull from mesa_7_4_branch as of May 3rd (commit 63375254).
  * Move -dbg packages to new 'debug' section.

  [ Brice Goglin ]
  * Add patch by Aurelien Jarno to fix FTBFS on kfreebsd-i386, closes: #524690.

 -- Julien Cristau <jcristau@debian.org>  Sun, 03 May 2009 16:05:09 +0200

mesa (7.4-2) unstable; urgency=low

  * Upload to unstable.

 -- Julien Cristau <jcristau@debian.org>  Wed, 08 Apr 2009 23:53:47 +0100

mesa (7.4-1) experimental; urgency=low

  [ Timo Aaltonen ]
  * New upstream release.

 -- Julien Cristau <jcristau@debian.org>  Wed, 01 Apr 2009 20:25:00 +0200

mesa (7.4~rc1-1) experimental; urgency=low

  * New upstream release candidate.
  * Fix watch file to make uscan not consider release candidates as newer than
    actual releases.
  * debian/control: add lpia to the Architecture field for
    libgl1-mesa-dri{,-dbg} to match Ubuntu.
  * debian/rules: on lpia, only build the i915 and i965 dri drivers (based on
    Ubuntu changes).
  * Build-depend on linux-libc-dev >= 2.6.29 on linux archs.

 -- Julien Cristau <jcristau@debian.org>  Wed, 25 Mar 2009 11:34:42 +0100

mesa (7.3-1) experimental; urgency=low

  [ Timo Aaltonen ]
  * New upstream release.

  [ Julien Cristau ]
  * Try to make the diff a bit smaller by removing directories that are in
    upstream git but not in tarballs.

 -- Julien Cristau <jcristau@debian.org>  Fri, 30 Jan 2009 20:00:34 +0100

mesa (7.3~rc3-1) experimental; urgency=low

  [ Timo Aaltonen ]
  * New upstream release candidate.

  [ Julien Cristau ]
  * Refresh patches 03 and 04.

 -- Julien Cristau <jcristau@debian.org>  Wed, 21 Jan 2009 19:01:21 +0100

mesa (7.3~rc1-1) experimental; urgency=low

  * New upstream release candidate.
    + provides DRI2 (closes: #411141).
    + i915: fallback for cube map texture.  Fixes GPU hang with scorched3d
      (closes: #484049).

  [ Timo Aaltonen ]
  * Remove debian/patches/01_disable-intel-classic-warn.diff, the
    warning is gone now.
  * debian/control:
    - Build-depend on x11proto-dri2-dev (>= 1.99.3)

  [ Julien Cristau ]
  * Require libdrm-dev 2.4.3.
  * Merge packaging changes from unstable, from 7.0.3-5 to 7.0.3-7.
  * Delete unused configs/debian-*, and install-source.sh script.  We've
    switched to using autoconf, and mesa-swx11-source is gone.
  * Delete some now unused code from debian/rules.

 -- Julien Cristau <jcristau@debian.org>  Sat, 10 Jan 2009 22:14:55 +0100

mesa (7.2-1) experimental; urgency=low

  [ Brice Goglin ]
  * Fix grammar and punctuation in glxinfo(1), thanks Sam Hocevar,
    closes: #498595.

  [ Timo Aaltonen ]
  * New upstream release.
  * Refresh patch 04_osmesa_version.diff

  [ Julien Cristau ]
  * Remove the build-dep on dri2proto, DRI2 support has been removed.
  * intel: don't warn about TTM init failure.

 -- Julien Cristau <jcristau@debian.org>  Wed, 24 Sep 2008 14:28:21 +0200

mesa (7.1-1) experimental; urgency=low

  * Add parallel build support.
  * New upstream development release
    + libGLU now only exports its public interface (closes: #319388)
  * Some more parallel build updates.

 -- Julien Cristau <jcristau@debian.org>  Wed, 27 Aug 2008 19:52:24 +0200

mesa (7.1~rc3-1) experimental; urgency=low

  [ Julien Cristau ]
  * New upstream release candidate (updated to git commit 4fab47b1).
  * Build against libdrm >= 2.3.1.
  * 04_osmesa_version.diff: fix libOSMesa versioning, to revert accidental
    SONAME bump.

  [ Timo Aaltonen ]
  * Refresh patches, and drop obsolete 00_create-libdir.patch and
    01_fix-makefile.patch.
  * Build-depend on x11proto-dri2-dev.
  * Drop mesa-swx11-source.
  * Add dri_interface.h to mesa-common-dev.
  * Add gl.pc to libgl1-mesa-dev
  * rules: Replace the old build system with the new autotools-based 
    system.
  * Run autoreconf before building the various flavours..
  * Add automake & autoconf to build-deps.
  * Use --enable-glx-tls for dri.

 -- Julien Cristau <jcristau@debian.org>  Sun, 13 Jul 2008 19:41:42 +0200

mesa (7.0.3-7) unstable; urgency=low

  * Cherry-pick patch from upstream:
    Use 3Dnow! x86-64 routines only on processors that support 3Dnow!
    (closes: #484180).
  * Also build the x86-specific dri drivers on kfreebsd (closes: #492894).

 -- Julien Cristau <jcristau@debian.org>  Sun, 14 Dec 2008 07:34:58 +0530

mesa (7.0.3-6) unstable; urgency=high

  * Update debian/copyright to the SGI Free Software License B, version 2.0.
    It now mirrors the free X11 license used by X.Org (closes: #368560).
    http://www.sgi.com/company_info/newsroom/press_releases/2008/september/opengl.html

 -- Julien Cristau <jcristau@debian.org>  Sat, 20 Sep 2008 16:30:44 +0200

mesa (7.0.3-5) unstable; urgency=low

  * Disable the i915tex driver, it doesn't build against libdrm 2.3.1.
  * Pull from mesa_7_0_branch (27425708).

 -- Julien Cristau <jcristau@debian.org>  Sat, 12 Jul 2008 18:56:19 +0200

mesa (7.0.3-4) unstable; urgency=low

  * Pull from mesa_7_0_branch (2ac4919d).
  * Put back our configs/ changes into the .diff.gz since choose-configs
    needs them before quilt is invoked. Put 04_cleanup-osmesa-configs.patch
    there as well for #485161.

 -- Brice Goglin <bgoglin@debian.org>  Wed, 18 Jun 2008 20:59:14 +0200

mesa (7.0.3-3) unstable; urgency=low

  * Pull from mesa_7_0_branch (718724de).
    + Fix intel_batchbuffer_space on i965, closes: #455817.
    + Fix busy error in i915_wait_irq for real now, closes: #467319.
  * Move our configs/ changes from the .diff.gz into our quilt patches,
    with 04_cleanup-osmesa-configs.patch renamed into 04_debian-configs.patch,
    closes: #485161.

 -- Brice Goglin <bgoglin@debian.org>  Tue, 17 Jun 2008 20:00:51 +0200

mesa (7.0.3-2) unstable; urgency=low

  * Pull from mesa_7_0_branch (03447de3).
  * Set right cliprects for the current draw region on Intel, closes: #467319.
  * Use BRW_TEXCOORDMODE_CLAMP instead of BRW_TEXCOORDMODE_CLAMP_BORDER
    to implement GL_CLAMP on i965, closes: #478880.
  * Fix segment fault with BASE_LEVEL set to 5 for MipMap on i915,
    closes: #451339.
  * Disable low impact fallback on r300 by default, closes: #440868.

 -- Brice Goglin <bgoglin@debian.org>  Fri, 13 Jun 2008 06:53:29 +0200

mesa (7.0.3-1) unstable; urgency=low

  * New upstream release.
  * Only call ProgramStringNotify if program parsing succeeded,
    closes: #473551.

 -- Brice Goglin <bgoglin@debian.org>  Fri, 11 Apr 2008 08:42:37 +0200

mesa (7.0.3~rc2-2) unstable; urgency=low

  * Pull from mesa_7_0_branch (1e83d70b).
  * Fixes regression in the i965 dri driver (closes: #470984, #470084)
  * Update 02_use-ieee-fp-on-s390-and-m68k.patch.
  * Change libgl1-mesa-swx11-i686's pre-dependency on libgl1-mesa-swx11 to a
    regular versioned dependency, and add ${shlibs:Depends}.

 -- Julien Cristau <jcristau@debian.org>  Mon, 31 Mar 2008 16:47:31 +0200

mesa (7.0.3~rc2-1) unstable; urgency=low

  * New upstream release candidate.
    + enable user-defined clip planes for R300 (closes: #408679)
    + 03_optional-progs-and-install.patch: partly applied upstream, fixed up
  * Stop building with -O0 on hppa. Bug #451047 should be fixed in recent gcc
    versions.

 -- Julien Cristau <jcristau@debian.org>  Sun, 24 Feb 2008 10:22:54 +0100

mesa (7.0.2-4) unstable; urgency=low

  * Update to mesa_7_0_branch head (commit 48ae5cf0).
  * Add Vcs-Git, Vcs-Browser and Homepage fields in debian/control.

 -- Julien Cristau <jcristau@debian.org>  Thu, 17 Jan 2008 22:23:06 +0100

mesa (7.0.2-3) unstable; urgency=low

  * Update to mesa_7_0_branch head (commit 0107acde).
  * Bump Standards-Version to 3.7.3.
  * Move libgl1-mesa-swx11-dbg, mesa-common-dev and libosmesa6-dev to section
    libdevel.
  * libgl1-mesa-swx11 conflicts with libgl1-mesa-glx.  Move it and
    libgl1-mesa-swx11-dev to priority extra.
  * Fix typo in mesa-common-dev's long description.

 -- Julien Cristau <jcristau@debian.org>  Tue, 18 Dec 2007 19:13:18 +0100

mesa (7.0.2-2) unstable; urgency=low

  [ Julien Cristau ]
  * Don't set -fno-strict-aliasing in configs/debian-default.  It is set
    upstream now.
  * Workaround gcc ICE on hppa: build libOSMesa with -O0 (see bug#451047).
  * Add build-dep on libxext-dev.  Thanks, Timo Aaltonen!

 -- Brice Goglin <bgoglin@debian.org>  Tue, 13 Nov 2007 21:43:40 +0100

mesa (7.0.2-1) unstable; urgency=low

  * New upstream release.
    + Fix Blender crash in triangle_twoside(), closes: #439668, #446315.
    + Fix crash in _generic_read_RGBA_span_RGB565_MMX(), closes: #445313.
    + Fix the new __gluInvertMatrix() function, closes: #440137 ,#441071.
    + Refresh 03_optional-progs-and-install.patch since libGLU is not
      built when building progs/xdemos.
    + Refresh 04_cleanup-osmesa-configs.patch.
    + Drop 05_static-nonpic.patch,, applied upstream.
    + Remove DESTDIR from INSTALL_DIR in configs/debian-default since
      the upstream Makefiles now support DESTDIR.
  * Add myself to Uploaders.

 -- Brice Goglin <bgoglin@debian.org>  Sun, 11 Nov 2007 11:53:26 +0100

mesa (7.0.1-2) unstable; urgency=low

  * Update to latest git (from mesa_7_0_branch)
    + adds support for some new intel chipsets (i915 and i915_tex dri drivers)
      (closes: #437333)
    + broken inline asm in dri drivers fixed (closes: #423739)

 -- Julien Cristau <jcristau@debian.org>  Tue, 28 Aug 2007 12:11:30 +0200

mesa (7.0.1-1) unstable; urgency=low

  * New upstream release.
  * Upload to unstable.

 -- Julien Cristau <jcristau@debian.org>  Thu, 09 Aug 2007 11:56:16 +0200

mesa (7.0.1~rc2-1) experimental; urgency=low

  [ David Nusinow ]
  * New upstream release candidate
  * Bite the bullet and add myself to uploaders

  [ Julien Cristau ]
  * Modify the short descriptions of various packages so they fit in .changes
    files without being cut off.  Thanks, Marc 'HE' Brockschmidt!
  * Add a shlibs file for libgl1-mesa-swx11-i686.

 -- Julien Cristau <jcristau@debian.org>  Fri, 27 Jul 2007 20:17:48 +0200

mesa (6.5.3-1) experimental; urgency=low

  [ David Nusinow ]
  * New upstream release

  [ Julien Cristau ]
  * Cherry-pick commit 65faf023679988f93da82b4c7ebdc689f2094459 by Michel
    Dänzer to fix r300 crash.

 -- Julien Cristau <jcristau@debian.org>  Mon, 21 May 2007 11:34:51 +0200

mesa (6.5.3~rc3-1) experimental; urgency=low

  [ Brice Goglin ]
  * Split out libGLw libs and headers from libgl1-mesa-swx11 and ship both
    static and shared libraries, creating libglw1-mesa and libglw1-mesa-dev
    (closes: #374904).

  [ Julien Cristau ]
  * New upstream release candidate.
    + 06_fix_texture_data_corruption.patch,
      07_call_radeonSetCliprects_from_radeonMakeCurrent.patch,
      08_r300_update_window_state_when_bound_but_stamp_changed.patch,
      09_i915_always_enable_pixel_fog.patch: remove, included upstream.
    + 01_fix-makefile.patch, 02_use-ieee-fp-on-s390-and-m68k.patch: refresh.
  * Add build-dependencies on libxdamage-dev and libxfixes-dev.
  * Resync debian/scripts/install-source.sh.
  * Build mesa-swx11-source only in binary-indep.
  * Update from upstream git (commit
    dee1b0d5bbe91f83854813cbbcd3090327bcb5c2).

 -- Julien Cristau <jcristau@debian.org>  Wed, 25 Apr 2007 10:36:50 +0200

mesa (6.5.2-7) unstable; urgency=low

  [ Brice Goglin ]
  * libgl1-mesa-dev does not need to depend on libgl1-mesa-dri,
    libgl1-mesa-glx is enough (since their split in 6.4.1-0.1);
    closes: #432081.  Thanks, Samuel Thibault!

  [ Julien Cristau ]
  * libgl1-mesa-dev Depends on libgl1-mesa-glx (>= ${source:Upstream-Version})
    instead of >= ${Source-Version}.  This way it's still installable on
    architectures where mesa isn't built yet when a minor revision is
    uploaded.

 -- Julien Cristau <jcristau@debian.org>  Wed, 11 Jul 2007 05:50:45 +0200

mesa (6.5.2-6) unstable; urgency=low

  * libgl1-mesa-swx11 needs to depend on libosmesa6 (>= 6.5.2-1) because
    it used to contain libOSMesa.so.6.  This means that programs linked
    against this lib got a dependency on -swx11 which was broken since
    6.5.2-1.
  * Fix build on hurd-i386 (build libgl1-mesa-glx without dri support and
    don't build the dri drivers); closes: #420403.  Thanks, Samuel Thibault!

 -- Julien Cristau <jcristau@debian.org>  Thu, 05 Jul 2007 00:56:35 +0200

mesa (6.5.2-5) unstable; urgency=low

  [ Brice Goglin ]
  * Add 07_call_radeonSetCliprects_from_radeonMakeCurrent.patch
    (closes: #420164). Thanks to Christian Ohm.
  * Add 08_r300_update_window_state_when_bound_but_stamp_changed.patch
  * Add 09_i915_always_enable_pixel_fog.patch

 -- Julien Cristau <jcristau@debian.org>  Fri, 18 May 2007 13:36:25 +0200

mesa (6.5.2-4) unstable; urgency=low

  [ Julien Cristau ]
  * debian/control: libgl1-mesa-dri now suggests libglide3, with an
    explanation in the description (closes: #387339).
  * Upload to unstable.

  [ Brice Goglin ]
  * Add 06_fix_texture_data_corruption.patch (closes: #412346).

 -- Julien Cristau <jcristau@debian.org>  Fri, 20 Apr 2007 05:57:35 +0200

mesa (6.5.2-3) experimental; urgency=low

  * Set LIB_DIR and EXTRA_LIB_PATH in configs/debian-default to override
    settings in configs/linux-x86-64. This fixes a FTBFS on amd64, thanks to
    Marc 'HE' Brockschmidt for the report (closes: #410118).

 -- Julien Cristau <jcristau@debian.org>  Wed,  7 Feb 2007 23:04:28 +0100

mesa (6.5.2-2) experimental; urgency=low

  * Sync Section/Priority for all packages with the override.
  * Build the arch:all debs in binary-indep, and use the debhelper -s option
    for commands in binary-arch, to fix FTBFS on non-i386 archs, thanks to
    Marc 'HE' Brockschmidt (closes: #409638).
  * Add myself to Uploaders.

 -- Julien Cristau <jcristau@debian.org>  Sun,  4 Feb 2007 21:14:02 +0100

mesa (6.5.2-1) experimental; urgency=low

  [ Thierry Reding ]
  * New upstream release.
  * Set the Debian X Strike Force as maintainer.
  * Add myself to uploaders.
  * Build the i915tex DRI module on the i386 and amd64 architectures.
  * Add patch 04_cleanup-osmesa-configs that makes the OSMesa configurations
    behave as expected.
  * Add patch 05_static-nonpic to build static libraries without -fPIC.
  * Make debugging symbol packages depend on the corresponding binary package
    and put them into the libdevel section.
  * Bump shlibs file for the libosmesa6 package to account for added symbols.
    Thanks Julien Cristau.
  * Build the DRI modules with the default optimization flags. Thanks Julien
    Cristau.
  * mesa-common-dev now ships the GLX header files so it needs to replace
    libgl1-mesa-swx11-dev and libgl1-mesa-dev. Thanks Julien Cristau.
  * All OSMesa libraries were moved to the libosmesa6 and libosmesa6-dev
    package, so have them replace libgl1-mesa-swx11, libgl1-mesa-swx11-dev and
    mesa-common-dev respectively. Thanks Julien Cristau.

  [ Julien Cristau ]
  * Drop obsolete depends on xlibs.

 -- Thierry Reding <thierry@gilfi.de>  Thu, 11 Jan 2007 15:06:52 +0100

mesa (6.5.2~rc3-0.1) experimental; urgency=low

  * Non-maintainer upload.
  * Update to latest upstream release candidate.

 -- Thierry Reding <thierry@gilfi.de>  Fri,  1 Dec 2006 01:06:28 +0100

mesa (6.5.2~rc2-0.1) experimental; urgency=low

  * Non-maintainer upload.
  * New upstream release candidate:
    + Refresh 02_use-ieee-fp-on-s390-and-m68k.patch.
  * Add manual pages for the glxdemo, glxgears, glxheads and glxinfo
    utilities (Closes: #385463).

 -- Thierry Reding <thierry@gilfi.de>  Wed, 22 Nov 2006 20:49:06 +0100

mesa (6.5.2~rc1-0.1) experimental; urgency=low

  * Non-maintainer upload.
  * New upstream release candidate.
  * Update patches:
    + Drop hunk #2 of 01_fix-makefile.patch, applied upstream.
    + Drop 03_handle-sync-and-dont-unlock-display.patch, applied upstream.
  * Bump build-dependency on libdrm-dev (>= 2.2.0).
  * Use the new upstream minstall utility to install files and directories.
    Using /usr/bin/install would result in a symlink's target being copied
    instead of the symlink.

 -- Thierry Reding <thierry@gilfi.de>  Sat, 18 Nov 2006 22:23:04 +0100

mesa (6.5.1-0.6) experimental; urgency=low

  * Non-maintainer upload.
  * Rewrote the debian/rules file to make it easier to understand.
  * Provide i686 optimized versions in libgl1-mesa-swx11-i686 instead of in
    libgl1-mesa-swx11.
  * Statically link libOSMesa with the software rasterization code from libGL
    so that it works independently of the installed libGL. (Closes: #387706)
  * Make libosmesa6-dev depend on mesa-common-dev because it only needs the
    gl.h header file and no libGL anymore.
  * Move glx*.h headers from libgl1-mesa(-swx11)-dev into mesa-common-dev
    because both packages provide identical files.
  * Add debugging symbol packages for libgl1-mesa-swx11, libgl1-mesa-glx and
    libgl1-mesa-dri.
  * Repack the contents of the three Mesa tarballs (MesaDemos, MesaGLUT and
    MesaLib) as the original source tarball. (Closes: #392715)
  * Make mesa-common-dev depend on libx11-dev.
  * Provide a new package: mesa-utils. These utilities are shipped in the
    MesaDemos package so mesa is the right package to provide them.

 -- Thierry Reding <thierry@gilfi.de>  Sat, 18 Nov 2006 18:50:07 +0100

mesa (6.5.1-0.5) unstable; urgency=low

  * Non-maintainer upload.
  * Build with -fno-strict-aliasing to fix misbuild of i965_dri.so
    (closes: #394311).  Thanks to Michel Dänzer for the fix, and to Ryan
    Richter for the report and testing.

 -- Julien Cristau <julien.cristau@ens-lyon.org>  Wed,  3 Jan 2007 13:48:20 +0100

mesa (6.5.1-0.4) unstable; urgency=medium

  * Non-maintainer upload (and brown paper bag release).
  * _Depend_ on libx11-dev from libgl1-mesa-dev; revert previous change.
    Fixes FTBFS in other packages. (Really Closes: #396498)

 -- Steinar H. Gunderson <sesse@debian.org>  Sat, 11 Nov 2006 13:55:20 +0100

mesa (6.5.1-0.3) unstable; urgency=medium

  * Non-maintainer upload.
  * Build-depend on libx11-dev; fixes FTBFS. (Closes: #396498)

 -- Steinar H. Gunderson <sesse@debian.org>  Wed,  8 Nov 2006 20:58:40 +0100

mesa (6.5.1-0.2) unstable; urgency=low

  * Non-maintainer upload
  * Disable generation of SSE instructions (closes: #390560)
  * Remove duplicate and unused build configurations
  * Remove extra source files left from CVS snapshots (closes: #389283)
  * Enable i965 DRI driver on i386 and amd64. Thanks to Ryan Richter
    for the patch. (closes: #392030)
  * Enable Unichrome DRI driver on amd64 (closes: #391900)
  * Enable FFB DRI driver on sparc, not i386 (closes: #388025)
  * Consistently compile C sources as C99 (closes: #373623)
  * Fix X display locking error in GLX. Thanks to Josh Triplett for
    the patch. (closes: #391681)

 -- Ben Hutchings <ben@decadent.org.uk>  Fri, 13 Oct 2006 02:25:52 +0100

mesa (6.5.1-0.1) unstable; urgency=low

  * New upstream version
  * Build-dep on x11proto-gl-dev >= 1.4.8
  * Stuff not in the upstream tarballs
    + os2 glut stuff
    + docs/gears.png
  * Bump libdrm-dev build-dep to >= 2.0.2
  * Add libdrm cflags to the debian-dri config. This allows the build system
    to find drm.h
  * Make sure that libGl looks for the dri drivers in the proper location. Do
    this by setting the appropriate variables in the debian config
  * Re-add s390 and m68k to the USE_IEEE test in src/mesa/main/imports.h. This
    package seriously needs to store patches somewhere that are easy to find
    and re-apply.
  * Add patch from Cyril Brulebois to allow package to build on HURD, which
    lacks DRI and directfb. This includes not using lib-directfb in the
    build-depends for hurd-i386. It also creates a new debian config,
    debian-indirect, which is used when building for HURD. This config is
    invoked in the debian-dri config on hurd-i386. Thanks to Cyril Brulebois
    for the patch, Michael Banck, Michel Dänzer, and Samuel Thibault for
    input on an appropriate fix. (closes: #358065)

 -- David Nusinow <dnusinow@debian.org>  Mon, 25 Sep 2006 21:21:47 -0400

mesa (6.5.0.cvs.20060524-1.1) unstable; urgency=medium

  * Non-maintainer upload.
  * Upload mesa 6.5 cvs to unstable, because we need it for Xorg 7.1.
  * Upload with medium urgency instead of high, since this is a new
    upstream that should get some testing in unstable in spite of the
    multiple RC bugfixes.
  * Update debian/copyright with the full text of the SGI Free B and SGI
    MIT-style licenses in use in the package, and take a stab at
    cleaning up the list of paths and licenses.
    Closes: #368562.
  * Make mesa-common-dev Replaces: xlibosmesa-dev from sarge.
    Closes: #384057.
  * Fix libgl1-mesa-glx to not Provides: libgl1-mesa-dri, since it
    definitely doesn't provide DRI support and this Provides: breaks
    upgrades from sarge.  Closes: #384282.
  * debian/libgl1-mesa-swx11.shlibs: create a static shlibs file,
    because libOSMesa.so.6 is not provided by all implementations of
    libGL and so needs a separate shlibs declaration.  Also make
    libgl1-mesa-glx the default alternative instead of libgl1-mesa-swx11
    for consistency even when building against libgl1-mesa-swx11,
    because to the extent these are interchangeable (i.e., 99%...),
    there should be no reason to prefer one over the other -- and to the
    extent that they aren't interchangeable, it's wrong to list libgl1
    as an alternative dependency at all.  Closes: #386185.
  * Don't provide shlibs at all for libgl1-mesa-swx11-dbg; this is an
    unnecessary duplication of the existing libgl1-mesa-swx11 shlibs
    since packages should not really be linking against /usr/lib/debug/
    separately.
  * src/mesa/tnl/t_vb_render.c: Drop a pointless printf() in the
    RENDER_LINE macro, getting rid of copious debug output on console.
    Closes: #369895.
  * libgl1-mesa-swx11 has no reason to depend on libglu, anything that
    wants libglu will have its own dependency on it; drop this
    hard-coded dependency from debian/control.
  * Have libglu1-mesa-dev Provides: xlibmesa-glu-dev, since it's the
    successor to that package and xlibmesa-glu-dev is still referenced
    in a number of places and this makes for more reliable builds than
    depending on alternatives without requiring another dummy -dev
    package from xorg.
  * Replace references to Source-Version in debian/control with either 
    binary:Version or source:Version, depending on whether the
    relationship references an arch: any or arch: all package, making
    mesa binNMU-safe; add build-depends on dpkg-dev (>= 1.13.19) to
    ensure these substvars are available.

 -- Steve Langasek <vorlon@debian.org>  Fri, 15 Sep 2006 15:51:16 -0700

mesa (6.5.0.cvs.20060524-1) experimental; urgency=low

  * The "-O666 -fwater-c00ling -DBE_F4ST" release
  * New pull from CVS
  * Merge back and forth with 6.4.2-1
  * configs/debian*_i386: disabled, optimized build fuxxored.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Wed, 24 May 2006 14:12:13 -0600

mesa (6.5.0.cvs.20060512-0.0.1) experimental; urgency=low

  * New upstream release (6.5.0)
  * Pulled CVS as of 2006-05-12
  * debian/control: remove DirectFB packages

 -- Marcelo E. Magallon <mmagallo@debian.org>  Fri, 12 May 2006 15:23:49 -0600

mesa (6.4.2-1) unstable; urgency=low

  * The "please, please, please don't hate me" release.
  * New upstream release.
  * Ack NMUs
  * debian/control: mesa-common-dev Replaces xlibmesa-gl-dev (<< 1:7)
    AGAINST MY BETTER JUDGEMENT.  The problem here is gratuitous package
    renames within a system that does not support them.  (closes:
    bug#362063)
  * debian/control: hurd-i386 doesn't have drm.  Doesn't fix #358065,
    yet.
  * bin/mklib: fix from Robert Millan to support hurd-i386 and
    GNU/kFreeBSD.  Thanks Robert.  (closes: bug#358066)
  * src/glx/x11/indirect_vertex_array.c, src/mesa/main/glheader.h,
    src/mesa/drivers/dri/common/glcontextmodes.c: fix broken indirect
    rendering on 64-bit platforms.  Thanks Aaron M. Ucko.  (closes:
    bug#364228)
  * debian/control: b-d on x11proto-gl-dev.  Please don't hate me!
  * debian/control: Standards-Version: 3.7.2
  * debian/rules: export DEB_HOST_ARCH
  * configs/debian-dri: use DEB_HOST_ARCH to decide if certain DRI drivers
    should be built or not.
        + Built only for i386: i810 i830 sis.
          Rationale: integrated chipsets available only for i386 processors.
        + Built only for i386: ffb.
          Rationale: Michel Dänzer said so, no idea why.
        + Built only for i386, amd64: i915.
          Rationale: Apparently this is available in the 64-bit Intel chipset.
    Please file a bug report stating which drivers should be included/excluded
    for which architectures.  Positive lists are preferred.  If possible state
    why.
  * debian/mesa-swx11-source.install: nuke this abomination.  Dinamically
    generate the list at build time.
  * debian/drivers.map: add gl-debian-dri_i386
  * debian/README.build: updated, add big friendly letters in short sentences.
    Perhaps I can read it myself this way...
  * debian/rules, configs/debian, configs/debian-dri, configs/debian_i386,
    configs/debian-dri_i386, debian/libdir.map, debian/drivers.map: hack in
    support for variable driver's dir.  If you want this for your pet
    architecture please provide BOTH configs/debian_arch and
    configs/debian-dri_arch.  If you just want to include/exclude DRI drivers
    on your architecture look in configs/debian-dri.
  * configs/debian*_i386: disabled, optimized build fuxxored.
  * debian/rules: remove misguided Perl construct, replace by something
    simpler in shell.  I actually meant to do something else with the Perl
    thing, but got distracted and forgot about it.  Thanks Aaron M. Ucko!
  * debian/rules: make it work like debian/README.build says it works wrt to
    building optimized targets.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Tue, 16 May 2006 18:07:53 -0600

mesa (6.4.1-0.4) unstable; urgency=low

  * NMU
  * Add versioned conflict between libgl1-mesa-dri and xlibmesa-dri so that
    the xlibmesa-dri transitional upgrade package works

 -- David Nusinow <dnusinow@debian.org>  Mon,  6 Mar 2006 21:46:18 -0500

mesa (6.4.1-0.3) unstable; urgency=low

  * NMU
  * Add s390 and m68k to the USE_IEEE test in src/mesa/main/imports.h.
    (closes: #349437)

 -- David Nusinow <dnusinow@debian.org>  Sat, 11 Feb 2006 17:59:26 -0500

mesa (6.4.1-0.2) unstable; urgency=low

  * NMU
  * Re-add dh_installdirs call to binary-indep target so that we get
    arch-specific dirs for the mesa-swx11-source package
  * Remove makedepend from build-depends. Now we'll just build-dep on xutils
    to get the app, which will translate over to our own xorg 7.0 plans.

 -- David Nusinow <dnusinow@debian.org>  Tue, 31 Jan 2006 19:21:12 -0500

mesa (6.4.1-0.1) unstable; urgency=low

  [ Marcelo E. Magallon <mmagallo@debian.org> ]
  * debian/control: build-depend on xutils
  * include/GL/glx{int,proto,md,tokens}.h: missing upstream (closes: bug#326466)
  * debian/libgl1-mesa-dri-dev.install: install GLX include files here, too.
  * debian/rules: GLU and GLW don't have arch-specific targets.

  [ Daniel Stone <daniels@debian.org> ]
  * New upstream version, incorporating changes from Ubuntu 6.3 packaging.
  * Rename packages:
    - mesag3 -> libgl1-mesa-swrast
    - mesag-dev -> libgl1-mesa-swrast-dev
    - libgl1-mesa-dri -> libgl1-mesa
    - libgl1-mesa-dri-dev -> libgl1-mesa-dev
    - libgl1-mesa-dri still exists, but now contains the DRI modules only.
  * Drop dependency *from* mesa-common-dev on libgl1-mesa-dev and
    libglu1-mesa-dev; it should be the other way around. (closes: #336565)
  * Add Build-Depends on pkg-config to get flags from libdrm, and libexpat-dev
    for DRI configuration.  Break out xlibs-dev Build-Depends to the
    individual libraries required.
  * Bump libdrm-dev Build-Depends to >> 1.0.5, in order to get new
    via_drm.h to build the unichrome DRI driver.
  * Configs: pare DRI drivers down to a sensible set for each architecture.
  * Remove completely broken Glide target, which caused FTBFS.
  * Add mesa-swrast-source package, providing the source for the software
    rasteriser for libGLcore in the X server.
  * Drop tight libosmesa6 -> libgl1-mesa-swrast Depends, replace with
    shlibs:Depends.

  [ David Nusinow <dnusinow@debian.org> ]
  * New upstream version (6.4.1) (closes: #232665)
  * Merge changes from Ubuntu version 6.4.1-0ubuntu1.
    (closes: #341479, #340168, #334742)
    + Add new files required by xorg-server GL build to mesa-swrast-source.
  * NMU to begin getting Xorg 7.0 in to Debian
  * Change libgl1-mesa-swrast Depends on libx11-6-dev to libx11-dev.
  * Change libgl1-mesa-swrast to be named libgl1-mesa-swx11
  * Change libgl1-mesa to be named libgl1-mesa-glx
  * mesa-swrast-src.install stop looking for the swx11 dir and look for swrast

 -- David Nusinow <dnusinow@debian.org>  Sat, 21 Jan 2006 21:43:37 -0500

mesa (6.3.2-2.1) unstable; urgency=low

  * Non-maintainer upload.
  * Adjust Build-Depends:
    + xlibs transition (Closes: #347129).
    + xutils, xlibmesa-gl-dev (Closes: #326466).
  * mesag-dev: Depends: libx11-dev (Closes: #347205).

 -- Christoph Berg <myon@debian.org>  Fri, 20 Jan 2006 20:45:43 +0100

mesa (6.3.2-2) unstable; urgency=low

  * debian/rules: build only whatever needs to be build according to
    debian/control.
  * debian/libdir.map: it's usr/lib/debug not usr/lib/dbg
  * debian/rules: select optimized targets for the current host architecture
    only (thanks Michel!)
  * debian/README.build: reword some of the directions, add more info.
  * debian/control: forgot to add CPR relationships in the new packages
    (thanks Michel!)
  * debian/control: Set maintainer to pkg-mesa-devel, add myself as uploader

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 28 Aug 2005 14:41:15 -0600

mesa (6.3.2-1) unstable; urgency=low

  * New upstream
  * configs/debian-dri: new target
  * debian/control: add build-depends on libdrm-dev
  * debian/rules: pass SRC_DIRS instead of SUBDIRS on the command line.
    This allows for configurations to override the command line in a
    sane way.
  * configs/debian-dri: override SRC_DIRS
  * configs/debian: add -D_GNU_SOURCE (required by dri drivers)
  * debian/control, debian/rules: drop glide out of this package, it
    will be moved to the mesa-legacy package, forked from 6.2.1-7.
  * debian/drivers.map, debian/rules: take into account that some
    drivers have external components.
        + To be fixed: debian/drivers.map hardcodes locations
  * debian/control: libgl1-mesa-dri, libgl1-mesa-directfb: new drivers
  * dh_makeshlibs for libgl1-mesa-dri and libgl1-mesa-directfb
  * debian/control: priority is optional... again...

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 21 Aug 2005 17:13:19 -0600

mesa (6.2.1-7) unstable; urgency=low

  * Previous upload got lost somewhere
      + bin/mklib: add GNU/kFreeBSD, patch from Aurelien Jarno (closes:
        bug#307154)
      + recompile with newer g++

 -- Marcelo E. Magallon <mmagallo@debian.org>  Tue, 02 Aug 2005 06:47:20 -0600

mesa (6.2.1-6) unstable; urgency=low

  * bin/mklib: add GNU/kFreeBSD, patch from Aurelien Jarno (closes:
    bug#307154)
  * recompile with newer g++

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 24 Jul 2005 11:47:16 -0600

mesa (6.2.1-5) unstable; urgency=low

  * debian/rules: big mess up, files are not being moved to their proper
    places.  I naively assumed that command-line options to debhelper
    commands would override DH_OPTIONS, that is, that having
    DH_OPTIONS=-i (as suggested in the documentation) would mean
    something like "use -i unless -p is passed on the command line".  It
    actually means "use -i in addition to -p passed on the command
    line", which does not make any sense, but is consistent with the
    wording in the documentation. (closes: bug#306499, bug#306918,
    bug#307095)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 01 May 2005 09:45:12 -0600

mesa (6.2.1-4) unstable; urgency=low

  * debian/control: fix description to reflect the exact content and
    purpose of package (libosmesa-dev, mesag-dev).
  * debian/rules: DH_OPTIONS=-s added to binary-arch target.  (closes:
    bug#306091)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat, 26 Mar 2005 08:03:44 -0600

mesa (6.2.1-3) unstable; urgency=low

  * debian/control: try to match the override file.  If mesa is "extra"
    (for whatever reason), all the packages should be extra.
  * debian/rules: quick workaround for left-over libGL.so in GLU -dev
    package.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Thu, 24 Mar 2005 19:35:34 -0600

mesa (6.2.1-2) unstable; urgency=low

  * The "thank you so much, I'm still voting against you" release.
  * debian/rules: correct artifact of me not having had a proper
    pbuilder environment to build stuff on and the repackaging from the
    previous release.  The -glu- and -glw- targets now explicitly depend
    on the matching -gl- target, and symlinks are placed in the build
    directories in order to actually have a libGL.so to make ld happy
    when creating the libraries.
  * debian/rules: uncomment dh_install :-\  There was a reason why I had
    commented that out...
  * First change closes: bug#298922
  * Second change closes: bug#300302, bug#300284, bug#300430
  * debian/control: "An X", whatever, I've been corrected multiple times
    in both ways (translators beware).  (closes: bug#300012)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 20 Mar 2005 22:03:29 -0600

mesa (6.2.1-1) unstable; urgency=low

  * The "autobuilders, please please please don't hate me" release.
  * New upstream.
  * Repackage:
        + Fall prey to debhelper
        + Entries below this one preserved for historical reasons or
          sentimental value, pick as many as you want.  They bear NO
          relation to the actual packages!
  * configs/debian, configs/debian-debug, configs/debian-debug-i386,
    configs/debian-glide, configs/debian-glide-i386, configs/debian-i386,
    configs/debian-osmesa16, configs/debian-osmesa16-static,
    configs/debian-osmesa32, configs/debian-osmesa32-static,
    configs/debian-static, configs/debian-static-i386: new files.
  * configs/debian-sparc: Dave Miller confirmed that the sparc assembly
    files do work on Linux.  I don't know where to install the optimized
    libraries, so the file doesn't actually exist.  Please read
    debian/README.build if you want to have a sparc-optimized library.
  * debian/control: GGI and glide2 are gone.  glide is glide3.
  * debian/rules: modify shlibs file for the glide3 target to require glide3
    and only glide3 because that library exports functions not available in
    other libGLs.  Rationale: if someone is compiling a Debian package and
    uses the glide target either he doesn't know what he is doing or he knows
    exactly what he is doing.  In the first case the package should not be
    installable and in the second case the package requires this particular
    version.
  * debian/control: libgl1-mesa-glide3-dev does NOT provide a proper OpenGL
    development environment (see above).
  * PCR is bound to be wrong... *sigh*

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat, 25 Dec 2004 14:50:02 -0600

mesa (6.0.1-1) unstable; urgency=low

  * New upstream release.
  * debian/rules: redid a bunch of stuff in order to support new build system
    without autoconf and automake stuff.  The next version is going to change
    this _again_.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 11 Apr 2004 07:00:19 -0600

mesa (5.0.0-5.1) unstable; urgency=low

  * Non-Maintainer Upload.
  * Rename "GGIMesa"-references in src/GGI/default/Makefile.am to
    "MesaGGI", which makes the package build again with newer libtool.
    (Closes: #213836)

 -- Steinar H. Gunderson <sesse@debian.org>  Sun, 15 Feb 2004 17:37:08 +0100

mesa (5.0.0-5) unstable; urgency=low

  * debian/control: yank and put error?  Remove hard-coded
    nvidia-glx-dev from mesag-glide2-dev dependencies.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 09 Feb 2003 10:31:51 +0100

mesa (5.0.0-4) unstable; urgency=low

  * debian/rules: fix typo in definition of GLIDE_ARCHS.  (closes: bug#179622)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Mon, 03 Feb 2003 20:19:12 +0100

mesa (5.0.0-3) unstable; urgency=low

  * The "it's amazing how people pick severities" release
  * debian/control: mesa-common-dev conflicts with xlibmesa-dev.  Actually put
    dependency of mesa-common-dev on the mesa-*-dev packages to avoid having
    to track other libgl-dev packages popping up.  IMO this is less error
    prone.  You can't install mesa-common-dev without installing mesa-*-dev,
    and those packages conflict with other libgl-dev packages.  (closes:
    bug#177996)
  * Rename libglu1c102 to libglu1-mesa; the libglu1c102 is incorrent since
    this library does not export C++ functions.  Sorry about the mess.
  * Rename libglu1-dev to libglu1-mesa-dev to be consistent
  * debian/rules: use grep-dctrl to extract architectures from debian/control
  * debian/control: add grep-dctrl to build-depends
  * debian/shlibs.libglu: libglu1-mesa | libglu1
  * debian/rules: install include/GL/xmesa.h in /usr/include/GL/xmesa.h; I'm
    not 100% sure this is the right thing to do, but it's a niche so I don't
    think it will actually make trouble (closes: bug#148866)
  * debian/rules: install include/GL/glx*.h in the common package.  (closes:
    bug#178562)
  * debian/rules: nasty hack to work arround libtool's idea of how libraries
    should be linked (closes: bug#178514)
  * debian/rules: even nastier hack.  Getting environment variables to
    percolate thru all the make calls isn't getting anywhere.
  * si-glu/Makefile.am: export only glu.* symbols
  * si-glu/Makefile.am: add -lm to link line
  * src/Makefile.am: god damm it.  If you use libm link to it!
  * debian/control: mesa-common-dev depends on libglu1-mesa-dev to satisfy
    libgl-dev's requirements

 -- Marcelo E. Magallon <mmagallo@debian.org>  Mon, 27 Jan 2003 17:15:25 +0100

mesa (5.0.0-2) unstable; urgency=low

  * debian/control: Not funny, I'm sure I put lesstif and xlibs-dev in the
    build-depends.  CVS says I didn't.  (closes: bug#176730)
  * debian/control, debian/rules: regenerate auto-stuff (closes: bug#176729)
  * debian/control, debian/rules: GCC C++ 3.2 transition (libglu1c102 -- ugly!)
  * remove Makefile.in from CVS control
  * si-glu/libnurbs/interface/Makefile.am: fix INCLUDES macro

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 19 Jan 2003 00:48:32 +0100

mesa (5.0.0-1) unstable; urgency=low

  * New upstream release, it looks like glide and GGI are in working
    condition again.
  * FX patches from previous releases gone.  They'll be back later.
  * debian/rules: some clean ups.
  * debian/control: add libglu1 packages
  * debian/control: Standards-Version: 3.5.8
  * debian/rules: Build Xt widgets (if you need this stuff, you need to depend
    on mesag-dev, libgl-dev is not enough)
  * debian/control, debian/rules: add mesa-common-dev package
  * debian/control, debian/rules: add osmesa packages.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 15 Dec 2002 12:28:49 +0100

mesa (4.0.3-1) unstable; urgency=low

  * New (and long delayed) upstream version
  * Redid a bunch of FX patches, probably broke.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Thu, 03 Oct 2002 11:27:29 +0200

mesa (3.5-1) unstable; urgency=low

  * New upstream version.
  * Redid patches.
  * Disabled building GGI target.  Someone with a good understanding of GGI
    needs to write a driver for mesa.  The old version doesn't cut it
    anymore.
  * Most makefiles won't work.  Copied them out of CVS.
  * src/Makefile.am: add -lm to library list.  (closes: bug#102717)
  * configure.in: adjust GLU's version info to match previous release.

 -- Marcelo E. Magallon <mmagallo@debian.org>  Mon, 25 Jun 2001 22:13:40 +0200

mesa3 (3.4.2.1-4) unstable; urgency=low

  * So, here's the deal: the 3Dfx backend is going nowhere in 4.x and 5.x is
    just arround the corner.  Same thing for the GGI stuff.  In order to leave
    the people who need this stuff with _something_ to work with, I'll compile
    those targets out of the mesa3 source package and the mesa package will
    stuck to plain old X.
  * debian/control, debian/rules: strip out all the parts concerning to mesa3g
    and mesa3g-dev
  * debian/control: update GGI architectures, let's see what happens
  * debian/rules: special case alpha for stripping options.  Chris, did you
    ever figure out what the problem actually is? (closes: bug#99284)
  * debian/rules: hereby I decree that everything in etc is a conffile.  Die
    future bugs, die!.
  * configure: fix ggi_libdir, ggi_confdir (closes: bug#139598)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sun, 29 Sep 2002 11:21:00 +0200
 
mesa (3.4.2.1-3) unstable; urgency=low

  * Actually install widgets on the mesag-dev package (closes: bug#98988)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat,  9 Jun 2001 16:39:36 +0200

mesa (3.4.2.1-2) unstable; urgency=low

  * src/X/xmesa1.c: I knew it, I knew it.  This was bound to break.  Stupid
    typo.  Restored MESA_GLX_FX (got renamed to GLX_FX accidentally, if you
    have to know) (closes: bug#94114)

 -- Marcelo E. Magallon <mmagallo@debian.org>  Mon, 21 May 2001 08:52:07 +0200

mesa (3.4.2.1-1) unstable; urgency=low

  * Upstream released 3.4.2.
  * Hmmm... thought about it on my way home.  The code to parse 3dfx.conf
    is wrong.  Redid.  Still not tested.  (closes: bug#94114)
  * debian/README.Debian: document 3dfx.conf

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat, 19 May 2001 11:57:33 +0200

mesa (3.4.2-1) unstable; urgency=low

  * New upstream version.
  * debian/config.guess, debian/config.sub: newest versions from
    http://subversions.gnu.org/cgi-bin/cvsweb/config (closes: bug#95338)
  * GAAAAAAARGGH! src/X/xmesa1.c: horrible hack to use /etc/mesa/3dfx.conf
    if there's no MESA_GLX_FX environment variable defined.  I.  Hate.
    This.  I'll make a deal with you: you find another of these things,
    and you send me a nice tested patch.  I don't have a 3DFX card and I
    *HATE* uploading stuff I can't fully test. (closes: bug#94114)
  * debian/rules: use the new files
  * debian/rules: s/TMPDIR/DTEMPDIR/g
  * gl3DfxSetDitherModeEXT from Zephaniah (closes: bug#65860)
  * Disable GL_EXT_shared_texture_palette per default.  Patch looks funny,
    but I'll blindly trust Zephaniah.
  * Hmmm... I hope Zephaniah tested this, because it broke in a rather silly
    way at compile time.
  * Fancy what people regard as "pretty important".

 -- Marcelo E. Magallon <mmagallo@debian.org>  Fri, 18 May 2001 09:23:49 +0200

mesa (3.4.1-3) unstable; urgency=low

  * PLEASE SUBMIT NMUs TO THE BTS, DAMN IT!
  * debian/control: exclude m68k from libggi2-dev build-dependency.
 
 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat, 17 Mar 2001 19:45:09 +0100

mesa (3.4.1-2) unstable; urgency=low

  * debian/control: add missing dependency on xlibs-dev and corrected the
    one for libglide2-dev
 
 -- Marcelo E. Magallon <mmagallo@debian.org>  Wed, 14 Mar 2001 00:21:42 +0100

mesa (3.4.1-1) unstable; urgency=low

  * New upstream version.
  * New maintainer. (closes: bug#81139)
  * Some fixes to get it to compile.
  * debian/rules: some reorganization happened to allow me test different
    builds better.
  * debian/control: nuked widgets package, if you miss it, you are doing
    something wrong.
  * debian/rules: -dev packages will be missing some garbage they used to
    install.  If you miss any of those files, I'm fairly confident you
    are doing something wrong.
  * configure, ltmain.sh, aclocal.m4, acinclude.m4, ...: vicious hacks to
    allow the GGI version to compile.
  * TODO: add the widgets to the packages
  * TODO: make OSmesa packages

 -- Marcelo E. Magallon <mmagallo@debian.org>  Sat, 10 Feb 2001 18:34:13 +0100

mesa (3.2.1-1) unstable; urgency=low

  * New upstream version.

 -- James A. Treacy <treacy@debian.org>  Mon, 31 Jul 2000 15:13:34 -0400

mesa (3.2-2) frozen unstable; urgency=low

  * add MMX and 3Dnow opts for x86.

 -- James A. Treacy <treacy@debian.org>  Fri,  7 Jul 2000 16:06:43 -0400

mesa (3.2-1) frozen unstable; urgency=low

  * New upstream version.
  * Made minor changes to README.3DFX. Closes bug#56827
  * Added symlinks for mesa widget libraries. Closes bug#63115

 -- James A. Treacy <treacy@debian.org>  Wed, 28 Jun 2000 11:21:09 -0400

mesa (3.1-17) frozen unstable; urgency=low

  * Fixed Makefile for demos in mesag-widgets-dev. Closes bug#62674

 -- James A. Treacy <treacy@debian.org>  Fri, 19 May 2000 13:23:00 -0400

mesa (3.1-16) frozen unstable; urgency=low

  * Add --prefix=/usr to ggi build. Closes bug#61705, #61486

 -- James A. Treacy <treacy@debian.org>  Wed, 12 Apr 2000 15:12:48 -0400

mesa (3.1-15) frozen unstable; urgency=low

  * Remove ggi from the build on m68k. Closes bug#59273

 -- James A. Treacy <treacy@debian.org>  Mon,  6 Mar 2000 13:20:29 -0500

mesa (3.1-14) frozen unstable; urgency=low

  * Fixed hard-coded location of config file in library. This is release
    critical, even though no bug was filed (relates to bug#58267).

 -- James A. Treacy <treacy@debian.org>  Mon, 28 Feb 2000 10:58:34 -0500

mesa (3.1-13) frozen unstable; urgency=low

  * Add missing ggi libraries. Closes bug#58267, #57760

 -- James A. Treacy <treacy@debian.org>  Thu, 24 Feb 2000 00:59:30 -0500

mesa (3.1-12) frozen unstable; urgency=low

  * Dependencies are now computed in a more intelligent way. Closes: bug#55861

 -- James A. Treacy <treacy@debian.org>  Fri, 21 Jan 2000 16:26:40 -0500

mesa (3.1-11) frozen unstable; urgency=low

  * Remove svgalib support from the software only package of mesa

 -- James A. Treacy <treacy@debian.org>  Sat, 22 Jan 2000 05:33:13 +0000

mesa (3.1-10) frozen unstable; urgency=low

  * Fix the mesag3-glide2 postinst. Closes bug#55462

 -- James A. Treacy <treacy@debian.org>  Sat, 22 Jan 2000 02:06:27 +0000

mesa (3.1-9) frozen unstable; urgency=low

  * The ggi based packages are now built with the other versions of mesa. Closes: bug#49218, #55221

 -- James A. Treacy <treacy@debian.org>  Sat, 15 Jan 2000 22:24:13 -0500

mesa (3.1-8) unstable; urgency=low

  * fixed the postinst and prerm for the glide packages
  * added Provides: mesag-dev to the mesag-glide2-dev package to maintain
    backwards compatability

 -- James A. Treacy <treacy@debian.org>  Sat, 15 Jan 2000 01:01:58 -0500

mesa (3.1-7) unstable; urgency=low

  * Fix version number for soname in the shlib file. Closes: bug#54926

 -- James A. Treacy <treacy@debian.org>  Thu, 13 Jan 2000 01:37:03 -0500

mesa (3.1-6) unstable; urgency=low

  * Include docs/README.3DFX in mesag3-glide2 package. Closes: bug#54625
  * Remove Provides: libgl1 from mesag3-widgets. Closes: bug#54774
  * conflicts with older versions of mesa. Closes: bug#54831

 -- James A. Treacy <treacy@debian.org>  Mon, 10 Jan 2000 11:50:49 -0500

mesa (3.1-5) unstable; urgency=low

  * now Conflicts: libgl1
  * remove extra '.' in library name

 -- James A. Treacy <treacy@debian.org>  Sun,  9 Jan 2000 20:47:31 -0500

mesa (3.1-4) unstable; urgency=low

  * Added links libGL.so.1 <- libMesaGL.so.3 so existing progs don't break
  * Copyright changed for version 3.1

 -- James A. Treacy <treacy@debian.org>  Thu,  6 Jan 2000 17:11:11 -0500

mesa (3.1-3) unstable; urgency=low

  * copyright file now refers to /usr/share/common-license/LGPL.

 -- James A. Treacy <treacy@debian.org>  Tue,  4 Jan 2000 11:50:45 -0500

mesa (3.1-2) unstable; urgency=low

  * Second try. Fixed shlibs file.

 -- James A. Treacy <treacy@debian.org>  Tue,  4 Jan 2000 00:00:29 -0500

mesa (3.1-1) unstable; urgency=low

  * New upstream version.
  * glide version of packages added, since glide is now under the GPL.
  * mesa widget libraries are now in a separate package
  * library names are changed to lib{GL,GLU}.*

 -- James A. Treacy <treacy@debian.org>  Tue, 14 Dec 1999 10:06:14 -0500

mesa (3.0-2) unstable; urgency=low

  * added symlinks from libMesaGL* -> libGL*. Fixes bug #37160
  * added lines (commented out) for building a glide version of mesa. Fixes bug #39758

 -- James A. Treacy <treacy@debian.org>  Thu, 13 May 1999 01:02:42 -0400

mesa (3.0-1) unstable; urgency=low

  * mesa libs moved to /usr/lib. Fixes bug #26874
  * motif widget library libMesaGLwM added (compiled using headers from lesstif). Fixes bug #25380

 -- James A. Treacy <treacy@debian.org>  Thu,  6 Aug 1998 13:49:37 -0400

mesa (2.6-4) unstable; urgency=low

  * call to ldconfig in postinst put back in. Fixes bug #20552
  * changelog.Debian file created for the mesa-doc package.
  * deleted miscellaneous files. Fixes bug #21481

 -- James A. Treacy <treacy@debian.org>  Sat, 23 May 1998 23:41:34 -0400

mesa (2.6-3) frozen unstable; urgency=low

  * No changes. Just trying (again) to get this back in the distribution

 -- James A. Treacy <treacy@debian.org>  Tue, 24 Mar 1998 00:53:09 -0500

mesa (2.6-2) unstable frozen; urgency=low

  * point copyright to LPGL in /usr/doc/copyright. Fixes bug #19633

 -- James A. Treacy <treacy@debian.org>  Sun, 15 Mar 1998 14:00:33 -0500

mesa (2.6-1) unstable; urgency=low

  * New upstream Release
  * strip static lib with --strip-debug and shared with strip--unneeded: Fixes bug#17301
  * create doc package in build-indep: Fixes bug#16090
  * added widgets-mesa library to package: Fixes bug#15729
  * created mesa-glide* packages

 -- James A. Treacy <treacy@debian.org>  Mon, 19 Jan 1998 23:45:50 -0500

mesa (2.5-2) unstable; urgency=low

  * Corrected i386 specific debian/rules file: Fixes bug#15640

 -- James A. Treacy <treacy@debian.org>  Fri,  5 Nov 1997 11:46:13 -0500

mesa (2.5-1) unstable; urgency=low

  * New upstream release.

 -- James A. Treacy <treacy@debian.org>  Sun, 23 Nov 1997 20:46:13 -0500

mesa (2.4-1) unstable; urgency=low

  * New upstream release.
  * New maintainer.
  * libc6 release.

 -- James A. Treacy <treacy@debian.org>  Mon,  3 Nov 1997 01:11:34 -0500

mesa (2.2-2) unstable; urgency=low

  * debian/control: mesa-doc no longer depends on mesa (bug #8840).

 -- Karl Sackett <krs@debian.org>  Wed, 30 Apr 1997 10:25:25 -0500

mesa (2.2-1) unstable; urgency=low

  * New upstream release.
  * Make-config: linux-elf libraries compiled with -D_REENTRANT.

 -- Karl Sackett <krs@debian.org>  Wed, 19 Mar 1997 09:10:22 -0600

mesa (2.1-4) unstable; urgency=low

  * debian/control: lib packages moved from 'graphics' to 'libs'.
  * debian/rules: headers moved from /usr/include/mesa to /usr/include
    (no more -I/usr/include/mesa).

 -- Karl Sackett <krs@debian.org>  Tue, 25 Feb 1997 09:30:23 -0600

mesa (2.1-3) unstable; urgency=low

  * debian/control: mesa2 provides mesa and conflicts with mesa
    (bug #7394).

 -- Karl Sackett <krs@debian.org>  Mon, 17 Feb 1997 09:25:42 -0600

mesa (2.1-2) unstable; urgency=low

  * debian/rules: install gmesa.h, osmesa.h, FooMesa.h in mesa-dev
    (bug #6864).

 -- Karl Sackett <krs@debian.org>  Tue, 28 Jan 1997 09:37:41 -0600

mesa (2.1-1) unstable; urgency=low

  * New upstream release.
  * Added soname to mesa and mesa-widgets.
  * Moved static libraries to mesa2-dbg.
  * debian/postinst, postinst-widgets: call ldconfig without explicit
    pathname (bugs #6176, 6180).

 -- Karl Sackett <krs@debian.org>  Mon, 6 Jan 1997 09:30:10 -0600

mesa (2.0-2) unstable; urgency=low

  * Created mesa-widgets and mesa-widgets-dev (Bug #5029).

 -- Karl Sackett <krs@debian.org>  Wed, 30 Oct 1996 08:44:19 -0600

mesa (2.0-1) unstable; urgency=low

  * src/draw.c: replaced with upstream patch.
  * Make-config: linux-elf target builds libMesaGLw.so library, looks
    for XLIBS in /usr/X11R6/lib, removed -mieee-mp from CFLAGS.
  * widgets-sgi/Makefile: builds libMesaGlw.a library
  * New upstream release.
  * Converted to new package standard.
  * Maintainer address changed.

 -- Karl Sackett <krs@debian.org>  Mon, 14 Oct 1996 15:37:19 -0500

1.2.8-3
  * Package split into runtime, development, and documentation
    packages.
  * widgets now made as a sharable library.
  * GLUT removed.  This will be released as a separate package.

1.2.8-2
  * Support files now architecture-independent

1.2.8-1
  * Upgrade to latest release
  * Brought support files up to latest packaging requirements
  * mondello/Makefile: fixed error in realclean target

1.2.7-2
  * debian.rules: clean all Makefiles out of widgets directory
  * debian.postrm: remove /usr/lib/mesa entry from /etc/ld.so.config
    (bug #2817)

1.2.7-1
  * Added Debian support files
  * Included the GLUT OpenGL Utility Toolkit
  * Makefile - disable building programs in demos, samples, and book
    directories
  * mklib.linux - disabled building *.a libraries
  * widgets/Makefile.in - disabled building demo programs
